{
	"id": 0,
	"name": "@prestojs/util",
	"kind": 1,
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 617,
			"name": "OnError",
			"kind": 16777216,
			"kindString": "Reference",
			"flags": {},
			"target": 600
		},
		{
			"id": 616,
			"name": "OnSuccess",
			"kind": 16777216,
			"kindString": "Reference",
			"flags": {},
			"target": 596
		},
		{
			"id": 595,
			"name": "useAsync",
			"kind": 16777216,
			"kindString": "Reference",
			"flags": {},
			"target": 594
		},
		{
			"id": 1,
			"name": "Labeled",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 20,
					"name": "NodeLabeled",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Interface for items that provide a React node label (anything that React can render). Implementing this can save you having to pass\nexplicit functions to label an item in other parts of the system (eg. for [AsyncChoices](doc:AsyncChoices))",
						"text": "See [isNodeLabeled](doc:isNodeLabeled) and [getNodeLabel](doc:getNodeLabel).\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Labeled\n"
							}
						]
					},
					"children": [
						{
							"id": 21,
							"name": "getNodeLabel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 22,
									"name": "getNodeLabel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the node label for this item. This can be anything renderable by React.",
										"text": "See [isNodeLabeled](doc:isNodeLabeled) to test for support and [getNodeLabel](doc:getNodeLabel) for easiest way\nto get the label.\n"
									},
									"type": {
										"type": "reference",
										"qualifiedName": "React.ReactNode",
										"package": "@types/react",
										"name": "ReactNode"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								21
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/Labeled.ts",
							"line": 29,
							"character": 17
						}
					]
				},
				{
					"id": 17,
					"name": "TextLabeled",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Interface for items that provide a plain text label. Implementing this can save you having to pass\nexplicit functions to label an item in other parts of the system (eg. for [AsyncChoices](doc:AsyncChoices))",
						"text": "See [isTextLabeled](doc:isTextLabeled) and [getTextLabel](doc:getTextLabel).\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Labeled\n"
							}
						]
					},
					"children": [
						{
							"id": 18,
							"name": "getLabel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 19,
									"name": "getLabel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the plain text label for this item. This must return a string",
										"text": "See [isTextLabeled](doc:isTextLabeled) to test for support and [getTextLabel](doc:getTextLabel) for easiest way\nto get the label.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								18
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/Labeled.ts",
							"line": 10,
							"character": 17
						}
					]
				},
				{
					"id": 11,
					"name": "getNodeLabel",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/Labeled.ts",
							"line": 82,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 12,
							"name": "getNodeLabel",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get a React node label from an item",
								"text": "If item implements `getNodeLabel` that will be used otherwise `getLabel` will be used.\n\nIf neither are defined an error is thrown. To conditional call this check if labeled first\nwith `isLabeled`.\n",
								"tags": [
									{
										"tag": "extract-docs",
										"text": ""
									},
									{
										"tag": "menu-group",
										"text": "Labeled\n"
									}
								]
							},
							"parameters": [
								{
									"id": 13,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "React.ReactNode",
								"package": "@types/react",
								"name": "React.ReactNode"
							}
						}
					]
				},
				{
					"id": 14,
					"name": "getTextLabel",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/Labeled.ts",
							"line": 103,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 15,
							"name": "getTextLabel",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get a plain text label from an item",
								"text": "If does not implement TextLabeled an error is thrown. To conditional call this check if labeled first\nwith `isTextLabeled`.\n",
								"tags": [
									{
										"tag": "extract-docs",
										"text": ""
									},
									{
										"tag": "menu-group",
										"text": "Labeled\n"
									}
								]
							},
							"parameters": [
								{
									"id": 16,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 8,
					"name": "isLabeled",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/Labeled.ts",
							"line": 67,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 9,
							"name": "isLabeled",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if item supports either text or React node labels",
								"tags": [
									{
										"tag": "extract-docs",
										"text": ""
									},
									{
										"tag": "menu-group",
										"text": "Labeled\n"
									}
								]
							},
							"parameters": [
								{
									"id": 10,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "item",
								"asserts": false,
								"targetType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"id": 17,
											"name": "TextLabeled"
										},
										{
											"type": "reference",
											"id": 20,
											"name": "NodeLabeled"
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 5,
					"name": "isNodeLabeled",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/Labeled.ts",
							"line": 55,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 6,
							"name": "isNodeLabeled",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if a value conforms to NodeLabeled",
								"tags": [
									{
										"tag": "extract-docs",
										"text": ""
									},
									{
										"tag": "menu-group",
										"text": "Labeled\n"
									}
								]
							},
							"parameters": [
								{
									"id": 7,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "item",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 20,
									"name": "NodeLabeled"
								}
							}
						}
					]
				},
				{
					"id": 2,
					"name": "isTextLabeled",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/Labeled.ts",
							"line": 43,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 3,
							"name": "isTextLabeled",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if a value conforms to TextLabeled",
								"tags": [
									{
										"tag": "menu-group",
										"text": "Labeled\n"
									}
								]
							},
							"parameters": [
								{
									"id": 4,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "item",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 17,
									"name": "TextLabeled"
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						20,
						17
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						11,
						14,
						8,
						5,
						2
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/Labeled.ts",
					"line": 10,
					"character": 0
				}
			]
		},
		{
			"id": 23,
			"name": "comparison",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 28,
					"name": "isDeepEqual",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/comparison.ts",
							"line": 37,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 29,
							"name": "isDeepEqual",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Compare values deeply for equality. If an object has an `isEqual` method this\nwill be called otherwise values will be compared deeply."
							},
							"parameters": [
								{
									"id": 30,
									"name": "a",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 31,
									"name": "b",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 24,
					"name": "isEqual",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/comparison.ts",
							"line": 29,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 25,
							"name": "isEqual",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Compare to values for equality. If has an `isEqual` method this will be called\notherwise values will be compared shallowly."
							},
							"parameters": [
								{
									"id": 26,
									"name": "a",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 27,
									"name": "b",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						28,
						24
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/comparison.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 32,
			"name": "identifiable",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 55,
					"name": "Identifiable",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Interface for types that we can automatically extract a unique identifier from.",
						"text": "To confirm to the interface provide a `_key` property or getter.\n\n[ViewModelFactory](doc:viewModelFactory) conforms to this so anything that expects an Identifiable\nwill accept a ViewModel.\n\nImplementing this can save you having to pass explicit functions to identify an item in other parts of the system\n(eg. for [AsyncChoices](doc:AsyncChoices) or [useAsyncValue](doc:useAsyncValue))\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Identifiable\n"
							}
						]
					},
					"children": [
						{
							"id": 56,
							"name": "_key",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/identifiable.ts",
									"line": 20,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 54,
								"name": "Id"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								56
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/identifiable.ts",
							"line": 19,
							"character": 17
						}
					]
				},
				{
					"id": 54,
					"name": "Id",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/identifiable.ts",
							"line": 3,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "SingleId"
							},
							{
								"type": "reference",
								"name": "CompoundId"
							}
						]
					}
				},
				{
					"id": 36,
					"name": "getId",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/identifiable.ts",
							"line": 45,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 37,
							"name": "getId",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get the id for an object. If object doesn't implement Identifiable then `fallbackGetId`\nmust be provided or an error will be thrown.",
								"tags": [
									{
										"tag": "extract-docs",
										"text": ""
									},
									{
										"tag": "menu-group",
										"text": "Identifiable\n"
									}
								]
							},
							"parameters": [
								{
									"id": 38,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Any value to get ID for"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 39,
									"name": "fallbackGetId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Function to return id for `item` if it doesn't implement Identifiable\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 40,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 41,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 42,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "reference",
														"id": 54,
														"name": "Id"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 54,
								"name": "Id"
							}
						}
					]
				},
				{
					"id": 43,
					"name": "hashId",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/identifiable.ts",
							"line": 64,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 44,
							"name": "hashId",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create string representation of ID suitable for strict equality\nchecking or as a key into an object / map.",
								"tags": [
									{
										"tag": "extract-docs",
										"text": ""
									},
									{
										"tag": "menu-group",
										"text": "Identifiable\n"
									}
								]
							},
							"parameters": [
								{
									"id": 45,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 54,
										"name": "Id"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 33,
					"name": "isIdentifiable",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/identifiable.ts",
							"line": 29,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 34,
							"name": "isIdentifiable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if a value conforms to Identifiable",
								"tags": [
									{
										"tag": "extract-docs",
										"text": ""
									},
									{
										"tag": "menu-group",
										"text": "Identifiable\n"
									}
								]
							},
							"parameters": [
								{
									"id": 35,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "item",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 55,
									"name": "Identifiable"
								}
							}
						}
					]
				},
				{
					"id": 46,
					"name": "isSameById",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/identifiable.ts",
							"line": 89,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 47,
							"name": "isSameById",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if two objects share the same ID.",
								"text": "NOTE: Doesn't compare objects for equality; only their id\n",
								"tags": [
									{
										"tag": "extract-docs",
										"text": ""
									},
									{
										"tag": "menu-group",
										"text": "Identifiable\n"
									}
								]
							},
							"parameters": [
								{
									"id": 48,
									"name": "item1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 49,
									"name": "item2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 50,
									"name": "fallbackGetId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 51,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 52,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 53,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "reference",
														"id": 54,
														"name": "Id"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						55
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						54
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						36,
						43,
						33,
						46
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/identifiable.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 57,
			"name": "misc",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 58,
					"name": "isPromise",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/misc.ts",
							"line": 4,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 59,
							"name": "isPromise",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Utility to check if a value is a promise"
							},
							"parameters": [
								{
									"id": 60,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "value",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "any"
										}
									],
									"qualifiedName": "Promise",
									"package": "typescript",
									"name": "Promise"
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						58
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/misc.ts",
					"line": 4,
					"character": 0
				}
			]
		},
		{
			"id": 61,
			"name": "pagination/CursorPaginator",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 70,
					"name": "CursorPaginator",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Cursor based paginator",
						"text": "Expects a `nextCursor`, `previousCursor` and optional `pageSize` key in the response. See\n[getPaginationState](doc:getPaginationState) for how to customise this if your backend implementation\ndiffers.\n",
						"tags": [
							{
								"tag": "menu-group",
								"text": "Pagination"
							},
							{
								"tag": "extract-docs",
								"text": "\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 74,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"comment": {},
							"signatures": [
								{
									"id": 75,
									"name": "new CursorPaginator",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"tags": [
											{
												"tag": "see",
												"text": "documentation for `replaceStateControllers` for what `currentStatePair` and `internalStatePair` are\n"
											}
										]
									},
									"parameters": [
										{
											"id": 76,
											"name": "currentStatePair",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": null
											},
											"defaultValue": "null"
										},
										{
											"id": 77,
											"name": "internalStatePair",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": null
											},
											"defaultValue": "null"
										}
									],
									"type": {
										"type": "reference",
										"id": 70,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 474,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 473,
								"name": "default.constructor"
							}
						},
						{
							"id": 116,
							"name": "currentState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 114,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 62,
								"name": "CursorPaginationState"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 481,
								"name": "default.currentState"
							}
						},
						{
							"id": 117,
							"name": "internalState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 115,
									"character": 4
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 66,
										"name": "InternalCursorPaginatorState"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 118,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 119,
													"name": "responseIsSet",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
															"line": 115,
															"character": 37
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														119
													]
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 482,
								"name": "default.internalState"
							}
						},
						{
							"id": 120,
							"name": "setCurrentState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 116,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 121,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 122,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 123,
													"name": "set",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 62,
														"name": "CursorPaginationState"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 485,
								"name": "default.setCurrentState"
							}
						},
						{
							"id": 124,
							"name": "setInternalState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 117,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 125,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 126,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 127,
													"name": "set",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 66,
														"name": "InternalCursorPaginatorState"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 489,
								"name": "default.setInternalState"
							}
						},
						{
							"id": 82,
							"name": "cursor",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
									"line": 45,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 83,
									"name": "cursor",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The current cursor. This will be null before the first response is received."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							]
						},
						{
							"id": 78,
							"name": "nextCursor",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
									"line": 31,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 79,
									"name": "nextCursor",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The next cursor (if any)"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							]
						},
						{
							"id": 84,
							"name": "pageSize",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
									"line": 52,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 85,
									"name": "pageSize",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The current page size, if known"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							]
						},
						{
							"id": 80,
							"name": "previousCursor",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
									"line": 38,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 81,
									"name": "previousCursor",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "THe previous cursor (if any)"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							]
						},
						{
							"id": 128,
							"name": "responseIsSet",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "True once setResponse has been called and pagination state is known."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 122,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 129,
									"name": "responseIsSet",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "True once setResponse has been called and pagination state is known."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Paginator.responseIsSet"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 493,
								"name": "default.responseIsSet"
							}
						},
						{
							"id": 94,
							"name": "first",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
									"line": 102,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 95,
									"name": "first",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Go to the first page."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"id": 506,
										"name": "default.first"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 505,
								"name": "default.first"
							}
						},
						{
							"id": 92,
							"name": "firstState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
									"line": 92,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 93,
									"name": "firstState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the state for the first page",
										"text": "Does not transition state. To transition state call `first` instead.\n"
									},
									"type": {
										"type": "reference",
										"id": 62,
										"name": "CursorPaginationState"
									},
									"overwrites": {
										"type": "reference",
										"id": 508,
										"name": "default.firstState"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 507,
								"name": "default.firstState"
							}
						},
						{
							"id": 104,
							"name": "getRequestInit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
									"line": 158,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 105,
									"name": "getRequestInit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the options to use with `Endpoint.execute` or `Endpoint.prepare`. Usually\nthis just involves setting `query` to the query string parameters for the paginator\nbut can also provide custom headers or different URL resolve arguments."
									},
									"parameters": [
										{
											"id": 106,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 392,
												"name": "PaginatorRequestOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 392,
										"name": "PaginatorRequestOptions"
									},
									"overwrites": {
										"type": "reference",
										"id": 500,
										"name": "default.getRequestInit"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 499,
								"name": "default.getRequestInit"
							}
						},
						{
							"id": 114,
							"name": "hasNextPage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
									"line": 200,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 115,
									"name": "hasNextPage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if there's more results after the current page"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"overwrites": {
										"type": "reference",
										"id": 518,
										"name": "default.hasNextPage"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 517,
								"name": "default.hasNextPage"
							}
						},
						{
							"id": 98,
							"name": "next",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
									"line": 125,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 99,
									"name": "next",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Go to the next page.",
										"text": "If the last next is not yet known because results haven't been returned this function\ndoes nothing.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"id": 510,
										"name": "default.next"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 509,
								"name": "default.next"
							}
						},
						{
							"id": 96,
							"name": "nextState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
									"line": 112,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 97,
									"name": "nextState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the state for the first page. If the next page isn't yet known (eg. results\nhaven't yet been returned) then null will be returned.",
										"text": "Does not transition state. To transition state call `next` instead.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 62,
												"name": "CursorPaginationState"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 512,
										"name": "default.nextState"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 511,
								"name": "default.nextState"
							}
						},
						{
							"id": 86,
							"name": "pageSizeState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
									"line": 61,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 87,
									"name": "pageSizeState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the state for the specified page size",
										"text": "Does not transition state. To transition state call `setPageSize` instead.\n"
									},
									"parameters": [
										{
											"id": 88,
											"name": "pageSize",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 62,
										"name": "CursorPaginationState"
									}
								}
							]
						},
						{
							"id": 102,
							"name": "previous",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
									"line": 151,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 103,
									"name": "previous",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Go to the previous page.",
										"text": "If the previous page is not yet known because results haven't been returned this function\ndoes nothing.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"id": 514,
										"name": "default.previous"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 513,
								"name": "default.previous"
							}
						},
						{
							"id": 100,
							"name": "previousState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
									"line": 138,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 101,
									"name": "previousState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the state for the previous page. If the previous page isn't yet known (eg. results\nhaven't yet been returned) then null will be returned.",
										"text": "Does not transition state. To transition state call `previous` instead.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 62,
												"name": "CursorPaginationState"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 516,
										"name": "default.previousState"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 515,
								"name": "default.previousState"
							}
						},
						{
							"id": 130,
							"name": "replaceStateControllers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 165,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 131,
									"name": "replaceStateControllers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Paginator receives 2 tuples of a state and state setter pair. This is expected to\nmatch the same interface as `useState` in React. The following is a valid simple usage:",
										"text": "```js\nconst paginator = new Paginator(useState(), useState());\n```\n\nNote that we can also pass the state controllers in via `replaceStateControllers` rather\nthan in the constructor. This is so we can memoize the `Paginator` instance which is desirable\nwhen using the paginator as a dependency to React hooks.\n\nAs state is passed in and managed external to the class be aware that any data stored\non the class instance will be lost unless written with `setCurrentState` or `setInternalState`.\nThis design is a compromise between allowing a clear interface for how paginators should\nbe defined and allowing the state to be managed externally (eg. using React state).\n"
									},
									"parameters": [
										{
											"id": 132,
											"name": "currentStatePair",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The state object and setter (eg. from `useState`) that is used to store\nand transition pagination state. Using this you can do things like easily store state in the URL\n(eg. using `useUrlQueryState`) or other data sources."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 133,
											"name": "internalStatePair",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The state object and setter that is used for internal state. Internal state\nis stored separately as it does not need to be restored (eg. if you refresh the page). It is used\nto store things like the total number of results or the current cursor. Passing `useState` here is\nfine.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 496,
										"name": "default.replaceStateControllers"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 495,
								"name": "default.replaceStateControllers"
							}
						},
						{
							"id": 89,
							"name": "setPageSize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
									"line": 83,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 90,
									"name": "setPageSize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Set the page size"
									},
									"parameters": [
										{
											"id": 91,
											"name": "pageSize",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 107,
							"name": "setResponse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
									"line": 179,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 108,
									"name": "setResponse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the internal data based on response. Expects `nextCursor`, `previousCursor` and optionally `pageSize` to be in\nresponse data.",
										"text": "See [getPaginationState](doc:getPaginationState) for how to customise this if your backend implementation\ndiffers.\n"
									},
									"parameters": [
										{
											"id": 109,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 110,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 111,
															"name": "nextCursor",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
																	"line": 184,
																	"character": 8
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														},
														{
															"id": 113,
															"name": "pageSize",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
																	"line": 186,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 112,
															"name": "previousCursor",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
																	"line": 185,
																	"character": 8
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																111,
																113,
																112
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"id": 503,
										"name": "default.setResponse"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 502,
								"name": "default.setResponse"
							}
						},
						{
							"id": 71,
							"name": "getPaginationState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
									"line": 217,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 72,
									"name": "getPaginationState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Expected pagination state in the shape:",
										"text": "```json\n{\n    next: null|'http://example.com/?cursor=abc123',\n    previous: null|'http://example.com/?cursor=abc123',\n    results: Array\n}\n```\n"
									},
									"parameters": [
										{
											"id": 73,
											"name": "requestDetails",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 397,
												"name": "PaginationRequestDetails"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": false
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										]
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								74
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								116,
								117,
								120,
								124
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								82,
								78,
								84,
								80,
								128
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								94,
								92,
								104,
								114,
								98,
								96,
								86,
								102,
								100,
								130,
								89,
								107,
								71
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
							"line": 24,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 472,
							"typeArguments": [
								{
									"type": "reference",
									"id": 62,
									"name": "CursorPaginationState"
								},
								{
									"type": "reference",
									"id": 66,
									"name": "InternalCursorPaginatorState"
								}
							],
							"name": "default"
						}
					]
				},
				{
					"id": 62,
					"name": "CursorPaginationState",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
							"line": 4,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 63,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 65,
									"name": "cursor",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
											"line": 6,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 64,
									"name": "pageSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
											"line": 5,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										65,
										64
									]
								}
							],
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
									"line": 4,
									"character": 36
								}
							]
						}
					}
				},
				{
					"id": 66,
					"name": "InternalCursorPaginatorState",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
							"line": 9,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 67,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 68,
									"name": "nextCursor",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
											"line": 10,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 69,
									"name": "previousCursor",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
											"line": 11,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										68,
										69
									]
								}
							],
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
									"line": 9,
									"character": 43
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						70
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						62,
						66
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 134,
			"name": "pagination/InferredPaginator",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 136,
					"name": "InferredPaginator",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Class that infers the specific type of pagination based on the response.",
						"text": "Supports [PageNumberPaginator](doc:PageNumberPaginator), [LimitOffsetPaginator](LimitOffsetPaginator) and\n[CursorPaginator](doc:CursorPaginator) with the following rules based on the response data:\n\n* If response contains `nextCursor` or `previousCursor` value paginator is set to [CursorPaginator](doc:CursorPaginator)\n* If response contains `limit` then paginator is set to  [LimitOffsetPaginator](LimitOffsetPaginator)\n* If response contains `total` then paginator is set to [PageNumberPaginator](doc:PageNumberPaginator)\n",
						"tags": [
							{
								"tag": "menu-group",
								"text": "Pagination"
							},
							{
								"tag": "extract-docs",
								"text": "\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 140,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 172,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 141,
									"name": "new InferredPaginator",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"tags": [
											{
												"tag": "see",
												"text": "documentation for `replaceStateControllers` for what `currentStatePair` and `internalStatePair` are\n"
											}
										]
									},
									"parameters": [
										{
											"id": 142,
											"name": "currentStatePair",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 143,
											"name": "internalStatePair",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 136,
										"name": "default"
									}
								}
							]
						},
						{
							"id": 144,
							"name": "__paginator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 26,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 70,
										"name": "default"
									},
									{
										"type": "reference",
										"id": 318,
										"name": "default"
									},
									{
										"type": "reference",
										"id": 242,
										"name": "default"
									}
								]
							}
						},
						{
							"id": 169,
							"name": "currentState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 164,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 135,
								"name": "PaginatorState"
							},
							"implementationOf": {
								"type": "reference",
								"id": 405,
								"name": "PaginatorInterface.currentState"
							}
						},
						{
							"id": 170,
							"name": "internalState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 165,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							},
							"implementationOf": {
								"type": "reference",
								"id": 406,
								"name": "PaginatorInterface.internalState"
							}
						},
						{
							"id": 171,
							"name": "setCurrentState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 166,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 172,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 173,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 174,
													"name": "nextValue",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 135,
														"name": "PaginatorState"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							},
							"implementationOf": {
								"type": "reference",
								"id": 407,
								"name": "PaginatorInterface.setCurrentState"
							}
						},
						{
							"id": 175,
							"name": "setInternalState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 167,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 176,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 177,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 178,
													"name": "set",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 179,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 180,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 181,
																			"name": "internalState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"typeArguments": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "intrinsic",
																						"name": "any"
																					}
																				],
																				"qualifiedName": "Record",
																				"package": "typescript",
																				"name": "Record"
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Record",
																		"package": "typescript",
																		"name": "Record"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							},
							"implementationOf": {
								"type": "reference",
								"id": 410,
								"name": "PaginatorInterface.setInternalState"
							}
						},
						{
							"id": 163,
							"name": "cursor",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 128,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 164,
									"name": "cursor",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The current cursor. Only valid if inferred paginator is [CursorPaginator](doc:CursorPaginator)."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							]
						},
						{
							"id": 155,
							"name": "limit",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 81,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 156,
									"name": "limit",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The current limit. Only valid if inferred paginator is [LimitOffsetPaginator](doc:LimitOffsetPaginator)."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							]
						},
						{
							"id": 159,
							"name": "nextCursor",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 104,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 160,
									"name": "nextCursor",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The next cursor. Only valid if inferred paginator is [CursorPaginator](doc:CursorPaginator)."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							]
						},
						{
							"id": 157,
							"name": "offset",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 94,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 158,
									"name": "offset",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The current offset. Only valid if inferred paginator is [LimitOffsetPaginator](doc:LimitOffsetPaginator)."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							]
						},
						{
							"id": 165,
							"name": "page",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 141,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 166,
									"name": "page",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The current page number. Only valid if inferred paginator is [PageNumberPaginator](doc:PageNumberPaginator)."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							]
						},
						{
							"id": 167,
							"name": "pageSize",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 154,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 168,
									"name": "pageSize",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The current page size. Only valid if inferred paginator is [PageNumberPaginator](doc:PageNumberPaginator)."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							]
						},
						{
							"id": 147,
							"name": "paginator",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 34,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 148,
									"name": "paginator",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The underlying inferred paginator instance (if known). Only available after `setResponse` has been called."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 70,
												"name": "default"
											},
											{
												"type": "reference",
												"id": 318,
												"name": "default"
											},
											{
												"type": "reference",
												"id": 242,
												"name": "default"
											}
										]
									}
								}
							],
							"setSignature": [
								{
									"id": 149,
									"name": "paginator",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"comment": {
										"shortText": "The underlying inferred paginator instance (if known). Only available after `setResponse` has been called."
									},
									"parameters": [
										{
											"id": 150,
											"name": "paginator",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reference",
														"id": 70,
														"name": "default"
													},
													{
														"type": "reference",
														"id": 318,
														"name": "default"
													},
													{
														"type": "reference",
														"id": 242,
														"name": "default"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 161,
							"name": "previousCursor",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 114,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 162,
									"name": "previousCursor",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The previous cursor. Only valid if inferred paginator is [CursorPaginator](doc:CursorPaginator)."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							]
						},
						{
							"id": 145,
							"name": "responseIsSet",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 27,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 146,
									"name": "responseIsSet",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"implementationOf": {
										"type": "reference",
										"id": 413,
										"name": "PaginatorInterface.responseIsSet"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 413,
								"name": "PaginatorInterface.responseIsSet"
							}
						},
						{
							"id": 151,
							"name": "total",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 55,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 152,
									"name": "total",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The total number of records available. Not valid if inferred paginator is [CursorPaginator](doc:CursorPaginator)."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							]
						},
						{
							"id": 153,
							"name": "totalPages",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 68,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 154,
									"name": "totalPages",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The total number of records available. Only valid if inferred paginator is [PageNumberPaginator](doc:PageNumberPaginator)."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							]
						},
						{
							"id": 220,
							"name": "first",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 416,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 221,
									"name": "first",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Go to the first page."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"id": 417,
										"name": "PaginatorInterface.first"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 416,
								"name": "PaginatorInterface.first"
							}
						},
						{
							"id": 218,
							"name": "firstState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 402,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 219,
									"name": "firstState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the state for the first page",
										"text": "Does not transition state. To transition state call `first` instead.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 62,
												"name": "CursorPaginationState"
											},
											{
												"type": "reference",
												"id": 311,
												"name": "PageNumberPaginationState"
											},
											{
												"type": "reference",
												"id": 235,
												"name": "LimitOffsetPaginationState"
											}
										]
									},
									"implementationOf": {
										"type": "reference",
										"id": 419,
										"name": "PaginatorInterface.firstState"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 418,
								"name": "PaginatorInterface.firstState"
							}
						},
						{
							"id": 228,
							"name": "getRequestInit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 472,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 229,
									"name": "getRequestInit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 230,
											"name": "currentInit",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 392,
										"name": "PaginatorRequestOptions"
									},
									"implementationOf": {
										"type": "reference",
										"id": 429,
										"name": "PaginatorInterface.getRequestInit"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 428,
								"name": "PaginatorInterface.getRequestInit"
							}
						},
						{
							"id": 226,
							"name": "hasNextPage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 465,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 227,
									"name": "hasNextPage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if there's more results after the current page"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"implementationOf": {
										"type": "reference",
										"id": 415,
										"name": "PaginatorInterface.hasNextPage"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 414,
								"name": "PaginatorInterface.hasNextPage"
							}
						},
						{
							"id": 224,
							"name": "last",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 450,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 225,
									"name": "last",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Go to the last page. If the last page isn't yet known (eg. results\nhaven't yet been returned) then null will be returned.",
										"text": "If the last page is not yet known because results haven't been returned this function\ndoes nothing.\nNot valid for [CursorPaginator](doc:CursorPaginator)\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 222,
							"name": "lastState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 432,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 223,
									"name": "lastState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the state for the first page",
										"text": "Does not transition state. To transition state call `last` instead.\n\nNot valid for [CursorPaginator](doc:CursorPaginator)\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 311,
												"name": "PageNumberPaginationState"
											},
											{
												"type": "reference",
												"id": 235,
												"name": "LimitOffsetPaginationState"
											}
										]
									}
								}
							]
						},
						{
							"id": 198,
							"name": "limitState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 282,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 199,
									"name": "limitState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Only valid if inferred paginator is [LimitOffsetPaginator](doc:LimitOffsetPaginator).",
										"text": "See [LimitOffsetPaginator.limitState](doc:LimitOffsetPaginator#method-limitState)\n"
									},
									"parameters": [
										{
											"id": 200,
											"name": "limit",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 235,
												"name": "LimitOffsetPaginationState"
											}
										]
									}
								}
							]
						},
						{
							"id": 212,
							"name": "next",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 360,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 213,
									"name": "next",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Go to the next page."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"id": 421,
										"name": "PaginatorInterface.next"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 420,
								"name": "PaginatorInterface.next"
							}
						},
						{
							"id": 210,
							"name": "nextState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 346,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 211,
									"name": "nextState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the state for the next page",
										"text": "Does not transition state. To transition state call `next` instead.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 62,
												"name": "CursorPaginationState"
											},
											{
												"type": "reference",
												"id": 311,
												"name": "PageNumberPaginationState"
											},
											{
												"type": "reference",
												"id": 235,
												"name": "LimitOffsetPaginationState"
											}
										]
									},
									"implementationOf": {
										"type": "reference",
										"id": 423,
										"name": "PaginatorInterface.nextState"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 422,
								"name": "PaginatorInterface.nextState"
							}
						},
						{
							"id": 204,
							"name": "offsetState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 314,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 205,
									"name": "offsetState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Only valid if inferred paginator is [LimitOffsetPaginator](doc:LimitOffsetPaginator).",
										"text": "See [LimitOffsetPaginator.offsetState](doc:LimitOffsetPaginator#method-offsetState)\n"
									},
									"parameters": [
										{
											"id": 206,
											"name": "offset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 235,
												"name": "LimitOffsetPaginationState"
											}
										]
									}
								}
							]
						},
						{
							"id": 192,
							"name": "pageSizeState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 248,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 193,
									"name": "pageSizeState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Only valid if inferred paginator is [PageNumberPaginator](doc:PageNumberPaginator).",
										"text": "See [PageNumberPaginator.pageSizeState](doc:PageNumberPaginator#method-pageSizeState)\n"
									},
									"parameters": [
										{
											"id": 194,
											"name": "pageSize",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 62,
												"name": "CursorPaginationState"
											},
											{
												"type": "reference",
												"id": 311,
												"name": "PageNumberPaginationState"
											}
										]
									}
								}
							]
						},
						{
							"id": 186,
							"name": "pageState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 216,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 187,
									"name": "pageState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Only valid if inferred paginator is [PageNumberPaginator](doc:PageNumberPaginator).",
										"text": "See [PageNumberPaginator.pageState](doc:PageNumberPaginator#method-pageState)\n"
									},
									"parameters": [
										{
											"id": 188,
											"name": "page",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 311,
												"name": "PageNumberPaginationState"
											}
										]
									}
								}
							]
						},
						{
							"id": 216,
							"name": "previous",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 388,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 217,
									"name": "previous",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Go to the previous page."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"id": 425,
										"name": "PaginatorInterface.previous"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 424,
								"name": "PaginatorInterface.previous"
							}
						},
						{
							"id": 214,
							"name": "previousState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 374,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 215,
									"name": "previousState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the state for the previous page",
										"text": "Does not transition state. To transition state call `previous` instead.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 62,
												"name": "CursorPaginationState"
											},
											{
												"type": "reference",
												"id": 311,
												"name": "PageNumberPaginationState"
											},
											{
												"type": "reference",
												"id": 235,
												"name": "LimitOffsetPaginationState"
											}
										]
									},
									"implementationOf": {
										"type": "reference",
										"id": 427,
										"name": "PaginatorInterface.previousState"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 426,
								"name": "PaginatorInterface.previousState"
							}
						},
						{
							"id": 182,
							"name": "replaceStateControllers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 186,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 183,
									"name": "replaceStateControllers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"tags": [
											{
												"tag": "see",
												"text": "`Paginator.replaceStateControllers`\n"
											}
										]
									},
									"parameters": [
										{
											"id": 184,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										},
										{
											"id": 185,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"id": 435,
										"name": "PaginatorInterface.replaceStateControllers"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 434,
								"name": "PaginatorInterface.replaceStateControllers"
							}
						},
						{
							"id": 201,
							"name": "setLimit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 297,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 202,
									"name": "setLimit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Only valid if inferred paginator is [LimitOffsetPaginator](doc:LimitOffsetPaginator).",
										"text": "See [LimitOffsetPaginator.setLimit](doc:LimitOffsetPaginator#method-setLimit)\n"
									},
									"parameters": [
										{
											"id": 203,
											"name": "limit",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 207,
							"name": "setOffset",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 329,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 208,
									"name": "setOffset",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Only valid if inferred paginator is [LimitOffsetPaginator](doc:LimitOffsetPaginator).",
										"text": "See [LimitOffsetPaginator.setOffset](doc:LimitOffsetPaginator#method-setOffset)\n"
									},
									"parameters": [
										{
											"id": 209,
											"name": "offset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189,
							"name": "setPage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 231,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 190,
									"name": "setPage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Only valid if inferred paginator is [PageNumberPaginator](doc:PageNumberPaginator).",
										"text": "See [PageNumberPaginator.setPage](doc:PageNumberPaginator#method-setPage)\n"
									},
									"parameters": [
										{
											"id": 191,
											"name": "page",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 195,
							"name": "setPageSize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 265,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 196,
									"name": "setPageSize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Only valid if inferred paginator is [PageNumberPaginator](doc:PageNumberPaginator).",
										"text": "See [PageNumberPaginator.setPageSize](doc:PageNumberPaginator#method-setPageSize)\n"
									},
									"parameters": [
										{
											"id": 197,
											"name": "pageSize",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 231,
							"name": "setResponse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 492,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 232,
									"name": "setResponse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the internal data based on response. This is where the paginator is inferred based on values in the\n`response`.",
										"text": "See [getPaginationState](doc:getPaginationState) for how to customise this if your backend implementation\ndiffers.\n"
									},
									"parameters": [
										{
											"id": 233,
											"name": "response",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"id": 432,
										"name": "PaginatorInterface.setResponse"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 431,
								"name": "PaginatorInterface.setResponse"
							}
						},
						{
							"id": 137,
							"name": "getPaginationState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 518,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 138,
									"name": "getPaginationState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 139,
											"name": "requestDetails",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 397,
												"name": "PaginationRequestDetails"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": false
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										]
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								140
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								144,
								169,
								170,
								171,
								175
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								163,
								155,
								159,
								157,
								165,
								167,
								147,
								161,
								145,
								151,
								153
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								220,
								218,
								228,
								226,
								224,
								222,
								198,
								212,
								210,
								204,
								192,
								186,
								216,
								214,
								182,
								201,
								207,
								189,
								195,
								231,
								137
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
							"line": 24,
							"character": 21
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 404,
							"typeArguments": [
								{
									"type": "reference",
									"id": 135,
									"name": "PaginatorState"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "any"
										}
									],
									"qualifiedName": "Record",
									"package": "typescript",
									"name": "Record"
								}
							],
							"name": "PaginatorInterface"
						}
					]
				},
				{
					"id": 135,
					"name": "PaginatorState",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
							"line": 6,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 311,
								"name": "PageNumberPaginationState"
							},
							{
								"type": "reference",
								"id": 62,
								"name": "CursorPaginationState"
							},
							{
								"type": "reference",
								"id": 235,
								"name": "LimitOffsetPaginationState"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						136
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						135
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 234,
			"name": "pagination/LimitOffsetPaginator",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 242,
					"name": "LimitOffsetPaginator",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Limit & offset based paginator",
						"text": "Expects a `limit` key in the response. See [getPaginationState](doc:getPaginationState) for how\nto customise this if your backend implementation differs.\n",
						"tags": [
							{
								"tag": "menu-group",
								"text": "Pagination"
							},
							{
								"tag": "extract-docs",
								"text": "\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 246,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"comment": {},
							"signatures": [
								{
									"id": 247,
									"name": "new LimitOffsetPaginator",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"tags": [
											{
												"tag": "see",
												"text": "documentation for `replaceStateControllers` for what `currentStatePair` and `internalStatePair` are\n"
											}
										]
									},
									"parameters": [
										{
											"id": 248,
											"name": "currentStatePair",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": null
											},
											"defaultValue": "null"
										},
										{
											"id": 249,
											"name": "internalStatePair",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": null
											},
											"defaultValue": "null"
										}
									],
									"type": {
										"type": "reference",
										"id": 242,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 474,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 473,
								"name": "default.constructor"
							}
						},
						{
							"id": 292,
							"name": "currentState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 114,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 235,
								"name": "LimitOffsetPaginationState"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 481,
								"name": "default.currentState"
							}
						},
						{
							"id": 293,
							"name": "internalState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 115,
									"character": 4
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 239,
										"name": "InternalLimitOffsetPaginationState"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 294,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 295,
													"name": "responseIsSet",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
															"line": 115,
															"character": 37
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														295
													]
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 482,
								"name": "default.internalState"
							}
						},
						{
							"id": 296,
							"name": "setCurrentState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 116,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 297,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 298,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 299,
													"name": "set",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 235,
														"name": "LimitOffsetPaginationState"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 485,
								"name": "default.setCurrentState"
							}
						},
						{
							"id": 300,
							"name": "setInternalState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 117,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 301,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 302,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 303,
													"name": "set",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 239,
														"name": "InternalLimitOffsetPaginationState"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 489,
								"name": "default.setInternalState"
							}
						},
						{
							"id": 252,
							"name": "limit",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
									"line": 36,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 253,
									"name": "limit",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The current limit"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							]
						},
						{
							"id": 254,
							"name": "offset",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
									"line": 47,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 255,
									"name": "offset",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The current offset"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						},
						{
							"id": 304,
							"name": "responseIsSet",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "True once setResponse has been called and pagination state is known."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 122,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 305,
									"name": "responseIsSet",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "True once setResponse has been called and pagination state is known."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Paginator.responseIsSet"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 493,
								"name": "default.responseIsSet"
							}
						},
						{
							"id": 250,
							"name": "total",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
									"line": 29,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 251,
									"name": "total",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The total number of records available. This will be null before the first response is received."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							]
						},
						{
							"id": 278,
							"name": "first",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
									"line": 169,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 279,
									"name": "first",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Go to the first page."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"id": 506,
										"name": "default.first"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 505,
								"name": "default.first"
							}
						},
						{
							"id": 276,
							"name": "firstState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
									"line": 160,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 277,
									"name": "firstState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the state for the first page",
										"text": "Does not transition state. To transition state call `first` instead.\n"
									},
									"type": {
										"type": "reference",
										"id": 235,
										"name": "LimitOffsetPaginationState"
									},
									"overwrites": {
										"type": "reference",
										"id": 508,
										"name": "default.firstState"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 507,
								"name": "default.firstState"
							}
						},
						{
							"id": 284,
							"name": "getRequestInit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
									"line": 204,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 285,
									"name": "getRequestInit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the options to use with `Endpoint.execute` or `Endpoint.prepare`. Usually\nthis just involves setting `query` to the query string parameters for the paginator\nbut can also provide custom headers or different URL resolve arguments."
									},
									"parameters": [
										{
											"id": 286,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "Object"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 392,
										"name": "PaginatorRequestOptions"
									},
									"overwrites": {
										"type": "reference",
										"id": 500,
										"name": "default.getRequestInit"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 499,
								"name": "default.getRequestInit"
							}
						},
						{
							"id": 290,
							"name": "hasNextPage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
									"line": 234,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 291,
									"name": "hasNextPage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if there's more results after the current page"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"overwrites": {
										"type": "reference",
										"id": 518,
										"name": "default.hasNextPage"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 517,
								"name": "default.hasNextPage"
							}
						},
						{
							"id": 282,
							"name": "last",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
									"line": 196,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 283,
									"name": "last",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Go to the last page.",
										"text": "If the last page is not yet known because results haven't been returned this function\ndoes nothing.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 280,
							"name": "lastState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
									"line": 179,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 281,
									"name": "lastState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the state for the last page. If the last page isn't yet known (eg. results\nhaven't yet been returned) then null will be returned.",
										"text": "Does not transition state. To transition state call `last` instead.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 235,
												"name": "LimitOffsetPaginationState"
											}
										]
									}
								}
							]
						},
						{
							"id": 256,
							"name": "limitState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
									"line": 60,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 257,
									"name": "limitState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the state for the specified limit",
										"text": "Does not transition state. To transition state call `setLimit` instead.\n"
									},
									"parameters": [
										{
											"id": 258,
											"name": "limit",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 235,
										"name": "LimitOffsetPaginationState"
									}
								}
							]
						},
						{
							"id": 270,
							"name": "next",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
									"line": 126,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 271,
									"name": "next",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Go to the next page"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"id": 510,
										"name": "default.next"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 509,
								"name": "default.next"
							}
						},
						{
							"id": 268,
							"name": "nextState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
									"line": 116,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 269,
									"name": "nextState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the state for the next page",
										"text": "Does not transition state. To transition state call `next` instead.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 235,
												"name": "LimitOffsetPaginationState"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 512,
										"name": "default.nextState"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 511,
								"name": "default.nextState"
							}
						},
						{
							"id": 262,
							"name": "offsetState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
									"line": 92,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 263,
									"name": "offsetState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the state for the specified offset",
										"text": "Does not transition state. To transition state call `offsetState` instead.\n"
									},
									"parameters": [
										{
											"id": 264,
											"name": "offset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 235,
										"name": "LimitOffsetPaginationState"
									}
								}
							]
						},
						{
							"id": 274,
							"name": "previous",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
									"line": 148,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 275,
									"name": "previous",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Go to the previous page."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"id": 514,
										"name": "default.previous"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 513,
								"name": "default.previous"
							}
						},
						{
							"id": 272,
							"name": "previousState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
									"line": 138,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 273,
									"name": "previousState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the state for the previous page",
										"text": "Does not transition state. To transition state call `previous` instead.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 235,
												"name": "LimitOffsetPaginationState"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 516,
										"name": "default.previousState"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 515,
								"name": "default.previousState"
							}
						},
						{
							"id": 306,
							"name": "replaceStateControllers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 165,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 307,
									"name": "replaceStateControllers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Paginator receives 2 tuples of a state and state setter pair. This is expected to\nmatch the same interface as `useState` in React. The following is a valid simple usage:",
										"text": "```js\nconst paginator = new Paginator(useState(), useState());\n```\n\nNote that we can also pass the state controllers in via `replaceStateControllers` rather\nthan in the constructor. This is so we can memoize the `Paginator` instance which is desirable\nwhen using the paginator as a dependency to React hooks.\n\nAs state is passed in and managed external to the class be aware that any data stored\non the class instance will be lost unless written with `setCurrentState` or `setInternalState`.\nThis design is a compromise between allowing a clear interface for how paginators should\nbe defined and allowing the state to be managed externally (eg. using React state).\n"
									},
									"parameters": [
										{
											"id": 308,
											"name": "currentStatePair",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The state object and setter (eg. from `useState`) that is used to store\nand transition pagination state. Using this you can do things like easily store state in the URL\n(eg. using `useUrlQueryState`) or other data sources."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 309,
											"name": "internalStatePair",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The state object and setter that is used for internal state. Internal state\nis stored separately as it does not need to be restored (eg. if you refresh the page). It is used\nto store things like the total number of results or the current cursor. Passing `useState` here is\nfine.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 496,
										"name": "default.replaceStateControllers"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 495,
								"name": "default.replaceStateControllers"
							}
						},
						{
							"id": 259,
							"name": "setLimit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
									"line": 83,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 260,
									"name": "setLimit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Set the limit"
									},
									"parameters": [
										{
											"id": 261,
											"name": "limit",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 265,
							"name": "setOffset",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
									"line": 107,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 266,
									"name": "setOffset",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 267,
											"name": "offset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 287,
							"name": "setResponse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
									"line": 224,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 288,
									"name": "setResponse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the internal data based on response. Expects `limit` to be in response data.",
										"text": "See [getPaginationState](doc:getPaginationState) for how to customise this if your backend implementation\ndiffers.\n"
									},
									"parameters": [
										{
											"id": 289,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "Object"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"id": 503,
										"name": "default.setResponse"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 502,
								"name": "default.setResponse"
							}
						},
						{
							"id": 243,
							"name": "getPaginationState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
									"line": 241,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 244,
									"name": "getPaginationState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 245,
											"name": "requestDetails",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 397,
												"name": "PaginationRequestDetails"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": false
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										]
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								246
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								292,
								293,
								296,
								300
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								252,
								254,
								304,
								250
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								278,
								276,
								284,
								290,
								282,
								280,
								256,
								270,
								268,
								262,
								274,
								272,
								306,
								259,
								265,
								287,
								243
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
							"line": 22,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 472,
							"typeArguments": [
								{
									"type": "reference",
									"id": 235,
									"name": "LimitOffsetPaginationState"
								},
								{
									"type": "reference",
									"id": 239,
									"name": "InternalLimitOffsetPaginationState"
								}
							],
							"name": "default"
						}
					]
				},
				{
					"id": 239,
					"name": "InternalLimitOffsetPaginationState",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
							"line": 9,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 240,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 241,
									"name": "total",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
											"line": 10,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										241
									]
								}
							],
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
									"line": 9,
									"character": 49
								}
							]
						}
					}
				},
				{
					"id": 235,
					"name": "LimitOffsetPaginationState",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
							"line": 4,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 236,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 237,
									"name": "limit",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
											"line": 5,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 238,
									"name": "offset",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
											"line": 6,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										237,
										238
									]
								}
							],
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
									"line": 4,
									"character": 41
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						242
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						239,
						235
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 310,
			"name": "pagination/PageNumberPaginator",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 318,
					"name": "PageNumberPaginator",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Page number based paginator",
						"text": "Expects a `total` or `count` key and optional `pageSize` key in the response. `total` or `count` should be the total\nnumber of records available.\n\nIf your backend differs from this (for example by storing the values in different named keys or in headers instead of\nthe response body) you can handle that by extending this class and implementing `getPaginationState` or\nby passing `getPaginationState` to [usePaginator](doc:usePaginator).\n",
						"tags": [
							{
								"tag": "menu-group",
								"text": "Pagination"
							},
							{
								"tag": "extract-docs",
								"text": "\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 322,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"comment": {},
							"signatures": [
								{
									"id": 323,
									"name": "new PageNumberPaginator",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"tags": [
											{
												"tag": "see",
												"text": "documentation for `replaceStateControllers` for what `currentStatePair` and `internalStatePair` are\n"
											}
										]
									},
									"parameters": [
										{
											"id": 324,
											"name": "currentStatePair",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": null
											},
											"defaultValue": "null"
										},
										{
											"id": 325,
											"name": "internalStatePair",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": null
											},
											"defaultValue": "null"
										}
									],
									"type": {
										"type": "reference",
										"id": 318,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 474,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 473,
								"name": "default.constructor"
							}
						},
						{
							"id": 373,
							"name": "currentState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 114,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 311,
								"name": "PageNumberPaginationState"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 481,
								"name": "default.currentState"
							}
						},
						{
							"id": 374,
							"name": "internalState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 115,
									"character": 4
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 315,
										"name": "InternalPageNumberPaginationState"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 375,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 376,
													"name": "responseIsSet",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
															"line": 115,
															"character": 37
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														376
													]
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 482,
								"name": "default.internalState"
							}
						},
						{
							"id": 377,
							"name": "setCurrentState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 116,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 378,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 379,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 380,
													"name": "set",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 311,
														"name": "PageNumberPaginationState"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 485,
								"name": "default.setCurrentState"
							}
						},
						{
							"id": 381,
							"name": "setInternalState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 117,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 382,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 383,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 384,
													"name": "set",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 315,
														"name": "InternalPageNumberPaginationState"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 489,
								"name": "default.setInternalState"
							}
						},
						{
							"id": 330,
							"name": "page",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
									"line": 51,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 331,
									"name": "page",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The current page"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							]
						},
						{
							"id": 332,
							"name": "pageSize",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
									"line": 68,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 333,
									"name": "pageSize",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The current page size (if known)."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							]
						},
						{
							"id": 385,
							"name": "responseIsSet",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "True once setResponse has been called and pagination state is known."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 122,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 386,
									"name": "responseIsSet",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "True once setResponse has been called and pagination state is known."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Paginator.responseIsSet"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 493,
								"name": "default.responseIsSet"
							}
						},
						{
							"id": 326,
							"name": "total",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
									"line": 31,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 327,
									"name": "total",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The total number of results available on the backend"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							]
						},
						{
							"id": 328,
							"name": "totalPages",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
									"line": 41,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 329,
									"name": "totalPages",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The total number of pages"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							]
						},
						{
							"id": 356,
							"name": "first",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
									"line": 171,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 357,
									"name": "first",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Go to the first page."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"id": 506,
										"name": "default.first"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 505,
								"name": "default.first"
							}
						},
						{
							"id": 354,
							"name": "firstState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
									"line": 164,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 355,
									"name": "firstState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the state for the first page",
										"text": "Does not transition state. To transition state call `first` instead.\n"
									},
									"type": {
										"type": "reference",
										"id": 311,
										"name": "PageNumberPaginationState"
									},
									"overwrites": {
										"type": "reference",
										"id": 508,
										"name": "default.firstState"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 507,
								"name": "default.firstState"
							}
						},
						{
							"id": 362,
							"name": "getRequestInit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
									"line": 204,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 363,
									"name": "getRequestInit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Adds `page` and `pageSize` into query options passed through to the endpoint"
									},
									"parameters": [
										{
											"id": 364,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "Object"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 392,
										"name": "PaginatorRequestOptions"
									},
									"overwrites": {
										"type": "reference",
										"id": 500,
										"name": "default.getRequestInit"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 499,
								"name": "default.getRequestInit"
							}
						},
						{
							"id": 371,
							"name": "hasNextPage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
									"line": 235,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 372,
									"name": "hasNextPage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if there's more results after the current page"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"overwrites": {
										"type": "reference",
										"id": 518,
										"name": "default.hasNextPage"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 517,
								"name": "default.hasNextPage"
							}
						},
						{
							"id": 360,
							"name": "last",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
									"line": 194,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 361,
									"name": "last",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Go to the last page. If the last page isn't yet known (eg. results\nhaven't yet been returned) then null will be returned.",
										"text": "If the last page is not yet known because results haven't been returned this function\ndoes nothing.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 358,
							"name": "lastState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
									"line": 180,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 359,
									"name": "lastState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the state for the first page",
										"text": "Does not transition state. To transition state call `last` instead.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 311,
												"name": "PageNumberPaginationState"
											}
										]
									}
								}
							]
						},
						{
							"id": 348,
							"name": "next",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
									"line": 139,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 349,
									"name": "next",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Go to the next page."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"id": 510,
										"name": "default.next"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 509,
								"name": "default.next"
							}
						},
						{
							"id": 346,
							"name": "nextState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
									"line": 132,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 347,
									"name": "nextState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the state for the next page",
										"text": "Does not transition state. To transition state call `next` instead.\n"
									},
									"type": {
										"type": "reference",
										"id": 311,
										"name": "PageNumberPaginationState"
									},
									"overwrites": {
										"type": "reference",
										"id": 512,
										"name": "default.nextState"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 511,
								"name": "default.nextState"
							}
						},
						{
							"id": 340,
							"name": "pageSizeState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
									"line": 100,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 341,
									"name": "pageSizeState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the state for the specified page size",
										"text": "Does not transition state. To transition state call `setPageSize` instead.\n"
									},
									"parameters": [
										{
											"id": 342,
											"name": "pageSize",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 311,
										"name": "PageNumberPaginationState"
									}
								}
							]
						},
						{
							"id": 334,
							"name": "pageState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
									"line": 81,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 335,
									"name": "pageState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the state for the specified page number",
										"text": "Does not transition state. To transition state call `setPage` instead.\n"
									},
									"parameters": [
										{
											"id": 336,
											"name": "page",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 311,
										"name": "PageNumberPaginationState"
									}
								}
							]
						},
						{
							"id": 352,
							"name": "previous",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
									"line": 155,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 353,
									"name": "previous",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Go to the previous page."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"id": 514,
										"name": "default.previous"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 513,
								"name": "default.previous"
							}
						},
						{
							"id": 350,
							"name": "previousState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
									"line": 148,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 351,
									"name": "previousState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the state for the previous page",
										"text": "Does not transition state. To transition state call `previous` instead.\n"
									},
									"type": {
										"type": "reference",
										"id": 311,
										"name": "PageNumberPaginationState"
									},
									"overwrites": {
										"type": "reference",
										"id": 516,
										"name": "default.previousState"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 515,
								"name": "default.previousState"
							}
						},
						{
							"id": 387,
							"name": "replaceStateControllers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 165,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 388,
									"name": "replaceStateControllers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Paginator receives 2 tuples of a state and state setter pair. This is expected to\nmatch the same interface as `useState` in React. The following is a valid simple usage:",
										"text": "```js\nconst paginator = new Paginator(useState(), useState());\n```\n\nNote that we can also pass the state controllers in via `replaceStateControllers` rather\nthan in the constructor. This is so we can memoize the `Paginator` instance which is desirable\nwhen using the paginator as a dependency to React hooks.\n\nAs state is passed in and managed external to the class be aware that any data stored\non the class instance will be lost unless written with `setCurrentState` or `setInternalState`.\nThis design is a compromise between allowing a clear interface for how paginators should\nbe defined and allowing the state to be managed externally (eg. using React state).\n"
									},
									"parameters": [
										{
											"id": 389,
											"name": "currentStatePair",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The state object and setter (eg. from `useState`) that is used to store\nand transition pagination state. Using this you can do things like easily store state in the URL\n(eg. using `useUrlQueryState`) or other data sources."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 390,
											"name": "internalStatePair",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The state object and setter that is used for internal state. Internal state\nis stored separately as it does not need to be restored (eg. if you refresh the page). It is used\nto store things like the total number of results or the current cursor. Passing `useState` here is\nfine.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 496,
										"name": "default.replaceStateControllers"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 495,
								"name": "default.replaceStateControllers"
							}
						},
						{
							"id": 337,
							"name": "setPage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
									"line": 91,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 338,
									"name": "setPage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Change to the specified page"
									},
									"parameters": [
										{
											"id": 339,
											"name": "page",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 343,
							"name": "setPageSize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
									"line": 123,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 344,
									"name": "setPageSize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Change to the specified page size"
									},
									"parameters": [
										{
											"id": 345,
											"name": "pageSize",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 365,
							"name": "setResponse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
									"line": 225,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 366,
									"name": "setResponse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the internal data based on response. Expects `total` and optionally `pageSize` to be in\nresponse data.",
										"text": "See [getPaginationState](doc:getPaginationState) for how to customise this if your backend implementation\ndiffers.\n"
									},
									"parameters": [
										{
											"id": 367,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 368,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 370,
															"name": "pageSize",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
																	"line": 225,
																	"character": 54
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 369,
															"name": "total",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
																	"line": 225,
																	"character": 39
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																370,
																369
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"id": 503,
										"name": "default.setResponse"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 502,
								"name": "default.setResponse"
							}
						},
						{
							"id": 319,
							"name": "getPaginationState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
									"line": 250,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 320,
									"name": "getPaginationState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Expects `decodedBody` to include a key `results` which should be an array of return records and a variable\n`count` or `total` that contains the total number of records available."
									},
									"parameters": [
										{
											"id": 321,
											"name": "requestDetails",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 397,
												"name": "PaginationRequestDetails"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": false
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										]
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								322
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								373,
								374,
								377,
								381
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								330,
								332,
								385,
								326,
								328
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								356,
								354,
								362,
								371,
								360,
								358,
								348,
								346,
								340,
								334,
								352,
								350,
								387,
								337,
								343,
								365,
								319
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
							"line": 24,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 472,
							"typeArguments": [
								{
									"type": "reference",
									"id": 311,
									"name": "PageNumberPaginationState"
								},
								{
									"type": "reference",
									"id": 315,
									"name": "InternalPageNumberPaginationState"
								}
							],
							"name": "default"
						}
					]
				},
				{
					"id": 315,
					"name": "InternalPageNumberPaginationState",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
							"line": 7,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 316,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 317,
									"name": "total",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
											"line": 8,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										317
									]
								}
							],
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
									"line": 7,
									"character": 48
								}
							]
						}
					}
				},
				{
					"id": 311,
					"name": "PageNumberPaginationState",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
							"line": 3,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 312,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 313,
									"name": "page",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
											"line": 4,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 314,
									"name": "pageSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
											"line": 5,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										313,
										314
									]
								}
							],
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
									"line": 3,
									"character": 40
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						318
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						315,
						311
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 391,
			"name": "pagination/Paginator",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 472,
					"name": "Paginator",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isAbstract": true
					},
					"comment": {
						"shortText": "Base class for a paginator.",
						"tags": [
							{
								"tag": "menu-group",
								"text": "Pagination"
							},
							{
								"tag": "extract-docs",
								"text": ""
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 473,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 129,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 474,
									"name": "new Paginator",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"tags": [
											{
												"tag": "see",
												"text": "documentation for `replaceStateControllers` for what `currentStatePair` and `internalStatePair` are\n"
											}
										]
									},
									"typeParameter": [
										{
											"id": 476,
											"name": "State",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 475,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										},
										{
											"id": 478,
											"name": "InternalState",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 477,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										}
									],
									"parameters": [
										{
											"id": 479,
											"name": "currentStatePair",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": null
											},
											"defaultValue": "null"
										},
										{
											"id": 480,
											"name": "internalStatePair",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": null
											},
											"defaultValue": "null"
										}
									],
									"type": {
										"type": "reference",
										"id": 472,
										"typeArguments": [
											{
												"type": "reference",
												"id": 476,
												"name": "State"
											},
											{
												"type": "reference",
												"id": 478,
												"name": "InternalState"
											}
										],
										"name": "default"
									}
								}
							]
						},
						{
							"id": 481,
							"name": "currentState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 114,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 476,
								"name": "State"
							},
							"implementationOf": {
								"type": "reference",
								"id": 405,
								"name": "PaginatorInterface.currentState"
							}
						},
						{
							"id": 482,
							"name": "internalState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 115,
									"character": 4
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 478,
										"name": "InternalState"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 483,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 484,
													"name": "responseIsSet",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
															"line": 115,
															"character": 37
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														484
													]
												}
											]
										}
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"id": 406,
								"name": "PaginatorInterface.internalState"
							}
						},
						{
							"id": 485,
							"name": "setCurrentState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 116,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 486,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 487,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 488,
													"name": "set",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 476,
														"name": "State"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							},
							"implementationOf": {
								"type": "reference",
								"id": 407,
								"name": "PaginatorInterface.setCurrentState"
							}
						},
						{
							"id": 489,
							"name": "setInternalState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 117,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 490,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 491,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 492,
													"name": "set",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 478,
														"name": "InternalState"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							},
							"implementationOf": {
								"type": "reference",
								"id": 410,
								"name": "PaginatorInterface.setInternalState"
							}
						},
						{
							"id": 493,
							"name": "responseIsSet",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 122,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 494,
									"name": "responseIsSet",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "True once setResponse has been called and pagination state is known."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"implementationOf": {
										"type": "reference",
										"id": 413,
										"name": "PaginatorInterface.responseIsSet"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 413,
								"name": "PaginatorInterface.responseIsSet"
							}
						},
						{
							"id": 505,
							"name": "first",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 216,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 506,
									"name": "first",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Go to the first page."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"id": 417,
										"name": "PaginatorInterface.first"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 416,
								"name": "PaginatorInterface.first"
							}
						},
						{
							"id": 507,
							"name": "firstState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 225,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 508,
									"name": "firstState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the state for the first page",
										"text": "Does not transition state. To transition state call `first` instead.\n"
									},
									"type": {
										"type": "reference",
										"id": 476,
										"name": "State"
									},
									"implementationOf": {
										"type": "reference",
										"id": 419,
										"name": "PaginatorInterface.firstState"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 418,
								"name": "PaginatorInterface.firstState"
							}
						},
						{
							"id": 499,
							"name": "getRequestInit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 198,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 500,
									"name": "getRequestInit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the options to use with `Endpoint.execute` or `Endpoint.prepare`. Usually\nthis just involves setting `query` to the query string parameters for the paginator\nbut can also provide custom headers or different URL resolve arguments."
									},
									"parameters": [
										{
											"id": 501,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The existing options for the endpoint\n"
											},
											"type": {
												"type": "reference",
												"id": 392,
												"name": "PaginatorRequestOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 392,
										"name": "PaginatorRequestOptions"
									},
									"implementationOf": {
										"type": "reference",
										"id": 429,
										"name": "PaginatorInterface.getRequestInit"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 428,
								"name": "PaginatorInterface.getRequestInit"
							}
						},
						{
							"id": 517,
							"name": "hasNextPage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 264,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 518,
									"name": "hasNextPage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if there's more results after the current page"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"implementationOf": {
										"type": "reference",
										"id": 415,
										"name": "PaginatorInterface.hasNextPage"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 414,
								"name": "PaginatorInterface.hasNextPage"
							}
						},
						{
							"id": 509,
							"name": "next",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 232,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 510,
									"name": "next",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Go to the next page."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"id": 421,
										"name": "PaginatorInterface.next"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 420,
								"name": "PaginatorInterface.next"
							}
						},
						{
							"id": 511,
							"name": "nextState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 241,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 512,
									"name": "nextState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the state for the next page",
										"text": "Does not transition state. To transition state call `next` instead.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 476,
												"name": "State"
											}
										]
									},
									"implementationOf": {
										"type": "reference",
										"id": 423,
										"name": "PaginatorInterface.nextState"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 422,
								"name": "PaginatorInterface.nextState"
							}
						},
						{
							"id": 513,
							"name": "previous",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 248,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 514,
									"name": "previous",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Go to the previous page."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"id": 425,
										"name": "PaginatorInterface.previous"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 424,
								"name": "PaginatorInterface.previous"
							}
						},
						{
							"id": 515,
							"name": "previousState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 257,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 516,
									"name": "previousState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the state for the previous page",
										"text": "Does not transition state. To transition state call `previous` instead.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 476,
												"name": "State"
											}
										]
									},
									"implementationOf": {
										"type": "reference",
										"id": 427,
										"name": "PaginatorInterface.previousState"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 426,
								"name": "PaginatorInterface.previousState"
							}
						},
						{
							"id": 495,
							"name": "replaceStateControllers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 165,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 496,
									"name": "replaceStateControllers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Paginator receives 2 tuples of a state and state setter pair. This is expected to\nmatch the same interface as `useState` in React. The following is a valid simple usage:",
										"text": "```js\nconst paginator = new Paginator(useState(), useState());\n```\n\nNote that we can also pass the state controllers in via `replaceStateControllers` rather\nthan in the constructor. This is so we can memoize the `Paginator` instance which is desirable\nwhen using the paginator as a dependency to React hooks.\n\nAs state is passed in and managed external to the class be aware that any data stored\non the class instance will be lost unless written with `setCurrentState` or `setInternalState`.\nThis design is a compromise between allowing a clear interface for how paginators should\nbe defined and allowing the state to be managed externally (eg. using React state).\n"
									},
									"parameters": [
										{
											"id": 497,
											"name": "currentStatePair",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The state object and setter (eg. from `useState`) that is used to store\nand transition pagination state. Using this you can do things like easily store state in the URL\n(eg. using `useUrlQueryState`) or other data sources."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 498,
											"name": "internalStatePair",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The state object and setter that is used for internal state. Internal state\nis stored separately as it does not need to be restored (eg. if you refresh the page). It is used\nto store things like the total number of results or the current cursor. Passing `useState` here is\nfine.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"id": 435,
										"name": "PaginatorInterface.replaceStateControllers"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 434,
								"name": "PaginatorInterface.replaceStateControllers"
							}
						},
						{
							"id": 502,
							"name": "setResponse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 209,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 503,
									"name": "setResponse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "This is called when an `Endpoint` has resolved and is passed the response from the\nendpoint. This is used to update the relevant paginator state  - eg. the total\nnumber of records, next & previous cursors etc."
									},
									"parameters": [
										{
											"id": 504,
											"name": "response",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The response as returned by the endpoint this paginator is used with.\n"
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"id": 432,
										"name": "PaginatorInterface.setResponse"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 431,
								"name": "PaginatorInterface.setResponse"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								473
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								481,
								482,
								485,
								489
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								493
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								505,
								507,
								499,
								517,
								509,
								511,
								513,
								515,
								495,
								502
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 111,
							"character": 30
						}
					],
					"typeParameter": [
						{
							"id": 520,
							"name": "State",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"comment": {
								"shortText": "Type representing the state of the pagination. This is the state that would be serialized (eg. to the URL) and restored when the paginator is created (contrast this to `InternalState` which isn't (contrast this to `InternalState` which isn't)."
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 519,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
											"line": 111,
											"character": 54
										}
									]
								}
							}
						},
						{
							"id": 522,
							"name": "InternalState",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"comment": {
								"shortText": "Type representing the internal state of the pagination. Internal state refers to state that does not need to be restored (eg. pagination details from the URL for example)\n"
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 521,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
											"line": 111,
											"character": 80
										}
									]
								}
							}
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 70,
							"name": "CursorPaginator"
						},
						{
							"type": "reference",
							"id": 242,
							"name": "LimitOffsetPaginator"
						},
						{
							"type": "reference",
							"id": 318,
							"name": "PageNumberPaginator"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 404,
							"typeArguments": [
								{
									"type": "reference",
									"id": 476,
									"name": "State"
								},
								{
									"type": "reference",
									"id": 478,
									"name": "InternalState"
								}
							],
							"name": "PaginatorInterface"
						}
					]
				},
				{
					"id": 404,
					"name": "PaginatorInterface",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {},
					"children": [
						{
							"id": 405,
							"name": "currentState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 77,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 439,
								"name": "State"
							}
						},
						{
							"id": 406,
							"name": "internalState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 78,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 441,
								"name": "InternalState"
							}
						},
						{
							"id": 413,
							"name": "responseIsSet",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 81,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 416,
							"name": "first",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 417,
									"name": "first",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 418,
							"name": "firstState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 419,
									"name": "firstState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 439,
												"name": "State"
											}
										]
									}
								}
							]
						},
						{
							"id": 428,
							"name": "getRequestInit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 429,
									"name": "getRequestInit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 430,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 392,
												"name": "PaginatorRequestOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 392,
										"name": "PaginatorRequestOptions"
									}
								}
							]
						},
						{
							"id": 414,
							"name": "hasNextPage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 415,
									"name": "hasNextPage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 420,
							"name": "next",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 421,
									"name": "next",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 422,
							"name": "nextState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 423,
									"name": "nextState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 439,
												"name": "State"
											}
										]
									}
								}
							]
						},
						{
							"id": 424,
							"name": "previous",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 425,
									"name": "previous",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 426,
							"name": "previousState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 427,
									"name": "previousState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 439,
												"name": "State"
											}
										]
									}
								}
							]
						},
						{
							"id": 434,
							"name": "replaceStateControllers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 435,
									"name": "replaceStateControllers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 436,
											"name": "currentStatePair",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 437,
											"name": "internalStatePair",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 407,
							"name": "setCurrentState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 79,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 408,
									"name": "setCurrentState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 409,
											"name": "set",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 439,
												"name": "State"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 410,
							"name": "setInternalState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 80,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 411,
									"name": "setInternalState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 412,
											"name": "set",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 441,
												"name": "InternalState"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 431,
							"name": "setResponse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 432,
									"name": "setResponse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 433,
											"name": "response",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								405,
								406,
								413
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								416,
								418,
								428,
								414,
								420,
								422,
								424,
								426,
								434,
								407,
								410,
								431
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 76,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 439,
							"name": "State",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"comment": {
								"shortText": "Type representing the state of the pagination"
							},
							"default": {
								"type": "reflection",
								"declaration": {
									"id": 438,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
											"line": 76,
											"character": 44
										}
									]
								}
							}
						},
						{
							"id": 441,
							"name": "InternalState",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"comment": {
								"shortText": "Type representing the internal state of the pagination. Internal state refers to state that does not need to be restored (eg. pagination details from the URL for example)\n"
							},
							"default": {
								"type": "reflection",
								"declaration": {
									"id": 440,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
											"line": 76,
											"character": 64
										}
									]
								}
							}
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"id": 136,
							"name": "InferredPaginator"
						},
						{
							"type": "reference",
							"id": 472,
							"name": "Paginator"
						}
					]
				},
				{
					"id": 442,
					"name": "PaginatorInterfaceClass",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 469,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 470,
									"name": "new PaginatorInterfaceClass",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 471,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 468,
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Function.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.constructor"
							}
						},
						{
							"id": 462,
							"name": "arguments",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 304,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.arguments"
							}
						},
						{
							"id": 463,
							"name": "caller",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 305,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Function",
								"package": "typescript",
								"name": "Function"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.caller"
							}
						},
						{
							"id": 461,
							"name": "length",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.length"
							}
						},
						{
							"id": 464,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Returns the name of the function. Function names are read-only and can not be changed."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/node_modules/typescript/lib/lib.es2015.core.d.ts",
									"line": 97,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.name"
							}
						},
						{
							"id": 460,
							"name": "prototype",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 300,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.prototype"
							}
						},
						{
							"id": 465,
							"name": "[hasInstance]",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 466,
									"name": "[hasInstance]",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Determines whether the given value inherits from this function if this function was used\nas a constructor function.",
										"text": "A constructor function can control which objects are recognized as its instances by\n'instanceof' by overriding this method.\n"
									},
									"parameters": [
										{
											"id": 467,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Function.__@hasInstance@71"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.__@hasInstance@71"
							}
						},
						{
							"id": 446,
							"name": "apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 447,
									"name": "apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Calls the function, substituting the specified object for the this value of the function, and the specified array for the arguments of the function."
									},
									"parameters": [
										{
											"id": 448,
											"name": "thisArg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The object to be used as the this object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 449,
											"name": "argArray",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"comment": {
												"shortText": "A set of arguments to be passed to the function.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Function.apply"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.apply"
							}
						},
						{
							"id": 454,
							"name": "bind",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 455,
									"name": "bind",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "For a given function, creates a bound function that has the same body as the original function.\nThe this object of the bound function is associated with the specified object, and has the specified initial parameters."
									},
									"parameters": [
										{
											"id": 456,
											"name": "thisArg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "An object to which the this keyword can refer inside the new function."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 457,
											"name": "argArray",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isRest": true
											},
											"comment": {
												"shortText": "A list of arguments to be passed to the new function.\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Function.bind"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.bind"
							}
						},
						{
							"id": 450,
							"name": "call",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 451,
									"name": "call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Calls a method of an object, substituting another object for the current object."
									},
									"parameters": [
										{
											"id": 452,
											"name": "thisArg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The object to be used as the current object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 453,
											"name": "argArray",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isRest": true
											},
											"comment": {
												"shortText": "A list of arguments to be passed to the method.\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Function.call"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.call"
							}
						},
						{
							"id": 443,
							"name": "getPaginationState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 444,
									"name": "getPaginationState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 445,
											"name": "requestDetails",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 397,
												"name": "PaginationRequestDetails"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": false
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										]
									}
								}
							]
						},
						{
							"id": 458,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 459,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of a function."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Function.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								469
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								462,
								463,
								461,
								464,
								460
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								465,
								446,
								454,
								450,
								443,
								458
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 96,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 468,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 404,
								"name": "PaginatorInterface"
							},
							"default": {
								"type": "reference",
								"id": 404,
								"name": "PaginatorInterface"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Function",
							"package": "typescript",
							"name": "Function"
						}
					]
				},
				{
					"id": 397,
					"name": "PaginationRequestDetails",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "eg. the return value from [Endpoint.execute](doc:Endpoint#method-execute)",
						"tags": [
							{
								"tag": "expand-properties",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 27,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 398,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 403,
									"name": "decodedBody",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The value returned by `decodedBody`. See [Endpoint.execute](doc:Endpoint#method-execute).",
										"text": "This may be a sub-key of the data returned by `Endpoint.execute`, eg. if the `path` option is used in\n[paginationMiddleware](doc:paginationMiddleware). eg. If `decodedBody` from the `Endpoint` was\n\n```json\n{\n    users: {\n        count: 10,\n        results: [...],\n    }\n    extraDetails: {...}\n}\n```\n\nand `paginationMiddleware` was used with `path: 'users'` then `decodedBody` would be:\n\n```json\n{\n    count: 10,\n    results: [...]\n}\n```\n"
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
											"line": 69,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 399,
									"name": "query",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Any query string parameters"
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
											"line": 31,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"qualifiedName": "Record",
										"package": "typescript",
										"name": "Record"
									}
								},
								{
									"id": 402,
									"name": "response",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The `Response` object, if available"
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
											"line": 43,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Response",
										"package": "typescript",
										"name": "Response"
									}
								},
								{
									"id": 401,
									"name": "url",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Resolved URL"
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
											"line": 39,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 400,
									"name": "urlArgs",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Any arguments used to resolve URL"
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
											"line": 35,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"qualifiedName": "Record",
										"package": "typescript",
										"name": "Record"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										403,
										399,
										402,
										401,
										400
									]
								}
							],
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 27,
									"character": 39
								}
							]
						}
					}
				},
				{
					"id": 392,
					"name": "PaginatorRequestOptions",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "An object containing the below properties in addition to those accepted by [fetch init](https://developer.mozilla.org/en-US/docs/Web/API/fetch#parameters)",
						"tags": [
							{
								"tag": "expand-properties",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 6,
							"character": 12
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"qualifiedName": "RequestInit",
										"package": "typescript",
										"name": "RequestInit"
									},
									{
										"type": "literal",
										"value": "headers"
									}
								],
								"qualifiedName": "Omit",
								"package": "typescript",
								"name": "Omit"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 393,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 394,
											"name": "headers",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Any headers to add to the request. You can unset default headers that might be specified in the default\n`Endpoint.defaultConfig.requestInit` by setting the value to `undefined`."
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
													"line": 11,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "HeadersInit",
														"package": "typescript",
														"name": "HeadersInit"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"qualifiedName": "Record",
														"package": "typescript",
														"name": "Record"
													}
												]
											}
										},
										{
											"id": 396,
											"name": "query",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Any query request parameters"
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
													"line": 19,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "boolean"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										},
										{
											"id": 395,
											"name": "urlArgs",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Any arguments for the [URL](doc:UrlPattern)"
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
													"line": 15,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												394,
												396,
												395
											]
										}
									],
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
											"line": 6,
											"character": 69
										}
									]
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						472
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						404,
						442
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						397,
						392
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
					"line": 6,
					"character": 0
				}
			]
		},
		{
			"id": 523,
			"name": "pagination/usePaginator",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 524,
					"name": "PaginatorClassProvider",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 525,
							"name": "getPaginatorClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 526,
									"name": "getPaginatorClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 442,
												"typeArguments": [
													{
														"type": "reference",
														"id": 527,
														"name": "T"
													}
												],
												"name": "PaginatorInterfaceClass"
											}
										]
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								525
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/usePaginator.ts",
							"line": 4,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 527,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 404,
								"name": "PaginatorInterface"
							}
						}
					]
				},
				{
					"id": 528,
					"name": "usePaginator",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"originalName": "default",
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/usePaginator.ts",
							"line": 28,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 529,
							"name": "usePaginator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Hook to help manage paginator state. An instance of the specified paginator is created with provided\nstate setter or a default setter if none provided. You only need to provide a state setter if you\nwant to store the state somewhere external eg. from URL query parameters.",
								"tags": [
									{
										"tag": "menu-group",
										"text": "Pagination"
									},
									{
										"tag": "extract-docs",
										"text": "\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 532,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 404,
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 530,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 531,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											},
											{
												"type": "reference",
												"id": 532,
												"name": "T"
											}
										],
										"name": "PaginatorInterface"
									}
								},
								{
									"id": 533,
									"name": "PaginatorState",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 534,
									"name": "paginatorClassOrProvider",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Must either be an object with a `getPaginatorClass` method (eg.\n[Endpoint](doc:Endpoint)) or a [Paginator](doc:Paginator) class. This class defines how pagination is\nhandled."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 442,
												"typeArguments": [
													{
														"type": "reference",
														"id": 532,
														"name": "T"
													}
												],
												"name": "PaginatorInterfaceClass"
											},
											{
												"type": "reference",
												"id": 524,
												"typeArguments": [
													{
														"type": "reference",
														"id": 532,
														"name": "T"
													}
												],
												"name": "PaginatorClassProvider"
											}
										]
									}
								},
								{
									"id": 535,
									"name": "currentStatePair",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "A tuple of current state and a state setter function. If not provided state\nis handled internally in usePaginator. You can pass `useState()` to this parameter.\n"
									},
									"type": {
										"type": "tuple",
										"elements": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reference",
														"id": 533,
														"name": "PaginatorState"
													}
												]
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 536,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 537,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 538,
																	"name": "value",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"id": 533,
																		"name": "PaginatorState"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 532,
								"name": "T"
							}
						},
						{
							"id": 539,
							"name": "usePaginator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 540,
									"name": "PaginatorState",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 541,
									"name": "paginatorClassOrProvider",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "literal",
										"value": null
									}
								},
								{
									"id": 542,
									"name": "currentStatePair",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "tuple",
										"elements": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reference",
														"id": 540,
														"name": "PaginatorState"
													}
												]
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 543,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 544,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 545,
																	"name": "value",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"id": 540,
																		"name": "PaginatorState"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "literal",
								"value": null
							}
						},
						{
							"id": 546,
							"name": "usePaginator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 549,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 404,
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 547,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 548,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											},
											{
												"type": "reference",
												"id": 549,
												"name": "T"
											}
										],
										"name": "PaginatorInterface"
									}
								},
								{
									"id": 550,
									"name": "PaginatorState",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 551,
									"name": "paginatorClassOrProvider",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 442,
												"typeArguments": [
													{
														"type": "reference",
														"id": 549,
														"name": "T"
													}
												],
												"name": "PaginatorInterfaceClass"
											},
											{
												"type": "reference",
												"id": 524,
												"typeArguments": [
													{
														"type": "reference",
														"id": 549,
														"name": "T"
													}
												],
												"name": "PaginatorClassProvider"
											}
										]
									}
								},
								{
									"id": 552,
									"name": "currentStatePair",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "tuple",
										"elements": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reference",
														"id": 550,
														"name": "PaginatorState"
													}
												]
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 553,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 554,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 555,
																	"name": "value",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"id": 550,
																		"name": "PaginatorState"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 549,
										"name": "T"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						524
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						528
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/pagination/usePaginator.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 556,
			"name": "time",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 577,
					"name": "InvalidTimeError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 587,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 588,
									"name": "new InvalidTimeError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 589,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 577,
										"name": "InvalidTimeError"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Error.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.constructor"
							}
						},
						{
							"id": 591,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1023,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.message"
							}
						},
						{
							"id": 590,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1022,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.name"
							}
						},
						{
							"id": 592,
							"name": "stack",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1024,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.stack"
							}
						},
						{
							"id": 586,
							"name": "stackTraceLimit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/node_modules/@types/node/globals.d.ts",
									"line": 117,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.stackTraceLimit"
							}
						},
						{
							"id": 578,
							"name": "captureStackTrace",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 579,
									"name": "captureStackTrace",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Create .stack property on a target object"
									},
									"parameters": [
										{
											"id": 580,
											"name": "targetObject",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 581,
											"name": "constructorOpt",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Function",
												"package": "typescript",
												"name": "Function"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Error.captureStackTrace"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.captureStackTrace"
							}
						},
						{
							"id": 582,
							"name": "prepareStackTrace",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/node_modules/@types/node/globals.d.ts",
									"line": 115,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 583,
									"name": "prepareStackTrace",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Optional override for formatting stack traces",
										"tags": [
											{
												"tag": "see",
												"text": "https://github.com/v8/v8/wiki/Stack%20Trace%20API#customizing-stack-traces\n"
											}
										]
									},
									"parameters": [
										{
											"id": 584,
											"name": "err",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Error",
												"package": "typescript",
												"name": "Error"
											}
										},
										{
											"id": 585,
											"name": "stackTraces",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"qualifiedName": "NodeJS.CallSite",
													"package": "@types/node",
													"name": "CallSite"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Error.prepareStackTrace"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.prepareStackTrace"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								587
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								591,
								590,
								592,
								586
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								578,
								582
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/time.ts",
							"line": 17,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Error",
							"package": "typescript",
							"name": "Error"
						}
					]
				},
				{
					"id": 573,
					"name": "formatTime",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/time.ts",
							"line": 116,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 574,
							"name": "formatTime",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Format the parts of a time - as returned by [parseTime](doc:parseTime) - as a string using\n[toLocaleString](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleString#using_options).",
								"text": "Note that while you can pass through `options.timeZone` this may be inaccurate if `parts.timezoneOffset` isn't\nsupplied.\n",
								"tags": [
									{
										"tag": "extract-docs",
										"text": ""
									},
									{
										"tag": "menu-group",
										"text": "Time\n"
									}
								]
							},
							"parameters": [
								{
									"id": 575,
									"name": "parts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 557,
												"name": "TimeParts"
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										]
									}
								},
								{
									"id": 576,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 564,
										"name": "TimeFormatOptions"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 570,
					"name": "parseTime",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/time.ts",
							"line": 49,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 571,
							"name": "parseTime",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Parse a string into its constituent time parts",
								"text": "Returns an object containing the `hour`, `minute`, `second`, `millisecond` and optional `timezone` values.\n\nAccepts input of the form `H:MM[:SS[:.mmm:[+TZ]]]` where `H` is hours, `MM` is minutes, `SS` is seconds, `mmm` is\nmilliseconds and `+TZ` is the timezone (eg. +10:00).\n\nSeconds & milliseconds are optional and will default to 0 if not in the string, timezone is optional and will be\nleft as undefined if not specified.\n\nNOTE: If you pass a `Date` object then the timezone offset will always be whatever the local browser/env timezone\nis (ie. it's not possible to have a javascript `Date` object in another timezone).\n\n```js\nparseTime(\"3:55\")\n// { hour: 3, minute: 55, seconds: 0, milliseconds: 0 }\nparseTime(\"03:55:20\")\n// { hour: 3, minute: 55, seconds: 20, milliseconds: 0 }\nparseTime(\"03:55:20.600\")\n// { hour: 3, minute: 55, seconds: 20, milliseconds: 600 }\nparseTime(\"03:55:20.600+10:00\")\n// { hour: 3, minute: 55, seconds: 20, milliseconds: 600, timezoneOffset: -600 }\n```\n",
								"tags": [
									{
										"tag": "extract-docs",
										"text": ""
									},
									{
										"tag": "menu-group",
										"text": "Time\n"
									}
								]
							},
							"parameters": [
								{
									"id": 572,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The string value to parse\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 557,
								"name": "TimeParts"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						577
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						573,
						570
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/time.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 593,
			"name": "useAsync",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 618,
					"name": "UseAsyncOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "expand-properties",
								"text": ""
							}
						]
					},
					"children": [
						{
							"id": 620,
							"name": "args",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Arguments to be passed to asyncFn when it is called. Can be empty. If you are using `trigger` of\n`MANUAL` then it's usually simpler to just pass the arguments in `fn` manually (eg. by defining\nan arrow function inline). When using other values of `trigger` the value of `args` is compared\nand will trigger a call to `fn` when a change is detected according to the comparison logic of the\nselected `trigger`."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/useAsync.ts",
									"line": 109,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						},
						{
							"id": 622,
							"name": "onError",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Called when async function errors. Passed the error returned from async function.",
								"text": "See note above on `onSuccess` for behaviour when component has unmounted.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/useAsync.ts",
									"line": 126,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 600,
								"typeArguments": [
									{
										"type": "reference",
										"id": 624,
										"name": "ErrorT"
									}
								],
								"name": "OnError"
							}
						},
						{
							"id": 621,
							"name": "onSuccess",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Called when async function resolves successfully. Is passed a single parameter which\nis the result from the async function.",
								"text": "**NOTE:** If your component unmounts before the promise resolves this function\nwill NOT be called. This is to avoid the general case of calling React\nstate transition functions on an unmounted component. If you want the\nmethod to be called regardless then attach your own callbacks to the\npromise when you call `run` or in the async function definition itself.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/useAsync.ts",
									"line": 120,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 596,
								"typeArguments": [
									{
										"type": "reference",
										"id": 623,
										"name": "ResultT"
									}
								],
								"name": "OnSuccess"
							}
						},
						{
							"id": 619,
							"name": "trigger",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Determines when the function is called. Defaults to `MANUAL`.",
								"text": "**NOTE**: If changing from MANUAL then the function will be called immediately regardless\n\n**useAsync.MANUAL (default)** - only called when you explicitly call `run`\n\n**useAsync.SHALLOW** - called whenever a shallow equality check fails. Compares previous async function,\nand `option.args`. Passing an inline function (eg. `useAsync(() => ...)`) or an inline object\nto args (eg. `useAsync(fn, { args: { filter: 1 } })`) with this option will result in an\ninfinite loop because each render dynamically creates a new object and only object identity is checked;\nuse `useMemo` or `useCallback` in these cases.\n\n**useAsync.DEEP** - called whenever a deep equality check fails. Compares previous async function and\n`option.args`. Slower than `shallow` but works with objects that may change every render. Passing an\ninline function (eg. `useAsync(() => ...)`) with this option will result in an infinite loop as a new\nfunction is created each render and a deep equality check on this will always fail; use `useCallback` in\nthose cases.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/useAsync.ts",
									"line": 101,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "MANUAL"
									},
									{
										"type": "literal",
										"value": "DEEP"
									},
									{
										"type": "literal",
										"value": "SHALLOW"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								620,
								622,
								621,
								619
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/useAsync.ts",
							"line": 81,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 623,
							"name": "ResultT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"comment": {
								"shortText": "@inherit"
							}
						},
						{
							"id": 624,
							"name": "ErrorT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"comment": {
								"shortText": "@inherit\n"
							}
						}
					]
				},
				{
					"id": 625,
					"name": "UseAsyncReturnObject",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/useAsync.ts",
							"line": 156,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 636,
							"name": "ResultT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"comment": {
								"shortText": "@inherit"
							}
						},
						{
							"id": 637,
							"name": "ErrorT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"comment": {
								"shortText": "@inherit\n"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 626,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 628,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Set to the rejected value of the promise. Only one of `error` and `result` can be set. If\n`isLoading` is true consider this stale (ie. based on _previous_ props). This can be useful\nwhen you want the UI to show the previous value until the next value is ready.",
										"text": "ROFL\n\n```tsx\nexport default function MyComponent() {\n // HEHE\n const y = 5 + 5;\n return <div>test</div>\n}\n```\n"
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useAsync.ts",
											"line": 176,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 637,
												"name": "ErrorT"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 627,
									"name": "isLoading",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "True when async call is in progress."
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useAsync.ts",
											"line": 160,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 630,
									"name": "response",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"tags": [
											{
												"tag": "deprecated",
												"text": "Use `result` instead\n"
											}
										]
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useAsync.ts",
											"line": 187,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 636,
												"name": "ResultT"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 629,
									"name": "result",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Set to the resolved value of promise. Only one of `error` and `result` can be set. If\n`isLoading` is true consider this stale (ie. based on _previous_ props). This can be useful\nwhen you want the UI to show the previous value until the next value is ready (for example showing\nthe previous page of a paginated table with a loading indicator while next page is loading)."
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useAsync.ts",
											"line": 183,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 636,
												"name": "ResultT"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 634,
									"name": "reset",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useAsync.ts",
											"line": 203,
											"character": 4
										}
									],
									"signatures": [
										{
											"id": 635,
											"name": "reset",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "When called will set both result or error to null. Will not immediately trigger\na call to the function but subsequent changes to `fn` or `options.args` will\naccording to the value of `trigger`."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 631,
									"name": "run",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useAsync.ts",
											"line": 197,
											"character": 4
										}
									],
									"signatures": [
										{
											"id": 632,
											"name": "run",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "A function to manually trigger the function. If `options.trigger` is `useAsync.MANUAL`\ncalling this function is the only way to trigger the function. You can pass\narguments to `run` which will override the defaults. If no arguments are passed then\n`options.args` will be passed by default (if supplied).",
												"text": "This function will return a promise that resolves/rejects to same value\nresolved/rejected from the async function.\n"
											},
											"parameters": [
												{
													"id": 633,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isRest": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 636,
														"name": "ResultT"
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										628,
										627,
										630,
										629
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										634,
										631
									]
								}
							],
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/useAsync.ts",
									"line": 156,
									"character": 52
								}
							]
						}
					}
				},
				{
					"id": 638,
					"name": "default",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "query",
								"queryType": {
									"type": "reference",
									"id": 594,
									"name": "useAsync"
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 639,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 641,
											"name": "DEEP",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/src/useAsync.ts",
													"line": 505,
													"character": 13
												}
											],
											"type": {
												"type": "literal",
												"value": "DEEP"
											}
										},
										{
											"id": 640,
											"name": "MANUAL",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/src/useAsync.ts",
													"line": 504,
													"character": 13
												}
											],
											"type": {
												"type": "literal",
												"value": "MANUAL"
											}
										},
										{
											"id": 642,
											"name": "SHALLOW",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/src/useAsync.ts",
													"line": 506,
													"character": 13
												}
											],
											"type": {
												"type": "literal",
												"value": "SHALLOW"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												641,
												640,
												642
											]
										}
									]
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						618
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						625
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						638
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/useAsync.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 643,
			"name": "useAsyncListing",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 658,
					"name": "UseAsyncListingProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "expand-properties",
								"text": ""
							},
							{
								"tag": "export-in-docs",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
							"line": 25,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 667,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 659,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 662,
									"name": "accumulatePages",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Whether to accumulate pages as more results are fetched. For example\nif the first page of results is returned, then the next page is fetched\nthen the combined results for the first two pages will be resolved.",
										"text": "This resets whenever `query` changes or if pagination state changes\nto anything other than the next page.\n\nIf this is true you must specify `paginator`.\n"
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
											"line": 51,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 663,
									"name": "paginator",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Optional paginator if result is paginated. This will be monitored for\nany state changes which will trigger a call to `execute`.",
										"text": "Required if `accumulatePages` is true.\n"
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
											"line": 58,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 404,
												"name": "PaginatorInterface"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 661,
									"name": "query",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Any query string parameters for the request"
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
											"line": 40,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"qualifiedName": "Record",
										"package": "typescript",
										"name": "Record"
									}
								},
								{
									"id": 660,
									"name": "trigger",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "When to trigger the fetch. Defaults to `DEEP` which means whenever a deep\nequality check on `query` or `paginator` state fails it will refetch.",
										"text": "If set to `MANUAL` nothing will happen until it changes to `DEEP` or you\ncall the returned `run` function. You can use this to defer execution until\nthe value is required.\n\nDefaults to 'DEEP'.\n"
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
											"line": 36,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "MANUAL"
											},
											{
												"type": "literal",
												"value": "DEEP"
											}
										]
									}
								},
								{
									"id": 664,
									"name": "execute",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
											"line": 67,
											"character": 4
										}
									],
									"signatures": [
										{
											"id": 665,
											"name": "execute",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Asynchronous function that returns the result for the query. Passed an\nobject with `query` and `paginator` keys.",
												"text": "Note that when `trigger` is `DEEP` changes to this function will cause it\nto be called again so you must memoize it (eg. with `useCallback`) if it's\ndefined in your component or hook.\n"
											},
											"parameters": [
												{
													"id": 666,
													"name": "props",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 644,
														"name": "UseAsyncListingExecuteProps"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 667,
														"name": "T"
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										662,
										663,
										661,
										660
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										664
									]
								}
							],
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
									"line": 25,
									"character": 38
								}
							]
						}
					}
				},
				{
					"id": 668,
					"name": "UseAsyncListingReturn",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "export-in-docs",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
							"line": 102,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 678,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 648,
										"typeArguments": [
											{
												"type": "reference",
												"id": 678,
												"name": "T"
											}
										],
										"name": "UseAsyncListingReturnCommon"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 669,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 670,
													"name": "error",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Until first call has resolved neither error nor result will be set"
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
															"line": 107,
															"character": 10
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												},
												{
													"id": 671,
													"name": "result",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
															"line": 108,
															"character": 10
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														670,
														671
													]
												}
											],
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
													"line": 103,
													"character": 40
												}
											]
										}
									}
								]
							},
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 648,
										"typeArguments": [
											{
												"type": "reference",
												"id": 678,
												"name": "T"
											}
										],
										"name": "UseAsyncListingReturnCommon"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 672,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 673,
													"name": "error",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Set to the rejected value of the promise. Only one of `error` and `result` can be set. If\n`isLoading` is true consider this stale (ie. based on _previous_ props). This can be useful\nwhen you want the UI to show the previous value until the next value is ready."
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
															"line": 116,
															"character": 10
														}
													],
													"type": {
														"type": "reference",
														"qualifiedName": "Error",
														"package": "typescript",
														"name": "Error"
													}
												},
												{
													"id": 674,
													"name": "result",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Result will not be set when error is set"
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
															"line": 120,
															"character": 10
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														673,
														674
													]
												}
											],
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
													"line": 110,
													"character": 40
												}
											]
										}
									}
								]
							},
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 648,
										"typeArguments": [
											{
												"type": "reference",
												"id": 678,
												"name": "T"
											}
										],
										"name": "UseAsyncListingReturnCommon"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 675,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 676,
													"name": "error",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Error will not be set when result is set"
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
															"line": 126,
															"character": 10
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												},
												{
													"id": 677,
													"name": "result",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "The value returned from execute"
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
															"line": 130,
															"character": 10
														}
													],
													"type": {
														"type": "reference",
														"id": 678,
														"name": "T"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														676,
														677
													]
												}
											],
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
													"line": 122,
													"character": 40
												}
											]
										}
									}
								]
							}
						]
					}
				},
				{
					"id": 679,
					"name": "useAsyncListing",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"originalName": "default",
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
							"line": 144,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 680,
							"name": "useAsyncListing",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Execute an asynchronous call and return the value which can optionally be paginated.",
								"text": "If the result is paginated you can pass `paginator`. Whenever the paginator state\nis changed the function will be called unless `trigger` is `MANUAL`. You can pass\n`accumulatePages` to accumulate results for sequential pages returned from `execute`.\nThis is useful to implement things like infinite scroll. If a non-sequential page\nis accessed or `query` changes then accumulated results will be cleared.\n",
								"tags": [
									{
										"tag": "extract-docs",
										"text": "\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 681,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 682,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 658,
										"typeArguments": [
											{
												"type": "reference",
												"id": 681,
												"name": "T"
											}
										],
										"name": "UseAsyncListingProps"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 668,
								"typeArguments": [
									{
										"type": "reference",
										"id": 681,
										"name": "T"
									}
								],
								"name": "UseAsyncListingReturn"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						658,
						668
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						679
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 683,
			"name": "useAsyncValue",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 692,
					"name": "UseAsyncValuePropsMulti",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "expand-properties",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
							"line": 83,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 698,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 699,
							"name": "U",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 54,
								"name": "Id"
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 698,
										"name": "T"
									},
									{
										"type": "reference",
										"id": 699,
										"name": "U"
									}
								],
								"name": "CommonProps"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 693,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 694,
											"name": "ids",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Array of ids to resolve values for or null if nothing yet to resolve",
												"text": "If you need to resolve a single value use the other form documented above\npassing `id` instead\n"
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
													"line": 90,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 699,
															"name": "U"
														}
													},
													{
														"type": "literal",
														"value": null
													}
												]
											}
										},
										{
											"id": 695,
											"name": "resolve",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
													"line": 95,
													"character": 4
												}
											],
											"signatures": [
												{
													"id": 696,
													"name": "resolve",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Resolve the value for the provided IDs. Function is passed a single parameter\nbeing `ids`"
													},
													"parameters": [
														{
															"id": 697,
															"name": "ids",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 699,
																	"name": "U"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 698,
																	"name": "T"
																}
															}
														],
														"qualifiedName": "Promise",
														"package": "typescript",
														"name": "Promise"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												694
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												695
											]
										}
									],
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
											"line": 83,
											"character": 75
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 684,
					"name": "UseAsyncValuePropsSingle",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "expand-properties",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
							"line": 61,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 690,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 691,
							"name": "U",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 54,
								"name": "Id"
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 690,
										"name": "T"
									},
									{
										"type": "reference",
										"id": 691,
										"name": "U"
									}
								],
								"name": "CommonProps"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 685,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 686,
											"name": "id",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Single `id` for value to fetch or null if nothing yet to resolve.",
												"text": "If you need to resolve multiple values use the other form documented\nbelow passing `ids` instead.\n"
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
													"line": 68,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 691,
														"name": "U"
													},
													{
														"type": "literal",
														"value": null
													}
												]
											}
										},
										{
											"id": 687,
											"name": "resolve",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
													"line": 77,
													"character": 4
												}
											],
											"signatures": [
												{
													"id": 688,
													"name": "resolve",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Resolve the value for the provided ID. Function is passed a single parameter\nbeing `id`.",
														"text": "Note that when `trigger` is `DEEP` changes to this function will cause it\nto be called again so you must memoize it (eg. with `useCallback`) if it's\ndefined in your component or hook.\n"
													},
													"parameters": [
														{
															"id": 689,
															"name": "id",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 691,
																"name": "U"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 690,
																"name": "T"
															}
														],
														"qualifiedName": "Promise",
														"package": "typescript",
														"name": "Promise"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												686
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												687
											]
										}
									],
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
											"line": 61,
											"character": 76
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 700,
					"name": "UseAsyncValueReturn",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
							"line": 98,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 710,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 701,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 702,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Set to the rejected value of the promise. Only one of `error` and `value` can be set. If\n`isLoading` is true consider this stale (ie. based on _previous_ props). This can be useful\nwhen you want the UI to show the previous value until the next value is ready."
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
											"line": 104,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"qualifiedName": "Error",
												"package": "typescript",
												"name": "Error"
											}
										]
									}
								},
								{
									"id": 703,
									"name": "isLoading",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "True while `resolve` call is in progress."
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
											"line": 108,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 704,
									"name": "value",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The resolved value"
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
											"line": 112,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 710,
												"name": "T"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 708,
									"name": "reset",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
											"line": 130,
											"character": 4
										}
									],
									"signatures": [
										{
											"id": 709,
											"name": "reset",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "When called will set both result and error to null. Will not immediately trigger\na call to the action but subsequent changes to query or paginator will according\nto the value of `trigger`.",
												"text": "If value is found in `existingValues` then it will still be returned even if\nyou call `reset` - `reset` only clears values that are returned from `resolve`.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 705,
									"name": "run",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
											"line": 121,
											"character": 4
										}
									],
									"signatures": [
										{
											"id": 706,
											"name": "run",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "A function to manually trigger the action. If `options.trigger` is `MANUAL`\ncalling this function is the only way to trigger the action.",
												"text": "This function will return a promise that resolves/rejects to same value\nreturned by `execute`. If `accumulatePages` is set the value returned is\nthe accumulated value.\n"
											},
											"parameters": [
												{
													"id": 707,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isRest": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										702,
										703,
										704
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										708,
										705
									]
								}
							],
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
									"line": 98,
									"character": 37
								}
							]
						}
					}
				},
				{
					"id": 711,
					"name": "useAsyncValue",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"originalName": "default",
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
							"line": 148,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 712,
							"name": "useAsyncValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Resolve a value from an id using an async function.",
								"text": "For the specified `id` the `resolve` function will be called and should\nreturn the value for the specified id.\n\nIf `existingValues` is provided this will be consulted first before calling\n`resolve`. This is useful when you have a list of values that may or\nmay not have the data you care about. If it's there then the value will\nbe returned immediately.\n\nFor multiple values see documentation below.\n",
								"tags": [
									{
										"tag": "extract-docs",
										"text": "\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 713,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 714,
									"name": "U",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 54,
										"name": "Id"
									}
								}
							],
							"parameters": [
								{
									"id": 715,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 684,
										"typeArguments": [
											{
												"type": "reference",
												"id": 713,
												"name": "T"
											},
											{
												"type": "reference",
												"id": 714,
												"name": "U"
											}
										],
										"name": "UseAsyncValuePropsSingle"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 700,
								"typeArguments": [
									{
										"type": "reference",
										"id": 713,
										"name": "T"
									}
								],
								"name": "UseAsyncValueReturn"
							}
						},
						{
							"id": 716,
							"name": "useAsyncValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Resolve values from an array of ids using an async function.",
								"text": "For the specified array of `ids` the `resolve` function will be called\nand should return an array of the same size with each entry being the resolved\nvalue for the corresponding id.\n\nIf `existingValues` is provided this will be consulted first before calling\n`resolve`. This is useful when you have a list of values that may or\nmay not have the data you care about. If it's there then the values will\nbe returned immediately. Note that if any of the ids are missing from\n`existingValues` then it will be ignored and a call to `resolve` will be made\nrequesting values for all `ids`.\n"
							},
							"typeParameter": [
								{
									"id": 717,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 718,
									"name": "U",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 54,
										"name": "Id"
									}
								}
							],
							"parameters": [
								{
									"id": 719,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 692,
										"typeArguments": [
											{
												"type": "reference",
												"id": 717,
												"name": "T"
											},
											{
												"type": "reference",
												"id": 718,
												"name": "U"
											}
										],
										"name": "UseAsyncValuePropsMulti"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 700,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 717,
											"name": "T"
										}
									}
								],
								"name": "UseAsyncValueReturn"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						692,
						684,
						700
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						711
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 720,
			"name": "useChangeObserver",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 721,
					"name": "ChangeObserverOptions",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "expand-properties",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/useChangeObserver.ts",
							"line": 7,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 728,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 722,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 727,
									"name": "disabled",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "If true then no changes will be detected. When this changes from true to false the\ncallback won't be called until the next change in value. This is useful for disabling\nthe callback when no value is yet available eg. when waiting for first response from an\nAPI."
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useChangeObserver.ts",
											"line": 21,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 723,
									"name": "isEqual",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useChangeObserver.ts",
											"line": 14,
											"character": 4
										}
									],
									"signatures": [
										{
											"id": 724,
											"name": "isEqual",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Function to determine equality between items. If not provided the default will do shallow\nequality checks with specific support for an `isEqual` function on objects (eg. if an object\nimplements `isEqual` it will be called instead of doing any other comparisons. This is\nsupported by [ViewModel](doc:viewModelFactory)."
											},
											"parameters": [
												{
													"id": 725,
													"name": "a",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 728,
														"name": "T"
													}
												},
												{
													"id": 726,
													"name": "b",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 728,
														"name": "T"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										727
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										723
									]
								}
							],
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/useChangeObserver.ts",
									"line": 7,
									"character": 39
								}
							]
						}
					}
				},
				{
					"id": 729,
					"name": "useChangeObserver",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"originalName": "default",
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/useChangeObserver.ts",
							"line": 57,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 730,
							"name": "useChangeObserver",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Call a function whenever a value changes.",
								"text": "This works by monitoring a value passed in and tracking it's last value. Whenever\nthe value changes the provided callback will be called with the last and current\nvalue.\n\n```jsx\nexport default function Example() {\n  const [count, setCount] = useState(0);\n  useChangeObserver(count, () => {\n    console.log(`Changed from ${prev} to ${next}.`));\n  }\n  return <>\n    Count: {count}\n    <button onClick={() => setCount(c => c+1)}>+1</button>\n  </>;\n}\n```\n",
								"returns": "Has no return value\n",
								"tags": [
									{
										"tag": "extract-docs",
										"text": "\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 731,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 732,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The value to monitor for changes. This can be any type but for complex\ntypes you will need to provide your own `isEqual` function. For simple shallow\ncomparisons the default function will suffice (eg. it will compare each element in\nan array or each value on an object 1 level deep)."
									},
									"type": {
										"type": "reference",
										"id": 731,
										"name": "T"
									}
								},
								{
									"id": 733,
									"name": "onChange",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The function to call when `value` changes. This is passed the previous\nvalue and the current value.\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 734,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 735,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 736,
															"name": "lastValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 731,
																"name": "T"
															}
														},
														{
															"id": 737,
															"name": "nextValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 731,
																"name": "T"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								},
								{
									"id": 738,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 721,
										"typeArguments": [
											{
												"type": "reference",
												"id": 731,
												"name": "T"
											}
										],
										"name": "ChangeObserverOptions"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						721
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						729
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/useChangeObserver.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 739,
			"name": "useListChangeObserver",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 749,
					"name": "ADD",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/useListChangeObserver.ts",
							"line": 4,
							"character": 13
						}
					],
					"type": {
						"type": "literal",
						"value": "ADD"
					},
					"defaultValue": "'ADD'"
				},
				{
					"id": 751,
					"name": "DELETE",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/useListChangeObserver.ts",
							"line": 6,
							"character": 13
						}
					],
					"type": {
						"type": "literal",
						"value": "DELETE"
					},
					"defaultValue": "'DELETE'"
				},
				{
					"id": 750,
					"name": "UPDATE",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/useListChangeObserver.ts",
							"line": 5,
							"character": 13
						}
					],
					"type": {
						"type": "literal",
						"value": "UPDATE"
					},
					"defaultValue": "'UPDATE'"
				},
				{
					"id": 752,
					"name": "useListChangeObserver",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"originalName": "default",
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/useListChangeObserver.ts",
							"line": 121,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 753,
							"name": "useListChangeObserver",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Call a function whenever values in a list change. This differs from `useChangeObserver` by\nallowing you to choose what changes you get (additions, updates, deletions) and to be passed the\nchanged items in the callback. In order to achieve this each item in the array needs to have a\nunique ID which is obtained by calling the `options.getId` function. The default implementation will\nlook for a `_key` or `id` property and return this, otherwise it return the value as is. This default\nimplementation is compatible with [ViewModel](doc:viewModelFactory) so you can pass lists of\nrecords returned from [useViewModelCache](doc:useViewModelCache).",
								"text": "```jsx\nexport default function UserListView() {\n  const { data, revalidate, isValidating } = useEndpoint(User.endpoints.list);\n  // Refetch data whenever underlying cache changes\n  const allRecords = useViewModelCache(User, cache => cache.getAll(fieldList));\n  // NOTE: Usually you don't want multiple useListChangeObserver's on the exact same\n  // subset of data as you will trigger redundant ajax queries.\n  // if a record is updated & saved elsewhere, then useViewModelCache will return new\n  // data which triggers useListChangeObserver. We still want useListChangeObserver()\n  // to trigger the useEndpoint() revalidate because that record update may have changed the\n  // order of records or caused it to [no longer] appear in a filtered list of data.\n  // Also note that we pass false while data is being fetched from the backend\n  useListChangeObserver(!isValidating && allRecords, revalidate);\n  return <ListView records={data} />;\n}\n```\n",
								"returns": "No return value\n",
								"tags": [
									{
										"tag": "extract-docs",
										"text": "\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 754,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 755,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "An array of values to monitor for changes. A falsey value can be passed to disable\nchecks. This is the same as passing `options.disabled`. This is convenient for cases where no value\nis available yet (eg. when waiting for initial response from an API endpoint)"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "literal",
												"value": false
											},
											{
												"type": "reference",
												"id": 754,
												"name": "T"
											}
										]
									}
								},
								{
									"id": 756,
									"name": "onChange",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A method that will be called on any changes. This is passed an object of changes in the form:\n\n```\n{\n    ADD: [...],\n    UPDATE: [[<prev value>, <updated value>]...],\n    DELETE: [...],\n}\n```\nEach change type (ADD, UPDATE, DELETE) will be `false` if no value has changed.\n\nThe last and next list of records are also passed.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 754,
												"name": "T"
											}
										],
										"name": "OnChange"
									}
								},
								{
									"id": 757,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 740,
										"typeArguments": [
											{
												"type": "reference",
												"id": 754,
												"name": "T"
											}
										],
										"name": "ListChangeObserverOptions"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						749,
						751,
						750
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						752
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/useListChangeObserver.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 758,
			"name": "useMemoOne",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 759,
					"name": "ComparisonFn",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/useMemoOne.ts",
							"line": 34,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 760,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/useMemoOne.ts",
									"line": 34,
									"character": 27
								}
							],
							"signatures": [
								{
									"id": 761,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 762,
											"name": "newInputs",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 763,
											"name": "lastInputs",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						}
					}
				},
				{
					"id": 764,
					"name": "useMemoOne",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"originalName": "default",
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/useMemoOne.ts",
							"line": 47,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 765,
							"name": "useMemoOne",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "useMemo but with a stable cache and support for custom comparison operator",
								"text": "Based on https://github.com/alexreardon/use-memo-one but supports custom\ncomparison operator. See https://github.com/alexreardon/use-memo-one/issues/11\n",
								"returns": "\n"
							},
							"typeParameter": [
								{
									"id": 766,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 767,
									"name": "getResult",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Function that returns value to memoize"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 768,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 769,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 766,
														"name": "T"
													}
												}
											]
										}
									}
								},
								{
									"id": 770,
									"name": "inputs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Dependency array. When values in this change getResult is called again"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								},
								{
									"id": 771,
									"name": "compare",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Custom comparision operator. Defaults to shallow strict equality."
									},
									"type": {
										"type": "reference",
										"id": 759,
										"name": "ComparisonFn"
									},
									"defaultValue": "isEqual"
								}
							],
							"type": {
								"type": "reference",
								"id": 766,
								"name": "T"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						759
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						764
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/useMemoOne.ts",
					"line": 26,
					"character": 0
				}
			]
		},
		{
			"id": 612,
			"name": "useAsync",
			"kind": 4,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 614,
					"name": "DEEP",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 613,
					"name": "MANUAL",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 615,
					"name": "SHALLOW",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						614,
						613,
						615
					]
				}
			]
		},
		{
			"id": 600,
			"name": "OnError",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/useAsync.ts",
					"line": 141,
					"character": 10
				}
			],
			"typeParameter": [
				{
					"id": 601,
					"name": "ErrorT",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"comment": {
						"shortText": "@inherit\n"
					}
				}
			],
			"signatures": [
				{
					"id": 602,
					"name": "OnError",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Called when the async function errors"
					},
					"parameters": [
						{
							"id": 603,
							"name": "error",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "The error thrown by the async function\n"
							},
							"type": {
								"type": "reference",
								"id": 601,
								"name": "ErrorT"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 596,
			"name": "OnSuccess",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/useAsync.ts",
					"line": 133,
					"character": 10
				}
			],
			"typeParameter": [
				{
					"id": 597,
					"name": "ResultT",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"comment": {
						"shortText": "@inherit\n"
					}
				}
			],
			"signatures": [
				{
					"id": 598,
					"name": "OnSuccess",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "export-in-docs",
								"text": ""
							}
						]
					},
					"parameters": [
						{
							"id": 599,
							"name": "result",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 597,
								"name": "ResultT"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 740,
			"name": "ListChangeObserverOptions",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"tags": [
					{
						"tag": "expand-properties",
						"text": "\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/useListChangeObserver.ts",
					"line": 11,
					"character": 5
				}
			],
			"typeParameter": [
				{
					"id": 748,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"id": 721,
						"typeArguments": [
							{
								"type": "reference",
								"id": 748,
								"name": "T"
							}
						],
						"name": "ChangeObserverOptions"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 741,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 742,
									"name": "runOnAdd",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "If true then when any items are added it will call `onChange` with 'ADD'\nas the first parameter. Only applicable if value is an array."
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useListChangeObserver.ts",
											"line": 16,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 743,
									"name": "runOnDelete",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "If true then when any records are deleted it will call `onChange` with 'DELETE'\nas the first parameter. Only applicable if value is an array."
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useListChangeObserver.ts",
											"line": 21,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 744,
									"name": "runOnUpdate",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "If true then when any records are updated it will call `onChange` with 'UPDATE'\nas the first parameter. Only applicable if value is an array."
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useListChangeObserver.ts",
											"line": 26,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 745,
									"name": "getId",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useListChangeObserver.ts",
											"line": 35,
											"character": 4
										}
									],
									"signatures": [
										{
											"id": 746,
											"name": "getId",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Function to get unique ID for an item. This is used to detect modifications to\nthe list. Without this it's unknown whether an item was removed from the list of\njust changed position.",
												"text": "Support for [ViewModel](doc:viewModelFactory) is provided out of the box by checking\nfor the existence of a _key property on any object passed in.\n"
											},
											"parameters": [
												{
													"id": 747,
													"name": "item",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 748,
														"name": "T"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										742,
										743,
										744
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										745
									]
								}
							],
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/useListChangeObserver.ts",
									"line": 11,
									"character": 63
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 564,
			"name": "TimeFormatOptions",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"tags": [
					{
						"tag": "expand-properties",
						"text": "\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/time.ts",
					"line": 92,
					"character": 5
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 565,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 567,
							"name": "localeOptions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Options to pass through to [toLocaleString](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleString#using_options)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/time.ts",
									"line": 100,
									"character": 4
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"qualifiedName": "Intl.DateTimeFormatOptions",
										"package": "typescript",
										"name": "Intl.DateTimeFormatOptions"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 568,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 569,
													"name": "timeStyle",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/util/src/time.ts",
															"line": 102,
															"character": 8
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "full"
															},
															{
																"type": "literal",
																"value": "long"
															},
															{
																"type": "literal",
																"value": "medium"
															},
															{
																"type": "literal",
																"value": "short"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														569
													]
												}
											],
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/src/time.ts",
													"line": 100,
													"character": 49
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 566,
							"name": "locales",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Optional locales to use. See [using locales](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleString#using_locales) for more information."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/time.ts",
									"line": 96,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								567,
								566
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/time.ts",
							"line": 92,
							"character": 25
						}
					]
				}
			}
		},
		{
			"id": 557,
			"name": "TimeParts",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"tags": [
					{
						"tag": "expand-properties",
						"text": "\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/time.ts",
					"line": 6,
					"character": 5
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 558,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 559,
							"name": "hour",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/time.ts",
									"line": 7,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 562,
							"name": "millisecond",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/time.ts",
									"line": 10,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 560,
							"name": "minute",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/time.ts",
									"line": 8,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 561,
							"name": "second",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/time.ts",
									"line": 9,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 563,
							"name": "timezoneOffset",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The difference in minutes between a date as evaluated in the UTC time zone and the same date in the local time zone."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/time.ts",
									"line": 14,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								559,
								562,
								560,
								561,
								563
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/time.ts",
							"line": 6,
							"character": 17
						}
					]
				}
			}
		},
		{
			"id": 644,
			"name": "UseAsyncListingExecuteProps",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"tags": [
					{
						"tag": "expand-properties",
						"text": ""
					},
					{
						"tag": "export-in-docs",
						"text": "\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
					"line": 10,
					"character": 5
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 645,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 647,
							"name": "paginator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The paginator instance, if any"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 404,
										"name": "PaginatorInterface"
									}
								]
							}
						},
						{
							"id": 646,
							"name": "query",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Any query parameters"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
									"line": 14,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								647,
								646
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
							"line": 10,
							"character": 35
						}
					]
				}
			}
		},
		{
			"id": 648,
			"name": "UseAsyncListingReturnCommon",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"tags": [
					{
						"tag": "export-in-docs",
						"text": "\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
					"line": 73,
					"character": 5
				}
			],
			"typeParameter": [
				{
					"id": 657,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 649,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 650,
							"name": "isLoading",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "True while `execute` call is in progress."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
									"line": 77,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 651,
							"name": "paginator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The same `paginator` passed in to `useAsyncListing`"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
									"line": 81,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 404,
										"name": "PaginatorInterface"
									}
								]
							}
						},
						{
							"id": 655,
							"name": "reset",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
									"line": 96,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 656,
									"name": "reset",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "When called will set both result and error to null. Will not immediately trigger\na call to the action but subsequent changes to query or paginator will according\nto the value of `trigger`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 652,
							"name": "run",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
									"line": 90,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 653,
									"name": "run",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "A function to manually trigger the action. If `options.trigger` is `MANUAL`\ncalling this function is the only way to trigger the action.",
										"text": "This function will return a promise that resolves/rejects to same value\nreturned by `execute`. If `accumulatePages` is set the value returned is\nthe accumulated value.\n"
									},
									"parameters": [
										{
											"id": 654,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 657,
												"name": "T"
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								650,
								651
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								655,
								652
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
							"line": 73,
							"character": 38
						}
					]
				}
			}
		},
		{
			"id": 594,
			"name": "useAsync",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/useAsync.ts",
					"line": 277,
					"character": 9
				}
			],
			"signatures": [
				{
					"id": 604,
					"name": "useAsync",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Hook to deal with triggering async function calls and handling result / errors and loading states.",
						"text": "This can be used in two distinct modes:\n - _manual_ (`useAsync.MANUAL`) - the function is only triggered explicitly\n - _automatic_ (`useAsync.DEEP` or `useAsync.SHALLOW`) - the function is triggered initially\nand then automatically when argument values change (using a shallow or deep comparison).\n\nFor mutations you usually want _manual_ as it is triggered in response to some user action\nlike pressing a button.\n\nFor data fetching you usually want _automatic_ mode as you retrieve some data\ninitially and then refetch it when some arguments change (eg. the id for a single\nrecord or the filters for a list).\n\n## Examples\n\nFetch and render a specified github profile\n\n```js live horizontal\nfunction FollowerCount() {\n    const [user, setUser] = React.useState('octocat')\n    const { result, isLoading, error, run, reset } = useAsync(() => getGithubUser(user));\n    return (\n        <div>\n            <input value={user} onChange={e => setUser(e.target.value)} />\n            <div className=\"my-2 justify-between flex\">\n            <button onClick={run} disabled={isLoading} className=\"btn-blue\">Query follower count</button>\n            <button className=\"btn\" onClick={reset}>Clear</button>\n            </div>\n            {result && (\n                <p>\n                    <img src={result.avatar_url} /><br />\n                    {result.name} has {result.followers} followers\n                </p>\n            )}\n            {error && (<p>Failed with status: {error.status} {error.statusText}</p>)}\n        </div>\n    );\n}\n// we don't define this inside FollowerCount() because that will create a new function on\n// every render, causing useAsync() to re-run and triggering an infinite render loop\nfunction getGithubUser(user) {\n  return fetch(`https://api.github.com/users/${user}`).then(r => {\n     if (r.ok) {\n         return r.json();\n     }\n     throw r;\n  });\n}\n```",
						"tags": [
							{
								"tag": "extract-docs",
								"text": "\n"
							}
						]
					},
					"typeParameter": [
						{
							"id": 605,
							"name": "ResultT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"comment": {
								"shortText": "The type of the result returned by `fn`."
							}
						},
						{
							"id": 606,
							"name": "ErrorT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"comment": {
								"shortText": "The type of the error in the case the promise returned by `fn` rejects\n"
							},
							"default": {
								"type": "reference",
								"qualifiedName": "Error",
								"package": "typescript",
								"name": "Error"
							}
						}
					],
					"parameters": [
						{
							"id": 607,
							"name": "fn",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "A function that returns a promise. When `trigger` is `MANUAL` this is only\ncalled when you manually call the returned `run` function, otherwise it's called\ninitially and then whenever an equality comparison fails between previous arguments and new\narguments. Note that when `trigger` is `SHALLOW` or `DEEP` changes to this function will\ncause it to be called again so you must memoize it (eg. with `useCallback`) if it's defined\nin your component or hook. To help detect runaway effects caused by this automatically\nconsider using [stop-runaway-react-effects](https://github.com/kentcdodds/stop-runaway-react-effects).\n"
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 608,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 609,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 610,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isRest": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 605,
														"name": "ResultT"
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										}
									]
								}
							}
						},
						{
							"id": 611,
							"name": "options",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 618,
								"typeArguments": [
									{
										"type": "reference",
										"id": 605,
										"name": "ResultT"
									},
									{
										"type": "reference",
										"id": 606,
										"name": "ErrorT"
									}
								],
								"name": "UseAsyncOptions"
							},
							"defaultValue": "{}"
						}
					],
					"type": {
						"type": "reference",
						"id": 625,
						"typeArguments": [
							{
								"type": "reference",
								"id": 605,
								"name": "ResultT"
							},
							{
								"type": "reference",
								"id": 606,
								"name": "ErrorT"
							}
						],
						"name": "UseAsyncReturnObject"
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "References",
			"kind": 16777216,
			"children": [
				617,
				616,
				595
			]
		},
		{
			"title": "Modules",
			"kind": 2,
			"children": [
				1,
				23,
				32,
				57,
				61,
				134,
				234,
				310,
				391,
				523,
				556,
				593,
				643,
				683,
				720,
				739,
				758
			]
		},
		{
			"title": "Namespaces",
			"kind": 4,
			"children": [
				612
			]
		},
		{
			"title": "Interfaces",
			"kind": 256,
			"children": [
				600,
				596
			]
		},
		{
			"title": "Type aliases",
			"kind": 4194304,
			"children": [
				740,
				564,
				557,
				644,
				648
			]
		},
		{
			"title": "Functions",
			"kind": 64,
			"children": [
				594
			]
		}
	]
}