{
	"id": 2663,
	"name": "@prestojs/util",
	"kind": 1,
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 3266,
			"name": "OnError",
			"kind": 16777216,
			"kindString": "Reference",
			"flags": {},
			"target": 3250
		},
		{
			"id": 3265,
			"name": "OnSuccess",
			"kind": 16777216,
			"kindString": "Reference",
			"flags": {},
			"target": 3246
		},
		{
			"id": 3245,
			"name": "useAsync",
			"kind": 16777216,
			"kindString": "Reference",
			"flags": {},
			"target": 3244
		},
		{
			"id": 2664,
			"name": "Labeled",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2683,
					"name": "NodeLabeled",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Interface for items that provide a React node label (anything that React can render). Implementing this can save you having to pass\nexplicit functions to label an item in other parts of the system (eg. for [AsyncChoices](doc:AsyncChoices))",
						"text": "See [isNodeLabeled](doc:isNodeLabeled) and [getNodeLabel](doc:getNodeLabel).\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Labeled\n"
							}
						]
					},
					"children": [
						{
							"id": 2684,
							"name": "getNodeLabel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 2685,
									"name": "getNodeLabel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the node label for this item. This can be anything renderable by React.",
										"text": "See [isNodeLabeled](doc:isNodeLabeled) to test for support and [getNodeLabel](doc:getNodeLabel) for easiest way\nto get the label.\n"
									},
									"type": {
										"type": "reference",
										"qualifiedName": "React.ReactNode",
										"package": "@types/react",
										"name": "ReactNode"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2684
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/Labeled.ts",
							"line": 29,
							"character": 17
						}
					]
				},
				{
					"id": 2680,
					"name": "TextLabeled",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Interface for items that provide a plain text label. Implementing this can save you having to pass\nexplicit functions to label an item in other parts of the system (eg. for [AsyncChoices](doc:AsyncChoices))",
						"text": "See [isTextLabeled](doc:isTextLabeled) and [getTextLabel](doc:getTextLabel).\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Labeled\n"
							}
						]
					},
					"children": [
						{
							"id": 2681,
							"name": "getLabel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 2682,
									"name": "getLabel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the plain text label for this item. This must return a string",
										"text": "See [isTextLabeled](doc:isTextLabeled) to test for support and [getTextLabel](doc:getTextLabel) for easiest way\nto get the label.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2681
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/Labeled.ts",
							"line": 10,
							"character": 17
						}
					]
				},
				{
					"id": 2674,
					"name": "getNodeLabel",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/Labeled.ts",
							"line": 82,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 2675,
							"name": "getNodeLabel",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get a React node label from an item",
								"text": "If item implements `getNodeLabel` that will be used otherwise `getLabel` will be used.\n\nIf neither are defined an error is thrown. To conditional call this check if labeled first\nwith `isLabeled`.\n",
								"tags": [
									{
										"tag": "extract-docs",
										"text": ""
									},
									{
										"tag": "menu-group",
										"text": "Labeled\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2676,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "React.ReactNode",
								"package": "@types/react",
								"name": "React.ReactNode"
							}
						}
					]
				},
				{
					"id": 2677,
					"name": "getTextLabel",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/Labeled.ts",
							"line": 103,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 2678,
							"name": "getTextLabel",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get a plain text label from an item",
								"text": "If does not implement TextLabeled an error is thrown. To conditional call this check if labeled first\nwith `isTextLabeled`.\n",
								"tags": [
									{
										"tag": "extract-docs",
										"text": ""
									},
									{
										"tag": "menu-group",
										"text": "Labeled\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2679,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 2671,
					"name": "isLabeled",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/Labeled.ts",
							"line": 67,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 2672,
							"name": "isLabeled",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if item supports either text or React node labels",
								"tags": [
									{
										"tag": "extract-docs",
										"text": ""
									},
									{
										"tag": "menu-group",
										"text": "Labeled\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2673,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "item",
								"asserts": false,
								"targetType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"id": 2680,
											"name": "TextLabeled"
										},
										{
											"type": "reference",
											"id": 2683,
											"name": "NodeLabeled"
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 2668,
					"name": "isNodeLabeled",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/Labeled.ts",
							"line": 55,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 2669,
							"name": "isNodeLabeled",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if a value conforms to NodeLabeled",
								"tags": [
									{
										"tag": "extract-docs",
										"text": ""
									},
									{
										"tag": "menu-group",
										"text": "Labeled\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2670,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "item",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 2683,
									"name": "NodeLabeled"
								}
							}
						}
					]
				},
				{
					"id": 2665,
					"name": "isTextLabeled",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/Labeled.ts",
							"line": 43,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 2666,
							"name": "isTextLabeled",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if a value conforms to TextLabeled",
								"tags": [
									{
										"tag": "menu-group",
										"text": "Labeled\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2667,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "item",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 2680,
									"name": "TextLabeled"
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2683,
						2680
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						2674,
						2677,
						2671,
						2668,
						2665
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/Labeled.ts",
					"line": 10,
					"character": 0
				}
			]
		},
		{
			"id": 2686,
			"name": "comparison",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2691,
					"name": "isDeepEqual",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/comparison.ts",
							"line": 37,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 2692,
							"name": "isDeepEqual",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Compare values deeply for equality. If an object has an `isEqual` method this\nwill be called otherwise values will be compared deeply."
							},
							"parameters": [
								{
									"id": 2693,
									"name": "a",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 2694,
									"name": "b",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 2687,
					"name": "isEqual",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/comparison.ts",
							"line": 29,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 2688,
							"name": "isEqual",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Compare to values for equality. If has an `isEqual` method this will be called\notherwise values will be compared shallowly."
							},
							"parameters": [
								{
									"id": 2689,
									"name": "a",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 2690,
									"name": "b",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						2691,
						2687
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/comparison.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2695,
			"name": "identifiable",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2718,
					"name": "Identifiable",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Interface for types that we can automatically extract a unique identifier from.",
						"text": "To confirm to the interface provide a `_key` property or getter.\n\n[ViewModelFactory](doc:viewModelFactory) conforms to this so anything that expects an Identifiable\nwill accept a ViewModel.\n\nImplementing this can save you having to pass explicit functions to identify an item in other parts of the system\n(eg. for [AsyncChoices](doc:AsyncChoices) or [useAsyncValue](doc:useAsyncValue))\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Identifiable\n"
							}
						]
					},
					"children": [
						{
							"id": 2719,
							"name": "_key",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/identifiable.ts",
									"line": 20,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2717,
								"name": "Id"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2719
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/identifiable.ts",
							"line": 19,
							"character": 17
						}
					]
				},
				{
					"id": 2717,
					"name": "Id",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/identifiable.ts",
							"line": 3,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "SingleId"
							},
							{
								"type": "reference",
								"name": "CompoundId"
							}
						]
					}
				},
				{
					"id": 2699,
					"name": "getId",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/identifiable.ts",
							"line": 45,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 2700,
							"name": "getId",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get the id for an object. If object doesn't implement Identifiable then `fallbackGetId`\nmust be provided or an error will be thrown.",
								"tags": [
									{
										"tag": "extract-docs",
										"text": ""
									},
									{
										"tag": "menu-group",
										"text": "Identifiable\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2701,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Any value to get ID for"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 2702,
									"name": "fallbackGetId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Function to return id for `item` if it doesn't implement Identifiable\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2703,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2704,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2705,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "reference",
														"id": 2717,
														"name": "Id"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2717,
								"name": "Id"
							}
						}
					]
				},
				{
					"id": 2706,
					"name": "hashId",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/identifiable.ts",
							"line": 64,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 2707,
							"name": "hashId",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create string representation of ID suitable for strict equality\nchecking or as a key into an object / map.",
								"tags": [
									{
										"tag": "extract-docs",
										"text": ""
									},
									{
										"tag": "menu-group",
										"text": "Identifiable\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2708,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2717,
										"name": "Id"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 2696,
					"name": "isIdentifiable",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/identifiable.ts",
							"line": 29,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 2697,
							"name": "isIdentifiable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if a value conforms to Identifiable",
								"tags": [
									{
										"tag": "extract-docs",
										"text": ""
									},
									{
										"tag": "menu-group",
										"text": "Identifiable\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2698,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "item",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 2718,
									"name": "Identifiable"
								}
							}
						}
					]
				},
				{
					"id": 2709,
					"name": "isSameById",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/identifiable.ts",
							"line": 89,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 2710,
							"name": "isSameById",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if two objects share the same ID.",
								"text": "NOTE: Doesn't compare objects for equality; only their id\n",
								"tags": [
									{
										"tag": "extract-docs",
										"text": ""
									},
									{
										"tag": "menu-group",
										"text": "Identifiable\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2711,
									"name": "item1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 2712,
									"name": "item2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 2713,
									"name": "fallbackGetId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2714,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2715,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2716,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "reference",
														"id": 2717,
														"name": "Id"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2718
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						2717
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						2699,
						2706,
						2696,
						2709
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/identifiable.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2720,
			"name": "misc",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2721,
					"name": "isPromise",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/misc.ts",
							"line": 4,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 2722,
							"name": "isPromise",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Utility to check if a value is a promise"
							},
							"parameters": [
								{
									"id": 2723,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "value",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "any"
										}
									],
									"qualifiedName": "Promise",
									"package": "typescript",
									"name": "Promise"
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						2721
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/misc.ts",
					"line": 4,
					"character": 0
				}
			]
		},
		{
			"id": 2724,
			"name": "pagination/CursorPaginator",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2733,
					"name": "CursorPaginator",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Cursor based paginator",
						"text": "Expects a `nextCursor`, `previousCursor` and optional `pageSize` key in the response. See\n[getPaginationState](doc:getPaginationState) for how to customise this if your backend implementation\ndiffers.\n",
						"tags": [
							{
								"tag": "menu-group",
								"text": "Pagination"
							},
							{
								"tag": "extract-docs",
								"text": "\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 2737,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"comment": {},
							"signatures": [
								{
									"id": 2738,
									"name": "new CursorPaginator",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"tags": [
											{
												"tag": "see",
												"text": "documentation for `replaceStateControllers` for what `currentStatePair` and `internalStatePair` are\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2739,
											"name": "currentStatePair",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": null
											},
											"defaultValue": "null"
										},
										{
											"id": 2740,
											"name": "internalStatePair",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": null
											},
											"defaultValue": "null"
										}
									],
									"type": {
										"type": "reference",
										"id": 2733,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3137,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3136,
								"name": "default.constructor"
							}
						},
						{
							"id": 2779,
							"name": "currentState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 108,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2725,
								"name": "CursorPaginationState"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3144,
								"name": "default.currentState"
							}
						},
						{
							"id": 2780,
							"name": "internalState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 109,
									"character": 4
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 2729,
										"name": "InternalCursorPaginatorState"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2781,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 2782,
													"name": "responseIsSet",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
															"line": 109,
															"character": 37
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														2782
													]
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3145,
								"name": "default.internalState"
							}
						},
						{
							"id": 2783,
							"name": "setCurrentState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 110,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2784,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2785,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 2786,
													"name": "set",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2725,
														"name": "CursorPaginationState"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3148,
								"name": "default.setCurrentState"
							}
						},
						{
							"id": 2787,
							"name": "setInternalState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 111,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2788,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2789,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 2790,
													"name": "set",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2729,
														"name": "InternalCursorPaginatorState"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3152,
								"name": "default.setInternalState"
							}
						},
						{
							"id": 2745,
							"name": "cursor",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
									"line": 45,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2746,
									"name": "cursor",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The current cursor. This will be null before the first response is received."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							]
						},
						{
							"id": 2741,
							"name": "nextCursor",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
									"line": 31,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2742,
									"name": "nextCursor",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The next cursor (if any)"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							]
						},
						{
							"id": 2747,
							"name": "pageSize",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
									"line": 52,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2748,
									"name": "pageSize",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The current page size, if known"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							]
						},
						{
							"id": 2743,
							"name": "previousCursor",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
									"line": 38,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2744,
									"name": "previousCursor",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "THe previous cursor (if any)"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							]
						},
						{
							"id": 2791,
							"name": "responseIsSet",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "True once setResponse has been called and pagination state is known."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 116,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2792,
									"name": "responseIsSet",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "True once setResponse has been called and pagination state is known."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Paginator.responseIsSet"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3156,
								"name": "default.responseIsSet"
							}
						},
						{
							"id": 2757,
							"name": "first",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
									"line": 102,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2758,
									"name": "first",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Go to the first page."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"id": 3169,
										"name": "default.first"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3168,
								"name": "default.first"
							}
						},
						{
							"id": 2755,
							"name": "firstState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
									"line": 92,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2756,
									"name": "firstState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the state for the first page",
										"text": "Does not transition state. To transition state call `first` instead.\n"
									},
									"type": {
										"type": "reference",
										"id": 2725,
										"name": "CursorPaginationState"
									},
									"overwrites": {
										"type": "reference",
										"id": 3171,
										"name": "default.firstState"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3170,
								"name": "default.firstState"
							}
						},
						{
							"id": 2767,
							"name": "getRequestInit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
									"line": 158,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2768,
									"name": "getRequestInit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the options to use with `Endpoint.execute` or `Endpoint.prepare`. Usually\nthis just involves setting `query` to the query string parameters for the paginator\nbut can also provide custom headers or different URL resolve arguments."
									},
									"parameters": [
										{
											"id": 2769,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3055,
												"name": "PaginatorRequestOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3055,
										"name": "PaginatorRequestOptions"
									},
									"overwrites": {
										"type": "reference",
										"id": 3163,
										"name": "default.getRequestInit"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3162,
								"name": "default.getRequestInit"
							}
						},
						{
							"id": 2777,
							"name": "hasNextPage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
									"line": 200,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2778,
									"name": "hasNextPage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if there's more results after the current page"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"overwrites": {
										"type": "reference",
										"id": 3181,
										"name": "default.hasNextPage"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3180,
								"name": "default.hasNextPage"
							}
						},
						{
							"id": 2761,
							"name": "next",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
									"line": 125,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2762,
									"name": "next",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Go to the next page.",
										"text": "If the last next is not yet known because results haven't been returned this function\ndoes nothing.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"id": 3173,
										"name": "default.next"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3172,
								"name": "default.next"
							}
						},
						{
							"id": 2759,
							"name": "nextState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
									"line": 112,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2760,
									"name": "nextState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the state for the first page. If the next page isn't yet known (eg. results\nhaven't yet been returned) then null will be returned.",
										"text": "Does not transition state. To transition state call `next` instead.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2725,
												"name": "CursorPaginationState"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 3175,
										"name": "default.nextState"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3174,
								"name": "default.nextState"
							}
						},
						{
							"id": 2749,
							"name": "pageSizeState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
									"line": 61,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2750,
									"name": "pageSizeState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the state for the specified page size",
										"text": "Does not transition state. To transition state call `setPageSize` instead.\n"
									},
									"parameters": [
										{
											"id": 2751,
											"name": "pageSize",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2725,
										"name": "CursorPaginationState"
									}
								}
							]
						},
						{
							"id": 2765,
							"name": "previous",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
									"line": 151,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2766,
									"name": "previous",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Go to the previous page.",
										"text": "If the previous page is not yet known because results haven't been returned this function\ndoes nothing.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"id": 3177,
										"name": "default.previous"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3176,
								"name": "default.previous"
							}
						},
						{
							"id": 2763,
							"name": "previousState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
									"line": 138,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2764,
									"name": "previousState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the state for the previous page. If the previous page isn't yet known (eg. results\nhaven't yet been returned) then null will be returned.",
										"text": "Does not transition state. To transition state call `previous` instead.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2725,
												"name": "CursorPaginationState"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 3179,
										"name": "default.previousState"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3178,
								"name": "default.previousState"
							}
						},
						{
							"id": 2793,
							"name": "replaceStateControllers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 159,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2794,
									"name": "replaceStateControllers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Paginator receives 2 tuples of a state and state setter pair. This is expected to\nmatch the same interface as `useState` in React. The following is a valid simple usage:",
										"text": "```js\nconst paginator = new Paginator(useState(), useState());\n```\n\nNote that we can also pass the state controllers in via `replaceStateControllers` rather\nthan in the constructor. This is so we can memoize the `Paginator` instance which is desirable\nwhen using the paginator as a dependency to React hooks.\n\nAs state is passed in and managed external to the class be aware that any data stored\non the class instance will be lost unless written with `setCurrentState` or `setInternalState`.\nThis design is a compromise between allowing a clear interface for how paginators should\nbe defined and allowing the state to be managed externally (eg. using React state).\n"
									},
									"parameters": [
										{
											"id": 2795,
											"name": "currentStatePair",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The state object and setter (eg. from `useState`) that is used to store\nand transition pagination state. Using this you can do things like easily store state in the URL\n(eg. using `useUrlQueryState`) or other data sources."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 2796,
											"name": "internalStatePair",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The state object and setter that is used for internal state. Internal state\nis stored separately as it does not need to be restored (eg. if you refresh the page). It is used\nto store things like the total number of results or the current cursor. Passing `useState` here is\nfine.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3159,
										"name": "default.replaceStateControllers"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3158,
								"name": "default.replaceStateControllers"
							}
						},
						{
							"id": 2752,
							"name": "setPageSize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
									"line": 83,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2753,
									"name": "setPageSize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Set the page size"
									},
									"parameters": [
										{
											"id": 2754,
											"name": "pageSize",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 2770,
							"name": "setResponse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
									"line": 179,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2771,
									"name": "setResponse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the internal data based on response. Expects `nextCursor`, `previousCursor` and optionally `pageSize` to be in\nresponse data.",
										"text": "See [getPaginationState](doc:getPaginationState) for how to customise this if your backend implementation\ndiffers.\n"
									},
									"parameters": [
										{
											"id": 2772,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2773,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2774,
															"name": "nextCursor",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
																	"line": 184,
																	"character": 8
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														},
														{
															"id": 2776,
															"name": "pageSize",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
																	"line": 186,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2775,
															"name": "previousCursor",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
																	"line": 185,
																	"character": 8
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																2774,
																2776,
																2775
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"id": 3166,
										"name": "default.setResponse"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3165,
								"name": "default.setResponse"
							}
						},
						{
							"id": 2734,
							"name": "getPaginationState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
									"line": 217,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2735,
									"name": "getPaginationState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Expected pagination state in the shape:",
										"text": "```json\n{\n    next: null|'http://example.com/?cursor=abc123',\n    previous: null|'http://example.com/?cursor=abc123',\n    results: Array\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2736,
											"name": "requestDetails",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 3060,
												"name": "PaginationRequestDetails"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": false
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										]
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2737
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2779,
								2780,
								2783,
								2787
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2745,
								2741,
								2747,
								2743,
								2791
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2757,
								2755,
								2767,
								2777,
								2761,
								2759,
								2749,
								2765,
								2763,
								2793,
								2752,
								2770,
								2734
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
							"line": 24,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3135,
							"typeArguments": [
								{
									"type": "reference",
									"id": 2725,
									"name": "CursorPaginationState"
								},
								{
									"type": "reference",
									"id": 2729,
									"name": "InternalCursorPaginatorState"
								}
							],
							"name": "default"
						}
					]
				},
				{
					"id": 2725,
					"name": "CursorPaginationState",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
							"line": 4,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2726,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 2728,
									"name": "cursor",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
											"line": 6,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2727,
									"name": "pageSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
											"line": 5,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										2728,
										2727
									]
								}
							],
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
									"line": 4,
									"character": 36
								}
							]
						}
					}
				},
				{
					"id": 2729,
					"name": "InternalCursorPaginatorState",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
							"line": 9,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2730,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 2731,
									"name": "nextCursor",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
											"line": 10,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 2732,
									"name": "previousCursor",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
											"line": 11,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										2731,
										2732
									]
								}
							],
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
									"line": 9,
									"character": 43
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2733
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						2725,
						2729
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/pagination/CursorPaginator.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2797,
			"name": "pagination/InferredPaginator",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2799,
					"name": "InferredPaginator",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Class that infers the specific type of pagination based on the response.",
						"text": "Supports [PageNumberPaginator](doc:PageNumberPaginator), [LimitOffsetPaginator](LimitOffsetPaginator) and\n[CursorPaginator](doc:CursorPaginator) with the following rules based on the response data:\n\n* If response contains `nextCursor` or `previousCursor` value paginator is set to [CursorPaginator](doc:CursorPaginator)\n* If response contains `limit` then paginator is set to  [LimitOffsetPaginator](LimitOffsetPaginator)\n* If response contains `total` then paginator is set to [PageNumberPaginator](doc:PageNumberPaginator)\n",
						"tags": [
							{
								"tag": "menu-group",
								"text": "Pagination"
							},
							{
								"tag": "extract-docs",
								"text": "\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 2803,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 172,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2804,
									"name": "new InferredPaginator",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"tags": [
											{
												"tag": "see",
												"text": "documentation for `replaceStateControllers` for what `currentStatePair` and `internalStatePair` are\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2805,
											"name": "currentStatePair",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 2806,
											"name": "internalStatePair",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2799,
										"name": "default"
									}
								}
							]
						},
						{
							"id": 2807,
							"name": "__paginator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 26,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 2733,
										"name": "default"
									},
									{
										"type": "reference",
										"id": 2981,
										"name": "default"
									},
									{
										"type": "reference",
										"id": 2905,
										"name": "default"
									}
								]
							}
						},
						{
							"id": 2832,
							"name": "currentState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 164,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2798,
								"name": "PaginatorState"
							},
							"implementationOf": {
								"type": "reference",
								"id": 3068,
								"name": "PaginatorInterface.currentState"
							}
						},
						{
							"id": 2833,
							"name": "internalState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 165,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							},
							"implementationOf": {
								"type": "reference",
								"id": 3069,
								"name": "PaginatorInterface.internalState"
							}
						},
						{
							"id": 2834,
							"name": "setCurrentState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 166,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2835,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2836,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 2837,
													"name": "nextValue",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2798,
														"name": "PaginatorState"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							},
							"implementationOf": {
								"type": "reference",
								"id": 3070,
								"name": "PaginatorInterface.setCurrentState"
							}
						},
						{
							"id": 2838,
							"name": "setInternalState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 167,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2839,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2840,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 2841,
													"name": "set",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 2842,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 2843,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 2844,
																			"name": "internalState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"typeArguments": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "intrinsic",
																						"name": "any"
																					}
																				],
																				"qualifiedName": "Record",
																				"package": "typescript",
																				"name": "Record"
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Record",
																		"package": "typescript",
																		"name": "Record"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							},
							"implementationOf": {
								"type": "reference",
								"id": 3073,
								"name": "PaginatorInterface.setInternalState"
							}
						},
						{
							"id": 2826,
							"name": "cursor",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 128,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2827,
									"name": "cursor",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The current cursor. Only valid if inferred paginator is [CursorPaginator](doc:CursorPaginator)."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							]
						},
						{
							"id": 2818,
							"name": "limit",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 81,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2819,
									"name": "limit",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The current limit. Only valid if inferred paginator is [LimitOffsetPaginator](doc:LimitOffsetPaginator)."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							]
						},
						{
							"id": 2822,
							"name": "nextCursor",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 104,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2823,
									"name": "nextCursor",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The next cursor. Only valid if inferred paginator is [CursorPaginator](doc:CursorPaginator)."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							]
						},
						{
							"id": 2820,
							"name": "offset",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 94,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2821,
									"name": "offset",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The current offset. Only valid if inferred paginator is [LimitOffsetPaginator](doc:LimitOffsetPaginator)."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							]
						},
						{
							"id": 2828,
							"name": "page",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 141,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2829,
									"name": "page",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The current page number. Only valid if inferred paginator is [PageNumberPaginator](doc:PageNumberPaginator)."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							]
						},
						{
							"id": 2830,
							"name": "pageSize",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 154,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2831,
									"name": "pageSize",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The current page size. Only valid if inferred paginator is [PageNumberPaginator](doc:PageNumberPaginator)."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							]
						},
						{
							"id": 2810,
							"name": "paginator",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 34,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2811,
									"name": "paginator",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The underlying inferred paginator instance (if known). Only available after `setResponse` has been called."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2733,
												"name": "default"
											},
											{
												"type": "reference",
												"id": 2981,
												"name": "default"
											},
											{
												"type": "reference",
												"id": 2905,
												"name": "default"
											}
										]
									}
								}
							],
							"setSignature": [
								{
									"id": 2812,
									"name": "paginator",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"comment": {
										"shortText": "The underlying inferred paginator instance (if known). Only available after `setResponse` has been called."
									},
									"parameters": [
										{
											"id": 2813,
											"name": "paginator",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reference",
														"id": 2733,
														"name": "default"
													},
													{
														"type": "reference",
														"id": 2981,
														"name": "default"
													},
													{
														"type": "reference",
														"id": 2905,
														"name": "default"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 2824,
							"name": "previousCursor",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 114,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2825,
									"name": "previousCursor",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The previous cursor. Only valid if inferred paginator is [CursorPaginator](doc:CursorPaginator)."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							]
						},
						{
							"id": 2808,
							"name": "responseIsSet",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 27,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2809,
									"name": "responseIsSet",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"implementationOf": {
										"type": "reference",
										"id": 3076,
										"name": "PaginatorInterface.responseIsSet"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 3076,
								"name": "PaginatorInterface.responseIsSet"
							}
						},
						{
							"id": 2814,
							"name": "total",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 55,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2815,
									"name": "total",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The total number of records available. Not valid if inferred paginator is [CursorPaginator](doc:CursorPaginator)."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							]
						},
						{
							"id": 2816,
							"name": "totalPages",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 68,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2817,
									"name": "totalPages",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The total number of records available. Only valid if inferred paginator is [PageNumberPaginator](doc:PageNumberPaginator)."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							]
						},
						{
							"id": 2883,
							"name": "first",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 416,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2884,
									"name": "first",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Go to the first page."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"id": 3080,
										"name": "PaginatorInterface.first"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 3079,
								"name": "PaginatorInterface.first"
							}
						},
						{
							"id": 2881,
							"name": "firstState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 402,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2882,
									"name": "firstState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the state for the first page",
										"text": "Does not transition state. To transition state call `first` instead.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2725,
												"name": "CursorPaginationState"
											},
											{
												"type": "reference",
												"id": 2974,
												"name": "PageNumberPaginationState"
											},
											{
												"type": "reference",
												"id": 2898,
												"name": "LimitOffsetPaginationState"
											}
										]
									},
									"implementationOf": {
										"type": "reference",
										"id": 3082,
										"name": "PaginatorInterface.firstState"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 3081,
								"name": "PaginatorInterface.firstState"
							}
						},
						{
							"id": 2891,
							"name": "getRequestInit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 472,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2892,
									"name": "getRequestInit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2893,
											"name": "currentInit",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3055,
										"name": "PaginatorRequestOptions"
									},
									"implementationOf": {
										"type": "reference",
										"id": 3092,
										"name": "PaginatorInterface.getRequestInit"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 3091,
								"name": "PaginatorInterface.getRequestInit"
							}
						},
						{
							"id": 2889,
							"name": "hasNextPage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 465,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2890,
									"name": "hasNextPage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if there's more results after the current page"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"implementationOf": {
										"type": "reference",
										"id": 3078,
										"name": "PaginatorInterface.hasNextPage"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 3077,
								"name": "PaginatorInterface.hasNextPage"
							}
						},
						{
							"id": 2887,
							"name": "last",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 450,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2888,
									"name": "last",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Go to the last page. If the last page isn't yet known (eg. results\nhaven't yet been returned) then null will be returned.",
										"text": "If the last page is not yet known because results haven't been returned this function\ndoes nothing.\nNot valid for [CursorPaginator](doc:CursorPaginator)\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 2885,
							"name": "lastState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 432,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2886,
									"name": "lastState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the state for the first page",
										"text": "Does not transition state. To transition state call `last` instead.\n\nNot valid for [CursorPaginator](doc:CursorPaginator)\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2974,
												"name": "PageNumberPaginationState"
											},
											{
												"type": "reference",
												"id": 2898,
												"name": "LimitOffsetPaginationState"
											}
										]
									}
								}
							]
						},
						{
							"id": 2861,
							"name": "limitState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 282,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2862,
									"name": "limitState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Only valid if inferred paginator is [LimitOffsetPaginator](doc:LimitOffsetPaginator).",
										"text": "See [LimitOffsetPaginator.limitState](doc:LimitOffsetPaginator#method-limitState)\n"
									},
									"parameters": [
										{
											"id": 2863,
											"name": "limit",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2898,
												"name": "LimitOffsetPaginationState"
											}
										]
									}
								}
							]
						},
						{
							"id": 2875,
							"name": "next",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 360,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2876,
									"name": "next",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Go to the next page."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"id": 3084,
										"name": "PaginatorInterface.next"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 3083,
								"name": "PaginatorInterface.next"
							}
						},
						{
							"id": 2873,
							"name": "nextState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 346,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2874,
									"name": "nextState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the state for the next page",
										"text": "Does not transition state. To transition state call `next` instead.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2725,
												"name": "CursorPaginationState"
											},
											{
												"type": "reference",
												"id": 2974,
												"name": "PageNumberPaginationState"
											},
											{
												"type": "reference",
												"id": 2898,
												"name": "LimitOffsetPaginationState"
											}
										]
									},
									"implementationOf": {
										"type": "reference",
										"id": 3086,
										"name": "PaginatorInterface.nextState"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 3085,
								"name": "PaginatorInterface.nextState"
							}
						},
						{
							"id": 2867,
							"name": "offsetState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 314,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2868,
									"name": "offsetState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Only valid if inferred paginator is [LimitOffsetPaginator](doc:LimitOffsetPaginator).",
										"text": "See [LimitOffsetPaginator.offsetState](doc:LimitOffsetPaginator#method-offsetState)\n"
									},
									"parameters": [
										{
											"id": 2869,
											"name": "offset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2898,
												"name": "LimitOffsetPaginationState"
											}
										]
									}
								}
							]
						},
						{
							"id": 2855,
							"name": "pageSizeState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 248,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2856,
									"name": "pageSizeState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Only valid if inferred paginator is [PageNumberPaginator](doc:PageNumberPaginator).",
										"text": "See [PageNumberPaginator.pageSizeState](doc:PageNumberPaginator#method-pageSizeState)\n"
									},
									"parameters": [
										{
											"id": 2857,
											"name": "pageSize",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2725,
												"name": "CursorPaginationState"
											},
											{
												"type": "reference",
												"id": 2974,
												"name": "PageNumberPaginationState"
											}
										]
									}
								}
							]
						},
						{
							"id": 2849,
							"name": "pageState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 216,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2850,
									"name": "pageState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Only valid if inferred paginator is [PageNumberPaginator](doc:PageNumberPaginator).",
										"text": "See [PageNumberPaginator.pageState](doc:PageNumberPaginator#method-pageState)\n"
									},
									"parameters": [
										{
											"id": 2851,
											"name": "page",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2974,
												"name": "PageNumberPaginationState"
											}
										]
									}
								}
							]
						},
						{
							"id": 2879,
							"name": "previous",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 388,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2880,
									"name": "previous",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Go to the previous page."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"id": 3088,
										"name": "PaginatorInterface.previous"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 3087,
								"name": "PaginatorInterface.previous"
							}
						},
						{
							"id": 2877,
							"name": "previousState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 374,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2878,
									"name": "previousState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the state for the previous page",
										"text": "Does not transition state. To transition state call `previous` instead.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2725,
												"name": "CursorPaginationState"
											},
											{
												"type": "reference",
												"id": 2974,
												"name": "PageNumberPaginationState"
											},
											{
												"type": "reference",
												"id": 2898,
												"name": "LimitOffsetPaginationState"
											}
										]
									},
									"implementationOf": {
										"type": "reference",
										"id": 3090,
										"name": "PaginatorInterface.previousState"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 3089,
								"name": "PaginatorInterface.previousState"
							}
						},
						{
							"id": 2845,
							"name": "replaceStateControllers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 186,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2846,
									"name": "replaceStateControllers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"tags": [
											{
												"tag": "see",
												"text": "`Paginator.replaceStateControllers`\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2847,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										},
										{
											"id": 2848,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"id": 3098,
										"name": "PaginatorInterface.replaceStateControllers"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 3097,
								"name": "PaginatorInterface.replaceStateControllers"
							}
						},
						{
							"id": 2864,
							"name": "setLimit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 297,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2865,
									"name": "setLimit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Only valid if inferred paginator is [LimitOffsetPaginator](doc:LimitOffsetPaginator).",
										"text": "See [LimitOffsetPaginator.setLimit](doc:LimitOffsetPaginator#method-setLimit)\n"
									},
									"parameters": [
										{
											"id": 2866,
											"name": "limit",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 2870,
							"name": "setOffset",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 329,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2871,
									"name": "setOffset",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Only valid if inferred paginator is [LimitOffsetPaginator](doc:LimitOffsetPaginator).",
										"text": "See [LimitOffsetPaginator.setOffset](doc:LimitOffsetPaginator#method-setOffset)\n"
									},
									"parameters": [
										{
											"id": 2872,
											"name": "offset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 2852,
							"name": "setPage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 231,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2853,
									"name": "setPage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Only valid if inferred paginator is [PageNumberPaginator](doc:PageNumberPaginator).",
										"text": "See [PageNumberPaginator.setPage](doc:PageNumberPaginator#method-setPage)\n"
									},
									"parameters": [
										{
											"id": 2854,
											"name": "page",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 2858,
							"name": "setPageSize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 265,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2859,
									"name": "setPageSize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Only valid if inferred paginator is [PageNumberPaginator](doc:PageNumberPaginator).",
										"text": "See [PageNumberPaginator.setPageSize](doc:PageNumberPaginator#method-setPageSize)\n"
									},
									"parameters": [
										{
											"id": 2860,
											"name": "pageSize",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 2894,
							"name": "setResponse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 492,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2895,
									"name": "setResponse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the internal data based on response. This is where the paginator is inferred based on values in the\n`response`.",
										"text": "See [getPaginationState](doc:getPaginationState) for how to customise this if your backend implementation\ndiffers.\n"
									},
									"parameters": [
										{
											"id": 2896,
											"name": "response",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"id": 3095,
										"name": "PaginatorInterface.setResponse"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 3094,
								"name": "PaginatorInterface.setResponse"
							}
						},
						{
							"id": 2800,
							"name": "getPaginationState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
									"line": 518,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2801,
									"name": "getPaginationState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2802,
											"name": "requestDetails",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3060,
												"name": "PaginationRequestDetails"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": false
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										]
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2803
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2807,
								2832,
								2833,
								2834,
								2838
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2826,
								2818,
								2822,
								2820,
								2828,
								2830,
								2810,
								2824,
								2808,
								2814,
								2816
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2883,
								2881,
								2891,
								2889,
								2887,
								2885,
								2861,
								2875,
								2873,
								2867,
								2855,
								2849,
								2879,
								2877,
								2845,
								2864,
								2870,
								2852,
								2858,
								2894,
								2800
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
							"line": 24,
							"character": 21
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 3067,
							"typeArguments": [
								{
									"type": "reference",
									"id": 2798,
									"name": "PaginatorState"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "any"
										}
									],
									"qualifiedName": "Record",
									"package": "typescript",
									"name": "Record"
								}
							],
							"name": "PaginatorInterface"
						}
					]
				},
				{
					"id": 2798,
					"name": "PaginatorState",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
							"line": 6,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 2974,
								"name": "PageNumberPaginationState"
							},
							{
								"type": "reference",
								"id": 2725,
								"name": "CursorPaginationState"
							},
							{
								"type": "reference",
								"id": 2898,
								"name": "LimitOffsetPaginationState"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2799
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						2798
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/pagination/InferredPaginator.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2897,
			"name": "pagination/LimitOffsetPaginator",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2905,
					"name": "LimitOffsetPaginator",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Limit & offset based paginator",
						"text": "Expects a `limit` key in the response. See [getPaginationState](doc:getPaginationState) for how\nto customise this if your backend implementation differs.\n",
						"tags": [
							{
								"tag": "menu-group",
								"text": "Pagination"
							},
							{
								"tag": "extract-docs",
								"text": "\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 2909,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"comment": {},
							"signatures": [
								{
									"id": 2910,
									"name": "new LimitOffsetPaginator",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"tags": [
											{
												"tag": "see",
												"text": "documentation for `replaceStateControllers` for what `currentStatePair` and `internalStatePair` are\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2911,
											"name": "currentStatePair",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": null
											},
											"defaultValue": "null"
										},
										{
											"id": 2912,
											"name": "internalStatePair",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": null
											},
											"defaultValue": "null"
										}
									],
									"type": {
										"type": "reference",
										"id": 2905,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3137,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3136,
								"name": "default.constructor"
							}
						},
						{
							"id": 2955,
							"name": "currentState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 108,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2898,
								"name": "LimitOffsetPaginationState"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3144,
								"name": "default.currentState"
							}
						},
						{
							"id": 2956,
							"name": "internalState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 109,
									"character": 4
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 2902,
										"name": "InternalLimitOffsetPaginationState"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2957,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 2958,
													"name": "responseIsSet",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
															"line": 109,
															"character": 37
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														2958
													]
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3145,
								"name": "default.internalState"
							}
						},
						{
							"id": 2959,
							"name": "setCurrentState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 110,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2960,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2961,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 2962,
													"name": "set",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2898,
														"name": "LimitOffsetPaginationState"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3148,
								"name": "default.setCurrentState"
							}
						},
						{
							"id": 2963,
							"name": "setInternalState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 111,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2964,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2965,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 2966,
													"name": "set",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2902,
														"name": "InternalLimitOffsetPaginationState"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3152,
								"name": "default.setInternalState"
							}
						},
						{
							"id": 2915,
							"name": "limit",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
									"line": 36,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2916,
									"name": "limit",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The current limit"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							]
						},
						{
							"id": 2917,
							"name": "offset",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
									"line": 47,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2918,
									"name": "offset",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The current offset"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						},
						{
							"id": 2967,
							"name": "responseIsSet",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "True once setResponse has been called and pagination state is known."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 116,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2968,
									"name": "responseIsSet",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "True once setResponse has been called and pagination state is known."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Paginator.responseIsSet"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3156,
								"name": "default.responseIsSet"
							}
						},
						{
							"id": 2913,
							"name": "total",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
									"line": 29,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2914,
									"name": "total",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The total number of records available. This will be null before the first response is received."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							]
						},
						{
							"id": 2941,
							"name": "first",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
									"line": 169,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2942,
									"name": "first",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Go to the first page."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"id": 3169,
										"name": "default.first"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3168,
								"name": "default.first"
							}
						},
						{
							"id": 2939,
							"name": "firstState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
									"line": 160,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2940,
									"name": "firstState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the state for the first page",
										"text": "Does not transition state. To transition state call `first` instead.\n"
									},
									"type": {
										"type": "reference",
										"id": 2898,
										"name": "LimitOffsetPaginationState"
									},
									"overwrites": {
										"type": "reference",
										"id": 3171,
										"name": "default.firstState"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3170,
								"name": "default.firstState"
							}
						},
						{
							"id": 2947,
							"name": "getRequestInit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
									"line": 204,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2948,
									"name": "getRequestInit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the options to use with `Endpoint.execute` or `Endpoint.prepare`. Usually\nthis just involves setting `query` to the query string parameters for the paginator\nbut can also provide custom headers or different URL resolve arguments."
									},
									"parameters": [
										{
											"id": 2949,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "Object"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3055,
										"name": "PaginatorRequestOptions"
									},
									"overwrites": {
										"type": "reference",
										"id": 3163,
										"name": "default.getRequestInit"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3162,
								"name": "default.getRequestInit"
							}
						},
						{
							"id": 2953,
							"name": "hasNextPage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
									"line": 234,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2954,
									"name": "hasNextPage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if there's more results after the current page"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"overwrites": {
										"type": "reference",
										"id": 3181,
										"name": "default.hasNextPage"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3180,
								"name": "default.hasNextPage"
							}
						},
						{
							"id": 2945,
							"name": "last",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
									"line": 196,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2946,
									"name": "last",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Go to the last page.",
										"text": "If the last page is not yet known because results haven't been returned this function\ndoes nothing.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 2943,
							"name": "lastState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
									"line": 179,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2944,
									"name": "lastState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the state for the last page. If the last page isn't yet known (eg. results\nhaven't yet been returned) then null will be returned.",
										"text": "Does not transition state. To transition state call `last` instead.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2898,
												"name": "LimitOffsetPaginationState"
											}
										]
									}
								}
							]
						},
						{
							"id": 2919,
							"name": "limitState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
									"line": 60,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2920,
									"name": "limitState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the state for the specified limit",
										"text": "Does not transition state. To transition state call `setLimit` instead.\n"
									},
									"parameters": [
										{
											"id": 2921,
											"name": "limit",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2898,
										"name": "LimitOffsetPaginationState"
									}
								}
							]
						},
						{
							"id": 2933,
							"name": "next",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
									"line": 126,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2934,
									"name": "next",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Go to the next page"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"id": 3173,
										"name": "default.next"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3172,
								"name": "default.next"
							}
						},
						{
							"id": 2931,
							"name": "nextState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
									"line": 116,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2932,
									"name": "nextState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the state for the next page",
										"text": "Does not transition state. To transition state call `next` instead.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2898,
												"name": "LimitOffsetPaginationState"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 3175,
										"name": "default.nextState"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3174,
								"name": "default.nextState"
							}
						},
						{
							"id": 2925,
							"name": "offsetState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
									"line": 92,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2926,
									"name": "offsetState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the state for the specified offset",
										"text": "Does not transition state. To transition state call `offsetState` instead.\n"
									},
									"parameters": [
										{
											"id": 2927,
											"name": "offset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2898,
										"name": "LimitOffsetPaginationState"
									}
								}
							]
						},
						{
							"id": 2937,
							"name": "previous",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
									"line": 148,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2938,
									"name": "previous",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Go to the previous page."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"id": 3177,
										"name": "default.previous"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3176,
								"name": "default.previous"
							}
						},
						{
							"id": 2935,
							"name": "previousState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
									"line": 138,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2936,
									"name": "previousState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the state for the previous page",
										"text": "Does not transition state. To transition state call `previous` instead.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2898,
												"name": "LimitOffsetPaginationState"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 3179,
										"name": "default.previousState"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3178,
								"name": "default.previousState"
							}
						},
						{
							"id": 2969,
							"name": "replaceStateControllers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 159,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2970,
									"name": "replaceStateControllers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Paginator receives 2 tuples of a state and state setter pair. This is expected to\nmatch the same interface as `useState` in React. The following is a valid simple usage:",
										"text": "```js\nconst paginator = new Paginator(useState(), useState());\n```\n\nNote that we can also pass the state controllers in via `replaceStateControllers` rather\nthan in the constructor. This is so we can memoize the `Paginator` instance which is desirable\nwhen using the paginator as a dependency to React hooks.\n\nAs state is passed in and managed external to the class be aware that any data stored\non the class instance will be lost unless written with `setCurrentState` or `setInternalState`.\nThis design is a compromise between allowing a clear interface for how paginators should\nbe defined and allowing the state to be managed externally (eg. using React state).\n"
									},
									"parameters": [
										{
											"id": 2971,
											"name": "currentStatePair",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The state object and setter (eg. from `useState`) that is used to store\nand transition pagination state. Using this you can do things like easily store state in the URL\n(eg. using `useUrlQueryState`) or other data sources."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 2972,
											"name": "internalStatePair",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The state object and setter that is used for internal state. Internal state\nis stored separately as it does not need to be restored (eg. if you refresh the page). It is used\nto store things like the total number of results or the current cursor. Passing `useState` here is\nfine.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3159,
										"name": "default.replaceStateControllers"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3158,
								"name": "default.replaceStateControllers"
							}
						},
						{
							"id": 2922,
							"name": "setLimit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
									"line": 83,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2923,
									"name": "setLimit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Set the limit"
									},
									"parameters": [
										{
											"id": 2924,
											"name": "limit",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 2928,
							"name": "setOffset",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
									"line": 107,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2929,
									"name": "setOffset",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2930,
											"name": "offset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 2950,
							"name": "setResponse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
									"line": 224,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2951,
									"name": "setResponse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the internal data based on response. Expects `limit` to be in response data.",
										"text": "See [getPaginationState](doc:getPaginationState) for how to customise this if your backend implementation\ndiffers.\n"
									},
									"parameters": [
										{
											"id": 2952,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "Object"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"id": 3166,
										"name": "default.setResponse"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3165,
								"name": "default.setResponse"
							}
						},
						{
							"id": 2906,
							"name": "getPaginationState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
									"line": 241,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2907,
									"name": "getPaginationState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2908,
											"name": "requestDetails",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3060,
												"name": "PaginationRequestDetails"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": false
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										]
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2909
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2955,
								2956,
								2959,
								2963
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2915,
								2917,
								2967,
								2913
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2941,
								2939,
								2947,
								2953,
								2945,
								2943,
								2919,
								2933,
								2931,
								2925,
								2937,
								2935,
								2969,
								2922,
								2928,
								2950,
								2906
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
							"line": 22,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3135,
							"typeArguments": [
								{
									"type": "reference",
									"id": 2898,
									"name": "LimitOffsetPaginationState"
								},
								{
									"type": "reference",
									"id": 2902,
									"name": "InternalLimitOffsetPaginationState"
								}
							],
							"name": "default"
						}
					]
				},
				{
					"id": 2902,
					"name": "InternalLimitOffsetPaginationState",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
							"line": 9,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2903,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 2904,
									"name": "total",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
											"line": 10,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										2904
									]
								}
							],
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
									"line": 9,
									"character": 49
								}
							]
						}
					}
				},
				{
					"id": 2898,
					"name": "LimitOffsetPaginationState",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
							"line": 4,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2899,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 2900,
									"name": "limit",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
											"line": 5,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 2901,
									"name": "offset",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
											"line": 6,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										2900,
										2901
									]
								}
							],
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
									"line": 4,
									"character": 41
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2905
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						2902,
						2898
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/pagination/LimitOffsetPaginator.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2973,
			"name": "pagination/PageNumberPaginator",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2981,
					"name": "PageNumberPaginator",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Page number based paginator",
						"text": "Expects a `total` or `count` key and optional `pageSize` key in the response. `total` or `count` should be the total\nnumber of records available.\n\nIf your backend differs from this (for example by storing the values in different named keys or in headers instead of\nthe response body) you can handle that by extending this class and implementing `getPaginationState` or\nby passing `getPaginationState` to [usePaginator](doc:usePaginator).\n",
						"tags": [
							{
								"tag": "menu-group",
								"text": "Pagination"
							},
							{
								"tag": "extract-docs",
								"text": "\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 2985,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"comment": {},
							"signatures": [
								{
									"id": 2986,
									"name": "new PageNumberPaginator",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"tags": [
											{
												"tag": "see",
												"text": "documentation for `replaceStateControllers` for what `currentStatePair` and `internalStatePair` are\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2987,
											"name": "currentStatePair",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": null
											},
											"defaultValue": "null"
										},
										{
											"id": 2988,
											"name": "internalStatePair",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": null
											},
											"defaultValue": "null"
										}
									],
									"type": {
										"type": "reference",
										"id": 2981,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3137,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3136,
								"name": "default.constructor"
							}
						},
						{
							"id": 3036,
							"name": "currentState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 108,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2974,
								"name": "PageNumberPaginationState"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3144,
								"name": "default.currentState"
							}
						},
						{
							"id": 3037,
							"name": "internalState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 109,
									"character": 4
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 2978,
										"name": "InternalPageNumberPaginationState"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3038,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 3039,
													"name": "responseIsSet",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
															"line": 109,
															"character": 37
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														3039
													]
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3145,
								"name": "default.internalState"
							}
						},
						{
							"id": 3040,
							"name": "setCurrentState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 110,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3041,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 3042,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 3043,
													"name": "set",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2974,
														"name": "PageNumberPaginationState"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3148,
								"name": "default.setCurrentState"
							}
						},
						{
							"id": 3044,
							"name": "setInternalState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 111,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3045,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 3046,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 3047,
													"name": "set",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2978,
														"name": "InternalPageNumberPaginationState"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3152,
								"name": "default.setInternalState"
							}
						},
						{
							"id": 2993,
							"name": "page",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
									"line": 51,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2994,
									"name": "page",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The current page"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							]
						},
						{
							"id": 2995,
							"name": "pageSize",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
									"line": 68,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2996,
									"name": "pageSize",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The current page size (if known)."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							]
						},
						{
							"id": 3048,
							"name": "responseIsSet",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "True once setResponse has been called and pagination state is known."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 116,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3049,
									"name": "responseIsSet",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "True once setResponse has been called and pagination state is known."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Paginator.responseIsSet"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3156,
								"name": "default.responseIsSet"
							}
						},
						{
							"id": 2989,
							"name": "total",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
									"line": 31,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2990,
									"name": "total",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The total number of results available on the backend"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							]
						},
						{
							"id": 2991,
							"name": "totalPages",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
									"line": 41,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2992,
									"name": "totalPages",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The total number of pages"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							]
						},
						{
							"id": 3019,
							"name": "first",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
									"line": 171,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3020,
									"name": "first",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Go to the first page."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"id": 3169,
										"name": "default.first"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3168,
								"name": "default.first"
							}
						},
						{
							"id": 3017,
							"name": "firstState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
									"line": 164,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3018,
									"name": "firstState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the state for the first page",
										"text": "Does not transition state. To transition state call `first` instead.\n"
									},
									"type": {
										"type": "reference",
										"id": 2974,
										"name": "PageNumberPaginationState"
									},
									"overwrites": {
										"type": "reference",
										"id": 3171,
										"name": "default.firstState"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3170,
								"name": "default.firstState"
							}
						},
						{
							"id": 3025,
							"name": "getRequestInit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
									"line": 204,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3026,
									"name": "getRequestInit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Adds `page` and `pageSize` into query options passed through to the endpoint"
									},
									"parameters": [
										{
											"id": 3027,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "Object"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3055,
										"name": "PaginatorRequestOptions"
									},
									"overwrites": {
										"type": "reference",
										"id": 3163,
										"name": "default.getRequestInit"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3162,
								"name": "default.getRequestInit"
							}
						},
						{
							"id": 3034,
							"name": "hasNextPage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
									"line": 235,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3035,
									"name": "hasNextPage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if there's more results after the current page"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"overwrites": {
										"type": "reference",
										"id": 3181,
										"name": "default.hasNextPage"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3180,
								"name": "default.hasNextPage"
							}
						},
						{
							"id": 3023,
							"name": "last",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
									"line": 194,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3024,
									"name": "last",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Go to the last page. If the last page isn't yet known (eg. results\nhaven't yet been returned) then null will be returned.",
										"text": "If the last page is not yet known because results haven't been returned this function\ndoes nothing.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 3021,
							"name": "lastState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
									"line": 180,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3022,
									"name": "lastState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the state for the first page",
										"text": "Does not transition state. To transition state call `last` instead.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2974,
												"name": "PageNumberPaginationState"
											}
										]
									}
								}
							]
						},
						{
							"id": 3011,
							"name": "next",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
									"line": 139,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3012,
									"name": "next",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Go to the next page."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"id": 3173,
										"name": "default.next"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3172,
								"name": "default.next"
							}
						},
						{
							"id": 3009,
							"name": "nextState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
									"line": 132,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3010,
									"name": "nextState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the state for the next page",
										"text": "Does not transition state. To transition state call `next` instead.\n"
									},
									"type": {
										"type": "reference",
										"id": 2974,
										"name": "PageNumberPaginationState"
									},
									"overwrites": {
										"type": "reference",
										"id": 3175,
										"name": "default.nextState"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3174,
								"name": "default.nextState"
							}
						},
						{
							"id": 3003,
							"name": "pageSizeState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
									"line": 100,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3004,
									"name": "pageSizeState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the state for the specified page size",
										"text": "Does not transition state. To transition state call `setPageSize` instead.\n"
									},
									"parameters": [
										{
											"id": 3005,
											"name": "pageSize",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2974,
										"name": "PageNumberPaginationState"
									}
								}
							]
						},
						{
							"id": 2997,
							"name": "pageState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
									"line": 81,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2998,
									"name": "pageState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the state for the specified page number",
										"text": "Does not transition state. To transition state call `setPage` instead.\n"
									},
									"parameters": [
										{
											"id": 2999,
											"name": "page",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2974,
										"name": "PageNumberPaginationState"
									}
								}
							]
						},
						{
							"id": 3015,
							"name": "previous",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
									"line": 155,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3016,
									"name": "previous",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Go to the previous page."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"id": 3177,
										"name": "default.previous"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3176,
								"name": "default.previous"
							}
						},
						{
							"id": 3013,
							"name": "previousState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
									"line": 148,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3014,
									"name": "previousState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the state for the previous page",
										"text": "Does not transition state. To transition state call `previous` instead.\n"
									},
									"type": {
										"type": "reference",
										"id": 2974,
										"name": "PageNumberPaginationState"
									},
									"overwrites": {
										"type": "reference",
										"id": 3179,
										"name": "default.previousState"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3178,
								"name": "default.previousState"
							}
						},
						{
							"id": 3050,
							"name": "replaceStateControllers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 159,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3051,
									"name": "replaceStateControllers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Paginator receives 2 tuples of a state and state setter pair. This is expected to\nmatch the same interface as `useState` in React. The following is a valid simple usage:",
										"text": "```js\nconst paginator = new Paginator(useState(), useState());\n```\n\nNote that we can also pass the state controllers in via `replaceStateControllers` rather\nthan in the constructor. This is so we can memoize the `Paginator` instance which is desirable\nwhen using the paginator as a dependency to React hooks.\n\nAs state is passed in and managed external to the class be aware that any data stored\non the class instance will be lost unless written with `setCurrentState` or `setInternalState`.\nThis design is a compromise between allowing a clear interface for how paginators should\nbe defined and allowing the state to be managed externally (eg. using React state).\n"
									},
									"parameters": [
										{
											"id": 3052,
											"name": "currentStatePair",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The state object and setter (eg. from `useState`) that is used to store\nand transition pagination state. Using this you can do things like easily store state in the URL\n(eg. using `useUrlQueryState`) or other data sources."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3053,
											"name": "internalStatePair",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The state object and setter that is used for internal state. Internal state\nis stored separately as it does not need to be restored (eg. if you refresh the page). It is used\nto store things like the total number of results or the current cursor. Passing `useState` here is\nfine.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3159,
										"name": "default.replaceStateControllers"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3158,
								"name": "default.replaceStateControllers"
							}
						},
						{
							"id": 3000,
							"name": "setPage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
									"line": 91,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3001,
									"name": "setPage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Change to the specified page"
									},
									"parameters": [
										{
											"id": 3002,
											"name": "page",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 3006,
							"name": "setPageSize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
									"line": 123,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3007,
									"name": "setPageSize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Change to the specified page size"
									},
									"parameters": [
										{
											"id": 3008,
											"name": "pageSize",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 3028,
							"name": "setResponse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
									"line": 225,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3029,
									"name": "setResponse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the internal data based on response. Expects `total` and optionally `pageSize` to be in\nresponse data.",
										"text": "See [getPaginationState](doc:getPaginationState) for how to customise this if your backend implementation\ndiffers.\n"
									},
									"parameters": [
										{
											"id": 3030,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3031,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3033,
															"name": "pageSize",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
																	"line": 225,
																	"character": 54
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 3032,
															"name": "total",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
																	"line": 225,
																	"character": 39
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																3033,
																3032
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"id": 3166,
										"name": "default.setResponse"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3165,
								"name": "default.setResponse"
							}
						},
						{
							"id": 2982,
							"name": "getPaginationState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
									"line": 250,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2983,
									"name": "getPaginationState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Expects `decodedBody` to include a key `results` which should be an array of return records and a variable\n`count` or `total` that contains the total number of records available."
									},
									"parameters": [
										{
											"id": 2984,
											"name": "requestDetails",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 3060,
												"name": "PaginationRequestDetails"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": false
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										]
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2985
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3036,
								3037,
								3040,
								3044
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2993,
								2995,
								3048,
								2989,
								2991
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3019,
								3017,
								3025,
								3034,
								3023,
								3021,
								3011,
								3009,
								3003,
								2997,
								3015,
								3013,
								3050,
								3000,
								3006,
								3028,
								2982
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
							"line": 24,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3135,
							"typeArguments": [
								{
									"type": "reference",
									"id": 2974,
									"name": "PageNumberPaginationState"
								},
								{
									"type": "reference",
									"id": 2978,
									"name": "InternalPageNumberPaginationState"
								}
							],
							"name": "default"
						}
					]
				},
				{
					"id": 2978,
					"name": "InternalPageNumberPaginationState",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
							"line": 7,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2979,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 2980,
									"name": "total",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
											"line": 8,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										2980
									]
								}
							],
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
									"line": 7,
									"character": 48
								}
							]
						}
					}
				},
				{
					"id": 2974,
					"name": "PageNumberPaginationState",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
							"line": 3,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2975,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 2976,
									"name": "page",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
											"line": 4,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 2977,
									"name": "pageSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
											"line": 5,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										2976,
										2977
									]
								}
							],
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
									"line": 3,
									"character": 40
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2981
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						2978,
						2974
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/pagination/PageNumberPaginator.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3054,
			"name": "pagination/Paginator",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3135,
					"name": "Paginator",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isAbstract": true
					},
					"comment": {
						"shortText": "Base class for a paginator.",
						"tags": [
							{
								"tag": "menu-group",
								"text": "Pagination"
							},
							{
								"tag": "extract-docs",
								"text": "\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 3136,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 123,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3137,
									"name": "new Paginator",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"tags": [
											{
												"tag": "see",
												"text": "documentation for `replaceStateControllers` for what `currentStatePair` and `internalStatePair` are\n"
											}
										]
									},
									"typeParameter": [
										{
											"id": 3139,
											"name": "State",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3138,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										},
										{
											"id": 3141,
											"name": "InternalState",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3140,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										}
									],
									"parameters": [
										{
											"id": 3142,
											"name": "currentStatePair",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": null
											},
											"defaultValue": "null"
										},
										{
											"id": 3143,
											"name": "internalStatePair",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": null
											},
											"defaultValue": "null"
										}
									],
									"type": {
										"type": "reference",
										"id": 3135,
										"typeArguments": [
											{
												"type": "reference",
												"id": 3139,
												"name": "State"
											},
											{
												"type": "reference",
												"id": 3141,
												"name": "InternalState"
											}
										],
										"name": "default"
									}
								}
							]
						},
						{
							"id": 3144,
							"name": "currentState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 108,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 3139,
								"name": "State"
							},
							"implementationOf": {
								"type": "reference",
								"id": 3068,
								"name": "PaginatorInterface.currentState"
							}
						},
						{
							"id": 3145,
							"name": "internalState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 109,
									"character": 4
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 3141,
										"name": "InternalState"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3146,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 3147,
													"name": "responseIsSet",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
															"line": 109,
															"character": 37
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														3147
													]
												}
											]
										}
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"id": 3069,
								"name": "PaginatorInterface.internalState"
							}
						},
						{
							"id": 3148,
							"name": "setCurrentState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 110,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3149,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 3150,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 3151,
													"name": "set",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 3139,
														"name": "State"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							},
							"implementationOf": {
								"type": "reference",
								"id": 3070,
								"name": "PaginatorInterface.setCurrentState"
							}
						},
						{
							"id": 3152,
							"name": "setInternalState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 111,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3153,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 3154,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 3155,
													"name": "set",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 3141,
														"name": "InternalState"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							},
							"implementationOf": {
								"type": "reference",
								"id": 3073,
								"name": "PaginatorInterface.setInternalState"
							}
						},
						{
							"id": 3156,
							"name": "responseIsSet",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 116,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3157,
									"name": "responseIsSet",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "True once setResponse has been called and pagination state is known."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"implementationOf": {
										"type": "reference",
										"id": 3076,
										"name": "PaginatorInterface.responseIsSet"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 3076,
								"name": "PaginatorInterface.responseIsSet"
							}
						},
						{
							"id": 3168,
							"name": "first",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 210,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3169,
									"name": "first",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Go to the first page."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"id": 3080,
										"name": "PaginatorInterface.first"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 3079,
								"name": "PaginatorInterface.first"
							}
						},
						{
							"id": 3170,
							"name": "firstState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 219,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3171,
									"name": "firstState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the state for the first page",
										"text": "Does not transition state. To transition state call `first` instead.\n"
									},
									"type": {
										"type": "reference",
										"id": 3139,
										"name": "State"
									},
									"implementationOf": {
										"type": "reference",
										"id": 3082,
										"name": "PaginatorInterface.firstState"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 3081,
								"name": "PaginatorInterface.firstState"
							}
						},
						{
							"id": 3162,
							"name": "getRequestInit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 192,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3163,
									"name": "getRequestInit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the options to use with `Endpoint.execute` or `Endpoint.prepare`. Usually\nthis just involves setting `query` to the query string parameters for the paginator\nbut can also provide custom headers or different URL resolve arguments."
									},
									"parameters": [
										{
											"id": 3164,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The existing options for the endpoint\n"
											},
											"type": {
												"type": "reference",
												"id": 3055,
												"name": "PaginatorRequestOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3055,
										"name": "PaginatorRequestOptions"
									},
									"implementationOf": {
										"type": "reference",
										"id": 3092,
										"name": "PaginatorInterface.getRequestInit"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 3091,
								"name": "PaginatorInterface.getRequestInit"
							}
						},
						{
							"id": 3180,
							"name": "hasNextPage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 258,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3181,
									"name": "hasNextPage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if there's more results after the current page"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"implementationOf": {
										"type": "reference",
										"id": 3078,
										"name": "PaginatorInterface.hasNextPage"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 3077,
								"name": "PaginatorInterface.hasNextPage"
							}
						},
						{
							"id": 3172,
							"name": "next",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 226,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3173,
									"name": "next",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Go to the next page."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"id": 3084,
										"name": "PaginatorInterface.next"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 3083,
								"name": "PaginatorInterface.next"
							}
						},
						{
							"id": 3174,
							"name": "nextState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 235,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3175,
									"name": "nextState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the state for the next page",
										"text": "Does not transition state. To transition state call `next` instead.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 3139,
												"name": "State"
											}
										]
									},
									"implementationOf": {
										"type": "reference",
										"id": 3086,
										"name": "PaginatorInterface.nextState"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 3085,
								"name": "PaginatorInterface.nextState"
							}
						},
						{
							"id": 3176,
							"name": "previous",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 242,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3177,
									"name": "previous",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Go to the previous page."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"id": 3088,
										"name": "PaginatorInterface.previous"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 3087,
								"name": "PaginatorInterface.previous"
							}
						},
						{
							"id": 3178,
							"name": "previousState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 251,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3179,
									"name": "previousState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the state for the previous page",
										"text": "Does not transition state. To transition state call `previous` instead.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 3139,
												"name": "State"
											}
										]
									},
									"implementationOf": {
										"type": "reference",
										"id": 3090,
										"name": "PaginatorInterface.previousState"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 3089,
								"name": "PaginatorInterface.previousState"
							}
						},
						{
							"id": 3158,
							"name": "replaceStateControllers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 159,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3159,
									"name": "replaceStateControllers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Paginator receives 2 tuples of a state and state setter pair. This is expected to\nmatch the same interface as `useState` in React. The following is a valid simple usage:",
										"text": "```js\nconst paginator = new Paginator(useState(), useState());\n```\n\nNote that we can also pass the state controllers in via `replaceStateControllers` rather\nthan in the constructor. This is so we can memoize the `Paginator` instance which is desirable\nwhen using the paginator as a dependency to React hooks.\n\nAs state is passed in and managed external to the class be aware that any data stored\non the class instance will be lost unless written with `setCurrentState` or `setInternalState`.\nThis design is a compromise between allowing a clear interface for how paginators should\nbe defined and allowing the state to be managed externally (eg. using React state).\n"
									},
									"parameters": [
										{
											"id": 3160,
											"name": "currentStatePair",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The state object and setter (eg. from `useState`) that is used to store\nand transition pagination state. Using this you can do things like easily store state in the URL\n(eg. using `useUrlQueryState`) or other data sources."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3161,
											"name": "internalStatePair",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The state object and setter that is used for internal state. Internal state\nis stored separately as it does not need to be restored (eg. if you refresh the page). It is used\nto store things like the total number of results or the current cursor. Passing `useState` here is\nfine.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"id": 3098,
										"name": "PaginatorInterface.replaceStateControllers"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 3097,
								"name": "PaginatorInterface.replaceStateControllers"
							}
						},
						{
							"id": 3165,
							"name": "setResponse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 203,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3166,
									"name": "setResponse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "This is called when an `Endpoint` has resolved and is passed the response from the\nendpoint. This is used to update the relevant paginator state  - eg. the total\nnumber of records, next & previous cursors etc."
									},
									"parameters": [
										{
											"id": 3167,
											"name": "response",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The response as returned by the endpoint this paginator is used with.\n"
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"id": 3095,
										"name": "PaginatorInterface.setResponse"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 3094,
								"name": "PaginatorInterface.setResponse"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3136
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3144,
								3145,
								3148,
								3152
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3156
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3168,
								3170,
								3162,
								3180,
								3172,
								3174,
								3176,
								3178,
								3158,
								3165
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 105,
							"character": 30
						}
					],
					"typeParameter": [
						{
							"id": 3183,
							"name": "State",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3182,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
											"line": 105,
											"character": 54
										}
									]
								}
							}
						},
						{
							"id": 3185,
							"name": "InternalState",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3184,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
											"line": 105,
											"character": 80
										}
									]
								}
							}
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 2733,
							"name": "CursorPaginator"
						},
						{
							"type": "reference",
							"id": 2905,
							"name": "LimitOffsetPaginator"
						},
						{
							"type": "reference",
							"id": 2981,
							"name": "PageNumberPaginator"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 3067,
							"typeArguments": [
								{
									"type": "reference",
									"id": 3139,
									"name": "State"
								},
								{
									"type": "reference",
									"id": 3141,
									"name": "InternalState"
								}
							],
							"name": "PaginatorInterface"
						}
					]
				},
				{
					"id": 3067,
					"name": "PaginatorInterface",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3068,
							"name": "currentState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 73,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 3102,
								"name": "State"
							}
						},
						{
							"id": 3069,
							"name": "internalState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 74,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 3104,
								"name": "InternalState"
							}
						},
						{
							"id": 3076,
							"name": "responseIsSet",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 77,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3079,
							"name": "first",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 3080,
									"name": "first",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 3081,
							"name": "firstState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 3082,
									"name": "firstState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 3102,
												"name": "State"
											}
										]
									}
								}
							]
						},
						{
							"id": 3091,
							"name": "getRequestInit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 3092,
									"name": "getRequestInit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3093,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3055,
												"name": "PaginatorRequestOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3055,
										"name": "PaginatorRequestOptions"
									}
								}
							]
						},
						{
							"id": 3077,
							"name": "hasNextPage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 3078,
									"name": "hasNextPage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 3083,
							"name": "next",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 3084,
									"name": "next",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 3085,
							"name": "nextState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 3086,
									"name": "nextState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 3102,
												"name": "State"
											}
										]
									}
								}
							]
						},
						{
							"id": 3087,
							"name": "previous",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 3088,
									"name": "previous",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 3089,
							"name": "previousState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 3090,
									"name": "previousState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 3102,
												"name": "State"
											}
										]
									}
								}
							]
						},
						{
							"id": 3097,
							"name": "replaceStateControllers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 3098,
									"name": "replaceStateControllers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3099,
											"name": "currentStatePair",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3100,
											"name": "internalStatePair",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 3070,
							"name": "setCurrentState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 75,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3071,
									"name": "setCurrentState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3072,
											"name": "set",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3102,
												"name": "State"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 3073,
							"name": "setInternalState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 76,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3074,
									"name": "setInternalState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3075,
											"name": "set",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3104,
												"name": "InternalState"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 3094,
							"name": "setResponse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 3095,
									"name": "setResponse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3096,
											"name": "response",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3068,
								3069,
								3076
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3079,
								3081,
								3091,
								3077,
								3083,
								3085,
								3087,
								3089,
								3097,
								3070,
								3073,
								3094
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 72,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 3102,
							"name": "State",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "reflection",
								"declaration": {
									"id": 3101,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
											"line": 72,
											"character": 44
										}
									]
								}
							}
						},
						{
							"id": 3104,
							"name": "InternalState",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "reflection",
								"declaration": {
									"id": 3103,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
											"line": 72,
											"character": 64
										}
									]
								}
							}
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"id": 2799,
							"name": "InferredPaginator"
						},
						{
							"type": "reference",
							"id": 3135,
							"name": "Paginator"
						}
					]
				},
				{
					"id": 3105,
					"name": "PaginatorInterfaceClass",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3132,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3133,
									"name": "new PaginatorInterfaceClass",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3134,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3131,
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Function.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.constructor"
							}
						},
						{
							"id": 3125,
							"name": "arguments",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 304,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.arguments"
							}
						},
						{
							"id": 3126,
							"name": "caller",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 305,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Function",
								"package": "typescript",
								"name": "Function"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.caller"
							}
						},
						{
							"id": 3124,
							"name": "length",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.length"
							}
						},
						{
							"id": 3127,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Returns the name of the function. Function names are read-only and can not be changed."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/node_modules/typescript/lib/lib.es2015.core.d.ts",
									"line": 97,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.name"
							}
						},
						{
							"id": 3123,
							"name": "prototype",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 300,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.prototype"
							}
						},
						{
							"id": 3128,
							"name": "[hasInstance]",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 3129,
									"name": "[hasInstance]",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Determines whether the given value inherits from this function if this function was used\nas a constructor function.",
										"text": "A constructor function can control which objects are recognized as its instances by\n'instanceof' by overriding this method.\n"
									},
									"parameters": [
										{
											"id": 3130,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Function.__@hasInstance@68385"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.__@hasInstance@68385"
							}
						},
						{
							"id": 3109,
							"name": "apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 3110,
									"name": "apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Calls the function, substituting the specified object for the this value of the function, and the specified array for the arguments of the function."
									},
									"parameters": [
										{
											"id": 3111,
											"name": "thisArg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The object to be used as the this object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3112,
											"name": "argArray",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"comment": {
												"shortText": "A set of arguments to be passed to the function.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Function.apply"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.apply"
							}
						},
						{
							"id": 3117,
							"name": "bind",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 3118,
									"name": "bind",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "For a given function, creates a bound function that has the same body as the original function.\nThe this object of the bound function is associated with the specified object, and has the specified initial parameters."
									},
									"parameters": [
										{
											"id": 3119,
											"name": "thisArg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "An object to which the this keyword can refer inside the new function."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3120,
											"name": "argArray",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isRest": true
											},
											"comment": {
												"shortText": "A list of arguments to be passed to the new function.\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Function.bind"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.bind"
							}
						},
						{
							"id": 3113,
							"name": "call",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 3114,
									"name": "call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Calls a method of an object, substituting another object for the current object."
									},
									"parameters": [
										{
											"id": 3115,
											"name": "thisArg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The object to be used as the current object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3116,
											"name": "argArray",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isRest": true
											},
											"comment": {
												"shortText": "A list of arguments to be passed to the method.\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Function.call"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.call"
							}
						},
						{
							"id": 3106,
							"name": "getPaginationState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 3107,
									"name": "getPaginationState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3108,
											"name": "requestDetails",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3060,
												"name": "PaginationRequestDetails"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": false
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										]
									}
								}
							]
						},
						{
							"id": 3121,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 3122,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of a function."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Function.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3132
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3125,
								3126,
								3124,
								3127,
								3123
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3128,
								3109,
								3117,
								3113,
								3106,
								3121
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 92,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 3131,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 3067,
								"name": "PaginatorInterface"
							},
							"default": {
								"type": "reference",
								"id": 3067,
								"name": "PaginatorInterface"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Function",
							"package": "typescript",
							"name": "Function"
						}
					]
				},
				{
					"id": 3060,
					"name": "PaginationRequestDetails",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "eg. the return value from [Endpoint.execute](doc:Endpoint#method-execute)",
						"tags": [
							{
								"tag": "expand-properties",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 27,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3061,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 3066,
									"name": "decodedBody",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The value returned by `decodedBody`. See [Endpoint.execute](doc:Endpoint#method-execute).",
										"text": "This may be a sub-key of the data returned by `Endpoint.execute`, eg. if the `path` option is used in\n[paginationMiddleware](doc:paginationMiddleware). eg. If `decodedBody` from the `Endpoint` was\n\n```json\n{\n    users: {\n        count: 10,\n        results: [...],\n    }\n    extraDetails: {...}\n}\n```\n\nand `paginationMiddleware` was used with `path: 'users'` then `decodedBody` would be:\n\n```json\n{\n    count: 10,\n    results: [...]\n}\n```\n"
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
											"line": 69,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 3062,
									"name": "query",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Any query string parameters"
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
											"line": 31,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"qualifiedName": "Record",
										"package": "typescript",
										"name": "Record"
									}
								},
								{
									"id": 3065,
									"name": "response",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The `Response` object, if available"
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
											"line": 43,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Response",
										"package": "typescript",
										"name": "Response"
									}
								},
								{
									"id": 3064,
									"name": "url",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Resolved URL"
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
											"line": 39,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3063,
									"name": "urlArgs",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Any arguments used to resolve URL"
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
											"line": 35,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"qualifiedName": "Record",
										"package": "typescript",
										"name": "Record"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										3066,
										3062,
										3065,
										3064,
										3063
									]
								}
							],
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
									"line": 27,
									"character": 39
								}
							]
						}
					}
				},
				{
					"id": 3055,
					"name": "PaginatorRequestOptions",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "An object containing the below properties in addition to those accepted by [fetch init](https://developer.mozilla.org/en-US/docs/Web/API/fetch#parameters)",
						"tags": [
							{
								"tag": "expand-properties",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
							"line": 6,
							"character": 12
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"qualifiedName": "RequestInit",
										"package": "typescript",
										"name": "RequestInit"
									},
									{
										"type": "literal",
										"value": "headers"
									}
								],
								"qualifiedName": "Omit",
								"package": "typescript",
								"name": "Omit"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3056,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3057,
											"name": "headers",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Any headers to add to the request. You can unset default headers that might be specified in the default\n`Endpoint.defaultConfig.requestInit` by setting the value to `undefined`."
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
													"line": 11,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "HeadersInit",
														"package": "typescript",
														"name": "HeadersInit"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"qualifiedName": "Record",
														"package": "typescript",
														"name": "Record"
													}
												]
											}
										},
										{
											"id": 3059,
											"name": "query",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Any query request parameters"
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
													"line": 19,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "boolean"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										},
										{
											"id": 3058,
											"name": "urlArgs",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Any arguments for the [URL](doc:UrlPattern)"
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
													"line": 15,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3057,
												3059,
												3058
											]
										}
									],
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
											"line": 6,
											"character": 69
										}
									]
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3135
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						3067,
						3105
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						3060,
						3055
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/pagination/Paginator.ts",
					"line": 6,
					"character": 0
				}
			]
		},
		{
			"id": 3186,
			"name": "pagination/usePaginator",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3187,
					"name": "PaginatorClassProvider",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3188,
							"name": "getPaginatorClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 3189,
									"name": "getPaginatorClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 3105,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3190,
														"name": "T"
													}
												],
												"name": "PaginatorInterfaceClass"
											}
										]
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3188
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/usePaginator.ts",
							"line": 4,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 3190,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 3067,
								"name": "PaginatorInterface"
							}
						}
					]
				},
				{
					"id": 3191,
					"name": "usePaginator",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"originalName": "default",
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/pagination/usePaginator.ts",
							"line": 28,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 3192,
							"name": "usePaginator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Hook to help manage paginator state. An instance of the specified paginator is created with provided\nstate setter or a default setter if none provided. You only need to provide a state setter if you\nwant to store the state somewhere external eg. from URL query parameters.",
								"tags": [
									{
										"tag": "menu-group",
										"text": "Pagination"
									},
									{
										"tag": "extract-docs",
										"text": "\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 3195,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3067,
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 3193,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3194,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											},
											{
												"type": "reference",
												"id": 3195,
												"name": "T"
											}
										],
										"name": "PaginatorInterface"
									}
								},
								{
									"id": 3196,
									"name": "PaginatorState",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 3197,
									"name": "paginatorClassOrProvider",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Must either be an object with a `getPaginatorClass` method (eg.\n[Endpoint](doc:Endpoint)) or a [Paginator](doc:Paginator) class. This class defines how pagination is\nhandled."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 3105,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3195,
														"name": "T"
													}
												],
												"name": "PaginatorInterfaceClass"
											},
											{
												"type": "reference",
												"id": 3187,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3195,
														"name": "T"
													}
												],
												"name": "PaginatorClassProvider"
											}
										]
									}
								},
								{
									"id": 3198,
									"name": "currentStatePair",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "A tuple of current state and a state setter function. If not provided state\nis handled internally in usePaginator. You can pass `useState()` to this parameter.\n"
									},
									"type": {
										"type": "tuple",
										"elements": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reference",
														"id": 3196,
														"name": "PaginatorState"
													}
												]
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3199,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3200,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 3201,
																	"name": "value",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"id": 3196,
																		"name": "PaginatorState"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3195,
								"name": "T"
							}
						},
						{
							"id": 3202,
							"name": "usePaginator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 3203,
									"name": "PaginatorState",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 3204,
									"name": "paginatorClassOrProvider",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "literal",
										"value": null
									}
								},
								{
									"id": 3205,
									"name": "currentStatePair",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "tuple",
										"elements": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reference",
														"id": 3203,
														"name": "PaginatorState"
													}
												]
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3206,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3207,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 3208,
																	"name": "value",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"id": 3203,
																		"name": "PaginatorState"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "literal",
								"value": null
							}
						},
						{
							"id": 3209,
							"name": "usePaginator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 3212,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3067,
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 3210,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3211,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											},
											{
												"type": "reference",
												"id": 3212,
												"name": "T"
											}
										],
										"name": "PaginatorInterface"
									}
								},
								{
									"id": 3213,
									"name": "PaginatorState",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 3214,
									"name": "paginatorClassOrProvider",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 3105,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3212,
														"name": "T"
													}
												],
												"name": "PaginatorInterfaceClass"
											},
											{
												"type": "reference",
												"id": 3187,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3212,
														"name": "T"
													}
												],
												"name": "PaginatorClassProvider"
											}
										]
									}
								},
								{
									"id": 3215,
									"name": "currentStatePair",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "tuple",
										"elements": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reference",
														"id": 3213,
														"name": "PaginatorState"
													}
												]
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3216,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3217,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 3218,
																	"name": "value",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"id": 3213,
																		"name": "PaginatorState"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 3212,
										"name": "T"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						3187
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						3191
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/pagination/usePaginator.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3219,
			"name": "time",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3227,
					"name": "InvalidTimeError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 3237,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3238,
									"name": "new InvalidTimeError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3239,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3227,
										"name": "InvalidTimeError"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Error.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.constructor"
							}
						},
						{
							"id": 3241,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1023,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.message"
							}
						},
						{
							"id": 3240,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1022,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.name"
							}
						},
						{
							"id": 3242,
							"name": "stack",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1024,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.stack"
							}
						},
						{
							"id": 3236,
							"name": "stackTraceLimit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/node_modules/@types/node/globals.d.ts",
									"line": 117,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.stackTraceLimit"
							}
						},
						{
							"id": 3228,
							"name": "captureStackTrace",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 3229,
									"name": "captureStackTrace",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Create .stack property on a target object"
									},
									"parameters": [
										{
											"id": 3230,
											"name": "targetObject",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 3231,
											"name": "constructorOpt",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Function",
												"package": "typescript",
												"name": "Function"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Error.captureStackTrace"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.captureStackTrace"
							}
						},
						{
							"id": 3232,
							"name": "prepareStackTrace",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/node_modules/@types/node/globals.d.ts",
									"line": 115,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3233,
									"name": "prepareStackTrace",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Optional override for formatting stack traces",
										"tags": [
											{
												"tag": "see",
												"text": "https://github.com/v8/v8/wiki/Stack%20Trace%20API#customizing-stack-traces\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3234,
											"name": "err",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Error",
												"package": "typescript",
												"name": "Error"
											}
										},
										{
											"id": 3235,
											"name": "stackTraces",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"qualifiedName": "NodeJS.CallSite",
													"package": "@types/node",
													"name": "CallSite"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Error.prepareStackTrace"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.prepareStackTrace"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3237
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3241,
								3240,
								3242,
								3236
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3228,
								3232
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/time.ts",
							"line": 17,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Error",
							"package": "typescript",
							"name": "Error"
						}
					]
				},
				{
					"id": 3223,
					"name": "formatTime",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/time.ts",
							"line": 116,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 3224,
							"name": "formatTime",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Format the parts of a time - as returned by [parseTime](doc:parseTime) - as a string using\n[toLocaleString](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleString#using_options).",
								"text": "Note that while you can pass through `options.timeZone` this may be inaccurate if `parts.timezoneOffset` isn't\nsupplied.\n",
								"tags": [
									{
										"tag": "extract-docs",
										"text": ""
									},
									{
										"tag": "menu-group",
										"text": "Time\n"
									}
								]
							},
							"parameters": [
								{
									"id": 3225,
									"name": "parts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											},
											{
												"type": "reference",
												"name": "TimeParts"
											}
										]
									}
								},
								{
									"id": 3226,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "TimeFormatOptions"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 3220,
					"name": "parseTime",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/time.ts",
							"line": 49,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 3221,
							"name": "parseTime",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Parse a string into its constituent time parts",
								"text": "Returns an object containing the `hour`, `minute`, `second`, `millisecond` and optional `timezone` values.\n\nAccepts input of the form `H:MM[:SS[:.mmm:[+TZ]]]` where `H` is hours, `MM` is minutes, `SS` is seconds, `mmm` is\nmilliseconds and `+TZ` is the timezone (eg. +10:00).\n\nSeconds & milliseconds are optional and will default to 0 if not in the string, timezone is optional and will be\nleft as undefined if not specified.\n\nNOTE: If you pass a `Date` object then the timezone offset will always be whatever the local browser/env timezone\nis (ie. it's not possible to have a javascript `Date` object in another timezone).\n\n```js\nparseTime(\"3:55\")\n// { hour: 3, minute: 55, seconds: 0, milliseconds: 0 }\nparseTime(\"03:55:20\")\n// { hour: 3, minute: 55, seconds: 20, milliseconds: 0 }\nparseTime(\"03:55:20.600\")\n// { hour: 3, minute: 55, seconds: 20, milliseconds: 600 }\nparseTime(\"03:55:20.600+10:00\")\n// { hour: 3, minute: 55, seconds: 20, milliseconds: 600, timezoneOffset: -600 }\n```\n",
								"tags": [
									{
										"tag": "extract-docs",
										"text": ""
									},
									{
										"tag": "menu-group",
										"text": "Time\n"
									}
								]
							},
							"parameters": [
								{
									"id": 3222,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The string value to parse\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "TimeParts"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3227
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						3223,
						3220
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/time.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3243,
			"name": "useAsync",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3267,
					"name": "UseAsyncOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "expand-properties",
								"text": "\n"
							}
						]
					},
					"children": [
						{
							"id": 3269,
							"name": "args",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Arguments to be passed to asyncFn when it is called. Can be empty. If you are using `trigger` of\n`MANUAL` then it's usually simpler to just pass the arguments in `fn` manually (eg. by defining\nan arrow function inline). When using other values of `trigger` the value of `args` is compared\nand will trigger a call to `fn` when a change is detected according to the comparison logic of the\nselected `trigger`."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/useAsync.ts",
									"line": 107,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						},
						{
							"id": 3271,
							"name": "onError",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Called when action errors. Passed the error returned from async action.",
								"text": "See note above on `onSuccess` for behaviour when component has unmounted.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/useAsync.ts",
									"line": 124,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 3250,
								"name": "OnError"
							}
						},
						{
							"id": 3270,
							"name": "onSuccess",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Called when action resolves successfully. Is passed a single parameter which\nis the result from the async action.",
								"text": "**NOTE:** If your component unmounts before the promise resolves this function\nwill NOT be called. This is to avoid the general case of calling React\nstate transition functions on an unmounted component. If you want the\nmethod to be called regardless then attach your own callbacks to the\npromise when you call `run` or in the async function definition itself.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/useAsync.ts",
									"line": 118,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 3246,
								"name": "OnSuccess"
							}
						},
						{
							"id": 3268,
							"name": "trigger",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Determines when the function is called. Defaults to `MANUAL`.",
								"text": "**NOTE**: If changing from MANUAL then the function will be called immediately regardless\n\n**useAsync.MANUAL (default)** - only called when you explicitly call `run`\n\n**useAsync.SHALLOW** - called whenever a shallow equality check fails. Compares previous async function,\nand `option.args`. Passing an inline function (eg. `useAsync(() => ...)`) or an inline object\nto args (eg. `useAsync(fn, { args: { filter: 1 } })`) with this option will result in an\ninfinite loop because each render dynamically creates a new object and only object identity is checked;\nuse `useMemo` or `useCallback` in these cases.\n\n**useAsync.DEEP** - called whenever a deep equality check fails. Compares previous async function and\n`option.args`. Slower than `shallow` but works with objects that may change every render. Passing an\ninline function (eg. `useAsync(() => ...)`) with this option will result in an infinite loop as a new\nfunction is created each render and a deep equality check on this will always fail; use `useCallback` in\nthose cases.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/useAsync.ts",
									"line": 99,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "MANUAL"
									},
									{
										"type": "literal",
										"value": "DEEP"
									},
									{
										"type": "literal",
										"value": "SHALLOW"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3269,
								3271,
								3270,
								3268
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/useAsync.ts",
							"line": 79,
							"character": 17
						}
					]
				},
				{
					"id": 3272,
					"name": "UseAsyncReturnObject",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/useAsync.ts",
							"line": 151,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 3283,
							"name": "ResultT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 3284,
							"name": "ErrorT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3273,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 3275,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Set to the rejected value of the promise. Only one of `error` and `result` can be set. If\n`isLoading` is true consider this stale (ie. based on _previous_ props). This can be useful\nwhen you want the UI to show the previous value until the next value is ready.",
										"text": "ROFL\n\n```tsx\nexport default function MyComponent() {\n // HEHE\n const y = 5 + 5;\n return <div>test</div>\n}\n```\n"
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useAsync.ts",
											"line": 171,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 3284,
												"name": "ErrorT"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 3274,
									"name": "isLoading",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "True when action is in progress."
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useAsync.ts",
											"line": 155,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3277,
									"name": "response",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"tags": [
											{
												"tag": "deprecated",
												"text": "Use `result` instead\n"
											}
										]
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useAsync.ts",
											"line": 182,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 3283,
												"name": "ResultT"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 3276,
									"name": "result",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Set to the resolved value of promise. Only one of `error` and `result` can be set. If\n`isLoading` is true consider this stale (ie. based on _previous_ props). This can be useful\nwhen you want the UI to show the previous value until the next value is ready (for example showing\nthe previous page of a paginated table with a loading indicator while next page is loading)."
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useAsync.ts",
											"line": 178,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 3283,
												"name": "ResultT"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 3281,
									"name": "reset",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useAsync.ts",
											"line": 198,
											"character": 4
										}
									],
									"signatures": [
										{
											"id": 3282,
											"name": "reset",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "When called will set both result or error to null. Will not immediately trigger\na call to the action but subsequent changes to `fn` or `options.args` will\naccording to the value of `trigger`."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 3278,
									"name": "run",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useAsync.ts",
											"line": 192,
											"character": 4
										}
									],
									"signatures": [
										{
											"id": 3279,
											"name": "run",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "A function to manually trigger the action. If `options.trigger` is `useAsync.MANUAL`\ncalling this function is the only way to trigger the action. You can pass\narguments to `run` which will override the defaults. If no arguments are passed then\n`options.args` will be passed by default (if supplied).",
												"text": "This function will return a promise that resolves/rejects to same value\nresolved/rejected from the async action.\n"
											},
											"parameters": [
												{
													"id": 3280,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isRest": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 3283,
														"name": "ResultT"
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										3275,
										3274,
										3277,
										3276
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										3281,
										3278
									]
								}
							],
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/useAsync.ts",
									"line": 151,
									"character": 52
								}
							]
						}
					}
				},
				{
					"id": 3285,
					"name": "default",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "query",
								"queryType": {
									"type": "reference",
									"id": 3244,
									"name": "useAsync"
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3286,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3288,
											"name": "DEEP",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/src/useAsync.ts",
													"line": 500,
													"character": 13
												}
											],
											"type": {
												"type": "literal",
												"value": "DEEP"
											}
										},
										{
											"id": 3287,
											"name": "MANUAL",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/src/useAsync.ts",
													"line": 499,
													"character": 13
												}
											],
											"type": {
												"type": "literal",
												"value": "MANUAL"
											}
										},
										{
											"id": 3289,
											"name": "SHALLOW",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/src/useAsync.ts",
													"line": 501,
													"character": 13
												}
											],
											"type": {
												"type": "literal",
												"value": "SHALLOW"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3288,
												3287,
												3289
											]
										}
									]
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						3267
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						3272
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						3285
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/useAsync.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3290,
			"name": "useAsyncListing",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3305,
					"name": "UseAsyncListingProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "expand-properties",
								"text": ""
							},
							{
								"tag": "export-in-docs",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
							"line": 25,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 3314,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3306,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 3309,
									"name": "accumulatePages",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Whether to accumulate pages as more results are fetched. For example\nif the first page of results is returned, then the next page is fetched\nthen the combined results for the first two pages will be resolved.",
										"text": "This resets whenever `query` changes or if pagination state changes\nto anything other than the next page.\n\nIf this is true you must specify `paginator`.\n"
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
											"line": 51,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3310,
									"name": "paginator",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Optional paginator if result is paginated. This will be monitored for\nany state changes which will trigger a call to `execute`.",
										"text": "Required if `accumulatePages` is true.\n"
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
											"line": 58,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 3067,
												"name": "PaginatorInterface"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 3308,
									"name": "query",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Any query string parameters for the request"
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
											"line": 40,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"qualifiedName": "Record",
										"package": "typescript",
										"name": "Record"
									}
								},
								{
									"id": 3307,
									"name": "trigger",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "When to trigger the fetch. Defaults to `DEEP` which means whenever a deep\nequality check on `query` or `paginator` state fails it will refetch.",
										"text": "If set to `MANUAL` nothing will happen until it changes to `DEEP` or you\ncall the returned `run` function. You can use this to defer execution until\nthe value is required.\n\nDefaults to 'DEEP'.\n"
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
											"line": 36,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "MANUAL"
											},
											{
												"type": "literal",
												"value": "DEEP"
											}
										]
									}
								},
								{
									"id": 3311,
									"name": "execute",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
											"line": 67,
											"character": 4
										}
									],
									"signatures": [
										{
											"id": 3312,
											"name": "execute",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Asynchronous function that returns the result for the query. Passed an\nobject with `query` and `paginator` keys.",
												"text": "Note that when `trigger` is `DEEP` changes to this function will cause it\nto be called again so you must memoize it (eg. with `useCallback`) if it's\ndefined in your component or hook.\n"
											},
											"parameters": [
												{
													"id": 3313,
													"name": "props",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 3291,
														"name": "UseAsyncListingExecuteProps"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 3314,
														"name": "T"
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										3309,
										3310,
										3308,
										3307
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										3311
									]
								}
							],
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
									"line": 25,
									"character": 38
								}
							]
						}
					}
				},
				{
					"id": 3315,
					"name": "UseAsyncListingReturn",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "export-in-docs",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
							"line": 102,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 3325,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 3295,
										"typeArguments": [
											{
												"type": "reference",
												"id": 3325,
												"name": "T"
											}
										],
										"name": "UseAsyncListingReturnCommon"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3316,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 3317,
													"name": "error",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Until first call has resolved neither error nor result will be set"
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
															"line": 107,
															"character": 10
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												},
												{
													"id": 3318,
													"name": "result",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
															"line": 108,
															"character": 10
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														3317,
														3318
													]
												}
											],
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
													"line": 103,
													"character": 40
												}
											]
										}
									}
								]
							},
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 3295,
										"typeArguments": [
											{
												"type": "reference",
												"id": 3325,
												"name": "T"
											}
										],
										"name": "UseAsyncListingReturnCommon"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3319,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 3320,
													"name": "error",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Set to the rejected value of the promise. Only one of `error` and `result` can be set. If\n`isLoading` is true consider this stale (ie. based on _previous_ props). This can be useful\nwhen you want the UI to show the previous value until the next value is ready."
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
															"line": 116,
															"character": 10
														}
													],
													"type": {
														"type": "reference",
														"qualifiedName": "Error",
														"package": "typescript",
														"name": "Error"
													}
												},
												{
													"id": 3321,
													"name": "result",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Result will not be set when error is set"
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
															"line": 120,
															"character": 10
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														3320,
														3321
													]
												}
											],
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
													"line": 110,
													"character": 40
												}
											]
										}
									}
								]
							},
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 3295,
										"typeArguments": [
											{
												"type": "reference",
												"id": 3325,
												"name": "T"
											}
										],
										"name": "UseAsyncListingReturnCommon"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3322,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 3323,
													"name": "error",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Error will not be set when result is set"
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
															"line": 126,
															"character": 10
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												},
												{
													"id": 3324,
													"name": "result",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "The value returned from execute"
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
															"line": 130,
															"character": 10
														}
													],
													"type": {
														"type": "reference",
														"id": 3325,
														"name": "T"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														3323,
														3324
													]
												}
											],
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
													"line": 122,
													"character": 40
												}
											]
										}
									}
								]
							}
						]
					}
				},
				{
					"id": 3326,
					"name": "useAsyncListing",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"originalName": "default",
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
							"line": 144,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 3327,
							"name": "useAsyncListing",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Execute an asynchronous call and return the value which can optionally be paginated.",
								"text": "If the result is paginated you can pass `paginator`. Whenever the paginator state\nis changed the function will be called unless `trigger` is `MANUAL`. You can pass\n`accumulatePages` to accumulate results for sequential pages returned from `execute`.\nThis is useful to implement things like infinite scroll. If a non-sequential page\nis accessed or `query` changes then accumulated results will be cleared.\n",
								"tags": [
									{
										"tag": "extract-docs",
										"text": "\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 3328,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 3329,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3305,
										"typeArguments": [
											{
												"type": "reference",
												"id": 3328,
												"name": "T"
											}
										],
										"name": "UseAsyncListingProps"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3315,
								"typeArguments": [
									{
										"type": "reference",
										"id": 3328,
										"name": "T"
									}
								],
								"name": "UseAsyncListingReturn"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						3305,
						3315
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						3326
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3330,
			"name": "useAsyncValue",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3339,
					"name": "UseAsyncValuePropsMulti",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "expand-properties",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
							"line": 83,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 3345,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 3346,
							"name": "U",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2717,
								"name": "Id"
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 3345,
										"name": "T"
									},
									{
										"type": "reference",
										"id": 3346,
										"name": "U"
									}
								],
								"name": "CommonProps"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3340,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3341,
											"name": "ids",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Array of ids to resolve values for or null if nothing yet to resolve",
												"text": "If you need to resolve a single value use the other form documented above\npassing `id` instead\n"
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
													"line": 90,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 3346,
															"name": "U"
														}
													},
													{
														"type": "literal",
														"value": null
													}
												]
											}
										},
										{
											"id": 3342,
											"name": "resolve",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
													"line": 95,
													"character": 4
												}
											],
											"signatures": [
												{
													"id": 3343,
													"name": "resolve",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Resolve the value for the provided IDs. Function is passed a single parameter\nbeing `ids`"
													},
													"parameters": [
														{
															"id": 3344,
															"name": "ids",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 3346,
																	"name": "U"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 3345,
																	"name": "T"
																}
															}
														],
														"qualifiedName": "Promise",
														"package": "typescript",
														"name": "Promise"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3341
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												3342
											]
										}
									],
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
											"line": 83,
											"character": 75
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 3331,
					"name": "UseAsyncValuePropsSingle",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "expand-properties",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
							"line": 61,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 3337,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 3338,
							"name": "U",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2717,
								"name": "Id"
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 3337,
										"name": "T"
									},
									{
										"type": "reference",
										"id": 3338,
										"name": "U"
									}
								],
								"name": "CommonProps"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3332,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3333,
											"name": "id",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Single `id` for value to fetch or null if nothing yet to resolve.",
												"text": "If you need to resolve multiple values use the other form documented\nbelow passing `ids` instead.\n"
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
													"line": 68,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 3338,
														"name": "U"
													},
													{
														"type": "literal",
														"value": null
													}
												]
											}
										},
										{
											"id": 3334,
											"name": "resolve",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
													"line": 77,
													"character": 4
												}
											],
											"signatures": [
												{
													"id": 3335,
													"name": "resolve",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Resolve the value for the provided ID. Function is passed a single parameter\nbeing `id`.",
														"text": "Note that when `trigger` is `DEEP` changes to this function will cause it\nto be called again so you must memoize it (eg. with `useCallback`) if it's\ndefined in your component or hook.\n"
													},
													"parameters": [
														{
															"id": 3336,
															"name": "id",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 3338,
																"name": "U"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 3337,
																"name": "T"
															}
														],
														"qualifiedName": "Promise",
														"package": "typescript",
														"name": "Promise"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3333
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												3334
											]
										}
									],
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
											"line": 61,
											"character": 76
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 3347,
					"name": "UseAsyncValueReturn",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
							"line": 98,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 3357,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3348,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 3349,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Set to the rejected value of the promise. Only one of `error` and `value` can be set. If\n`isLoading` is true consider this stale (ie. based on _previous_ props). This can be useful\nwhen you want the UI to show the previous value until the next value is ready."
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
											"line": 104,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"qualifiedName": "Error",
												"package": "typescript",
												"name": "Error"
											}
										]
									}
								},
								{
									"id": 3350,
									"name": "isLoading",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "True while `resolve` call is in progress."
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
											"line": 108,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3351,
									"name": "value",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The resolved value"
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
											"line": 112,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 3357,
												"name": "T"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 3355,
									"name": "reset",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
											"line": 130,
											"character": 4
										}
									],
									"signatures": [
										{
											"id": 3356,
											"name": "reset",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "When called will set both result and error to null. Will not immediately trigger\na call to the action but subsequent changes to query or paginator will according\nto the value of `trigger`.",
												"text": "If value is found in `existingValues` then it will still be returned even if\nyou call `reset` - `reset` only clears values that are returned from `resolve`.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 3352,
									"name": "run",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
											"line": 121,
											"character": 4
										}
									],
									"signatures": [
										{
											"id": 3353,
											"name": "run",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "A function to manually trigger the action. If `options.trigger` is `MANUAL`\ncalling this function is the only way to trigger the action.",
												"text": "This function will return a promise that resolves/rejects to same value\nreturned by `execute`. If `accumulatePages` is set the value returned is\nthe accumulated value.\n"
											},
											"parameters": [
												{
													"id": 3354,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isRest": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										3349,
										3350,
										3351
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										3355,
										3352
									]
								}
							],
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
									"line": 98,
									"character": 37
								}
							]
						}
					}
				},
				{
					"id": 3358,
					"name": "useAsyncValue",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"originalName": "default",
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
							"line": 148,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 3359,
							"name": "useAsyncValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Resolve a value from an id using an async function.",
								"text": "For the specified `id` the `resolve` function will be called and should\nreturn the value for the specified id.\n\nIf `existingValues` is provided this will be consulted first before calling\n`resolve`. This is useful when you have a list of values that may or\nmay not have the data you care about. If it's there then the value will\nbe returned immediately.\n\nFor multiple values see documentation below.\n",
								"tags": [
									{
										"tag": "extract-docs",
										"text": "\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 3360,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 3361,
									"name": "U",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2717,
										"name": "Id"
									}
								}
							],
							"parameters": [
								{
									"id": 3362,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3331,
										"typeArguments": [
											{
												"type": "reference",
												"id": 3360,
												"name": "T"
											},
											{
												"type": "reference",
												"id": 3361,
												"name": "U"
											}
										],
										"name": "UseAsyncValuePropsSingle"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3347,
								"typeArguments": [
									{
										"type": "reference",
										"id": 3360,
										"name": "T"
									}
								],
								"name": "UseAsyncValueReturn"
							}
						},
						{
							"id": 3363,
							"name": "useAsyncValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Resolve values from an array of ids using an async function.",
								"text": "For the specified array of `ids` the `resolve` function will be called\nand should return an array of the same size with each entry being the resolved\nvalue for the corresponding id.\n\nIf `existingValues` is provided this will be consulted first before calling\n`resolve`. This is useful when you have a list of values that may or\nmay not have the data you care about. If it's there then the values will\nbe returned immediately. Note that if any of the ids are missing from\n`existingValues` then it will be ignored and a call to `resolve` will be made\nrequesting values for all `ids`.\n"
							},
							"typeParameter": [
								{
									"id": 3364,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 3365,
									"name": "U",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2717,
										"name": "Id"
									}
								}
							],
							"parameters": [
								{
									"id": 3366,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3339,
										"typeArguments": [
											{
												"type": "reference",
												"id": 3364,
												"name": "T"
											},
											{
												"type": "reference",
												"id": 3365,
												"name": "U"
											}
										],
										"name": "UseAsyncValuePropsMulti"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3347,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 3364,
											"name": "T"
										}
									}
								],
								"name": "UseAsyncValueReturn"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						3339,
						3331,
						3347
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						3358
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/useAsyncValue.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3367,
			"name": "useChangeObserver",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3368,
					"name": "ChangeObserverOptions",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "expand-properties",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/useChangeObserver.ts",
							"line": 7,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 3375,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3369,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 3374,
									"name": "disabled",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "If true then no changes will be detected. When this changes from true to false the\ncallback won't be called until the next change in value. This is useful for disabling\nthe callback when no value is yet available eg. when waiting for first response from an\nAPI."
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useChangeObserver.ts",
											"line": 21,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3370,
									"name": "isEqual",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/src/useChangeObserver.ts",
											"line": 14,
											"character": 4
										}
									],
									"signatures": [
										{
											"id": 3371,
											"name": "isEqual",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Function to determine equality between items. If not provided the default will do shallow\nequality checks with specific support for an `isEqual` function on objects (eg. if an object\nimplements `isEqual` it will be called instead of doing any other comparisons. This is\nsupported by [ViewModel](doc:viewModelFactory)."
											},
											"parameters": [
												{
													"id": 3372,
													"name": "a",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 3375,
														"name": "T"
													}
												},
												{
													"id": 3373,
													"name": "b",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 3375,
														"name": "T"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										3374
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										3370
									]
								}
							],
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/useChangeObserver.ts",
									"line": 7,
									"character": 39
								}
							]
						}
					}
				},
				{
					"id": 3376,
					"name": "useChangeObserver",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"originalName": "default",
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/useChangeObserver.ts",
							"line": 57,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 3377,
							"name": "useChangeObserver",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Call a function whenever a value changes.",
								"text": "This works by monitoring a value passed in and tracking it's last value. Whenever\nthe value changes the provided callback will be called with the last and current\nvalue.\n\n```jsx\nexport default function Example() {\n  const [count, setCount] = useState(0);\n  useChangeObserver(count, () => {\n    console.log(`Changed from ${prev} to ${next}.`));\n  }\n  return <>\n    Count: {count}\n    <button onClick={() => setCount(c => c+1)}>+1</button>\n  </>;\n}\n```\n",
								"returns": "Has no return value\n",
								"tags": [
									{
										"tag": "extract-docs",
										"text": "\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 3378,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 3379,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The value to monitor for changes. This can be any type but for complex\ntypes you will need to provide your own `isEqual` function. For simple shallow\ncomparisons the default function will suffice (eg. it will compare each element in\nan array or each value on an object 1 level deep)."
									},
									"type": {
										"type": "reference",
										"id": 3378,
										"name": "T"
									}
								},
								{
									"id": 3380,
									"name": "onChange",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The function to call when `value` changes. This is passed the previous\nvalue and the current value.\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3381,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3382,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 3383,
															"name": "lastValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 3378,
																"name": "T"
															}
														},
														{
															"id": 3384,
															"name": "nextValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 3378,
																"name": "T"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								},
								{
									"id": 3385,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 3368,
										"typeArguments": [
											{
												"type": "reference",
												"id": 3378,
												"name": "T"
											}
										],
										"name": "ChangeObserverOptions"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						3368
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						3376
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/useChangeObserver.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3386,
			"name": "useListChangeObserver",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3387,
					"name": "ADD",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/useListChangeObserver.ts",
							"line": 4,
							"character": 13
						}
					],
					"type": {
						"type": "literal",
						"value": "ADD"
					},
					"defaultValue": "'ADD'"
				},
				{
					"id": 3389,
					"name": "DELETE",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/useListChangeObserver.ts",
							"line": 6,
							"character": 13
						}
					],
					"type": {
						"type": "literal",
						"value": "DELETE"
					},
					"defaultValue": "'DELETE'"
				},
				{
					"id": 3388,
					"name": "UPDATE",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/useListChangeObserver.ts",
							"line": 5,
							"character": 13
						}
					],
					"type": {
						"type": "literal",
						"value": "UPDATE"
					},
					"defaultValue": "'UPDATE'"
				},
				{
					"id": 3390,
					"name": "useListChangeObserver",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"originalName": "default",
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/useListChangeObserver.ts",
							"line": 121,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 3391,
							"name": "useListChangeObserver",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Call a function whenever values in a list change. This differs from `useChangeObserver` by\nallowing you to choose what changes you get (additions, updates, deletions) and to be passed the\nchanged items in the callback. In order to achieve this each item in the array needs to have a\nunique ID which is obtained by calling the `options.getId` function. The default implementation will\nlook for a `_key` or `id` property and return this, otherwise it return the value as is. This default\nimplementation is compatible with [ViewModel](doc:viewModelFactory) so you can pass lists of\nrecords returned from [useViewModelCache](doc:useViewModelCache).",
								"text": "```jsx\nexport default function UserListView() {\n  const { data, revalidate, isValidating } = useEndpoint(User.endpoints.list);\n  // Refetch data whenever underlying cache changes\n  const allRecords = useViewModelCache(User, cache => cache.getAll(fieldList));\n  // NOTE: Usually you don't want multiple useListChangeObserver's on the exact same\n  // subset of data as you will trigger redundant ajax queries.\n  // if a record is updated & saved elsewhere, then useViewModelCache will return new\n  // data which triggers useListChangeObserver. We still want useListChangeObserver()\n  // to trigger the useEndpoint() revalidate because that record update may have changed the\n  // order of records or caused it to [no longer] appear in a filtered list of data.\n  // Also note that we pass false while data is being fetched from the backend\n  useListChangeObserver(!isValidating && allRecords, revalidate);\n  return <ListView records={data} />;\n}\n```\n",
								"returns": "No return value\n",
								"tags": [
									{
										"tag": "extract-docs",
										"text": "\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 3392,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 3393,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "An array of values to monitor for changes. A falsey value can be passed to disable\nchecks. This is the same as passing `options.disabled`. This is convenient for cases where no value\nis available yet (eg. when waiting for initial response from an API endpoint)"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "literal",
												"value": false
											},
											{
												"type": "reference",
												"id": 3392,
												"name": "T"
											}
										]
									}
								},
								{
									"id": 3394,
									"name": "onChange",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A method that will be called on any changes. This is passed an object of changes in the form:\n\n```\n{\n    ADD: [...],\n    UPDATE: [[<prev value>, <updated value>]...],\n    DELETE: [...],\n}\n```\nEach change type (ADD, UPDATE, DELETE) will be `false` if no value has changed.\n\nThe last and next list of records are also passed.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 3392,
												"name": "T"
											}
										],
										"name": "OnChange"
									}
								},
								{
									"id": 3395,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 3392,
												"name": "T"
											}
										],
										"name": "ListChangeObserverOptions"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						3387,
						3389,
						3388
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						3390
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/useListChangeObserver.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3396,
			"name": "useMemoOne",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3397,
					"name": "ComparisonFn",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/useMemoOne.ts",
							"line": 34,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3398,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/useMemoOne.ts",
									"line": 34,
									"character": 27
								}
							],
							"signatures": [
								{
									"id": 3399,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3400,
											"name": "newInputs",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 3401,
											"name": "lastInputs",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						}
					}
				},
				{
					"id": 3402,
					"name": "useMemoOne",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"originalName": "default",
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/useMemoOne.ts",
							"line": 47,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 3403,
							"name": "useMemoOne",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "useMemo but with a stable cache and support for custom comparison operator",
								"text": "Based on https://github.com/alexreardon/use-memo-one but supports custom\ncomparison operator. See https://github.com/alexreardon/use-memo-one/issues/11\n",
								"returns": "\n"
							},
							"typeParameter": [
								{
									"id": 3404,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 3405,
									"name": "getResult",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Function that returns value to memoize"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3406,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3407,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 3404,
														"name": "T"
													}
												}
											]
										}
									}
								},
								{
									"id": 3408,
									"name": "inputs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Dependency array. When values in this change getResult is called again"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								},
								{
									"id": 3409,
									"name": "compare",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Custom comparision operator. Defaults to shallow strict equality."
									},
									"type": {
										"type": "reference",
										"id": 3397,
										"name": "ComparisonFn"
									},
									"defaultValue": "isEqual"
								}
							],
							"type": {
								"type": "reference",
								"id": 3404,
								"name": "T"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						3397
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						3402
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/useMemoOne.ts",
					"line": 26,
					"character": 0
				}
			]
		},
		{
			"id": 3261,
			"name": "useAsync",
			"kind": 4,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 3263,
					"name": "DEEP",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3262,
					"name": "MANUAL",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3264,
					"name": "SHALLOW",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						3263,
						3262,
						3264
					]
				}
			]
		},
		{
			"id": 3250,
			"name": "OnError",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/useAsync.ts",
					"line": 141,
					"character": 10
				}
			],
			"signatures": [
				{
					"id": 3251,
					"name": "OnError",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Haha yeah cool man"
					},
					"parameters": [
						{
							"id": 3252,
							"name": "error",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "DO stuff `ya know maen`\n"
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Error",
								"package": "typescript",
								"name": "Error"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 3246,
			"name": "OnSuccess",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/useAsync.ts",
					"line": 130,
					"character": 10
				}
			],
			"signatures": [
				{
					"id": 3247,
					"name": "OnSuccess",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Haha whatver"
					},
					"parameters": [
						{
							"id": 3248,
							"name": "result",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "Stuff etc\n"
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3249,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {}
								}
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 3291,
			"name": "UseAsyncListingExecuteProps",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"tags": [
					{
						"tag": "expand-properties",
						"text": ""
					},
					{
						"tag": "export-in-docs",
						"text": "\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
					"line": 10,
					"character": 5
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 3292,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 3294,
							"name": "paginator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The paginator instance, if any"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 3067,
										"name": "PaginatorInterface"
									}
								]
							}
						},
						{
							"id": 3293,
							"name": "query",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Any query parameters"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
									"line": 14,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3294,
								3293
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
							"line": 10,
							"character": 35
						}
					]
				}
			}
		},
		{
			"id": 3295,
			"name": "UseAsyncListingReturnCommon",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"tags": [
					{
						"tag": "export-in-docs",
						"text": "\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
					"line": 73,
					"character": 5
				}
			],
			"typeParameter": [
				{
					"id": 3304,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 3296,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 3297,
							"name": "isLoading",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "True while `execute` call is in progress."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
									"line": 77,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3298,
							"name": "paginator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The same `paginator` passed in to `useAsyncListing`"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
									"line": 81,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 3067,
										"name": "PaginatorInterface"
									}
								]
							}
						},
						{
							"id": 3302,
							"name": "reset",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
									"line": 96,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3303,
									"name": "reset",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "When called will set both result and error to null. Will not immediately trigger\na call to the action but subsequent changes to query or paginator will according\nto the value of `trigger`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 3299,
							"name": "run",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
									"line": 90,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3300,
									"name": "run",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "A function to manually trigger the action. If `options.trigger` is `MANUAL`\ncalling this function is the only way to trigger the action.",
										"text": "This function will return a promise that resolves/rejects to same value\nreturned by `execute`. If `accumulatePages` is set the value returned is\nthe accumulated value.\n"
									},
									"parameters": [
										{
											"id": 3301,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 3304,
												"name": "T"
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3297,
								3298
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3302,
								3299
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/util/src/useAsyncListing.ts",
							"line": 73,
							"character": 38
						}
					]
				}
			}
		},
		{
			"id": 3244,
			"name": "useAsync",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "js-packages/@prestojs/util/src/useAsync.ts",
					"line": 272,
					"character": 9
				}
			],
			"signatures": [
				{
					"id": 3253,
					"name": "useAsync",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Hook to deal with triggering async function calls and handling result / errors and loading states.",
						"text": "This can be used in two distinct modes:\n - _manual_ (`useAsync.MANUAL`) - the function is only triggered explicitly\n - _automatic_ (`useAsync.DEEP` or `useAsync.SHALLOW`) - the function is triggered initially\nand then automatically when argument values change (using a shallow or deep comparison).\n\nFor mutations you usually want _manual_ as it is triggered in response to some user action\nlike pressing a button.\n\nFor data fetching you usually want _automatic_ mode as you retrieve some data\ninitially and then refetch it when some arguments change (eg. the id for a single\nrecord or the filters for a list).\n\n## Examples\n\nFetch and render a specified github profile\n\n```js live horizontal\nfunction FollowerCount() {\n    const [user, setUser] = React.useState('octocat')\n    const { result, isLoading, error, run, reset } = useAsync(() => getGithubUser(user));\n    return (\n        <div>\n            <input value={user} onChange={e => setUser(e.target.value)} />\n            <div className=\"my-2 justify-between flex\">\n            <button onClick={run} disabled={isLoading} className=\"btn-blue\">Query follower count</button>\n            <button className=\"btn\" onClick={reset}>Clear</button>\n            </div>\n            {result && (\n                <p>\n                    <img src={result.avatar_url} /><br />\n                    {result.name} has {result.followers} followers\n                </p>\n            )}\n            {error && (<p>Failed with status: {error.status} {error.statusText}</p>)}\n        </div>\n    );\n}\n// we don't define this inside FollowerCount() because that will create a new function on\n// every render, causing useAsync() to re-run and triggering an infinite render loop\nfunction getGithubUser(user) {\n  return fetch(`https://api.github.com/users/${user}`).then(r => {\n     if (r.ok) {\n         return r.json();\n     }\n     throw r;\n  });\n}\n```",
						"tags": [
							{
								"tag": "extract-docs",
								"text": "\n"
							}
						]
					},
					"typeParameter": [
						{
							"id": 3254,
							"name": "ResultT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"comment": {
								"shortText": "The type of the result returned by `fn`."
							}
						},
						{
							"id": 3255,
							"name": "ErrorT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"comment": {
								"shortText": "The type of the error in the case the promise returned by `fn` rejects\n"
							},
							"default": {
								"type": "reference",
								"qualifiedName": "Error",
								"package": "typescript",
								"name": "Error"
							}
						}
					],
					"parameters": [
						{
							"id": 3256,
							"name": "fn",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "A function that returns a promise. When `trigger` is `MANUAL` this is only\ncalled when you manually call the returned `run` function, otherwise it's called\ninitially and then whenever an equality comparison fails between previous arguments and new\narguments. Note that when `trigger` is `SHALLOW` or `DEEP` changes to this function will\ncause it to be called again so you must memoize it (eg. with `useCallback`) if it's defined\nin your component or hook. To help detect runaway effects caused by this automatically\nconsider using [stop-runaway-react-effects](https://github.com/kentcdodds/stop-runaway-react-effects).\n"
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3257,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 3258,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 3259,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isRest": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 3254,
														"name": "ResultT"
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										}
									]
								}
							}
						},
						{
							"id": 3260,
							"name": "options",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 3267,
								"name": "UseAsyncOptions"
							},
							"defaultValue": "{}"
						}
					],
					"type": {
						"type": "reference",
						"id": 3272,
						"typeArguments": [
							{
								"type": "reference",
								"id": 3254,
								"name": "ResultT"
							},
							{
								"type": "reference",
								"id": 3255,
								"name": "ErrorT"
							}
						],
						"name": "UseAsyncReturnObject"
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "References",
			"kind": 16777216,
			"children": [
				3266,
				3265,
				3245
			]
		},
		{
			"title": "Modules",
			"kind": 2,
			"children": [
				2664,
				2686,
				2695,
				2720,
				2724,
				2797,
				2897,
				2973,
				3054,
				3186,
				3219,
				3243,
				3290,
				3330,
				3367,
				3386,
				3396
			]
		},
		{
			"title": "Namespaces",
			"kind": 4,
			"children": [
				3261
			]
		},
		{
			"title": "Interfaces",
			"kind": 256,
			"children": [
				3250,
				3246
			]
		},
		{
			"title": "Type aliases",
			"kind": 4194304,
			"children": [
				3291,
				3295
			]
		},
		{
			"title": "Functions",
			"kind": 64,
			"children": [
				3244
			]
		}
	]
}