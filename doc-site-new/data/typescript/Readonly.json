{
  "node": {
    "id": 1159,
    "name": "Readonly",
    "kind": 4194304,
    "kindString": "Type alias",
    "flags": {
      "isExternal": true
    },
    "comment": {
      "shortText": "Make all properties in T readonly",
      "shortTextMdx": "/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      p: \"p\"\n    }, _provideComponents(), props.components);\n    return _jsx(_components.p, {\n      children: \"Make all properties in T readonly\"\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\n"
    },
    "sources": [
      {
        "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
        "line": 1545,
        "character": 5
      }
    ],
    "typeParameter": [
      {
        "id": 1160,
        "name": "T",
        "kind": 131072,
        "kindString": "Type parameter",
        "flags": {
          "isExternal": true
        }
      }
    ],
    "type": {
      "type": "mapped",
      "parameter": "P",
      "parameterType": {
        "type": "typeOperator",
        "operator": "keyof",
        "target": {
          "type": "reference",
          "id": 1160,
          "qualifiedName": "T",
          "package": "typescript",
          "name": "T"
        }
      },
      "templateType": {
        "type": "indexedAccess",
        "indexType": {
          "type": "reference",
          "qualifiedName": "P",
          "package": "typescript",
          "name": "P"
        },
        "objectType": {
          "type": "reference",
          "id": 1160,
          "qualifiedName": "T",
          "package": "typescript",
          "name": "T"
        }
      },
      "readonlyModifier": "+"
    }
  },
  "references": {},
  "meta": {
    "packageName": "typescript",
    "permaLink": "typescript/lib/Readonly",
    "menuGroup": "default"
  }
}
