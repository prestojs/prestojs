{
  "declaration": {
    "id": 2677,
    "name": "getTextLabel",
    "kind": 64,
    "kindString": "Function",
    "flags": {},
    "sources": [
      {
        "fileName": "js-packages/@prestojs/util/src/Labeled.ts",
        "line": 103,
        "character": 16
      }
    ],
    "signatures": [
      {
        "id": 2678,
        "name": "getTextLabel",
        "kind": 4096,
        "kindString": "Call signature",
        "flags": {},
        "comment": {
          "shortText": "Get a plain text label from an item",
          "text": "If does not implement TextLabeled an error is thrown. To conditional call this check if labeled first\nwith `isTextLabeled`.\n",
          "tags": [
            {
              "tag": "extract-docs",
              "text": ""
            },
            {
              "tag": "menu-group",
              "text": "Labeled\n"
            }
          ],
          "shortTextMdx": "/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      p: \"p\"\n    }, _provideComponents(), props.components);\n    return _jsx(_components.p, {\n      children: \"Get a plain text label from an item\"\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\n",
          "textMdx": "/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      p: \"p\",\n      code: \"code\"\n    }, _provideComponents(), props.components);\n    return _jsxs(_components.p, {\n      children: [\"If does not implement TextLabeled an error is thrown. To conditional call this check if labeled first\\nwith \", _jsx(_components.code, {\n        children: \"isTextLabeled\"\n      }), \".\"]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\n"
        },
        "parameters": [
          {
            "id": 2679,
            "name": "item",
            "kind": 32768,
            "kindString": "Parameter",
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "any"
            },
            "anchorId": "Parameter-item",
            "docFlags": {},
            "tagsByName": {}
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "string"
        },
        "anchorId": "Call-signature-getTextLabel",
        "docFlags": {},
        "tagsByName": {
          "extract-docs": "",
          "menu-group": "Labeled"
        }
      }
    ],
    "docFlags": {},
    "tagsByName": {
      "extract-docs": "",
      "menu-group": "Labeled"
    },
    "slug": "util/getTextLabel"
  },
  "references": {},
  "meta": {
    "packageName": "util",
    "permaLink": "getTextLabel",
    "menuGroup": "Labeled"
  }
}