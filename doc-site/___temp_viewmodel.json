{
	"id": 1825,
	"name": "@prestojs/viewmodel",
	"kind": 1,
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 1826,
			"name": "ViewModelCache",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 4441,
					"name": "<internal>",
					"kind": 4,
					"kindString": "Namespace",
					"flags": {},
					"children": [
						{
							"id": 4442,
							"name": "RecordFieldNameCache",
							"kind": 128,
							"kindString": "Class",
							"flags": {},
							"comment": {
								"shortText": "Caches record instances based on the assigned fields"
							},
							"children": [
								{
									"id": 4443,
									"name": "constructor",
									"kind": 512,
									"kindString": "Constructor",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
											"line": 94,
											"character": 4
										}
									],
									"signatures": [
										{
											"id": 4444,
											"name": "new RecordFieldNameCache",
											"kind": 16384,
											"kindString": "Constructor signature",
											"flags": {},
											"typeParameter": [
												{
													"id": 4445,
													"name": "ViewModelClassType",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2071,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "reference",
																"id": 4445,
																"name": "ViewModelClassType"
															}
														],
														"name": "ViewModelConstructor"
													}
												}
											],
											"parameters": [
												{
													"id": 4446,
													"name": "viewModel",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 4445,
														"name": "ViewModelClassType"
													}
												},
												{
													"id": 4447,
													"name": "pk",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2121,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4445,
																"name": "ViewModelClassType"
															}
														],
														"name": "ExtractPkFieldParseableValueType"
													}
												},
												{
													"id": 4448,
													"name": "onAnyChange",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 4449,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 4450,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4442,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4445,
														"name": "ViewModelClassType"
													}
												],
												"name": "RecordFieldNameCache"
											}
										}
									]
								},
								{
									"id": 4451,
									"name": "cache",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "This stores the record instances by the field paths that are used to retrieve them"
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
											"line": 54,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2135,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4445,
														"name": "ViewModelClassType"
													}
												],
												"name": "ViewModelFieldPaths"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 2118,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4445,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"id": 4490,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 4445,
																				"name": "ViewModelClassType"
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														],
														"name": "PartialViewModel"
													}
												]
											}
										],
										"qualifiedName": "Map",
										"package": "typescript",
										"name": "Map"
									}
								},
								{
									"id": 4452,
									"name": "cacheListeners",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "This stores the current listeners by the field paths"
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
											"line": 61,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2135,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4445,
														"name": "ViewModelClassType"
													}
												],
												"name": "ViewModelFieldPaths"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 4522,
													"typeArguments": [
														{
															"type": "reference",
															"id": 2118,
															"typeArguments": [
																{
																	"type": "reference",
																	"id": 4445,
																	"name": "ViewModelClassType"
																},
																{
																	"type": "reference",
																	"id": 4490,
																	"typeArguments": [
																		{
																			"type": "typeOperator",
																			"operator": "keyof",
																			"target": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "literal",
																					"value": "fields"
																				},
																				"objectType": {
																					"type": "reference",
																					"id": 4445,
																					"name": "ViewModelClassType"
																				}
																			}
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		}
																	],
																	"qualifiedName": "Extract",
																	"package": "typescript",
																	"name": "Extract"
																}
															],
															"name": "PartialViewModel"
														}
													],
													"name": "ChangeListener"
												}
											}
										],
										"qualifiedName": "Map",
										"package": "typescript",
										"name": "Map"
									}
								},
								{
									"id": 4459,
									"name": "lastUpdatedKeys",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isPrivate": true
									},
									"comment": {
										"shortText": "Contains all keys in `cache` in descending order of last insert/update",
										"text": "This is used to choose the most recent record when a new record with a subset\nof the fields needs to be created. For example if there are 2 existing records\ncreated in this order:\n{ id: 1, firstName: 'Jon', lastName: 'Doe', active: true }\n{ id: 1, firstName: 'John', lastName: 'Doe' }\nBut a record is requested for just 'firstName' we need to create a new record\nwith just that field. We could create it from either of the existing records\nbut we want to use the _last_ record inserted - so in this case it would be:\n{ id: 1, firstName: 'John' }\n"
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
											"line": 92,
											"character": 12
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 2135,
											"typeArguments": [
												{
													"type": "reference",
													"id": 4445,
													"name": "ViewModelClassType"
												}
											],
											"name": "ViewModelFieldPaths"
										}
									},
									"defaultValue": "[]"
								},
								{
									"id": 4456,
									"name": "onAnyChange",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
											"line": 78,
											"character": 4
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 4457,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 4458,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								},
								{
									"id": 4454,
									"name": "recordPk",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The PK this cache is for"
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
											"line": 76,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"id": 2121,
										"typeArguments": [
											{
												"type": "reference",
												"id": 4445,
												"name": "ViewModelClassType"
											}
										],
										"name": "ExtractPkFieldParseableValueType"
									}
								},
								{
									"id": 4480,
									"name": "relationListenerPaths",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isPrivate": true
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
											"line": 312,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2118,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4445,
														"name": "ViewModelClassType"
													},
													{
														"type": "reference",
														"id": 4490,
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "literal",
																		"value": "fields"
																	},
																	"objectType": {
																		"type": "reference",
																		"id": 4445,
																		"name": "ViewModelClassType"
																	}
																}
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"qualifiedName": "Extract",
														"package": "typescript",
														"name": "Extract"
													}
												],
												"name": "PartialViewModel"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2135,
													"typeArguments": [
														{
															"type": "reference",
															"id": 4445,
															"name": "ViewModelClassType"
														}
													],
													"name": "ViewModelFieldPaths"
												}
											}
										],
										"qualifiedName": "Map",
										"package": "typescript",
										"name": "Map"
									},
									"defaultValue": "..."
								},
								{
									"id": 4453,
									"name": "relationListenerUnsubscribe",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "When a record has relation fields it needs to listen for changes on those records so it can\nupdate itself and notify it's direct listeners. This Map keeps track of those listeners."
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
											"line": 69,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2135,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4445,
														"name": "ViewModelClassType"
													}
												],
												"name": "ViewModelFieldPaths"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 4493,
													"name": "ChangeListenerUnsubscribe"
												}
											}
										],
										"qualifiedName": "Map",
										"package": "typescript",
										"name": "Map"
									}
								},
								{
									"id": 4455,
									"name": "viewModel",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
											"line": 77,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"id": 4445,
										"name": "ViewModelClassType"
									}
								},
								{
									"id": 4464,
									"name": "add",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
											"line": 147,
											"character": 4
										}
									],
									"signatures": [
										{
											"id": 4465,
											"name": "add",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Add a record to the cache based on the fields that are set on it.",
												"text": "This will also update any cached entries for records that contain only\na subset of the fields set on `record`. Note that this does not update\na superset of fields, ie. updating fields (a,b) won't update a record\nthat contains (a,b,c)\n"
											},
											"parameters": [
												{
													"id": 4466,
													"name": "record",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2118,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4445,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"id": 4490,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 4445,
																				"name": "ViewModelClassType"
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														],
														"name": "PartialViewModel"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 4485,
									"name": "addListener",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
											"line": 381,
											"character": 4
										}
									],
									"signatures": [
										{
											"id": 4486,
											"name": "addListener",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Add a listener for any changes, additions or deletions for the specified field names"
											},
											"parameters": [
												{
													"id": 4487,
													"name": "fieldNames",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"shortText": "field names to listen to any changes for. See [Field notation](#Field_notation) for supported format."
													},
													"type": {
														"type": "reference",
														"id": 2003,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4445,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"id": 4513,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 4445,
																		"name": "ViewModelClassType"
																	}
																],
																"name": "ExtractRelatedFields"
															}
														],
														"name": "FieldPaths"
													}
												},
												{
													"id": 4488,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"shortText": "Function to call with any changes\n"
													},
													"type": {
														"type": "reference",
														"id": 4522,
														"typeArguments": [
															{
																"type": "reference",
																"id": 2118,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 4445,
																		"name": "ViewModelClassType"
																	},
																	{
																		"type": "reference",
																		"id": 4490,
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "fields"
																					},
																					"objectType": {
																						"type": "reference",
																						"id": 4445,
																						"name": "ViewModelClassType"
																					}
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	}
																],
																"name": "PartialViewModel"
															}
														],
														"name": "ChangeListener"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4493,
												"name": "ChangeListenerUnsubscribe"
											}
										}
									]
								},
								{
									"id": 4470,
									"name": "cleanupKey",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isPrivate": true
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
											"line": 246,
											"character": 12
										}
									],
									"signatures": [
										{
											"id": 4471,
											"name": "cleanupKey",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isPrivate": true
											},
											"comment": {
												"shortText": "Remove specified key from cache, cleanup any relation listeners and trigger\nlistener callbacks if required."
											},
											"parameters": [
												{
													"id": 4472,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2135,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4445,
																"name": "ViewModelClassType"
															}
														],
														"name": "ViewModelFieldPaths"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 4476,
									"name": "constructWithRelatedRecords",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isPrivate": true
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
											"line": 281,
											"character": 12
										}
									],
									"signatures": [
										{
											"id": 4477,
											"name": "constructWithRelatedRecords",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isPrivate": true
											},
											"comment": {
												"shortText": "Given a `baseRecord` with no related fields resolved (ie. we just have the id's, not the nested records) construct\na record with all the nested records attached if those records exist in the cache."
											},
											"parameters": [
												{
													"id": 4478,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"shortText": "The key that contains the relations we need to resolve"
													},
													"type": {
														"type": "reference",
														"id": 2135,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4445,
																"name": "ViewModelClassType"
															}
														],
														"name": "ViewModelFieldPaths"
													}
												},
												{
													"id": 4479,
													"name": "baseRecord",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"shortText": "The record with the id's of the related records"
													},
													"type": {
														"type": "reference",
														"id": 2118,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4445,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"id": 4490,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 4445,
																				"name": "ViewModelClassType"
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														],
														"name": "PartialViewModel"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 2118,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4445,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"id": 4490,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 4445,
																				"name": "ViewModelClassType"
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														],
														"name": "PartialViewModel"
													}
												]
											}
										}
									]
								},
								{
									"id": 4473,
									"name": "delete",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
											"line": 256,
											"character": 4
										}
									],
									"signatures": [
										{
											"id": 4474,
											"name": "delete",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Delete a record for the specified field names.",
												"text": "Returns `true` if anything was deleted otherwise `false`\n"
											},
											"parameters": [
												{
													"id": 4475,
													"name": "fieldNames",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2003,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4445,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"id": 4513,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 4445,
																		"name": "ViewModelClassType"
																	}
																],
																"name": "ExtractRelatedFields"
															}
														],
														"name": "FieldPaths"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								},
								{
									"id": 4467,
									"name": "get",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
											"line": 178,
											"character": 4
										}
									],
									"signatures": [
										{
											"id": 4468,
											"name": "get",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get a record for the specified key. If the record doesn't yet exist but can be created from\nanother record in the cache (ie. one with a superset of the fields set) then this will be done\nautomatically."
											},
											"parameters": [
												{
													"id": 4469,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2135,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4445,
																"name": "ViewModelClassType"
															}
														],
														"name": "ViewModelFieldPaths"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 2118,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4445,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"id": 4490,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 4445,
																				"name": "ViewModelClassType"
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														],
														"name": "PartialViewModel"
													}
												]
											}
										}
									]
								},
								{
									"id": 4460,
									"name": "setValueForKey",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isPrivate": true
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
											"line": 110,
											"character": 12
										}
									],
									"signatures": [
										{
											"id": 4461,
											"name": "setValueForKey",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Set a value for the specified key notifying any listeners"
											},
											"parameters": [
												{
													"id": 4462,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2135,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4445,
																"name": "ViewModelClassType"
															}
														],
														"name": "ViewModelFieldPaths"
													}
												},
												{
													"id": 4463,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2118,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 4445,
																		"name": "ViewModelClassType"
																	},
																	{
																		"type": "reference",
																		"id": 4490,
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "fields"
																					},
																					"objectType": {
																						"type": "reference",
																						"id": 4445,
																						"name": "ViewModelClassType"
																					}
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	}
																],
																"name": "PartialViewModel"
															}
														]
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 4481,
									"name": "setupRelationListeners",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isPrivate": true
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
											"line": 327,
											"character": 12
										}
									],
									"signatures": [
										{
											"id": 4482,
											"name": "setupRelationListeners",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isPrivate": true
											},
											"comment": {
												"shortText": "When a listener is added to a record for a set of fields we need to also listen\nto changes on the caches for any related records. This functions handles setting\nup those listeners."
											},
											"parameters": [
												{
													"id": 4483,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"shortText": "The key the listener was added to. The relations that need to be listened to are extracted from this."
													},
													"type": {
														"type": "reference",
														"id": 2135,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4445,
																"name": "ViewModelClassType"
															}
														],
														"name": "ViewModelFieldPaths"
													}
												},
												{
													"id": 4484,
													"name": "record",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"shortText": "The last record that the listener would have been notified about. When the listener is first\nadded this will be the current record in the cache. When the record changes this will be the new record that\nwas just added."
													},
													"type": {
														"type": "reference",
														"id": 2118,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4445,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"id": 4490,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 4445,
																				"name": "ViewModelClassType"
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														],
														"name": "PartialViewModel"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Constructors",
									"kind": 512,
									"children": [
										4443
									]
								},
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4451,
										4452,
										4459,
										4456,
										4454,
										4480,
										4453,
										4455
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										4464,
										4485,
										4470,
										4476,
										4473,
										4467,
										4460,
										4481
									]
								}
							],
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 50,
									"character": 6
								}
							],
							"typeParameter": [
								{
									"id": 4489,
									"name": "ViewModelClassType",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									}
								}
							]
						},
						{
							"id": 4519,
							"name": "AllChangesListener",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 22,
									"character": 5
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4520,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
											"line": 22,
											"character": 26
										}
									],
									"signatures": [
										{
											"id": 4521,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 4522,
							"name": "ChangeListener",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 19,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 4527,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4523,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
											"line": 19,
											"character": 25
										}
									],
									"signatures": [
										{
											"id": 4524,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 4525,
													"name": "previous",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"id": 4527,
																"name": "T"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												},
												{
													"id": 4526,
													"name": "next",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"id": 4527,
																"name": "T"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 4493,
							"name": "ChangeListenerUnsubscribe",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 21,
									"character": 5
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4494,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
											"line": 21,
											"character": 33
										}
									],
									"signatures": [
										{
											"id": 4495,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 4534,
							"name": "Exclude",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Exclude from T those types that are assignable to U"
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1566,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 4535,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								},
								{
									"id": 4536,
									"name": "U",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"type": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"id": 4535,
									"qualifiedName": "T",
									"package": "typescript",
									"name": "T"
								},
								"extendsType": {
									"type": "reference",
									"id": 4536,
									"qualifiedName": "U",
									"package": "typescript",
									"name": "U"
								},
								"trueType": {
									"type": "intrinsic",
									"name": "never"
								},
								"falseType": {
									"type": "reference",
									"id": 4535,
									"qualifiedName": "T",
									"package": "typescript",
									"name": "T"
								}
							}
						},
						{
							"id": 4490,
							"name": "Extract",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Extract from T those types that are assignable to U"
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1571,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 4491,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								},
								{
									"id": 4492,
									"name": "U",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"type": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"id": 4491,
									"qualifiedName": "T",
									"package": "typescript",
									"name": "T"
								},
								"extendsType": {
									"type": "reference",
									"id": 4492,
									"qualifiedName": "U",
									"package": "typescript",
									"name": "U"
								},
								"trueType": {
									"type": "reference",
									"id": 4491,
									"qualifiedName": "T",
									"package": "typescript",
									"name": "T"
								},
								"falseType": {
									"type": "intrinsic",
									"name": "never"
								}
							}
						},
						{
							"id": 4513,
							"name": "ExtractRelatedFields",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 22,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 4514,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									}
								}
							],
							"type": {
								"type": "mapped",
								"parameter": "P",
								"parameterType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "fields"
										},
										"objectType": {
											"type": "reference",
											"id": 4514,
											"name": "T"
										}
									}
								},
								"templateType": {
									"type": "conditional",
									"checkType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"name": "P"
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "fields"
											},
											"objectType": {
												"type": "reference",
												"id": 4514,
												"name": "T"
											}
										}
									},
									"extendsType": {
										"type": "reference",
										"id": 3859,
										"typeArguments": [
											{
												"type": "inferred",
												"name": "X"
											},
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "BaseRelatedViewModelField"
									},
									"trueType": {
										"type": "reference",
										"name": "X"
									},
									"falseType": {
										"type": "intrinsic",
										"name": "never"
									}
								},
								"nameType": {
									"type": "conditional",
									"checkType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"name": "P"
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "fields"
											},
											"objectType": {
												"type": "reference",
												"id": 4514,
												"name": "T"
											}
										}
									},
									"extendsType": {
										"type": "reference",
										"id": 3859,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "BaseRelatedViewModelField"
									},
									"trueType": {
										"type": "reference",
										"name": "P"
									},
									"falseType": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							}
						},
						{
							"id": 4507,
							"name": "ExtractRootFieldNames",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"comment": {
								"shortText": "Given a FieldPath return the root field name of each path, eg.\n['id', 'name', ['group', 'owner']]\nwould return ['id', 'name', 'group']"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 101,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 4508,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									}
								},
								{
									"id": 4509,
									"name": "FieldNames",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2000,
										"typeArguments": [
											{
												"type": "reference",
												"id": 4508,
												"name": "T"
											}
										],
										"name": "FieldPath"
									}
								}
							],
							"type": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"id": 4537,
									"typeArguments": [
										{
											"type": "reference",
											"id": 4508,
											"name": "T"
										},
										{
											"type": "reference",
											"id": 4509,
											"name": "FieldNames"
										}
									],
									"name": "_ExtractRootFieldNames"
								},
								"extendsType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "fields"
										},
										"objectType": {
											"type": "reference",
											"id": 4508,
											"name": "T"
										}
									}
								},
								"trueType": {
									"type": "reference",
									"id": 4537,
									"typeArguments": [
										{
											"type": "reference",
											"id": 4508,
											"name": "T"
										},
										{
											"type": "reference",
											"id": 4509,
											"name": "FieldNames"
										}
									],
									"name": "_ExtractRootFieldNames"
								},
								"falseType": {
									"type": "intrinsic",
									"name": "never"
								}
							}
						},
						{
							"id": 4515,
							"name": "FieldPathInner",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 30,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 4516,
									"name": "FieldNames",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 4517,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									}
								},
								{
									"id": 4518,
									"name": "R",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 4513,
										"typeArguments": [
											{
												"type": "reference",
												"id": 4517,
												"name": "T"
											}
										],
										"name": "ExtractRelatedFields"
									},
									"default": {
										"type": "reference",
										"id": 4513,
										"typeArguments": [
											{
												"type": "reference",
												"id": 4517,
												"name": "T"
											}
										],
										"name": "ExtractRelatedFields"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "rest",
												"elementType": {
													"type": "reference",
													"id": 4516,
													"name": "FieldNames"
												}
											},
											{
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": "fields"
													},
													"objectType": {
														"type": "reference",
														"id": 4517,
														"name": "T"
													}
												}
											}
										]
									},
									{
										"type": "tuple",
										"elements": [
											{
												"type": "rest",
												"elementType": {
													"type": "reference",
													"id": 4516,
													"name": "FieldNames"
												}
											},
											{
												"type": "rest",
												"elementType": {
													"type": "reference",
													"id": 4540,
													"typeArguments": [
														{
															"type": "mapped",
															"parameter": "K",
															"parameterType": {
																"type": "reference",
																"id": 4490,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "reference",
																			"id": 4518,
																			"name": "R"
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															},
															"templateType": {
																"type": "reference",
																"id": 4540,
																"typeArguments": [
																	{
																		"type": "mapped",
																		"parameter": "J",
																		"parameterType": {
																			"type": "reference",
																			"id": 4490,
																			"typeArguments": [
																				{
																					"type": "typeOperator",
																					"operator": "keyof",
																					"target": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "literal",
																							"value": "fields"
																						},
																						"objectType": {
																							"type": "indexedAccess",
																							"indexType": {
																								"type": "reference",
																								"name": "K"
																							},
																							"objectType": {
																								"type": "reference",
																								"id": 4518,
																								"name": "R"
																							}
																						}
																					}
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			],
																			"qualifiedName": "Extract",
																			"package": "typescript",
																			"name": "Extract"
																		},
																		"templateType": {
																			"type": "union",
																			"types": [
																				{
																					"type": "tuple",
																					"elements": [
																						{
																							"type": "reference",
																							"name": "K"
																						},
																						{
																							"type": "reference",
																							"name": "J"
																						}
																					]
																				},
																				{
																					"type": "conditional",
																					"checkType": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "reference",
																							"name": "J"
																						},
																						"objectType": {
																							"type": "indexedAccess",
																							"indexType": {
																								"type": "literal",
																								"value": "fields"
																							},
																							"objectType": {
																								"type": "indexedAccess",
																								"indexType": {
																									"type": "reference",
																									"name": "K"
																								},
																								"objectType": {
																									"type": "reference",
																									"id": 4518,
																									"name": "R"
																								}
																							}
																						}
																					},
																					"extendsType": {
																						"type": "reference",
																						"id": 3859,
																						"typeArguments": [
																							{
																								"type": "inferred",
																								"name": "X"
																							},
																							{
																								"type": "intrinsic",
																								"name": "any"
																							},
																							{
																								"type": "intrinsic",
																								"name": "any"
																							}
																						],
																						"name": "BaseRelatedViewModelField"
																					},
																					"trueType": {
																						"type": "reference",
																						"id": 4515,
																						"typeArguments": [
																							{
																								"type": "tuple",
																								"elements": [
																									{
																										"type": "reference",
																										"name": "K"
																									},
																									{
																										"type": "reference",
																										"name": "J"
																									}
																								]
																							},
																							{
																								"type": "reference",
																								"name": "X"
																							}
																						],
																						"name": "FieldPathInner"
																					},
																					"falseType": {
																						"type": "intrinsic",
																						"name": "never"
																					}
																				}
																			]
																		}
																	}
																],
																"name": "ValueOf"
															}
														}
													],
													"name": "ValueOf"
												}
											}
										]
									}
								]
							}
						},
						{
							"id": 4499,
							"name": "InstanceType",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Obtain the return type of a constructor function type"
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1601,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 4506,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 4503,
											"name": "__type",
											"kind": 512,
											"kindString": "Constructor",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1601,
													"character": 28
												}
											],
											"signatures": [
												{
													"id": 4504,
													"name": "__type",
													"kind": 16384,
													"kindString": "Constructor signature",
													"flags": {
														"isExternal": true,
														"isAbstract": true
													},
													"parameters": [
														{
															"id": 4505,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"id": 4506,
									"qualifiedName": "T",
									"package": "typescript",
									"name": "T"
								},
								"extendsType": {
									"type": "reflection",
									"declaration": {
										"id": 4500,
										"name": "__type",
										"kind": 512,
										"kindString": "Constructor",
										"flags": {
											"isExternal": true
										},
										"sources": [
											{
												"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
												"line": 1601,
												"character": 76
											}
										],
										"signatures": [
											{
												"id": 4501,
												"name": "__type",
												"kind": 16384,
												"kindString": "Constructor signature",
												"flags": {
													"isExternal": true,
													"isAbstract": true
												},
												"parameters": [
													{
														"id": 4502,
														"name": "args",
														"kind": 32768,
														"kindString": "Parameter",
														"flags": {
															"isExternal": true,
															"isRest": true
														},
														"type": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												],
												"type": {
													"type": "inferred",
													"name": "R"
												}
											}
										]
									}
								},
								"trueType": {
									"type": "reference",
									"qualifiedName": "R",
									"package": "typescript",
									"name": "R"
								},
								"falseType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						},
						{
							"id": 4528,
							"name": "MultiChangeListener",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 20,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 4533,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4529,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
											"line": 20,
											"character": 30
										}
									],
									"signatures": [
										{
											"id": 4530,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 4531,
													"name": "previous",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "union",
															"types": [
																{
																	"type": "reference",
																	"id": 4533,
																	"name": "T"
																},
																{
																	"type": "literal",
																	"value": null
																}
															]
														}
													}
												},
												{
													"id": 4532,
													"name": "next",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "union",
															"types": [
																{
																	"type": "reference",
																	"id": 4533,
																	"name": "T"
																},
																{
																	"type": "literal",
																	"value": null
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 4496,
							"name": "Omit",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Construct a type with the properties of T except for those in type K."
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1576,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 4497,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								},
								{
									"id": 4498,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 4510,
								"typeArguments": [
									{
										"type": "reference",
										"id": 4497,
										"qualifiedName": "T",
										"package": "typescript",
										"name": "T"
									},
									{
										"type": "reference",
										"id": 4534,
										"typeArguments": [
											{
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 4497,
													"qualifiedName": "T",
													"package": "typescript",
													"name": "T"
												}
											},
											{
												"type": "reference",
												"id": 4498,
												"qualifiedName": "K",
												"package": "typescript",
												"name": "K"
											}
										],
										"qualifiedName": "Exclude",
										"package": "typescript",
										"name": "Exclude"
									}
								],
								"qualifiedName": "Pick",
								"package": "typescript",
								"name": "Pick"
							}
						},
						{
							"id": 4510,
							"name": "Pick",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "From T, pick a set of properties whose keys are in the union K"
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1552,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 4511,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								},
								{
									"id": 4512,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"id": 4511,
											"qualifiedName": "T",
											"package": "typescript",
											"name": "T"
										}
									}
								}
							],
							"type": {
								"type": "mapped",
								"parameter": "P",
								"parameterType": {
									"type": "reference",
									"id": 4512,
									"qualifiedName": "K",
									"package": "typescript",
									"name": "K"
								},
								"templateType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"qualifiedName": "P",
										"package": "typescript",
										"name": "P"
									},
									"objectType": {
										"type": "reference",
										"id": 4511,
										"qualifiedName": "T",
										"package": "typescript",
										"name": "T"
									}
								}
							}
						},
						{
							"id": 4540,
							"name": "ValueOf",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 28,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 4541,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"id": 4541,
										"name": "T"
									}
								},
								"objectType": {
									"type": "reference",
									"id": 4541,
									"name": "T"
								}
							}
						},
						{
							"id": 4537,
							"name": "_ExtractRootFieldNames",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 73,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 4538,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									}
								},
								{
									"id": 4539,
									"name": "FieldNames",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2000,
										"typeArguments": [
											{
												"type": "reference",
												"id": 4538,
												"name": "T"
											}
										],
										"name": "FieldPath"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 4490,
								"typeArguments": [
									{
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"id": 4539,
											"name": "FieldNames"
										},
										"extendsType": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										"trueType": {
											"type": "conditional",
											"checkType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": 0
													},
													"objectType": {
														"type": "reference",
														"id": 4539,
														"name": "FieldNames"
													}
												},
												"objectType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": "fields"
													},
													"objectType": {
														"type": "reference",
														"id": 4538,
														"name": "T"
													}
												}
											},
											"extendsType": {
												"type": "reference",
												"id": 3859,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "inferred",
														"name": "SourceFieldNameT"
													}
												],
												"name": "BaseRelatedViewModelField"
											},
											"trueType": {
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"name": "SourceFieldNameT"
												},
												"extendsType": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "indexedAccess",
														"indexType": {
															"type": "literal",
															"value": "fields"
														},
														"objectType": {
															"type": "reference",
															"id": 4538,
															"name": "T"
														}
													}
												},
												"trueType": {
													"type": "union",
													"types": [
														{
															"type": "indexedAccess",
															"indexType": {
																"type": "literal",
																"value": 0
															},
															"objectType": {
																"type": "reference",
																"id": 4539,
																"name": "FieldNames"
															}
														},
														{
															"type": "reference",
															"name": "SourceFieldNameT"
														}
													]
												},
												"falseType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": 0
													},
													"objectType": {
														"type": "reference",
														"id": 4539,
														"name": "FieldNames"
													}
												}
											},
											"falseType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "literal",
													"value": 0
												},
												"objectType": {
													"type": "reference",
													"id": 4539,
													"name": "FieldNames"
												}
											}
										},
										"falseType": {
											"type": "reference",
											"id": 4539,
											"name": "FieldNames"
										}
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Extract",
								"package": "typescript",
								"name": "Extract"
							}
						}
					],
					"groups": [
						{
							"title": "Classes",
							"kind": 128,
							"children": [
								4442
							]
						},
						{
							"title": "Type aliases",
							"kind": 4194304,
							"children": [
								4519,
								4522,
								4493,
								4534,
								4490,
								4513,
								4507,
								4515,
								4499,
								4528,
								4496,
								4510,
								4540,
								4537
							]
						}
					]
				},
				{
					"id": 1827,
					"name": "ViewModelCache",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Cache for ViewModel instances based on the specified field names set.",
						"text": "The key to the cache is the primary key for the record and the field names\nset on it. For example if you have a record that accepts id, name and email\nyou could have a record cached for id, for name, for email or any\ncombination of the 3 fields. This is to handle the common case of fetching\npartial data from a backend.\n\nThe cache implementation will update any cache entries that are a subset\nof a new cache entry. eg. Caching a record with all the possible fields set\nwould result in all the existing partial field cache entries being updated\nto match the data on the full record for the fields it care about.\n\nUsage:\n\n```js\n// Assume User is a ViewModel already defined\n\n// Add a record\nUser.cache.add(new User({ id: 1, name: 'John' }));\n\n// Retrieve a record\nconst record = User.cache.get(1, ['id', 'name']);\n\n// To update a record just add it again\nUser.cache.add(new User({ id: 1, name: 'Johnny' }));\n\n// Cache is per unique set of fields but a superset will update a subset\nUser.cache.add(new User({ id: 1, name: 'Johnny Smith', email: 'johnny@test.com' }));\nUser.cache.get(1, ['id', 'name']);\n// { id: 1, name: 'Johnny Smith' }\nUser.cache.get(1, ['id', 'name', 'email'])\n// { id: 1, name: 'Johnny Smith', email: 'johnny@test.com' }\n\n// Delete a specific cache for a subset of fields\nUser.cache.delete(1, ['id', 'name']);\nUser.cache.get(1, ['id', 'name']);\n// null\nUser.cache.get(1, ['id', 'name', 'email'])\n// { id: 1, name: 'Johnny Smith', email: 'johnny@test.com' }\n\n// Or all fields\nUser.cache.delete(1);\nUser.cache.get(1, ['id', 'name', 'email'])\n// null\n\n// You can add multiple values at a time\nUser.cache.addList([johnny, sam]);\n\n// You can listen to changes\nUser.cache.addListener(2, ['id', 'name'], (previous, next) => console.log(previous, 'change to', next));\nUser.cache.add(new User({ id: 2, name: 'Bob' }));\n// null changed to User({ id: 2, name: 'Bob' })\nUser.cache.add(new User({ id: 2, name: 'Bobby' }));\n// User({ id: 2, name: 'Bob' }) changed to User({ id: 2, name: 'Bobby' })\nUser.cache.delete(2)\n// User({ id: 2, name: 'Bobby' }) changed to null\n\n// You can listen to multiple changes. If you use this and addList then you only get one\n// call for each change that occurs within addList\nUser.cache.addListenerList(\n // Ids to listen for changes to\n [3, 4],\n // Only get updates for cached records with these field names\n ['id', 'name'],\n (previous, next) => console.log(previous, 'change to', next)\n);\nUser.cache.addList([new User({ id: 3, name: 'Jay' }), new User({ id: 4, name: 'Bee' })]);\n// [null, null] changed to [new User({ id: 3, name: 'Jay' }), new User({ id: 4, name: 'Bee' })]\nUser.cache.addList([new User({ id: 3, name: 'Jayz' }), new User({ id: 4, name: 'Beeb' })]);\n// [new User({ id: 3, name: 'Jay' }), new User({ id: 4, name: 'Bee' })] changed to [new User({ id: 3, name: 'Jayz' }), new User({ id: 4, name: 'Beeb' })]\nUser.cache.delete(3)\n// [new User({ id: 3, name: 'Jayz' }), new User({ id: 4, name: 'Beeb' })] changed to [null, new User({ id: 4, name: 'Beeb' })]\n```\n\n## Field notation\n\nIf a model has a [RelatedViewModelField](doc:RelatedViewModelField) the data for a related field\ncan be retrieved using array notation:\n\n```js\n// Fetch the 'name' field and the related 'group' record and its 'label' field\n['name', ['group', 'label']]\n```\n\nTo fetch all fields from a relation you can just specify its name:\n\n```js\n['name', 'group']\n// This will be expanded to include all non-relation fields on the related ViewModel\n['name', ['group', 'label'], ['group', 'ownerId']]\n```\n\n**NOTE:** Using the shorthand for a relation won't include any nested relation\n\nAccessing deeply related records is supported:\n\n```js\n['name', ['group', 'owner', 'name']]\n```\n\nYou can combine the shorthand with array notation to get all fields and the specified deep relations:\n```js\n['name', 'group', ['group', 'owner', 'name']]\n// Equivalent to:\n['name', ['group', 'label'], ['group', 'owner', 'name']]\n```\n\n**NOTE:** When accessing a relation its `sourceFieldName` is always included regardless\nof whether you explicitly request it:\n\n```js\nUser.cache.get(1, ['name', 'group']);\n// {\n//   id: 1,\n//   name: 'Bob',\n//   groupId: 1,\n//   group: {\n//      id: 1,\n//      label: 'Staff',\n//   }\n// }\n```\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Caching\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 1850,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 679,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1851,
									"name": "new ViewModelCache",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {},
									"typeParameter": [
										{
											"id": 1852,
											"name": "ViewModelClassType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"id": 1852,
														"name": "ViewModelClassType"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"parameters": [
										{
											"id": 1853,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The `ViewModel` this class is for\n"
											},
											"type": {
												"type": "reference",
												"id": 1852,
												"name": "ViewModelClassType"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1827,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1852,
												"name": "ViewModelClassType"
											}
										],
										"name": "default"
									}
								}
							]
						},
						{
							"id": 1904,
							"name": "_lastAllRecords",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 942,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2135,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1852,
												"name": "ViewModelClassType"
											}
										],
										"name": "ViewModelFieldPaths"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 2118,
											"typeArguments": [
												{
													"type": "reference",
													"id": 1852,
													"name": "ViewModelClassType"
												},
												{
													"type": "reference",
													"id": 4490,
													"typeArguments": [
														{
															"type": "typeOperator",
															"operator": "keyof",
															"target": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "fields"
																},
																"objectType": {
																	"type": "reference",
																	"id": 1852,
																	"name": "ViewModelClassType"
																}
															}
														},
														{
															"type": "intrinsic",
															"name": "string"
														}
													],
													"qualifiedName": "Extract",
													"package": "typescript",
													"name": "Extract"
												}
											],
											"name": "PartialViewModel"
										}
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"defaultValue": "..."
						},
						{
							"id": 1932,
							"name": "allChangeListeners",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 1093,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 1933,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {},
										"signatures": [
											{
												"id": 1934,
												"name": "__type",
												"kind": 4096,
												"kindString": "Call signature",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "void"
												}
											}
										]
									}
								}
							},
							"defaultValue": "[]"
						},
						{
							"id": 1855,
							"name": "fieldNameCache",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 673,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 4442,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1852,
												"name": "ViewModelClassType"
											}
										],
										"name": "RecordFieldNameCache"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							}
						},
						{
							"id": 1854,
							"name": "viewModel",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 672,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 1852,
								"name": "ViewModelClassType"
							}
						},
						{
							"id": 1828,
							"name": "listenerBatcher",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 674,
									"character": 11
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1829,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1830,
											"name": "isActive",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "false"
										},
										{
											"id": 1831,
											"name": "pending",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "Map",
												"package": "typescript",
												"name": "Map"
											},
											"defaultValue": "..."
										},
										{
											"id": 1833,
											"name": "pendingAll",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"qualifiedName": "Set",
												"package": "typescript",
												"name": "Set"
											},
											"defaultValue": "..."
										},
										{
											"id": 1832,
											"name": "pendingNoBatch",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "Map",
												"package": "typescript",
												"name": "Map"
											},
											"defaultValue": "..."
										},
										{
											"id": 1844,
											"name": "batch",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
													"line": 510,
													"character": 4
												}
											],
											"signatures": [
												{
													"id": 1845,
													"name": "batch",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Start a batch. The passed function is called and any changes queued. Once function returns listeners\nwill be dispatched. The value returned from `run` will be returned.",
														"text": "If any error occurs in `run` then no listeners will be called.\n\nIf you nest batches then all listeners run at the end of the outer batch.\n"
													},
													"typeParameter": [
														{
															"id": 1846,
															"name": "T",
															"kind": 131072,
															"kindString": "Type parameter",
															"flags": {}
														}
													],
													"parameters": [
														{
															"id": 1847,
															"name": "run",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 1848,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"signatures": [
																		{
																			"id": 1849,
																			"name": "__type",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 1846,
																				"name": "T"
																			}
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"id": 1846,
														"name": "T"
													}
												}
											]
										},
										{
											"id": 1837,
											"name": "call",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
													"line": 484,
													"character": 4
												}
											],
											"signatures": [
												{
													"id": 1838,
													"name": "call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queue a call to a record/field specific listener",
														"text": "If `shouldBatch` is false then there's no guarantees about the listener only being called\nonce.\n"
													},
													"typeParameter": [
														{
															"id": 1839,
															"name": "T",
															"kind": 131072,
															"kindString": "Type parameter",
															"flags": {}
														}
													],
													"parameters": [
														{
															"id": 1840,
															"name": "listener",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 4522,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 1839,
																		"name": "T"
																	}
																],
																"name": "ChangeListener"
															}
														},
														{
															"id": 1841,
															"name": "before",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "reference",
																		"id": 1839,
																		"name": "T"
																	}
																]
															}
														},
														{
															"id": 1842,
															"name": "after",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "reference",
																		"id": 1839,
																		"name": "T"
																	}
																]
															}
														},
														{
															"id": 1843,
															"name": "shouldBatch",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															},
															"defaultValue": "true"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										},
										{
											"id": 1834,
											"name": "callAll",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
													"line": 471,
													"character": 4
												}
											],
											"signatures": [
												{
													"id": 1835,
													"name": "callAll",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queue a call to a non-record/field specific listeners"
													},
													"parameters": [
														{
															"id": 1836,
															"name": "listener",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 4519,
																"name": "AllChangesListener"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												1830,
												1831,
												1833,
												1832
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												1844,
												1837,
												1834
											]
										}
									]
								}
							},
							"defaultValue": "defaultListenerBatcher"
						},
						{
							"id": 1865,
							"name": "cacheClass",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 722,
									"character": 16
								}
							],
							"getSignature": [
								{
									"id": 1866,
									"name": "cacheClass",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 1862,
							"name": "acquireFieldNameCache",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 708,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 1863,
									"name": "acquireFieldNameCache",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isPrivate": true
									},
									"comment": {
										"shortText": "Acquire the field name cache specific to a primary key"
									},
									"parameters": [
										{
											"id": 1864,
											"name": "pk",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The primary key to get the cache for\n"
											},
											"type": {
												"type": "reference",
												"id": 2121,
												"typeArguments": [
													{
														"type": "reference",
														"id": 1852,
														"name": "ViewModelClassType"
													}
												],
												"name": "ExtractPkFieldParseableValueType"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 4442,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1852,
												"name": "ViewModelClassType"
											}
										],
										"name": "RecordFieldNameCache"
									}
								}
							]
						},
						{
							"id": 1873,
							"name": "add",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 762,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1874,
									"name": "add",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add a record or records to the cache. Records are cached based on the fields that are\nset (ie. to retrieve the record you would call `get` with the `id` and array of field\nnames that were set on it).",
										"text": "If record A has a superset of fields of record B then when A is cached it\nwill update the cache for record B. The reverse isn't true so as to maintain consistency\nwithin a record.\n"
									},
									"typeParameter": [
										{
											"id": 1875,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"id": 4496,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4499,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 1852,
																		"name": "ViewModelClassType"
																	}
																],
																"qualifiedName": "InstanceType",
																"package": "typescript",
																"name": "InstanceType"
															},
															{
																"type": "reference",
																"id": 4490,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 1852,
																				"name": "ViewModelClassType"
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														],
														"qualifiedName": "Omit",
														"package": "typescript",
														"name": "Omit"
													},
													{
														"type": "reference",
														"id": 2037,
														"typeArguments": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "fields"
																},
																"objectType": {
																	"type": "reference",
																	"id": 1852,
																	"name": "ViewModelClassType"
																}
															},
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "pkFieldName"
																},
																"objectType": {
																	"type": "reference",
																	"id": 1852,
																	"name": "ViewModelClassType"
																}
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"id": 4507,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 1852,
																				"name": "ViewModelClassType"
																			},
																			{
																				"type": "reference",
																				"id": 4490,
																				"typeArguments": [
																					{
																						"type": "typeOperator",
																						"operator": "keyof",
																						"target": {
																							"type": "indexedAccess",
																							"indexType": {
																								"type": "literal",
																								"value": "fields"
																							},
																							"objectType": {
																								"type": "reference",
																								"id": 1852,
																								"name": "ViewModelClassType"
																							}
																						}
																					},
																					{
																						"type": "intrinsic",
																						"name": "string"
																					}
																				],
																				"qualifiedName": "Extract",
																				"package": "typescript",
																				"name": "Extract"
																			}
																		],
																		"name": "ExtractRootFieldNames"
																	},
																	{
																		"type": "conditional",
																		"checkType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "pkFieldName"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 1852,
																				"name": "ViewModelClassType"
																			}
																		},
																		"extendsType": {
																			"type": "intrinsic",
																			"name": "string"
																		},
																		"trueType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "intrinsic",
																				"name": "any"
																			},
																			"objectType": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		},
																		"falseType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "intrinsic",
																				"name": "number"
																			},
																			"objectType": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "literal",
																					"value": "pkFieldName"
																				},
																				"objectType": {
																					"type": "reference",
																					"id": 1852,
																					"name": "ViewModelClassType"
																				}
																			}
																		}
																	}
																]
															},
															{
																"type": "reference",
																"id": 1875,
																"name": "T"
															}
														],
														"name": "BaseViewModel"
													},
													{
														"type": "reference",
														"id": 2006,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4510,
																"typeArguments": [
																	{
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "literal",
																			"value": "fields"
																		},
																		"objectType": {
																			"type": "reference",
																			"id": 1852,
																			"name": "ViewModelClassType"
																		}
																	},
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "reference",
																				"id": 4507,
																				"typeArguments": [
																					{
																						"type": "reference",
																						"id": 1852,
																						"name": "ViewModelClassType"
																					},
																					{
																						"type": "reference",
																						"id": 4490,
																						"typeArguments": [
																							{
																								"type": "typeOperator",
																								"operator": "keyof",
																								"target": {
																									"type": "indexedAccess",
																									"indexType": {
																										"type": "literal",
																										"value": "fields"
																									},
																									"objectType": {
																										"type": "reference",
																										"id": 1852,
																										"name": "ViewModelClassType"
																									}
																								}
																							},
																							{
																								"type": "intrinsic",
																								"name": "string"
																							}
																						],
																						"qualifiedName": "Extract",
																						"package": "typescript",
																						"name": "Extract"
																					}
																				],
																				"name": "ExtractRootFieldNames"
																			},
																			{
																				"type": "conditional",
																				"checkType": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "pkFieldName"
																					},
																					"objectType": {
																						"type": "reference",
																						"id": 1852,
																						"name": "ViewModelClassType"
																					}
																				},
																				"extendsType": {
																					"type": "intrinsic",
																					"name": "string"
																				},
																				"trueType": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "intrinsic",
																						"name": "any"
																					},
																					"objectType": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				},
																				"falseType": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "intrinsic",
																						"name": "number"
																					},
																					"objectType": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "literal",
																							"value": "pkFieldName"
																						},
																						"objectType": {
																							"type": "reference",
																							"id": 1852,
																							"name": "ViewModelClassType"
																						}
																					}
																				}
																			}
																		]
																	}
																],
																"qualifiedName": "Pick",
																"package": "typescript",
																"name": "Pick"
															}
														],
														"name": "FieldDataMapping"
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 1876,
											"name": "recordOrData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The record instance to cache. If a plain object is passed then\nan instance of the view model will be created and returned. An array is also supported\nin which case each entry in the array will be converted to the view model if required\nand returned.\n"
											},
											"type": {
												"type": "reference",
												"id": 1875,
												"name": "T"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1875,
										"name": "T"
									}
								},
								{
									"id": 1877,
									"name": "add",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1878,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"id": 4496,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4499,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 1852,
																		"name": "ViewModelClassType"
																	}
																],
																"qualifiedName": "InstanceType",
																"package": "typescript",
																"name": "InstanceType"
															},
															{
																"type": "reference",
																"id": 4490,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 1852,
																				"name": "ViewModelClassType"
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														],
														"qualifiedName": "Omit",
														"package": "typescript",
														"name": "Omit"
													},
													{
														"type": "reference",
														"id": 2037,
														"typeArguments": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "fields"
																},
																"objectType": {
																	"type": "reference",
																	"id": 1852,
																	"name": "ViewModelClassType"
																}
															},
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "pkFieldName"
																},
																"objectType": {
																	"type": "reference",
																	"id": 1852,
																	"name": "ViewModelClassType"
																}
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"id": 4507,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 1852,
																				"name": "ViewModelClassType"
																			},
																			{
																				"type": "reference",
																				"id": 4490,
																				"typeArguments": [
																					{
																						"type": "typeOperator",
																						"operator": "keyof",
																						"target": {
																							"type": "indexedAccess",
																							"indexType": {
																								"type": "literal",
																								"value": "fields"
																							},
																							"objectType": {
																								"type": "reference",
																								"id": 1852,
																								"name": "ViewModelClassType"
																							}
																						}
																					},
																					{
																						"type": "intrinsic",
																						"name": "string"
																					}
																				],
																				"qualifiedName": "Extract",
																				"package": "typescript",
																				"name": "Extract"
																			}
																		],
																		"name": "ExtractRootFieldNames"
																	},
																	{
																		"type": "conditional",
																		"checkType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "pkFieldName"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 1852,
																				"name": "ViewModelClassType"
																			}
																		},
																		"extendsType": {
																			"type": "intrinsic",
																			"name": "string"
																		},
																		"trueType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "intrinsic",
																				"name": "any"
																			},
																			"objectType": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		},
																		"falseType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "intrinsic",
																				"name": "number"
																			},
																			"objectType": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "literal",
																					"value": "pkFieldName"
																				},
																				"objectType": {
																					"type": "reference",
																					"id": 1852,
																					"name": "ViewModelClassType"
																				}
																			}
																		}
																	}
																]
															},
															{
																"type": "reference",
																"id": 1878,
																"name": "T"
															}
														],
														"name": "BaseViewModel"
													},
													{
														"type": "reference",
														"id": 2006,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4510,
																"typeArguments": [
																	{
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "literal",
																			"value": "fields"
																		},
																		"objectType": {
																			"type": "reference",
																			"id": 1852,
																			"name": "ViewModelClassType"
																		}
																	},
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "reference",
																				"id": 4507,
																				"typeArguments": [
																					{
																						"type": "reference",
																						"id": 1852,
																						"name": "ViewModelClassType"
																					},
																					{
																						"type": "reference",
																						"id": 4490,
																						"typeArguments": [
																							{
																								"type": "typeOperator",
																								"operator": "keyof",
																								"target": {
																									"type": "indexedAccess",
																									"indexType": {
																										"type": "literal",
																										"value": "fields"
																									},
																									"objectType": {
																										"type": "reference",
																										"id": 1852,
																										"name": "ViewModelClassType"
																									}
																								}
																							},
																							{
																								"type": "intrinsic",
																								"name": "string"
																							}
																						],
																						"qualifiedName": "Extract",
																						"package": "typescript",
																						"name": "Extract"
																					}
																				],
																				"name": "ExtractRootFieldNames"
																			},
																			{
																				"type": "conditional",
																				"checkType": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "pkFieldName"
																					},
																					"objectType": {
																						"type": "reference",
																						"id": 1852,
																						"name": "ViewModelClassType"
																					}
																				},
																				"extendsType": {
																					"type": "intrinsic",
																					"name": "string"
																				},
																				"trueType": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "intrinsic",
																						"name": "any"
																					},
																					"objectType": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				},
																				"falseType": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "intrinsic",
																						"name": "number"
																					},
																					"objectType": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "literal",
																							"value": "pkFieldName"
																						},
																						"objectType": {
																							"type": "reference",
																							"id": 1852,
																							"name": "ViewModelClassType"
																						}
																					}
																				}
																			}
																		]
																	}
																],
																"qualifiedName": "Pick",
																"package": "typescript",
																"name": "Pick"
															}
														],
														"name": "FieldDataMapping"
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 1879,
											"name": "recordOrData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1878,
													"name": "T"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1878,
											"name": "T"
										}
									}
								},
								{
									"id": 1880,
									"name": "add",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1881,
											"name": "FieldNames",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 1882,
											"name": "recordOrData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2008,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4510,
														"typeArguments": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "fields"
																},
																"objectType": {
																	"type": "reference",
																	"id": 1852,
																	"name": "ViewModelClassType"
																}
															},
															{
																"type": "reference",
																"id": 1881,
																"name": "FieldNames"
															}
														],
														"qualifiedName": "Pick",
														"package": "typescript",
														"name": "Pick"
													}
												],
												"name": "FieldDataMappingRaw"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2118,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1852,
												"name": "ViewModelClassType"
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "FieldNames"
											}
										],
										"name": "PartialViewModel"
									}
								},
								{
									"id": 1883,
									"name": "add",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1884,
											"name": "FieldNames",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 1885,
											"name": "recordOrData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2008,
													"typeArguments": [
														{
															"type": "reference",
															"id": 4510,
															"typeArguments": [
																{
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "literal",
																		"value": "fields"
																	},
																	"objectType": {
																		"type": "reference",
																		"id": 1852,
																		"name": "ViewModelClassType"
																	}
																},
																{
																	"type": "reference",
																	"id": 1884,
																	"name": "FieldNames"
																}
															],
															"qualifiedName": "Pick",
															"package": "typescript",
															"name": "Pick"
														}
													],
													"name": "FieldDataMappingRaw"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 2118,
											"typeArguments": [
												{
													"type": "reference",
													"id": 1852,
													"name": "ViewModelClassType"
												},
												{
													"type": "reference",
													"id": 1884,
													"name": "FieldNames"
												}
											],
											"name": "PartialViewModel"
										}
									}
								}
							]
						},
						{
							"id": 1886,
							"name": "addList",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 821,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1887,
									"name": "addList",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add a list of records. Use this in place of manually calling\nadd() on each record individually so that listeners only get\nnotified once of the change to the list rather than for\neach record in the list."
									},
									"typeParameter": [
										{
											"id": 1888,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"id": 4496,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4499,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 1852,
																		"name": "ViewModelClassType"
																	}
																],
																"qualifiedName": "InstanceType",
																"package": "typescript",
																"name": "InstanceType"
															},
															{
																"type": "reference",
																"id": 4490,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 1852,
																				"name": "ViewModelClassType"
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														],
														"qualifiedName": "Omit",
														"package": "typescript",
														"name": "Omit"
													},
													{
														"type": "reference",
														"id": 2037,
														"typeArguments": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "fields"
																},
																"objectType": {
																	"type": "reference",
																	"id": 1852,
																	"name": "ViewModelClassType"
																}
															},
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "pkFieldName"
																},
																"objectType": {
																	"type": "reference",
																	"id": 1852,
																	"name": "ViewModelClassType"
																}
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"id": 4507,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 1852,
																				"name": "ViewModelClassType"
																			},
																			{
																				"type": "reference",
																				"id": 4490,
																				"typeArguments": [
																					{
																						"type": "typeOperator",
																						"operator": "keyof",
																						"target": {
																							"type": "indexedAccess",
																							"indexType": {
																								"type": "literal",
																								"value": "fields"
																							},
																							"objectType": {
																								"type": "reference",
																								"id": 1852,
																								"name": "ViewModelClassType"
																							}
																						}
																					},
																					{
																						"type": "intrinsic",
																						"name": "string"
																					}
																				],
																				"qualifiedName": "Extract",
																				"package": "typescript",
																				"name": "Extract"
																			}
																		],
																		"name": "ExtractRootFieldNames"
																	},
																	{
																		"type": "conditional",
																		"checkType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "pkFieldName"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 1852,
																				"name": "ViewModelClassType"
																			}
																		},
																		"extendsType": {
																			"type": "intrinsic",
																			"name": "string"
																		},
																		"trueType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "intrinsic",
																				"name": "any"
																			},
																			"objectType": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		},
																		"falseType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "intrinsic",
																				"name": "number"
																			},
																			"objectType": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "literal",
																					"value": "pkFieldName"
																				},
																				"objectType": {
																					"type": "reference",
																					"id": 1852,
																					"name": "ViewModelClassType"
																				}
																			}
																		}
																	}
																]
															},
															{
																"type": "reference",
																"id": 1888,
																"name": "T"
															}
														],
														"name": "BaseViewModel"
													},
													{
														"type": "reference",
														"id": 2006,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4510,
																"typeArguments": [
																	{
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "literal",
																			"value": "fields"
																		},
																		"objectType": {
																			"type": "reference",
																			"id": 1852,
																			"name": "ViewModelClassType"
																		}
																	},
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "reference",
																				"id": 4507,
																				"typeArguments": [
																					{
																						"type": "reference",
																						"id": 1852,
																						"name": "ViewModelClassType"
																					},
																					{
																						"type": "reference",
																						"id": 4490,
																						"typeArguments": [
																							{
																								"type": "typeOperator",
																								"operator": "keyof",
																								"target": {
																									"type": "indexedAccess",
																									"indexType": {
																										"type": "literal",
																										"value": "fields"
																									},
																									"objectType": {
																										"type": "reference",
																										"id": 1852,
																										"name": "ViewModelClassType"
																									}
																								}
																							},
																							{
																								"type": "intrinsic",
																								"name": "string"
																							}
																						],
																						"qualifiedName": "Extract",
																						"package": "typescript",
																						"name": "Extract"
																					}
																				],
																				"name": "ExtractRootFieldNames"
																			},
																			{
																				"type": "conditional",
																				"checkType": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "pkFieldName"
																					},
																					"objectType": {
																						"type": "reference",
																						"id": 1852,
																						"name": "ViewModelClassType"
																					}
																				},
																				"extendsType": {
																					"type": "intrinsic",
																					"name": "string"
																				},
																				"trueType": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "intrinsic",
																						"name": "any"
																					},
																					"objectType": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				},
																				"falseType": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "intrinsic",
																						"name": "number"
																					},
																					"objectType": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "literal",
																							"value": "pkFieldName"
																						},
																						"objectType": {
																							"type": "reference",
																							"id": 1852,
																							"name": "ViewModelClassType"
																						}
																					}
																				}
																			}
																		]
																	}
																],
																"qualifiedName": "Pick",
																"package": "typescript",
																"name": "Pick"
															}
														],
														"name": "FieldDataMapping"
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 1889,
											"name": "recordsOrData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The records to add. Can either be an array of instances of the ViewModel\nor an array of data objects (or a mixture of both).\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1888,
													"name": "T"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1888,
											"name": "T"
										}
									}
								},
								{
									"id": 1890,
									"name": "addList",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1891,
											"name": "FieldNames",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 1892,
											"name": "recordsOrData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2008,
													"typeArguments": [
														{
															"type": "reference",
															"id": 4510,
															"typeArguments": [
																{
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "literal",
																		"value": "fields"
																	},
																	"objectType": {
																		"type": "reference",
																		"id": 1852,
																		"name": "ViewModelClassType"
																	}
																},
																{
																	"type": "reference",
																	"id": 1891,
																	"name": "FieldNames"
																}
															],
															"qualifiedName": "Pick",
															"package": "typescript",
															"name": "Pick"
														}
													],
													"name": "FieldDataMappingRaw"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 2118,
											"typeArguments": [
												{
													"type": "reference",
													"id": 1852,
													"name": "ViewModelClassType"
												},
												{
													"type": "reference",
													"id": 1891,
													"name": "FieldNames"
												}
											],
											"name": "PartialViewModel"
										}
									}
								}
							]
						},
						{
							"id": 1937,
							"name": "addListener",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 1105,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1938,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add a listener to any changes at all. The detail of the changes are not available.",
										"returns": "A function that removes the listener\n"
									},
									"parameters": [
										{
											"id": 1939,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "Function to that is called when any change occurs. The function is called with no parameters."
											},
											"type": {
												"type": "reference",
												"id": 4519,
												"name": "AllChangesListener"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 4493,
										"name": "ChangeListenerUnsubscribe"
									}
								},
								{
									"id": 1940,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add a listener for any changes, additions or deletions for the record(s) identified by\n`pkOrPks` for the field names `fieldNames`.",
										"returns": "A function that removes the listener\n"
									},
									"typeParameter": [
										{
											"id": 1941,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "tuple",
														"elements": [
															{
																"type": "reference",
																"id": 4490,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "reference",
																			"id": 4513,
																			"typeArguments": [
																				{
																					"type": "reference",
																					"id": 1852,
																					"name": "ViewModelClassType"
																				}
																			],
																			"name": "ExtractRelatedFields"
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															},
															{
																"type": "reference",
																"id": 4490,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "reference",
																					"id": 4490,
																					"typeArguments": [
																						{
																							"type": "typeOperator",
																							"operator": "keyof",
																							"target": {
																								"type": "reference",
																								"id": 4513,
																								"typeArguments": [
																									{
																										"type": "reference",
																										"id": 1852,
																										"name": "ViewModelClassType"
																									}
																								],
																								"name": "ExtractRelatedFields"
																							}
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"qualifiedName": "Extract",
																					"package": "typescript",
																					"name": "Extract"
																				},
																				"objectType": {
																					"type": "reference",
																					"id": 4513,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 1852,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														]
													},
													{
														"type": "reference",
														"id": 4515,
														"typeArguments": [
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "reference",
																		"id": 4490,
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "reference",
																					"id": 4513,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 1852,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	},
																	{
																		"type": "reference",
																		"id": 4490,
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "fields"
																					},
																					"objectType": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "reference",
																							"id": 4490,
																							"typeArguments": [
																								{
																									"type": "typeOperator",
																									"operator": "keyof",
																									"target": {
																										"type": "reference",
																										"id": 4513,
																										"typeArguments": [
																											{
																												"type": "reference",
																												"id": 1852,
																												"name": "ViewModelClassType"
																											}
																										],
																										"name": "ExtractRelatedFields"
																									}
																								},
																								{
																									"type": "intrinsic",
																									"name": "string"
																								}
																							],
																							"qualifiedName": "Extract",
																							"package": "typescript",
																							"name": "Extract"
																						},
																						"objectType": {
																							"type": "reference",
																							"id": 4513,
																							"typeArguments": [
																								{
																									"type": "reference",
																									"id": 1852,
																									"name": "ViewModelClassType"
																								}
																							],
																							"name": "ExtractRelatedFields"
																						}
																					}
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	}
																]
															},
															{
																"type": "reference",
																"id": 2071,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "ViewModelConstructor"
															},
															{
																"type": "reference",
																"id": 4513,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 2071,
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "ViewModelConstructor"
																	}
																],
																"name": "ExtractRelatedFields"
															}
														],
														"name": "FieldPathInner"
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 1942,
											"name": "pkOrPks",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "Primary key or array of multiple primary keys that identifies the record(s)\nto listen to changes/additions/deletions to"
											},
											"type": {
												"type": "reference",
												"id": 2121,
												"typeArguments": [
													{
														"type": "reference",
														"id": 1852,
														"name": "ViewModelClassType"
													}
												],
												"name": "ExtractPkFieldParseableValueType"
											}
										},
										{
											"id": 1943,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "Field names to listen to changes/additions/deletions to. See [Field notation](#Field_notation) for supported format."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1941,
													"name": "T"
												}
											}
										},
										{
											"id": 1944,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "Function to call with any changes"
											},
											"type": {
												"type": "reference",
												"id": 4522,
												"typeArguments": [
													{
														"type": "reference",
														"id": 2118,
														"typeArguments": [
															{
																"type": "reference",
																"id": 1852,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"id": 1941,
																"name": "T"
															}
														],
														"name": "PartialViewModel"
													}
												],
												"name": "ChangeListener"
											}
										},
										{
											"id": 1945,
											"name": "batch",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Whether or not to batch this call with other calls (defaults to true). You shouldn't need to change the default."
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 4493,
										"name": "ChangeListenerUnsubscribe"
									}
								},
								{
									"id": 1946,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1947,
											"name": "pkOrPks",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2121,
												"typeArguments": [
													{
														"type": "reference",
														"id": 1852,
														"name": "ViewModelClassType"
													}
												],
												"name": "ExtractPkFieldParseableValueType"
											}
										},
										{
											"id": 1948,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": "*"
											}
										},
										{
											"id": 1949,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4522,
												"typeArguments": [
													{
														"type": "reference",
														"id": 2118,
														"typeArguments": [
															{
																"type": "reference",
																"id": 1852,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"id": 4490,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 1852,
																				"name": "ViewModelClassType"
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														],
														"name": "PartialViewModel"
													}
												],
												"name": "ChangeListener"
											}
										},
										{
											"id": 1950,
											"name": "batch",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 4493,
										"name": "ChangeListenerUnsubscribe"
									}
								},
								{
									"id": 1951,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1952,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "tuple",
														"elements": [
															{
																"type": "reference",
																"id": 4490,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "reference",
																			"id": 4513,
																			"typeArguments": [
																				{
																					"type": "reference",
																					"id": 1852,
																					"name": "ViewModelClassType"
																				}
																			],
																			"name": "ExtractRelatedFields"
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															},
															{
																"type": "reference",
																"id": 4490,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "reference",
																					"id": 4490,
																					"typeArguments": [
																						{
																							"type": "typeOperator",
																							"operator": "keyof",
																							"target": {
																								"type": "reference",
																								"id": 4513,
																								"typeArguments": [
																									{
																										"type": "reference",
																										"id": 1852,
																										"name": "ViewModelClassType"
																									}
																								],
																								"name": "ExtractRelatedFields"
																							}
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"qualifiedName": "Extract",
																					"package": "typescript",
																					"name": "Extract"
																				},
																				"objectType": {
																					"type": "reference",
																					"id": 4513,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 1852,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														]
													},
													{
														"type": "reference",
														"id": 4515,
														"typeArguments": [
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "reference",
																		"id": 4490,
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "reference",
																					"id": 4513,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 1852,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	},
																	{
																		"type": "reference",
																		"id": 4490,
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "fields"
																					},
																					"objectType": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "reference",
																							"id": 4490,
																							"typeArguments": [
																								{
																									"type": "typeOperator",
																									"operator": "keyof",
																									"target": {
																										"type": "reference",
																										"id": 4513,
																										"typeArguments": [
																											{
																												"type": "reference",
																												"id": 1852,
																												"name": "ViewModelClassType"
																											}
																										],
																										"name": "ExtractRelatedFields"
																									}
																								},
																								{
																									"type": "intrinsic",
																									"name": "string"
																								}
																							],
																							"qualifiedName": "Extract",
																							"package": "typescript",
																							"name": "Extract"
																						},
																						"objectType": {
																							"type": "reference",
																							"id": 4513,
																							"typeArguments": [
																								{
																									"type": "reference",
																									"id": 1852,
																									"name": "ViewModelClassType"
																								}
																							],
																							"name": "ExtractRelatedFields"
																						}
																					}
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	}
																]
															},
															{
																"type": "reference",
																"id": 2071,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "ViewModelConstructor"
															},
															{
																"type": "reference",
																"id": 4513,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 2071,
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "ViewModelConstructor"
																	}
																],
																"name": "ExtractRelatedFields"
															}
														],
														"name": "FieldPathInner"
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 1953,
											"name": "pkOrPks",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2121,
													"typeArguments": [
														{
															"type": "reference",
															"id": 1852,
															"name": "ViewModelClassType"
														}
													],
													"name": "ExtractPkFieldParseableValueType"
												}
											}
										},
										{
											"id": 1954,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1952,
													"name": "T"
												}
											}
										},
										{
											"id": 1955,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4528,
												"typeArguments": [
													{
														"type": "reference",
														"id": 2118,
														"typeArguments": [
															{
																"type": "reference",
																"id": 1852,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"id": 1952,
																"name": "T"
															}
														],
														"name": "PartialViewModel"
													}
												],
												"name": "MultiChangeListener"
											}
										},
										{
											"id": 1956,
											"name": "batch",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 4493,
										"name": "ChangeListenerUnsubscribe"
									}
								},
								{
									"id": 1957,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1958,
											"name": "pkOrPksOrListener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2121,
													"typeArguments": [
														{
															"type": "reference",
															"id": 1852,
															"name": "ViewModelClassType"
														}
													],
													"name": "ExtractPkFieldParseableValueType"
												}
											}
										},
										{
											"id": 1959,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": "*"
											}
										},
										{
											"id": 1960,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4528,
												"typeArguments": [
													{
														"type": "reference",
														"id": 2118,
														"typeArguments": [
															{
																"type": "reference",
																"id": 1852,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"id": 4490,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 1852,
																				"name": "ViewModelClassType"
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														],
														"name": "PartialViewModel"
													}
												],
												"name": "MultiChangeListener"
											}
										},
										{
											"id": 1961,
											"name": "batch",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 4493,
										"name": "ChangeListenerUnsubscribe"
									}
								}
							]
						},
						{
							"id": 1962,
							"name": "addListenerList",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 1201,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1963,
									"name": "addListenerList",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1964,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "tuple",
														"elements": [
															{
																"type": "reference",
																"id": 4490,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "reference",
																			"id": 4513,
																			"typeArguments": [
																				{
																					"type": "reference",
																					"id": 1852,
																					"name": "ViewModelClassType"
																				}
																			],
																			"name": "ExtractRelatedFields"
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															},
															{
																"type": "reference",
																"id": 4490,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "reference",
																					"id": 4490,
																					"typeArguments": [
																						{
																							"type": "typeOperator",
																							"operator": "keyof",
																							"target": {
																								"type": "reference",
																								"id": 4513,
																								"typeArguments": [
																									{
																										"type": "reference",
																										"id": 1852,
																										"name": "ViewModelClassType"
																									}
																								],
																								"name": "ExtractRelatedFields"
																							}
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"qualifiedName": "Extract",
																					"package": "typescript",
																					"name": "Extract"
																				},
																				"objectType": {
																					"type": "reference",
																					"id": 4513,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 1852,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														]
													},
													{
														"type": "reference",
														"id": 4515,
														"typeArguments": [
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "reference",
																		"id": 4490,
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "reference",
																					"id": 4513,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 1852,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	},
																	{
																		"type": "reference",
																		"id": 4490,
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "fields"
																					},
																					"objectType": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "reference",
																							"id": 4490,
																							"typeArguments": [
																								{
																									"type": "typeOperator",
																									"operator": "keyof",
																									"target": {
																										"type": "reference",
																										"id": 4513,
																										"typeArguments": [
																											{
																												"type": "reference",
																												"id": 1852,
																												"name": "ViewModelClassType"
																											}
																										],
																										"name": "ExtractRelatedFields"
																									}
																								},
																								{
																									"type": "intrinsic",
																									"name": "string"
																								}
																							],
																							"qualifiedName": "Extract",
																							"package": "typescript",
																							"name": "Extract"
																						},
																						"objectType": {
																							"type": "reference",
																							"id": 4513,
																							"typeArguments": [
																								{
																									"type": "reference",
																									"id": 1852,
																									"name": "ViewModelClassType"
																								}
																							],
																							"name": "ExtractRelatedFields"
																						}
																					}
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	}
																]
															},
															{
																"type": "reference",
																"id": 2071,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "ViewModelConstructor"
															},
															{
																"type": "reference",
																"id": 4513,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 2071,
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "ViewModelConstructor"
																	}
																],
																"name": "ExtractRelatedFields"
															}
														],
														"name": "FieldPathInner"
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 1965,
											"name": "pks",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2121,
													"typeArguments": [
														{
															"type": "reference",
															"id": 1852,
															"name": "ViewModelClassType"
														}
													],
													"name": "ExtractPkFieldParseableValueType"
												}
											}
										},
										{
											"id": 1966,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1964,
													"name": "T"
												}
											}
										},
										{
											"id": 1967,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4528,
												"typeArguments": [
													{
														"type": "reference",
														"id": 2118,
														"typeArguments": [
															{
																"type": "reference",
																"id": 1852,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"id": 1964,
																"name": "T"
															}
														],
														"name": "PartialViewModel"
													}
												],
												"name": "MultiChangeListener"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 4493,
										"name": "ChangeListenerUnsubscribe"
									}
								},
								{
									"id": 1968,
									"name": "addListenerList",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1969,
											"name": "pks",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2121,
													"typeArguments": [
														{
															"type": "reference",
															"id": 1852,
															"name": "ViewModelClassType"
														}
													],
													"name": "ExtractPkFieldParseableValueType"
												}
											}
										},
										{
											"id": 1970,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": "*"
											}
										},
										{
											"id": 1971,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4528,
												"typeArguments": [
													{
														"type": "reference",
														"id": 2118,
														"typeArguments": [
															{
																"type": "reference",
																"id": 1852,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"id": 4490,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 1852,
																				"name": "ViewModelClassType"
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														],
														"name": "PartialViewModel"
													}
												],
												"name": "MultiChangeListener"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 4493,
										"name": "ChangeListenerUnsubscribe"
									}
								}
							]
						},
						{
							"id": 1867,
							"name": "batch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 744,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1868,
									"name": "batch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Batch changes made within provided function. This guarantees that any changes made\nwill result in a single call for each relevant listener.",
										"text": "```js\nUser.cache.addListener(listenerAll);\nUser.cache.addListener(1, ['id', 'name'], listener);\nUser.cache.addListenerList([1, 2], ['id', 'name'], listenerList);\nUser.cache.batch(() => {\n  // This value won't appear in changes at all as it's replaced 2 lines down\n  User.cache.add({ id: 1, name: 'Bob', groupId: 1 });\n  User.cache.add({ id: 2, name: 'Sam', groupId: null });\n  User.cache.add({ id: 1, name: 'Bobby', groupId: 1 });\n});\n// All listeners called once\n```"
									},
									"typeParameter": [
										{
											"id": 1869,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 1870,
											"name": "run",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1871,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1872,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 1869,
																"name": "T"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1869,
										"name": "T"
									}
								}
							]
						},
						{
							"id": 1928,
							"name": "delete",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 1077,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1929,
									"name": "delete",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Delete a record from the cache, optionally only for the specified `fieldNames`",
										"text": "If `fieldNames` is omitted then the cache for the record is cleared in it's entirety.\n",
										"returns": "true if anything was removed, false otherwise\n"
									},
									"parameters": [
										{
											"id": 1930,
											"name": "pk",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The primary key of the record to delete"
											},
											"type": {
												"type": "reference",
												"id": 2121,
												"typeArguments": [
													{
														"type": "reference",
														"id": 1852,
														"name": "ViewModelClassType"
													}
												],
												"name": "ExtractPkFieldParseableValueType"
											}
										},
										{
											"id": 1931,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Optionally only delete the entry with the specified field names. If\nthis is not set then all data for the record is removed. See [Field notation](#Field_notation) for supported format.\n"
											},
											"type": {
												"type": "reference",
												"id": 2003,
												"typeArguments": [
													{
														"type": "reference",
														"id": 1852,
														"name": "ViewModelClassType"
													},
													{
														"type": "reference",
														"id": 4513,
														"typeArguments": [
															{
																"type": "reference",
																"id": 1852,
																"name": "ViewModelClassType"
															}
														],
														"name": "ExtractRelatedFields"
													}
												],
												"name": "FieldPaths"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 1893,
							"name": "get",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 847,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1894,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get a record with the specified `fieldNames` set from the cache",
										"returns": "The cached record or null if none found\n"
									},
									"typeParameter": [
										{
											"id": 1895,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "tuple",
														"elements": [
															{
																"type": "reference",
																"id": 4490,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "reference",
																			"id": 4513,
																			"typeArguments": [
																				{
																					"type": "reference",
																					"id": 1852,
																					"name": "ViewModelClassType"
																				}
																			],
																			"name": "ExtractRelatedFields"
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															},
															{
																"type": "reference",
																"id": 4490,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "reference",
																					"id": 4490,
																					"typeArguments": [
																						{
																							"type": "typeOperator",
																							"operator": "keyof",
																							"target": {
																								"type": "reference",
																								"id": 4513,
																								"typeArguments": [
																									{
																										"type": "reference",
																										"id": 1852,
																										"name": "ViewModelClassType"
																									}
																								],
																								"name": "ExtractRelatedFields"
																							}
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"qualifiedName": "Extract",
																					"package": "typescript",
																					"name": "Extract"
																				},
																				"objectType": {
																					"type": "reference",
																					"id": 4513,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 1852,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														]
													},
													{
														"type": "reference",
														"id": 4515,
														"typeArguments": [
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "reference",
																		"id": 4490,
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "reference",
																					"id": 4513,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 1852,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	},
																	{
																		"type": "reference",
																		"id": 4490,
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "fields"
																					},
																					"objectType": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "reference",
																							"id": 4490,
																							"typeArguments": [
																								{
																									"type": "typeOperator",
																									"operator": "keyof",
																									"target": {
																										"type": "reference",
																										"id": 4513,
																										"typeArguments": [
																											{
																												"type": "reference",
																												"id": 1852,
																												"name": "ViewModelClassType"
																											}
																										],
																										"name": "ExtractRelatedFields"
																									}
																								},
																								{
																									"type": "intrinsic",
																									"name": "string"
																								}
																							],
																							"qualifiedName": "Extract",
																							"package": "typescript",
																							"name": "Extract"
																						},
																						"objectType": {
																							"type": "reference",
																							"id": 4513,
																							"typeArguments": [
																								{
																									"type": "reference",
																									"id": 1852,
																									"name": "ViewModelClassType"
																								}
																							],
																							"name": "ExtractRelatedFields"
																						}
																					}
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	}
																]
															},
															{
																"type": "reference",
																"id": 2071,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "ViewModelConstructor"
															},
															{
																"type": "reference",
																"id": 4513,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 2071,
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "ViewModelConstructor"
																	}
																],
																"name": "ExtractRelatedFields"
															}
														],
														"name": "FieldPathInner"
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 1896,
											"name": "pk",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "the primary key of the record to get"
											},
											"type": {
												"type": "reference",
												"id": 2121,
												"typeArguments": [
													{
														"type": "reference",
														"id": 1852,
														"name": "ViewModelClassType"
													}
												],
												"name": "ExtractPkFieldParseableValueType"
											}
										},
										{
											"id": 1897,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "the field names to use to look up the cache entry. Use '*' to indicate all fields.\nSee [Field notation](#Field_notation) for supported format.\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1895,
													"name": "T"
												}
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2118,
												"typeArguments": [
													{
														"type": "reference",
														"id": 1852,
														"name": "ViewModelClassType"
													},
													{
														"type": "reference",
														"id": 1895,
														"name": "T"
													}
												],
												"name": "PartialViewModel"
											}
										]
									}
								},
								{
									"id": 1898,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1899,
											"name": "pk",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2121,
												"typeArguments": [
													{
														"type": "reference",
														"id": 1852,
														"name": "ViewModelClassType"
													}
												],
												"name": "ExtractPkFieldParseableValueType"
											}
										},
										{
											"id": 1900,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": "*"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2118,
												"typeArguments": [
													{
														"type": "reference",
														"id": 1852,
														"name": "ViewModelClassType"
													},
													{
														"type": "reference",
														"id": 4490,
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "literal",
																		"value": "fields"
																	},
																	"objectType": {
																		"type": "reference",
																		"id": 1852,
																		"name": "ViewModelClassType"
																	}
																}
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"qualifiedName": "Extract",
														"package": "typescript",
														"name": "Extract"
													}
												],
												"name": "PartialViewModel"
											}
										]
									}
								},
								{
									"id": 1901,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the currently cached version of the specified version",
										"returns": "The cached record or null if none found\n"
									},
									"typeParameter": [
										{
											"id": 1902,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "tuple",
														"elements": [
															{
																"type": "reference",
																"id": 4490,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "reference",
																			"id": 4513,
																			"typeArguments": [
																				{
																					"type": "reference",
																					"id": 1852,
																					"name": "ViewModelClassType"
																				}
																			],
																			"name": "ExtractRelatedFields"
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															},
															{
																"type": "reference",
																"id": 4490,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "reference",
																					"id": 4490,
																					"typeArguments": [
																						{
																							"type": "typeOperator",
																							"operator": "keyof",
																							"target": {
																								"type": "reference",
																								"id": 4513,
																								"typeArguments": [
																									{
																										"type": "reference",
																										"id": 1852,
																										"name": "ViewModelClassType"
																									}
																								],
																								"name": "ExtractRelatedFields"
																							}
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"qualifiedName": "Extract",
																					"package": "typescript",
																					"name": "Extract"
																				},
																				"objectType": {
																					"type": "reference",
																					"id": 4513,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 1852,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														]
													},
													{
														"type": "reference",
														"id": 4515,
														"typeArguments": [
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "reference",
																		"id": 4490,
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "reference",
																					"id": 4513,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 1852,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	},
																	{
																		"type": "reference",
																		"id": 4490,
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "fields"
																					},
																					"objectType": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "reference",
																							"id": 4490,
																							"typeArguments": [
																								{
																									"type": "typeOperator",
																									"operator": "keyof",
																									"target": {
																										"type": "reference",
																										"id": 4513,
																										"typeArguments": [
																											{
																												"type": "reference",
																												"id": 1852,
																												"name": "ViewModelClassType"
																											}
																										],
																										"name": "ExtractRelatedFields"
																									}
																								},
																								{
																									"type": "intrinsic",
																									"name": "string"
																								}
																							],
																							"qualifiedName": "Extract",
																							"package": "typescript",
																							"name": "Extract"
																						},
																						"objectType": {
																							"type": "reference",
																							"id": 4513,
																							"typeArguments": [
																								{
																									"type": "reference",
																									"id": 1852,
																									"name": "ViewModelClassType"
																								}
																							],
																							"name": "ExtractRelatedFields"
																						}
																					}
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	}
																]
															},
															{
																"type": "reference",
																"id": 2071,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "ViewModelConstructor"
															},
															{
																"type": "reference",
																"id": 4513,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 2071,
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "ViewModelConstructor"
																	}
																],
																"name": "ExtractRelatedFields"
															}
														],
														"name": "FieldPathInner"
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 1903,
											"name": "record",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "a current instance of a ViewModel to get the latest cached version of\n"
											},
											"type": {
												"type": "reference",
												"id": 2118,
												"typeArguments": [
													{
														"type": "reference",
														"id": 1852,
														"name": "ViewModelClassType"
													},
													{
														"type": "reference",
														"id": 1902,
														"name": "T"
													}
												],
												"name": "PartialViewModel"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2118,
												"typeArguments": [
													{
														"type": "reference",
														"id": 1852,
														"name": "ViewModelClassType"
													},
													{
														"type": "reference",
														"id": 1902,
														"name": "T"
													}
												],
												"name": "PartialViewModel"
											}
										]
									}
								}
							]
						},
						{
							"id": 1905,
							"name": "getAll",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 956,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1906,
									"name": "getAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get all records in the cache for the specified field names. This acts like `getList` but returns\nall records not just records with specified primary keys.",
										"text": "This function guarantees to return the same array (ie. passes strict equality check) if the underlying\nrecords have not changed.\n"
									},
									"parameters": [
										{
											"id": 1907,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "List of field names to return records for. See [Field notation](#Field_notation) for supported format.\n"
											},
											"type": {
												"type": "literal",
												"value": "*"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 2118,
											"typeArguments": [
												{
													"type": "reference",
													"id": 1852,
													"name": "ViewModelClassType"
												},
												{
													"type": "reference",
													"id": 4490,
													"typeArguments": [
														{
															"type": "typeOperator",
															"operator": "keyof",
															"target": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "fields"
																},
																"objectType": {
																	"type": "reference",
																	"id": 1852,
																	"name": "ViewModelClassType"
																}
															}
														},
														{
															"type": "intrinsic",
															"name": "string"
														}
													],
													"qualifiedName": "Extract",
													"package": "typescript",
													"name": "Extract"
												}
											],
											"name": "PartialViewModel"
										}
									}
								},
								{
									"id": 1908,
									"name": "getAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1909,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "tuple",
														"elements": [
															{
																"type": "reference",
																"id": 4490,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "reference",
																			"id": 4513,
																			"typeArguments": [
																				{
																					"type": "reference",
																					"id": 1852,
																					"name": "ViewModelClassType"
																				}
																			],
																			"name": "ExtractRelatedFields"
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															},
															{
																"type": "reference",
																"id": 4490,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "reference",
																					"id": 4490,
																					"typeArguments": [
																						{
																							"type": "typeOperator",
																							"operator": "keyof",
																							"target": {
																								"type": "reference",
																								"id": 4513,
																								"typeArguments": [
																									{
																										"type": "reference",
																										"id": 1852,
																										"name": "ViewModelClassType"
																									}
																								],
																								"name": "ExtractRelatedFields"
																							}
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"qualifiedName": "Extract",
																					"package": "typescript",
																					"name": "Extract"
																				},
																				"objectType": {
																					"type": "reference",
																					"id": 4513,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 1852,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														]
													},
													{
														"type": "reference",
														"id": 4515,
														"typeArguments": [
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "reference",
																		"id": 4490,
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "reference",
																					"id": 4513,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 1852,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	},
																	{
																		"type": "reference",
																		"id": 4490,
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "fields"
																					},
																					"objectType": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "reference",
																							"id": 4490,
																							"typeArguments": [
																								{
																									"type": "typeOperator",
																									"operator": "keyof",
																									"target": {
																										"type": "reference",
																										"id": 4513,
																										"typeArguments": [
																											{
																												"type": "reference",
																												"id": 1852,
																												"name": "ViewModelClassType"
																											}
																										],
																										"name": "ExtractRelatedFields"
																									}
																								},
																								{
																									"type": "intrinsic",
																									"name": "string"
																								}
																							],
																							"qualifiedName": "Extract",
																							"package": "typescript",
																							"name": "Extract"
																						},
																						"objectType": {
																							"type": "reference",
																							"id": 4513,
																							"typeArguments": [
																								{
																									"type": "reference",
																									"id": 1852,
																									"name": "ViewModelClassType"
																								}
																							],
																							"name": "ExtractRelatedFields"
																						}
																					}
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	}
																]
															},
															{
																"type": "reference",
																"id": 2071,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "ViewModelConstructor"
															},
															{
																"type": "reference",
																"id": 4513,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 2071,
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "ViewModelConstructor"
																	}
																],
																"name": "ExtractRelatedFields"
															}
														],
														"name": "FieldPathInner"
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 1910,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1909,
													"name": "T"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 2118,
											"typeArguments": [
												{
													"type": "reference",
													"id": 1852,
													"name": "ViewModelClassType"
												},
												{
													"type": "reference",
													"id": 1909,
													"name": "T"
												}
											],
											"name": "PartialViewModel"
										}
									}
								}
							]
						},
						{
							"id": 1911,
							"name": "getList",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 1005,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1912,
									"name": "getList",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get a list of records with the specified `fieldNames` set from the cache",
										"text": "Any record that is not found will end up in the array as a null value. If this\nisn't desired you must filter them manually.\n",
										"returns": "an array of the cached records. Any records not found will be in the array as a null value if `removeNulls` is false otherwise they will be removed.\n"
									},
									"typeParameter": [
										{
											"id": 1913,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "tuple",
														"elements": [
															{
																"type": "reference",
																"id": 4490,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "reference",
																			"id": 4513,
																			"typeArguments": [
																				{
																					"type": "reference",
																					"id": 1852,
																					"name": "ViewModelClassType"
																				}
																			],
																			"name": "ExtractRelatedFields"
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															},
															{
																"type": "reference",
																"id": 4490,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "reference",
																					"id": 4490,
																					"typeArguments": [
																						{
																							"type": "typeOperator",
																							"operator": "keyof",
																							"target": {
																								"type": "reference",
																								"id": 4513,
																								"typeArguments": [
																									{
																										"type": "reference",
																										"id": 1852,
																										"name": "ViewModelClassType"
																									}
																								],
																								"name": "ExtractRelatedFields"
																							}
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"qualifiedName": "Extract",
																					"package": "typescript",
																					"name": "Extract"
																				},
																				"objectType": {
																					"type": "reference",
																					"id": 4513,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 1852,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														]
													},
													{
														"type": "reference",
														"id": 4515,
														"typeArguments": [
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "reference",
																		"id": 4490,
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "reference",
																					"id": 4513,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 1852,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	},
																	{
																		"type": "reference",
																		"id": 4490,
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "fields"
																					},
																					"objectType": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "reference",
																							"id": 4490,
																							"typeArguments": [
																								{
																									"type": "typeOperator",
																									"operator": "keyof",
																									"target": {
																										"type": "reference",
																										"id": 4513,
																										"typeArguments": [
																											{
																												"type": "reference",
																												"id": 1852,
																												"name": "ViewModelClassType"
																											}
																										],
																										"name": "ExtractRelatedFields"
																									}
																								},
																								{
																									"type": "intrinsic",
																									"name": "string"
																								}
																							],
																							"qualifiedName": "Extract",
																							"package": "typescript",
																							"name": "Extract"
																						},
																						"objectType": {
																							"type": "reference",
																							"id": 4513,
																							"typeArguments": [
																								{
																									"type": "reference",
																									"id": 1852,
																									"name": "ViewModelClassType"
																								}
																							],
																							"name": "ExtractRelatedFields"
																						}
																					}
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	}
																]
															},
															{
																"type": "reference",
																"id": 2071,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "ViewModelConstructor"
															},
															{
																"type": "reference",
																"id": 4513,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 2071,
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "ViewModelConstructor"
																	}
																],
																"name": "ExtractRelatedFields"
															}
														],
														"name": "FieldPathInner"
													}
												]
											}
										},
										{
											"id": 1914,
											"name": "RemoveNullsT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"default": {
												"type": "literal",
												"value": true
											}
										}
									],
									"parameters": [
										{
											"id": 1915,
											"name": "pks",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "An array of primary keys"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2121,
													"typeArguments": [
														{
															"type": "reference",
															"id": 1852,
															"name": "ViewModelClassType"
														}
													],
													"name": "ExtractPkFieldParseableValueType"
												}
											}
										},
										{
											"id": 1916,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "the field names to use to look up the cached entries. See [Field notation](#Field_notation) for supported format."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1913,
													"name": "T"
												}
											}
										},
										{
											"id": 1917,
											"name": "removeNulls",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "whether to remove entries that have no record in the cache. Defaults to true."
											},
											"type": {
												"type": "reference",
												"id": 1914,
												"name": "RemoveNullsT"
											}
										}
									],
									"type": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"id": 1914,
											"name": "RemoveNullsT"
										},
										"extendsType": {
											"type": "literal",
											"value": true
										},
										"trueType": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"id": 2118,
												"typeArguments": [
													{
														"type": "reference",
														"id": 1852,
														"name": "ViewModelClassType"
													},
													{
														"type": "reference",
														"id": 1913,
														"name": "T"
													}
												],
												"name": "PartialViewModel"
											}
										},
										"falseType": {
											"type": "array",
											"elementType": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 2118,
														"typeArguments": [
															{
																"type": "reference",
																"id": 1852,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"id": 1913,
																"name": "T"
															}
														],
														"name": "PartialViewModel"
													}
												]
											}
										}
									}
								},
								{
									"id": 1918,
									"name": "getList",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1919,
											"name": "RemoveNullsT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"default": {
												"type": "literal",
												"value": true
											}
										}
									],
									"parameters": [
										{
											"id": 1920,
											"name": "pks",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2121,
													"typeArguments": [
														{
															"type": "reference",
															"id": 1852,
															"name": "ViewModelClassType"
														}
													],
													"name": "ExtractPkFieldParseableValueType"
												}
											}
										},
										{
											"id": 1921,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": "*"
											}
										},
										{
											"id": 1922,
											"name": "removeNulls",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 1919,
												"name": "RemoveNullsT"
											}
										}
									],
									"type": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"id": 1919,
											"name": "RemoveNullsT"
										},
										"extendsType": {
											"type": "literal",
											"value": true
										},
										"trueType": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"id": 2118,
												"typeArguments": [
													{
														"type": "reference",
														"id": 1852,
														"name": "ViewModelClassType"
													},
													{
														"type": "reference",
														"id": 4490,
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "literal",
																		"value": "fields"
																	},
																	"objectType": {
																		"type": "reference",
																		"id": 1852,
																		"name": "ViewModelClassType"
																	}
																}
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"qualifiedName": "Extract",
														"package": "typescript",
														"name": "Extract"
													}
												],
												"name": "PartialViewModel"
											}
										},
										"falseType": {
											"type": "array",
											"elementType": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 2118,
														"typeArguments": [
															{
																"type": "reference",
																"id": 1852,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"id": 4490,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 1852,
																				"name": "ViewModelClassType"
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														],
														"name": "PartialViewModel"
													}
												]
											}
										}
									}
								},
								{
									"id": 1923,
									"name": "getList",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get list of cached records from an existing list of records",
										"returns": "an array of the cached records. Any records not found will be in the array as a null value if `removeNulls` is false otherwise they will be removed.\n"
									},
									"typeParameter": [
										{
											"id": 1924,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "tuple",
														"elements": [
															{
																"type": "reference",
																"id": 4490,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "reference",
																			"id": 4513,
																			"typeArguments": [
																				{
																					"type": "reference",
																					"id": 1852,
																					"name": "ViewModelClassType"
																				}
																			],
																			"name": "ExtractRelatedFields"
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															},
															{
																"type": "reference",
																"id": 4490,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "reference",
																					"id": 4490,
																					"typeArguments": [
																						{
																							"type": "typeOperator",
																							"operator": "keyof",
																							"target": {
																								"type": "reference",
																								"id": 4513,
																								"typeArguments": [
																									{
																										"type": "reference",
																										"id": 1852,
																										"name": "ViewModelClassType"
																									}
																								],
																								"name": "ExtractRelatedFields"
																							}
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"qualifiedName": "Extract",
																					"package": "typescript",
																					"name": "Extract"
																				},
																				"objectType": {
																					"type": "reference",
																					"id": 4513,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 1852,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														]
													},
													{
														"type": "reference",
														"id": 4515,
														"typeArguments": [
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "reference",
																		"id": 4490,
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "reference",
																					"id": 4513,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 1852,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	},
																	{
																		"type": "reference",
																		"id": 4490,
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "fields"
																					},
																					"objectType": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "reference",
																							"id": 4490,
																							"typeArguments": [
																								{
																									"type": "typeOperator",
																									"operator": "keyof",
																									"target": {
																										"type": "reference",
																										"id": 4513,
																										"typeArguments": [
																											{
																												"type": "reference",
																												"id": 1852,
																												"name": "ViewModelClassType"
																											}
																										],
																										"name": "ExtractRelatedFields"
																									}
																								},
																								{
																									"type": "intrinsic",
																									"name": "string"
																								}
																							],
																							"qualifiedName": "Extract",
																							"package": "typescript",
																							"name": "Extract"
																						},
																						"objectType": {
																							"type": "reference",
																							"id": 4513,
																							"typeArguments": [
																								{
																									"type": "reference",
																									"id": 1852,
																									"name": "ViewModelClassType"
																								}
																							],
																							"name": "ExtractRelatedFields"
																						}
																					}
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	}
																]
															},
															{
																"type": "reference",
																"id": 2071,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "ViewModelConstructor"
															},
															{
																"type": "reference",
																"id": 4513,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 2071,
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "ViewModelConstructor"
																	}
																],
																"name": "ExtractRelatedFields"
															}
														],
														"name": "FieldPathInner"
													}
												]
											}
										},
										{
											"id": 1925,
											"name": "RemoveNullsT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"default": {
												"type": "literal",
												"value": true
											}
										}
									],
									"parameters": [
										{
											"id": 1926,
											"name": "records",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "List of existing ViewModel records to get latest cache version for"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2118,
													"typeArguments": [
														{
															"type": "reference",
															"id": 1852,
															"name": "ViewModelClassType"
														},
														{
															"type": "reference",
															"id": 1924,
															"name": "T"
														}
													],
													"name": "PartialViewModel"
												}
											}
										},
										{
											"id": 1927,
											"name": "removeNulls",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "whether to remove entries that have no record in the cache. Defaults to true."
											},
											"type": {
												"type": "reference",
												"id": 1925,
												"name": "RemoveNullsT"
											}
										}
									],
									"type": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"id": 1925,
											"name": "RemoveNullsT"
										},
										"extendsType": {
											"type": "literal",
											"value": true
										},
										"trueType": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"id": 2118,
												"typeArguments": [
													{
														"type": "reference",
														"id": 1852,
														"name": "ViewModelClassType"
													},
													{
														"type": "reference",
														"id": 1924,
														"name": "T"
													}
												],
												"name": "PartialViewModel"
											}
										},
										"falseType": {
											"type": "array",
											"elementType": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 2118,
														"typeArguments": [
															{
																"type": "reference",
																"id": 1852,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"id": 1924,
																"name": "T"
															}
														],
														"name": "PartialViewModel"
													}
												]
											}
										}
									}
								}
							]
						},
						{
							"id": 1859,
							"name": "getPkCacheKey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 694,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 1860,
									"name": "getPkCacheKey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the cache key to use into for the primary key. Handles compound keys."
									},
									"parameters": [
										{
											"id": 1861,
											"name": "pk",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2121,
												"typeArguments": [
													{
														"type": "reference",
														"id": 1852,
														"name": "ViewModelClassType"
													}
												],
												"name": "ExtractPkFieldParseableValueType"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 1856,
							"name": "isInstanceOfModel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 687,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 1857,
									"name": "isInstanceOfModel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Checks if value `a` is an instance of the ViewModel this cache is for"
									},
									"parameters": [
										{
											"id": 1858,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "a",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"id": 2118,
											"typeArguments": [
												{
													"type": "reference",
													"id": 1852,
													"name": "ViewModelClassType"
												},
												{
													"type": "reference",
													"id": 4490,
													"typeArguments": [
														{
															"type": "typeOperator",
															"operator": "keyof",
															"target": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "fields"
																},
																"objectType": {
																	"type": "reference",
																	"id": 1852,
																	"name": "ViewModelClassType"
																}
															}
														},
														{
															"type": "intrinsic",
															"name": "string"
														}
													],
													"qualifiedName": "Extract",
													"package": "typescript",
													"name": "Extract"
												}
											],
											"name": "PartialViewModel"
										}
									}
								}
							]
						},
						{
							"id": 1935,
							"name": "onAnyChange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 1095,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 1936,
									"name": "onAnyChange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1850
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1904,
								1932,
								1855,
								1854,
								1828
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								1865
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1862,
								1873,
								1886,
								1937,
								1962,
								1867,
								1928,
								1893,
								1905,
								1911,
								1859,
								1856,
								1935
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
							"line": 671,
							"character": 21
						}
					],
					"typeParameter": [
						{
							"id": 1972,
							"name": "ViewModelClassType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2071,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ViewModelConstructor"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"kind": 4,
					"children": [
						4441
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1827
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1973,
			"name": "ViewModelFactory",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 4542,
					"name": "<internal>",
					"kind": 4,
					"kindString": "Namespace",
					"flags": {},
					"children": [
						{
							"id": 4566,
							"name": "CallSite",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 4581,
									"name": "getColumnNumber",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4582,
											"name": "getColumnNumber",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Current column number [if this function was defined in a script]"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									]
								},
								{
									"id": 4583,
									"name": "getEvalOrigin",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4584,
											"name": "getEvalOrigin",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "A call site object representing the location where eval was called\n[if this function was created using a call to eval]"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									]
								},
								{
									"id": 4577,
									"name": "getFileName",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4578,
											"name": "getFileName",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Name of the script [if this function was defined in a script]"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									]
								},
								{
									"id": 4571,
									"name": "getFunction",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4572,
											"name": "getFunction",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Current function"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reference",
														"qualifiedName": "Function",
														"package": "typescript",
														"name": "Function"
													}
												]
											}
										}
									]
								},
								{
									"id": 4573,
									"name": "getFunctionName",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4574,
											"name": "getFunctionName",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Name of the current function, typically its name property.\nIf a name property is not available an attempt will be made to try\nto infer a name from the function's context."
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									]
								},
								{
									"id": 4579,
									"name": "getLineNumber",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4580,
											"name": "getLineNumber",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Current line number [if this function was defined in a script]"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									]
								},
								{
									"id": 4575,
									"name": "getMethodName",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4576,
											"name": "getMethodName",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Name of the property [of \"this\" or one of its prototypes] that holds\nthe current function"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									]
								},
								{
									"id": 4567,
									"name": "getThis",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4568,
											"name": "getThis",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Value of \"this\""
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									]
								},
								{
									"id": 4569,
									"name": "getTypeName",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4570,
											"name": "getTypeName",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Type of \"this\" as a string.\nThis is the name of the function stored in the constructor field of\n\"this\", if available.  Otherwise the object's [[Class]] internal\nproperty."
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									]
								},
								{
									"id": 4591,
									"name": "isConstructor",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4592,
											"name": "isConstructor",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Is this a constructor call?"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								},
								{
									"id": 4587,
									"name": "isEval",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4588,
											"name": "isEval",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Does this call take place in code defined by a call to eval?"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								},
								{
									"id": 4589,
									"name": "isNative",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4590,
											"name": "isNative",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Is this call in native V8 code?"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								},
								{
									"id": 4585,
									"name": "isToplevel",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4586,
											"name": "isToplevel",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Is this a toplevel invocation, that is, is \"this\" the global object?"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										4581,
										4583,
										4577,
										4571,
										4573,
										4579,
										4575,
										4567,
										4569,
										4591,
										4587,
										4589,
										4585
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/node/globals.d.ts",
									"line": 471,
									"character": 14
								}
							]
						},
						{
							"id": 4547,
							"name": "Error",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 4549,
									"name": "message",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1023,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4548,
									"name": "name",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1022,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4550,
									"name": "stack",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1024,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4549,
										4548,
										4550
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1021,
									"character": 10
								}
							]
						},
						{
							"id": 4561,
							"name": "ViewModelOptions",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "expand-properties",
										"text": "\n"
									}
								]
							},
							"children": [
								{
									"id": 4562,
									"name": "baseClass",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Optional base class to extend. When calling `augment` this is set the augmented class.",
										"tags": [
											{
												"tag": "type-name",
												"text": "Class\n"
											}
										]
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
											"line": 195,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									}
								},
								{
									"id": 4563,
									"name": "pkFieldName",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Primary key name(s) to use. There should be field(s) with the corresponding name in the\nprovided `fields`.",
										"text": "Only `pkFieldName` or `getImplicitPkField` should be provided. If neither are provided then\na field called `id` will be used and created if not provided in `fields`.\n",
										"tags": [
											{
												"tag": "type-name",
												"text": "string|string[]\n"
											}
										]
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
											"line": 205,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"id": 4565,
										"name": "PkFieldNameT"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4562,
										4563
									]
								}
							],
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 186,
									"character": 10
								}
							],
							"typeParameter": [
								{
									"id": 4564,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1994,
										"name": "FieldsMapping"
									}
								},
								{
									"id": 4565,
									"name": "PkFieldNameT",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 2010,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4564,
														"name": "T"
													}
												],
												"name": "ExtractFieldNames"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2010,
													"typeArguments": [
														{
															"type": "reference",
															"id": 4564,
															"name": "T"
														}
													],
													"name": "ExtractFieldNames"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 4555,
							"name": "AugmentFields",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 210,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 4556,
									"name": "OriginalFields",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1994,
										"name": "FieldsMapping"
									}
								},
								{
									"id": 4557,
									"name": "AugmentedFields",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1998,
										"typeArguments": [
											{
												"type": "reference",
												"id": 4556,
												"name": "OriginalFields"
											}
										],
										"name": "FieldsMappingOrNull"
									}
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 4496,
										"typeArguments": [
											{
												"type": "reference",
												"id": 4556,
												"name": "OriginalFields"
											},
											{
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 4557,
													"name": "AugmentedFields"
												}
											}
										],
										"qualifiedName": "Omit",
										"package": "typescript",
										"name": "Omit"
									},
									{
										"type": "reference",
										"id": 4496,
										"typeArguments": [
											{
												"type": "reference",
												"id": 4557,
												"name": "AugmentedFields"
											},
											{
												"type": "reference",
												"id": 4598,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4557,
														"name": "AugmentedFields"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												],
												"name": "KeysOfType"
											}
										],
										"qualifiedName": "Omit",
										"package": "typescript",
										"name": "Omit"
									}
								]
							}
						},
						{
							"id": 4551,
							"name": "ExtractPkFieldTypes",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 131,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 4552,
									"name": "FieldMappingType",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1994,
										"name": "FieldsMapping"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 2010,
										"typeArguments": [
											{
												"type": "reference",
												"id": 4552,
												"name": "FieldMappingType"
											}
										],
										"name": "ExtractFieldNames"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 2010,
											"typeArguments": [
												{
													"type": "reference",
													"id": 4552,
													"name": "FieldMappingType"
												}
											],
											"name": "ExtractFieldNames"
										}
									}
								]
							}
						},
						{
							"id": 4558,
							"name": "ExtractPkFields",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 216,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 4559,
									"name": "FieldMappingType",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1994,
										"name": "FieldsMapping"
									}
								},
								{
									"id": 4560,
									"name": "PkFieldType",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 4551,
										"typeArguments": [
											{
												"type": "reference",
												"id": 4559,
												"name": "FieldMappingType"
											}
										],
										"name": "ExtractPkFieldTypes"
									}
								}
							],
							"type": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"id": 4560,
									"name": "PkFieldType"
								},
								"extendsType": {
									"type": "intrinsic",
									"name": "string"
								},
								"trueType": {
									"type": "reference",
									"id": 4543,
									"typeArguments": [
										{
											"type": "reference",
											"id": 4560,
											"name": "PkFieldType"
										},
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"id": 4560,
												"name": "PkFieldType"
											},
											"objectType": {
												"type": "reference",
												"id": 4559,
												"name": "FieldMappingType"
											}
										}
									],
									"qualifiedName": "Record",
									"package": "typescript",
									"name": "Record"
								},
								"falseType": {
									"type": "mapped",
									"parameter": "K",
									"parameterType": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"id": 4559,
											"name": "FieldMappingType"
										}
									},
									"templateType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"name": "K"
										},
										"objectType": {
											"type": "reference",
											"id": 4559,
											"name": "FieldMappingType"
										}
									},
									"nameType": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"name": "K"
										},
										"extendsType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "intrinsic",
												"name": "number"
											},
											"objectType": {
												"type": "reference",
												"id": 4560,
												"name": "PkFieldType"
											}
										},
										"trueType": {
											"type": "reference",
											"name": "K"
										},
										"falseType": {
											"type": "intrinsic",
											"name": "never"
										}
									}
								}
							}
						},
						{
							"id": 4598,
							"name": "KeysOfType",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 208,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 4599,
									"name": "O",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 4600,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"type": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "mapped",
									"parameter": "P",
									"parameterType": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"id": 4599,
											"name": "O"
										}
									},
									"templateType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"name": "P"
										},
										"objectType": {
											"type": "reference",
											"id": 4599,
											"name": "O"
										}
									},
									"nameType": {
										"type": "conditional",
										"checkType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"name": "P"
											},
											"objectType": {
												"type": "reference",
												"id": 4599,
												"name": "O"
											}
										},
										"extendsType": {
											"type": "reference",
											"id": 4600,
											"name": "T"
										},
										"trueType": {
											"type": "reference",
											"name": "P"
										},
										"falseType": {
											"type": "intrinsic",
											"name": "never"
										}
									}
								}
							}
						},
						{
							"id": 4593,
							"name": "Partial",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Make all properties in T optional"
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1531,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 4594,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"type": {
								"type": "mapped",
								"parameter": "P",
								"parameterType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"id": 4594,
										"qualifiedName": "T",
										"package": "typescript",
										"name": "T"
									}
								},
								"templateType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"qualifiedName": "P",
										"package": "typescript",
										"name": "P"
									},
									"objectType": {
										"type": "reference",
										"id": 4594,
										"qualifiedName": "T",
										"package": "typescript",
										"name": "T"
									}
								},
								"optionalModifier": "+"
							}
						},
						{
							"id": 4543,
							"name": "Record",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Construct a type with a set of properties K of type T"
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1559,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 4544,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								},
								{
									"id": 4545,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"type": {
								"type": "mapped",
								"parameter": "P",
								"parameterType": {
									"type": "reference",
									"id": 4544,
									"qualifiedName": "K",
									"package": "typescript",
									"name": "K"
								},
								"templateType": {
									"type": "reference",
									"id": 4545,
									"qualifiedName": "T",
									"package": "typescript",
									"name": "T"
								}
							}
						},
						{
							"id": 4595,
							"name": "ViewModelInterfaceInputData",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 227,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 4596,
									"name": "FieldMappingType",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1994,
										"name": "FieldsMapping"
									}
								},
								{
									"id": 4597,
									"name": "PkFieldType",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 4551,
										"typeArguments": [
											{
												"type": "reference",
												"id": 4596,
												"name": "FieldMappingType"
											}
										],
										"name": "ExtractPkFieldTypes"
									}
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 2008,
										"typeArguments": [
											{
												"type": "reference",
												"id": 4596,
												"name": "FieldMappingType"
											}
										],
										"name": "FieldDataMappingRaw"
									},
									{
										"type": "mapped",
										"parameter": "K",
										"parameterType": {
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"id": 4558,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4596,
														"name": "FieldMappingType"
													},
													{
														"type": "reference",
														"id": 4597,
														"name": "PkFieldType"
													}
												],
												"name": "ExtractPkFields"
											}
										},
										"templateType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "__parsableValueType"
											},
											"objectType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"name": "K"
												},
												"objectType": {
													"type": "reference",
													"id": 4558,
													"typeArguments": [
														{
															"type": "reference",
															"id": 4596,
															"name": "FieldMappingType"
														},
														{
															"type": "reference",
															"id": 4597,
															"name": "PkFieldType"
														}
													],
													"name": "ExtractPkFields"
												}
											}
										}
									}
								]
							}
						},
						{
							"id": 4553,
							"name": "ViewModelPkFieldType",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 135,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 4554,
									"name": "FieldMappingType",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1994,
										"name": "FieldsMapping"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 4490,
										"typeArguments": [
											{
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 4554,
													"name": "FieldMappingType"
												}
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"qualifiedName": "Extract",
										"package": "typescript",
										"name": "Extract"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 4490,
											"typeArguments": [
												{
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "reference",
														"id": 4554,
														"name": "FieldMappingType"
													}
												},
												{
													"type": "intrinsic",
													"name": "string"
												}
											],
											"qualifiedName": "Extract",
											"package": "typescript",
											"name": "Extract"
										}
									}
								]
							}
						},
						{
							"id": 4546,
							"name": "Error",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1033,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "ErrorConstructor",
								"package": "typescript",
								"name": "ErrorConstructor"
							},
							"extendedBy": [
								{
									"type": "reference",
									"id": 2014,
									"name": "MissingFieldsError"
								},
								{
									"type": "reference",
									"id": 2098,
									"name": "InvalidFieldError"
								},
								{
									"type": "reference",
									"id": 3835,
									"name": "UnresolvedRelatedViewModelFieldError"
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"kind": 256,
							"children": [
								4566,
								4547,
								4561
							]
						},
						{
							"title": "Type aliases",
							"kind": 4194304,
							"children": [
								4555,
								4551,
								4558,
								4598,
								4593,
								4543,
								4595,
								4553
							]
						},
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								4546
							]
						}
					]
				},
				{
					"id": 2037,
					"name": "BaseViewModel",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 2038,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 493,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2039,
									"name": "new BaseViewModel",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2040,
											"name": "FieldMappingType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1994,
												"name": "FieldsMapping"
											}
										},
										{
											"id": 2041,
											"name": "PkFieldType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 4490,
															"typeArguments": [
																{
																	"type": "typeOperator",
																	"operator": "keyof",
																	"target": {
																		"type": "reference",
																		"id": 2040,
																		"name": "FieldMappingType"
																	}
																},
																{
																	"type": "intrinsic",
																	"name": "string"
																}
															],
															"qualifiedName": "Extract",
															"package": "typescript",
															"name": "Extract"
														}
													}
												]
											}
										},
										{
											"id": 2042,
											"name": "AssignedFieldNames",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "reference",
												"id": 4490,
												"typeArguments": [
													{
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"id": 2040,
															"name": "FieldMappingType"
														}
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"qualifiedName": "Extract",
												"package": "typescript",
												"name": "Extract"
											}
										}
									],
									"parameters": [
										{
											"id": 2043,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "mapped",
												"parameter": "K",
												"parameterType": {
													"type": "intrinsic",
													"name": "string"
												},
												"templateType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": "__parsableValueType"
													},
													"objectType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"name": "K"
														},
														"objectType": {
															"type": "reference",
															"id": 2040,
															"name": "FieldMappingType"
														}
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2037,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2040,
												"name": "FieldMappingType"
											},
											{
												"type": "reference",
												"id": 2041,
												"name": "PkFieldType"
											},
											{
												"type": "reference",
												"id": 2042,
												"name": "AssignedFieldNames"
											}
										],
										"name": "BaseViewModel"
									}
								}
							]
						},
						{
							"id": 2055,
							"name": "__recordBoundFields",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 431,
									"character": 12
								}
							],
							"type": {
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "intrinsic",
									"name": "string"
								},
								"templateType": {
									"type": "reference",
									"id": 2912,
									"typeArguments": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "__fieldValueType"
											},
											"objectType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"name": "K"
												},
												"objectType": {
													"type": "reference",
													"id": 2040,
													"name": "FieldMappingType"
												}
											}
										},
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "__parsableValueType"
											},
											"objectType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"name": "K"
												},
												"objectType": {
													"type": "reference",
													"id": 2040,
													"name": "FieldMappingType"
												}
											}
										},
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "__fieldValueType"
											},
											"objectType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"name": "K"
												},
												"objectType": {
													"type": "reference",
													"id": 2040,
													"name": "FieldMappingType"
												}
											}
										}
									],
									"name": "RecordBoundField"
								},
								"readonlyModifier": "+"
							}
						},
						{
							"id": 2061,
							"name": "_assignedFieldPaths",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "The `ViewModelFieldPaths` instance for this record. This is a unique instance based on the actual\nassigned fields and can be compared to other instances to determine if the same fields are set."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 660,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 2135,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2040,
												"name": "FieldMappingType"
											},
											{
												"type": "reference",
												"id": 2041,
												"name": "PkFieldType"
											}
										],
										"name": "ViewModelConstructor"
									}
								],
								"name": "ViewModelFieldPaths"
							}
						},
						{
							"id": 2059,
							"name": "_assignedFields",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "List of field names with data available on this instance.",
								"tags": [
									{
										"tag": "type-name",
										"text": "string[]\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 644,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 2060,
							"name": "_assignedFieldsDeep",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "Deep field names set on this record. If no relations are set this is the same as `_assignedFields`.",
								"text": "A deep field is a field that is a relation to another model and is represented as an array, eg.\n`['group', 'name']` would be the the `name` field on the `group` relation.\n",
								"tags": [
									{
										"tag": "type-name",
										"text": "string[]\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 654,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 2000,
									"typeArguments": [
										{
											"type": "reference",
											"id": 2071,
											"typeArguments": [
												{
													"type": "reference",
													"id": 2040,
													"name": "FieldMappingType"
												},
												{
													"type": "reference",
													"id": 2041,
													"name": "PkFieldType"
												}
											],
											"name": "ViewModelConstructor"
										},
										{
											"type": "reference",
											"id": 4513,
											"typeArguments": [
												{
													"type": "reference",
													"id": 2071,
													"typeArguments": [
														{
															"type": "reference",
															"id": 2040,
															"name": "FieldMappingType"
														},
														{
															"type": "reference",
															"id": 2041,
															"name": "PkFieldType"
														}
													],
													"name": "ViewModelConstructor"
												}
											],
											"name": "ExtractRelatedFields"
										}
									],
									"name": "FieldPath"
								}
							}
						},
						{
							"id": 2058,
							"name": "_data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "The assigned data for this record. You usually don't need to access this directly; values\nfor a field can be retrieved from the record directly using the field name",
								"tags": [
									{
										"tag": "type-name",
										"text": "Object\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 635,
									"character": 13
								}
							],
							"type": {
								"type": "mapped",
								"parameter": "k",
								"parameterType": {
									"type": "intrinsic",
									"name": "string"
								},
								"templateType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "__fieldValueType"
									},
									"objectType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"name": "k"
										},
										"objectType": {
											"type": "reference",
											"id": 2040,
											"name": "FieldMappingType"
										}
									}
								}
							}
						},
						{
							"id": 2056,
							"name": "_f",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 456,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2057,
									"name": "_f",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get fields bound to this record instance. Each field behaves the same as accessing it via ViewModel.fields but\nhas a `value` property that contains the value for that field on this record.",
										"text": "This is useful when you need to know both the field on the ViewModel and the value on a record (eg. when formatting\na value from a record\n\n```js\nconst user = new User({ name: 'Jon Snow' });\nuser.name\n// Jon Snow\nuser._f.name\n// CharField({ name: 'name', label: 'Label' });\nuser._f.name.value\n// Jon Snow\n```\n",
										"tags": [
											{
												"tag": "type-name",
												"text": "{[fieldName: string]: Field}\n"
											}
										]
									},
									"type": {
										"type": "mapped",
										"parameter": "K",
										"parameterType": {
											"type": "intrinsic",
											"name": "string"
										},
										"templateType": {
											"type": "reference",
											"id": 2912,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": "__fieldValueType"
													},
													"objectType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"name": "K"
														},
														"objectType": {
															"type": "reference",
															"id": 2040,
															"name": "FieldMappingType"
														}
													}
												},
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": "__parsableValueType"
													},
													"objectType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"name": "K"
														},
														"objectType": {
															"type": "reference",
															"id": 2040,
															"name": "FieldMappingType"
														}
													}
												},
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": "__fieldValueType"
													},
													"objectType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"name": "K"
														},
														"objectType": {
															"type": "reference",
															"id": 2040,
															"name": "FieldMappingType"
														}
													}
												}
											],
											"name": "RecordBoundField"
										},
										"readonlyModifier": "+"
									}
								}
							]
						},
						{
							"id": 2062,
							"name": "_key",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 670,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2063,
									"name": "_key",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the primary key value(s) for this instance. This is to conform to the\n[Identifiable](doc:Identifiable) interface.",
										"tags": [
											{
												"tag": "type-name",
												"text": "PkFieldType\n"
											}
										]
									},
									"type": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"id": 2041,
											"name": "PkFieldType"
										},
										"extendsType": {
											"type": "intrinsic",
											"name": "string"
										},
										"trueType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "__fieldValueType"
											},
											"objectType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"name": "PkFieldType"
												},
												"objectType": {
													"type": "reference",
													"id": 2040,
													"name": "FieldMappingType"
												}
											}
										},
										"falseType": {
											"type": "mapped",
											"parameter": "K",
											"parameterType": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											},
											"templateType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "literal",
													"value": "__fieldValueType"
												},
												"objectType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"name": "K"
													},
													"objectType": {
														"type": "reference",
														"id": 2040,
														"name": "FieldMappingType"
													}
												}
											},
											"nameType": {
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"name": "K"
												},
												"extendsType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "intrinsic",
														"name": "number"
													},
													"objectType": {
														"type": "reference",
														"id": 2041,
														"name": "PkFieldType"
													}
												},
												"trueType": {
													"type": "reference",
													"name": "K"
												},
												"falseType": {
													"type": "intrinsic",
													"name": "never"
												}
											}
										}
									}
								}
							]
						},
						{
							"id": 2044,
							"name": "_model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 285,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2045,
									"name": "_model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the actual ViewModel class for this instance"
									},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2040,
												"name": "FieldMappingType"
											},
											{
												"type": "reference",
												"id": 2041,
												"name": "PkFieldType"
											}
										],
										"name": "ViewModelConstructor"
									}
								}
							]
						},
						{
							"id": 2051,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 334,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2052,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Clone this record, optionally with only a subset of the fields"
									},
									"typeParameter": [
										{
											"id": 2053,
											"name": "CloneFieldNames",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 2054,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 2000,
															"typeArguments": [
																{
																	"type": "reference",
																	"id": 2071,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"id": 2040,
																			"name": "FieldMappingType"
																		},
																		{
																			"type": "reference",
																			"id": 2041,
																			"name": "PkFieldType"
																		}
																	],
																	"name": "ViewModelConstructor"
																},
																{
																	"type": "reference",
																	"id": 4513,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"id": 2071,
																			"typeArguments": [
																				{
																					"type": "reference",
																					"id": 2040,
																					"name": "FieldMappingType"
																				},
																				{
																					"type": "reference",
																					"id": 2041,
																					"name": "PkFieldType"
																				}
																			],
																			"name": "ViewModelConstructor"
																		}
																	],
																	"name": "ExtractRelatedFields"
																}
															],
															"name": "FieldPath"
														}
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 2053,
															"name": "CloneFieldNames"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2067,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2040,
												"name": "FieldMappingType"
											},
											{
												"type": "reference",
												"id": 2041,
												"name": "PkFieldType"
											},
											{
												"type": "reference",
												"id": 2053,
												"name": "CloneFieldNames"
											}
										],
										"name": "ViewModelInterface"
									}
								}
							]
						},
						{
							"id": 2048,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 312,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2049,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Compares two records to see if they are equivalent.",
										"text": "- If the ViewModel is different then the records are always considered different\n- If the records were initialised with a different set of fields then they are\n  considered different even if the common fields are the same and other fields are\n  all null\n"
									},
									"parameters": [
										{
											"id": 2050,
											"name": "record",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 2067,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"name": "ViewModelInterface"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 2046,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 292,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2047,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the data for this record as a plain object"
									},
									"type": {
										"type": "mapped",
										"parameter": "K",
										"parameterType": {
											"type": "intrinsic",
											"name": "string"
										},
										"templateType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "__fieldValueType"
											},
											"objectType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"name": "K"
												},
												"objectType": {
													"type": "reference",
													"id": 2040,
													"name": "FieldMappingType"
												}
											}
										},
										"readonlyModifier": "+"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2038
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2055,
								2061,
								2059,
								2060,
								2058
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2056,
								2062,
								2044
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2051,
								2048,
								2046
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 277,
							"character": 13
						}
					],
					"typeParameter": [
						{
							"id": 2064,
							"name": "FieldMappingType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 1994,
								"name": "FieldsMapping"
							}
						},
						{
							"id": 2065,
							"name": "PkFieldType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 4551,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2040,
										"name": "FieldMappingType"
									}
								],
								"name": "ExtractPkFieldTypes"
							}
						},
						{
							"id": 2066,
							"name": "AssignedFieldNames",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2010,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2040,
										"name": "FieldMappingType"
									}
								],
								"name": "ExtractFieldNames"
							},
							"default": {
								"type": "reference",
								"id": 2010,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2040,
										"name": "FieldMappingType"
									}
								],
								"name": "ExtractFieldNames"
							}
						}
					]
				},
				{
					"id": 2098,
					"name": "InvalidFieldError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Thrown when attempting to access a field that does not exist on a ViewModel"
					},
					"children": [
						{
							"id": 2108,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2109,
									"name": "new InvalidFieldError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2110,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2098,
										"name": "InvalidFieldError"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Error.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.constructor"
							}
						},
						{
							"id": 2112,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1023,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.message"
							}
						},
						{
							"id": 2111,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1022,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.name"
							}
						},
						{
							"id": 2113,
							"name": "stack",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1024,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.stack"
							}
						},
						{
							"id": 2107,
							"name": "stackTraceLimit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/globals.d.ts",
									"line": 117,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.stackTraceLimit"
							}
						},
						{
							"id": 2099,
							"name": "captureStackTrace",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 2100,
									"name": "captureStackTrace",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Create .stack property on a target object"
									},
									"parameters": [
										{
											"id": 2101,
											"name": "targetObject",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 2102,
											"name": "constructorOpt",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Function",
												"package": "typescript",
												"name": "Function"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Error.captureStackTrace"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.captureStackTrace"
							}
						},
						{
							"id": 2103,
							"name": "prepareStackTrace",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/globals.d.ts",
									"line": 115,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2104,
									"name": "prepareStackTrace",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Optional override for formatting stack traces",
										"tags": [
											{
												"tag": "see",
												"text": "https://github.com/v8/v8/wiki/Stack%20Trace%20API#customizing-stack-traces\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2105,
											"name": "err",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 4546,
												"qualifiedName": "Error",
												"package": "typescript",
												"name": "Error"
											}
										},
										{
											"id": 2106,
											"name": "stackTraces",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 4566,
													"qualifiedName": "NodeJS.CallSite",
													"package": "@types/node",
													"name": "CallSite"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Error.prepareStackTrace"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.prepareStackTrace"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2108
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2112,
								2111,
								2113,
								2107
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2099,
								2103
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 1056,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 4546,
							"qualifiedName": "Error",
							"package": "typescript",
							"name": "Error"
						}
					]
				},
				{
					"id": 2014,
					"name": "MissingFieldsError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Thrown when cloning a record and requested fields cannot be found",
						"text": "Gives details on missing fields and will indicate if related records are missing entirely vs\njust some fields\n"
					},
					"children": [
						{
							"id": 2024,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 247,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2025,
									"name": "new MissingFieldsError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2026,
											"name": "record",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2067,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										},
										{
											"id": 2027,
											"name": "assignedFields",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 2028,
											"name": "requestedFieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2000,
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "any"
														},
														{
															"type": "intrinsic",
															"name": "any"
														}
													],
													"name": "FieldPath"
												}
											}
										},
										{
											"id": 2029,
											"name": "missingFieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 2030,
											"name": "missingRelations",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "tuple",
													"elements": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2014,
										"name": "MissingFieldsError"
									},
									"overwrites": {
										"type": "reference",
										"name": "Error.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Error.constructor"
							}
						},
						{
							"id": 2033,
							"name": "assignedFields",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 246,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 2035,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1023,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.message"
							}
						},
						{
							"id": 2031,
							"name": "missingFieldNames",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 244,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 2032,
							"name": "missingRelations",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 245,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "tuple",
									"elements": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							}
						},
						{
							"id": 2034,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1022,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.name"
							}
						},
						{
							"id": 2036,
							"name": "stack",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1024,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.stack"
							}
						},
						{
							"id": 2023,
							"name": "stackTraceLimit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/globals.d.ts",
									"line": 117,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.stackTraceLimit"
							}
						},
						{
							"id": 2015,
							"name": "captureStackTrace",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 2016,
									"name": "captureStackTrace",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Create .stack property on a target object"
									},
									"parameters": [
										{
											"id": 2017,
											"name": "targetObject",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 2018,
											"name": "constructorOpt",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Function",
												"package": "typescript",
												"name": "Function"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Error.captureStackTrace"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.captureStackTrace"
							}
						},
						{
							"id": 2019,
							"name": "prepareStackTrace",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/globals.d.ts",
									"line": 115,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2020,
									"name": "prepareStackTrace",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Optional override for formatting stack traces",
										"tags": [
											{
												"tag": "see",
												"text": "https://github.com/v8/v8/wiki/Stack%20Trace%20API#customizing-stack-traces\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2021,
											"name": "err",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 4546,
												"qualifiedName": "Error",
												"package": "typescript",
												"name": "Error"
											}
										},
										{
											"id": 2022,
											"name": "stackTraces",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 4566,
													"qualifiedName": "NodeJS.CallSite",
													"package": "@types/node",
													"name": "CallSite"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Error.prepareStackTrace"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.prepareStackTrace"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2024
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2033,
								2035,
								2031,
								2032,
								2034,
								2036,
								2023
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2015,
								2019
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 243,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 4546,
							"qualifiedName": "Error",
							"package": "typescript",
							"name": "Error"
						}
					]
				},
				{
					"id": 2071,
					"name": "ViewModelConstructor",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "type-name",
								"text": "ViewModel Class\n"
							}
						]
					},
					"children": [
						{
							"id": 2092,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2093,
									"name": "new ViewModelConstructor",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2094,
											"name": "D",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4595,
												"typeArguments": [
													{
														"type": "reference",
														"id": 2090,
														"name": "FieldMappingType"
													},
													{
														"type": "reference",
														"id": 2091,
														"name": "PkFieldType"
													}
												],
												"name": "ViewModelInterfaceInputData"
											}
										}
									],
									"parameters": [
										{
											"id": 2095,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2094,
												"name": "D"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2067,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2090,
												"name": "FieldMappingType"
											},
											{
												"type": "reference",
												"id": 2091,
												"name": "PkFieldType"
											},
											{
												"type": "reference",
												"id": 4490,
												"typeArguments": [
													{
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"id": 2094,
															"name": "D"
														}
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"qualifiedName": "Extract",
												"package": "typescript",
												"name": "Extract"
											}
										],
										"name": "ViewModelInterface"
									}
								},
								{
									"id": 2096,
									"name": "new ViewModelConstructor",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2097,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4595,
												"typeArguments": [
													{
														"type": "reference",
														"id": 2090,
														"name": "FieldMappingType"
													},
													{
														"type": "reference",
														"id": 2091,
														"name": "PkFieldType"
													}
												],
												"name": "ViewModelInterfaceInputData"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2067,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2090,
												"name": "FieldMappingType"
											},
											{
												"type": "reference",
												"id": 2091,
												"name": "PkFieldType"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 4490,
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "reference",
																	"id": 4558,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"id": 2090,
																			"name": "FieldMappingType"
																		},
																		{
																			"type": "reference",
																			"id": 2091,
																			"name": "PkFieldType"
																		}
																	],
																	"name": "ExtractPkFields"
																}
															},
															{
																"type": "reference",
																"id": 4490,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "reference",
																			"id": 2090,
																			"name": "FieldMappingType"
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														],
														"qualifiedName": "Extract",
														"package": "typescript",
														"name": "Extract"
													},
													{
														"type": "reference",
														"id": 4490,
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "reference",
																	"id": 2090,
																	"name": "FieldMappingType"
																}
															},
															{
																"type": "reference",
																"id": 4490,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "reference",
																			"id": 2090,
																			"name": "FieldMappingType"
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														],
														"qualifiedName": "Extract",
														"package": "typescript",
														"name": "Extract"
													}
												]
											}
										],
										"name": "ViewModelInterface"
									}
								}
							]
						},
						{
							"id": 2078,
							"name": "allFieldNames",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "Shortcut to get all field names including primary keys"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 822,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 4490,
									"typeArguments": [
										{
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"id": 2090,
												"name": "FieldMappingType"
											}
										},
										{
											"type": "intrinsic",
											"name": "string"
										}
									],
									"qualifiedName": "Extract",
									"package": "typescript",
									"name": "Extract"
								}
							}
						},
						{
							"id": 2083,
							"name": "cache",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The cache instance for this ViewModel. A default instance of [ViewModelCache](doc:ViewModelCache)\nis created when first accessed or you can explicitly assign a cache:",
								"text": "```js\nclass User extends viewModelFactory(fields) {\n    static cache = new MyCustomCache(User);\n}\n```\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 863,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 1827,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "default"
							}
						},
						{
							"id": 2077,
							"name": "fieldNames",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "Shortcut to get the names of all fields excluding primary keys.",
								"text": "If you want all fields including primary key use `allFieldNames`\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 817,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 4490,
									"typeArguments": [
										{
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"id": 2090,
												"name": "FieldMappingType"
											}
										},
										{
											"type": "intrinsic",
											"name": "string"
										}
									],
									"qualifiedName": "Extract",
									"package": "typescript",
									"name": "Extract"
								}
							}
						},
						{
							"id": 2072,
							"name": "fields",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "The bound fields for this ViewModel. These will match the `fields` passed in to `ViewModel` with the\nfollowing differences:\n- If a primary key is created for you this will exist here\n- All fields are bound to the created class. This means you can access the `ViewModel` class from the field on\n  the `model` property, eg. `User.fields.email.model === User` will be true.\n- All fields have the `name` property set to match the key in `fields`\n- All fields have `label` filled out if not explicitly set (eg. if name was `emailAddress` label will be created\n  as `Email Address`)",
								"text": "See also [getField](doc:viewModelFactory#method-getField) for getting a nested field using array notation.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 771,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 2090,
								"name": "FieldMappingType"
							}
						},
						{
							"id": 2073,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "The singular label for this ViewModel. This should be set by extending the created class.",
								"text": "```js\nclass User extends viewModelFactory(fields) {\n    static label = 'User';\n}\n```\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 782,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2074,
							"name": "labelPlural",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "The label used to describe an indeterminate number of this ViewModel. This should be set by extending the created class.",
								"text": "```js\nclass User extends viewModelFactory(fields) {\n    static labelPlural = 'Users';\n}\n```\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 793,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2075,
							"name": "pkFieldName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "Name of the primary key field for this ViewModel (or fields for compound keys)",
								"text": "If `options.pkFieldName` is not specified a field will be created from `options.getImplicitPk`\nif provided otherwise a default field with name 'id' will be created.\n",
								"tags": [
									{
										"tag": "type-name",
										"text": "string\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 803,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 2091,
								"name": "PkFieldType"
							}
						},
						{
							"id": 2076,
							"name": "pkFieldNames",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "Shortcut to get pkFieldName as an array always, even for non-compound keys",
								"tags": [
									{
										"tag": "type-name",
										"text": "string[]\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 810,
									"character": 13
								}
							],
							"type": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"id": 2091,
									"name": "PkFieldType"
								},
								"extendsType": {
									"type": "intrinsic",
									"name": "string"
								},
								"trueType": {
									"type": "tuple",
									"elements": [
										{
											"type": "reference",
											"name": "PkFieldType"
										}
									]
								},
								"falseType": {
									"type": "reference",
									"id": 2091,
									"name": "PkFieldType"
								}
							}
						},
						{
							"id": 2079,
							"name": "relationFieldNames",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "Shortcut to get the names of all relation fields",
								"tags": [
									{
										"tag": "type-name",
										"text": "string[]\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 829,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 4490,
									"typeArguments": [
										{
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"id": 4513,
												"typeArguments": [
													{
														"type": "reference",
														"id": 2071,
														"typeArguments": [
															{
																"type": "reference",
																"id": 2090,
																"name": "FieldMappingType"
															},
															{
																"type": "reference",
																"id": 2091,
																"name": "PkFieldType"
															}
														],
														"name": "ViewModelConstructor"
													}
												],
												"name": "ExtractRelatedFields"
											}
										},
										{
											"type": "intrinsic",
											"name": "string"
										}
									],
									"qualifiedName": "Extract",
									"package": "typescript",
									"name": "Extract"
								}
							}
						},
						{
							"id": 2084,
							"name": "augment",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 2085,
									"name": "augment",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create a new class that extends this class with the additional specified fields. To remove a\nfield that exists on the base class set it's value to null.",
										"text": "```js\nclass Base extends viewModelFactory({\n  id: new NumberField({\n    label: 'Id',\n  }),\n  firstName: new CharField({\n    label: 'First Name',\n  }),\n  lastName: new CharField({\n    label: 'Last Name',\n  }),\n  email: new EmailField({\n    label: 'Email',\n  }),\n}) {\n  static label = 'User';\n  static labelPlural = 'Users';\n}\n\nclass User extends BaseUser.augment({\n  region: new IntegerField({\n    label: 'region',\n    required: true,\n    helpText: 'Region Coding of the user',\n    choices: [\n      [1, 'Oceania'],\n      [2, 'Asia'],\n      [3, 'Africa'],\n      [4, 'America'],\n      [5, 'Europe'],\n      [6, 'Antarctica'],\n      [7, 'Atlantis'],\n    ],\n  }),\n  photo: new ImageField({\n    helpText: 'Will be cropped to 400x400',\n  }),\n}) {\n}\n\n// true\nUser instanceof BaseUser\n// true\nUser.label === 'User'\n\n// ['firstName, 'lastName', 'email', 'region', 'photo]\nUser.fieldNames\n```\n",
										"returns": "A new ViewModel class with fields modified according to `newFields`.\n"
									},
									"typeParameter": [
										{
											"id": 2086,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1998,
												"typeArguments": [
													{
														"type": "reference",
														"id": 2090,
														"name": "FieldMappingType"
													}
												],
												"name": "FieldsMappingOrNull"
											}
										},
										{
											"id": 2087,
											"name": "AugmentPkFieldType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "union",
															"types": [
																{
																	"type": "reference",
																	"id": 4490,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"id": 4534,
																			"typeArguments": [
																				{
																					"type": "typeOperator",
																					"operator": "keyof",
																					"target": {
																						"type": "reference",
																						"id": 2090,
																						"name": "FieldMappingType"
																					}
																				},
																				{
																					"type": "typeOperator",
																					"operator": "keyof",
																					"target": {
																						"type": "reference",
																						"id": 2086,
																						"name": "T"
																					}
																				}
																			],
																			"qualifiedName": "Exclude",
																			"package": "typescript",
																			"name": "Exclude"
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		}
																	],
																	"qualifiedName": "Extract",
																	"package": "typescript",
																	"name": "Extract"
																},
																{
																	"type": "reference",
																	"id": 4490,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"id": 4534,
																			"typeArguments": [
																				{
																					"type": "typeOperator",
																					"operator": "keyof",
																					"target": {
																						"type": "reference",
																						"id": 2086,
																						"name": "T"
																					}
																				},
																				{
																					"type": "typeOperator",
																					"operator": "keyof",
																					"target": {
																						"type": "mapped",
																						"parameter": "P",
																						"parameterType": {
																							"type": "union",
																							"types": [
																								{
																									"type": "intrinsic",
																									"name": "string"
																								},
																								{
																									"type": "intrinsic",
																									"name": "number"
																								},
																								{
																									"type": "intrinsic",
																									"name": "symbol"
																								}
																							]
																						},
																						"templateType": {
																							"type": "indexedAccess",
																							"indexType": {
																								"type": "reference",
																								"name": "P"
																							},
																							"objectType": {
																								"type": "reference",
																								"id": 2086,
																								"name": "T"
																							}
																						},
																						"nameType": {
																							"type": "conditional",
																							"checkType": {
																								"type": "indexedAccess",
																								"indexType": {
																									"type": "reference",
																									"name": "P"
																								},
																								"objectType": {
																									"type": "reference",
																									"id": 2086,
																									"name": "T"
																								}
																							},
																							"extendsType": {
																								"type": "union",
																								"types": [
																									{
																										"type": "intrinsic",
																										"name": "undefined"
																									},
																									{
																										"type": "literal",
																										"value": null
																									}
																								]
																							},
																							"trueType": {
																								"type": "reference",
																								"name": "P"
																							},
																							"falseType": {
																								"type": "intrinsic",
																								"name": "never"
																							}
																						}
																					}
																				}
																			],
																			"qualifiedName": "Exclude",
																			"package": "typescript",
																			"name": "Exclude"
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		}
																	],
																	"qualifiedName": "Extract",
																	"package": "typescript",
																	"name": "Extract"
																}
															]
														}
													}
												]
											},
											"default": {
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"id": 2091,
													"name": "PkFieldType"
												},
												"extendsType": {
													"type": "intrinsic",
													"name": "string"
												},
												"trueType": {
													"type": "conditional",
													"checkType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"name": "PkFieldType"
														},
														"objectType": {
															"type": "reference",
															"id": 2086,
															"name": "T"
														}
													},
													"extendsType": {
														"type": "reference",
														"id": 2966,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "default"
													},
													"trueType": {
														"type": "reference",
														"name": "PkFieldType"
													},
													"falseType": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												"falseType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 2088,
											"name": "newFields",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "Map of field name to a `Field` instance (to add the field) or `null` (to remove the field)"
											},
											"type": {
												"type": "reference",
												"id": 2086,
												"name": "T"
											}
										},
										{
											"id": 2089,
											"name": "newOptions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Provide optional overrides for the options that the original class was created with"
											},
											"type": {
												"type": "reference",
												"id": 4593,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4561,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4555,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 2090,
																		"name": "FieldMappingType"
																	},
																	{
																		"type": "reference",
																		"id": 2086,
																		"name": "T"
																	}
																],
																"name": "AugmentFields"
															},
															{
																"type": "reference",
																"id": 2087,
																"name": "AugmentPkFieldType"
															}
														],
														"name": "ViewModelOptions"
													}
												],
												"qualifiedName": "Partial",
												"package": "typescript",
												"name": "Partial"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "reference",
												"id": 4555,
												"typeArguments": [
													{
														"type": "reference",
														"id": 2090,
														"name": "FieldMappingType"
													},
													{
														"type": "reference",
														"id": 2086,
														"name": "T"
													}
												],
												"name": "AugmentFields"
											},
											{
												"type": "reference",
												"id": 2087,
												"name": "AugmentPkFieldType"
											}
										],
										"name": "ViewModelConstructor"
									}
								}
							]
						},
						{
							"id": 2080,
							"name": "getField",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 2081,
									"name": "getField",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get a field from this model or a related model",
										"text": "Accepts either a string for a field on this record or array notation for traversing [RelatedViewModelField](doc:RelatedViewModelField)\nfields:\n\n```jsx\nSubscription.getField(['user', 'group', 'owner'])\n```"
									},
									"parameters": [
										{
											"id": 2082,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "Either a string or an array of strings where the last element is the final field name to return\nand each other element is a [RelatedViewModelField](doc:RelatedViewModelField) on a ViewModel.\n"
											},
											"type": {
												"type": "reference",
												"id": 2000,
												"typeArguments": [
													{
														"type": "reference",
														"id": 2071,
														"typeArguments": [
															{
																"type": "reference",
																"id": 2090,
																"name": "FieldMappingType"
															},
															{
																"type": "reference",
																"id": 2091,
																"name": "PkFieldType"
															}
														],
														"name": "ViewModelConstructor"
													},
													{
														"type": "reference",
														"id": 4513,
														"typeArguments": [
															{
																"type": "reference",
																"id": 2071,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 2090,
																		"name": "FieldMappingType"
																	},
																	{
																		"type": "reference",
																		"id": 2091,
																		"name": "PkFieldType"
																	}
																],
																"name": "ViewModelConstructor"
															}
														],
														"name": "ExtractRelatedFields"
													}
												],
												"name": "FieldPath"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2966,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "default"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2092
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2078,
								2083,
								2077,
								2072,
								2073,
								2074,
								2075,
								2076,
								2079
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2084,
								2080
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 716,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 2090,
							"name": "FieldMappingType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 1994,
								"name": "FieldsMapping"
							}
						},
						{
							"id": 2091,
							"name": "PkFieldType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 4553,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2090,
										"name": "FieldMappingType"
									}
								],
								"name": "ViewModelPkFieldType"
							}
						}
					]
				},
				{
					"id": 1989,
					"name": "CompoundPrimaryKey",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 11,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1990,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 11,
									"character": 33
								}
							],
							"indexSignature": {
								"id": 1991,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 1992,
										"name": "fieldName",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"id": 1988,
									"name": "SinglePrimaryKey"
								}
							}
						}
					}
				},
				{
					"id": 2010,
					"name": "ExtractFieldNames",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "type-name",
								"text": "string\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 119,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 2011,
							"name": "FieldMappingType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 1994,
								"name": "FieldsMapping"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 4490,
						"typeArguments": [
							{
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"id": 2011,
									"name": "FieldMappingType"
								}
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"qualifiedName": "Extract",
						"package": "typescript",
						"name": "Extract"
					}
				},
				{
					"id": 2121,
					"name": "ExtractPkFieldParseableValueType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Extracts the parseable type for primary key on a ViewModel"
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 1401,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 2122,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2071,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ViewModelConstructor"
							}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "literal",
								"value": "pkFieldName"
							},
							"objectType": {
								"type": "reference",
								"id": 2122,
								"name": "T"
							}
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "string"
						},
						"trueType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "literal",
								"value": "__parsableValueType"
							},
							"objectType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "pkFieldName"
									},
									"objectType": {
										"type": "reference",
										"id": 2122,
										"name": "T"
									}
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "fields"
									},
									"objectType": {
										"type": "reference",
										"id": 2122,
										"name": "T"
									}
								}
							}
						},
						"falseType": {
							"type": "mapped",
							"parameter": "K",
							"parameterType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "pkFieldNames"
								},
								"objectType": {
									"type": "reference",
									"id": 2122,
									"name": "T"
								}
							},
							"templateType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "__parsableValueType"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"name": "K"
									},
									"objectType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "fields"
										},
										"objectType": {
											"type": "reference",
											"id": 2122,
											"name": "T"
										}
									}
								}
							}
						}
					}
				},
				{
					"id": 2012,
					"name": "ExtractStarFieldNames",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Extract fields when specified using '*'. Currently this is all fields but could change to be\nnon-relation fields only"
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 128,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 2013,
							"name": "FieldMappingType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 1994,
								"name": "FieldsMapping"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 2010,
						"typeArguments": [
							{
								"type": "reference",
								"id": 2013,
								"name": "FieldMappingType"
							}
						],
						"name": "ExtractFieldNames"
					}
				},
				{
					"id": 2006,
					"name": "FieldDataMapping",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 108,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 2007,
							"name": "FieldMappingType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 1994,
								"name": "FieldsMapping"
							}
						}
					],
					"type": {
						"type": "mapped",
						"parameter": "K",
						"parameterType": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"id": 2007,
								"name": "FieldMappingType"
							}
						},
						"templateType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "literal",
								"value": "__fieldValueType"
							},
							"objectType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"name": "K"
								},
								"objectType": {
									"type": "reference",
									"id": 2007,
									"name": "FieldMappingType"
								}
							}
						},
						"readonlyModifier": "+"
					}
				},
				{
					"id": 2008,
					"name": "FieldDataMappingRaw",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 112,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 2009,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 1994,
								"name": "FieldsMapping"
							}
						}
					],
					"type": {
						"type": "mapped",
						"parameter": "K",
						"parameterType": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"id": 2009,
								"name": "T"
							}
						},
						"templateType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "literal",
								"value": "__parsableValueType"
							},
							"objectType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"name": "K"
								},
								"objectType": {
									"type": "reference",
									"id": 2009,
									"name": "T"
								}
							}
						},
						"optionalModifier": "+"
					}
				},
				{
					"id": 2000,
					"name": "FieldPath",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 49,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 2001,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2071,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ViewModelConstructor"
							}
						},
						{
							"id": 2002,
							"name": "R",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 4513,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2001,
										"name": "T"
									}
								],
								"name": "ExtractRelatedFields"
							},
							"default": {
								"type": "reference",
								"id": 4513,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2001,
										"name": "T"
									}
								],
								"name": "ExtractRelatedFields"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 4490,
								"typeArguments": [
									{
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "fields"
											},
											"objectType": {
												"type": "reference",
												"id": 2001,
												"name": "T"
											}
										}
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Extract",
								"package": "typescript",
								"name": "Extract"
							},
							{
								"type": "reference",
								"id": 4540,
								"typeArguments": [
									{
										"type": "mapped",
										"parameter": "K",
										"parameterType": {
											"type": "reference",
											"id": 4490,
											"typeArguments": [
												{
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "reference",
														"id": 2002,
														"name": "R"
													}
												},
												{
													"type": "intrinsic",
													"name": "string"
												}
											],
											"qualifiedName": "Extract",
											"package": "typescript",
											"name": "Extract"
										},
										"templateType": {
											"type": "reference",
											"id": 4540,
											"typeArguments": [
												{
													"type": "mapped",
													"parameter": "J",
													"parameterType": {
														"type": "reference",
														"id": 4490,
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "literal",
																		"value": "fields"
																	},
																	"objectType": {
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "reference",
																			"name": "K"
																		},
																		"objectType": {
																			"type": "reference",
																			"id": 2002,
																			"name": "R"
																		}
																	}
																}
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"qualifiedName": "Extract",
														"package": "typescript",
														"name": "Extract"
													},
													"templateType": {
														"type": "union",
														"types": [
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "reference",
																		"name": "K"
																	},
																	{
																		"type": "reference",
																		"name": "J"
																	}
																]
															},
															{
																"type": "conditional",
																"checkType": {
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "reference",
																		"name": "J"
																	},
																	"objectType": {
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "literal",
																			"value": "fields"
																		},
																		"objectType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "reference",
																				"name": "K"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 2002,
																				"name": "R"
																			}
																		}
																	}
																},
																"extendsType": {
																	"type": "reference",
																	"id": 3859,
																	"typeArguments": [
																		{
																			"type": "inferred",
																			"name": "X"
																		},
																		{
																			"type": "intrinsic",
																			"name": "any"
																		},
																		{
																			"type": "intrinsic",
																			"name": "any"
																		}
																	],
																	"name": "BaseRelatedViewModelField"
																},
																"trueType": {
																	"type": "reference",
																	"id": 4515,
																	"typeArguments": [
																		{
																			"type": "tuple",
																			"elements": [
																				{
																					"type": "reference",
																					"name": "K"
																				},
																				{
																					"type": "reference",
																					"name": "J"
																				}
																			]
																		},
																		{
																			"type": "reference",
																			"name": "X"
																		}
																	],
																	"name": "FieldPathInner"
																},
																"falseType": {
																	"type": "intrinsic",
																	"name": "never"
																}
															}
														]
													}
												}
											],
											"name": "ValueOf"
										}
									}
								],
								"name": "ValueOf"
							}
						]
					}
				},
				{
					"id": 2003,
					"name": "FieldPaths",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "type-name",
								"text": "'*'|[string|string[]][]\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 68,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 2004,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2071,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ViewModelConstructor"
							}
						},
						{
							"id": 2005,
							"name": "R",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 4513,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2004,
										"name": "T"
									}
								],
								"name": "ExtractRelatedFields"
							},
							"default": {
								"type": "reference",
								"id": 4513,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2004,
										"name": "T"
									}
								],
								"name": "ExtractRelatedFields"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "*"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 2000,
									"typeArguments": [
										{
											"type": "reference",
											"id": 2004,
											"name": "T"
										},
										{
											"type": "reference",
											"id": 2005,
											"name": "R"
										}
									],
									"name": "FieldPath"
								}
							}
						]
					}
				},
				{
					"id": 1994,
					"name": "FieldsMapping",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 14,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1995,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 14,
									"character": 28
								}
							],
							"indexSignature": {
								"id": 1996,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 1997,
										"name": "fieldName",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"id": 2966,
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "any"
										}
									],
									"name": "Field"
								}
							}
						}
					}
				},
				{
					"id": 1998,
					"name": "FieldsMappingOrNull",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 16,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 1999,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 1994,
								"name": "FieldsMapping"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 4543,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 2966,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Field"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							},
							{
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"id": 1999,
										"name": "T"
									}
								},
								"templateType": {
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": null
										},
										{
											"type": "reference",
											"id": 2966,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "any"
												}
											],
											"name": "Field"
										}
									]
								},
								"optionalModifier": "+"
							}
						]
					}
				},
				{
					"id": 2118,
					"name": "PartialViewModel",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Type to describe a ViewModel instance with only some fields set",
						"text": "Usage:\n\n```ts\nconst Person = viewModelFactory({\n  name: new Field<string>(),\n  age: new Field<number>(),\n});\ntype AgeOnly = PartialViewModel<typeof Person, 'age'>;\n```\n"
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 1387,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 2119,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2071,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ViewModelConstructor"
							}
						},
						{
							"id": 2120,
							"name": "FieldNames",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2000,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2119,
										"name": "T"
									}
								],
								"name": "FieldPath"
							},
							"default": {
								"type": "reference",
								"id": 2010,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "fields"
										},
										"objectType": {
											"type": "reference",
											"id": 2119,
											"name": "T"
										}
									}
								],
								"name": "ExtractFieldNames"
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"id": 4496,
								"typeArguments": [
									{
										"type": "reference",
										"id": 4499,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2119,
												"name": "T"
											}
										],
										"qualifiedName": "InstanceType",
										"package": "typescript",
										"name": "InstanceType"
									},
									{
										"type": "reference",
										"id": 2010,
										"typeArguments": [
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "literal",
													"value": "fields"
												},
												"objectType": {
													"type": "reference",
													"id": 2119,
													"name": "T"
												}
											}
										],
										"name": "ExtractFieldNames"
									}
								],
								"qualifiedName": "Omit",
								"package": "typescript",
								"name": "Omit"
							},
							{
								"type": "reference",
								"id": 2067,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "fields"
										},
										"objectType": {
											"type": "reference",
											"id": 2119,
											"name": "T"
										}
									},
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "pkFieldName"
										},
										"objectType": {
											"type": "reference",
											"id": 2119,
											"name": "T"
										}
									},
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 4507,
												"typeArguments": [
													{
														"type": "reference",
														"id": 2119,
														"name": "T"
													},
													{
														"type": "reference",
														"id": 2120,
														"name": "FieldNames"
													}
												],
												"name": "ExtractRootFieldNames"
											},
											{
												"type": "conditional",
												"checkType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": "pkFieldName"
													},
													"objectType": {
														"type": "reference",
														"id": 2119,
														"name": "T"
													}
												},
												"extendsType": {
													"type": "intrinsic",
													"name": "string"
												},
												"trueType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": "pkFieldName"
													},
													"objectType": {
														"type": "reference",
														"id": 2119,
														"name": "T"
													}
												},
												"falseType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "intrinsic",
														"name": "number"
													},
													"objectType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "literal",
															"value": "pkFieldName"
														},
														"objectType": {
															"type": "reference",
															"id": 2119,
															"name": "T"
														}
													}
												}
											}
										]
									}
								],
								"name": "ViewModelInterface"
							}
						]
					}
				},
				{
					"id": 1993,
					"name": "PrimaryKey",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 12,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 1988,
								"name": "SinglePrimaryKey"
							},
							{
								"type": "reference",
								"id": 1989,
								"name": "CompoundPrimaryKey"
							}
						]
					}
				},
				{
					"id": 1988,
					"name": "SinglePrimaryKey",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 10,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 2067,
					"name": "ViewModelInterface",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 690,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 2068,
							"name": "FieldMappingType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 1994,
								"name": "FieldsMapping"
							}
						},
						{
							"id": 2069,
							"name": "PkFieldType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 4551,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2068,
										"name": "FieldMappingType"
									}
								],
								"name": "ExtractPkFieldTypes"
							}
						},
						{
							"id": 2070,
							"name": "AssignedFieldNames",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2010,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2068,
										"name": "FieldMappingType"
									}
								],
								"name": "ExtractFieldNames"
							},
							"default": {
								"type": "reference",
								"id": 2010,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2068,
										"name": "FieldMappingType"
									}
								],
								"name": "ExtractFieldNames"
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"id": 2037,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2068,
										"name": "FieldMappingType"
									},
									{
										"type": "reference",
										"id": 2069,
										"name": "PkFieldType"
									},
									{
										"type": "reference",
										"id": 2070,
										"name": "AssignedFieldNames"
									}
								],
								"name": "BaseViewModel"
							},
							{
								"type": "reference",
								"id": 2006,
								"typeArguments": [
									{
										"type": "reference",
										"id": 4510,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2068,
												"name": "FieldMappingType"
											},
											{
												"type": "reference",
												"id": 2070,
												"name": "AssignedFieldNames"
											}
										],
										"qualifiedName": "Pick",
										"package": "typescript",
										"name": "Pick"
									}
								],
								"name": "FieldDataMapping"
							}
						]
					}
				},
				{
					"id": 2114,
					"name": "ViewModelValues",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Type to describe values of an instance of ViewModel",
						"text": "Usage:\n\n```ts\nconst Person = viewModelFactory({\n  name: new Field<string>(),\n  age: new Field<number>(),\n});\ntype PersonValues = ViewModelValues<typeof Person>;\n```\n"
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 1364,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 2115,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2071,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ViewModelConstructor"
							}
						},
						{
							"id": 2116,
							"name": "FieldNames",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "fields"
									},
									"objectType": {
										"type": "reference",
										"id": 2115,
										"name": "T"
									}
								}
							},
							"default": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "fields"
									},
									"objectType": {
										"type": "reference",
										"id": 2115,
										"name": "T"
									}
								}
							}
						},
						{
							"id": 2117,
							"name": "OptionalFieldNames",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "fields"
									},
									"objectType": {
										"type": "reference",
										"id": 2115,
										"name": "T"
									}
								}
							},
							"default": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "fields"
									},
									"objectType": {
										"type": "reference",
										"id": 2115,
										"name": "T"
									}
								}
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "reference",
									"id": 4490,
									"typeArguments": [
										{
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "indexedAccess",
												"indexType": {
													"type": "literal",
													"value": "fields"
												},
												"objectType": {
													"type": "reference",
													"id": 2115,
													"name": "T"
												}
											}
										},
										{
											"type": "reference",
											"id": 2116,
											"name": "FieldNames"
										}
									],
									"qualifiedName": "Extract",
									"package": "typescript",
									"name": "Extract"
								},
								"templateType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "__fieldValueType"
									},
									"objectType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"name": "K"
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "fields"
											},
											"objectType": {
												"type": "reference",
												"id": 2115,
												"name": "T"
											}
										}
									}
								}
							},
							{
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "reference",
									"id": 4490,
									"typeArguments": [
										{
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "indexedAccess",
												"indexType": {
													"type": "literal",
													"value": "fields"
												},
												"objectType": {
													"type": "reference",
													"id": 2115,
													"name": "T"
												}
											}
										},
										{
											"type": "reference",
											"id": 2117,
											"name": "OptionalFieldNames"
										}
									],
									"qualifiedName": "Extract",
									"package": "typescript",
									"name": "Extract"
								},
								"templateType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "__fieldValueType"
									},
									"objectType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"name": "K"
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "fields"
											},
											"objectType": {
												"type": "reference",
												"id": 2115,
												"name": "T"
											}
										}
									}
								},
								"optionalModifier": "+"
							}
						]
					}
				},
				{
					"id": 1974,
					"name": "flattenFieldPath",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 165,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1975,
							"name": "flattenFieldPath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Flatten a nested path to a single level with dot notation",
								"text": "eg.\n```\nflattenFieldPath([\n  'id',\n  ['user', ['group', 'id']],\n  ['user', 'groupId'],\n  ['user', 'id'],\n  'userId'\n])\n// ['id', 'user.group.id', 'user.groupId', 'user.id', 'userId']\n```\n"
							},
							"typeParameter": [
								{
									"id": 1976,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "reference",
												"id": 1976,
												"name": "T"
											}
										],
										"name": "ViewModelConstructor"
									}
								},
								{
									"id": 1977,
									"name": "R",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 4513,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1976,
												"name": "T"
											}
										],
										"name": "ExtractRelatedFields"
									},
									"default": {
										"type": "reference",
										"id": 4513,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1976,
												"name": "T"
											}
										],
										"name": "ExtractRelatedFields"
									}
								}
							],
							"parameters": [
								{
									"id": 1978,
									"name": "fieldPath",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 2000,
												"typeArguments": [
													{
														"type": "reference",
														"id": 1976,
														"name": "T"
													},
													{
														"type": "reference",
														"id": 1977,
														"name": "R"
													}
												],
												"name": "FieldPath"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2000,
													"typeArguments": [
														{
															"type": "reference",
															"id": 1976,
															"name": "T"
														},
														{
															"type": "reference",
															"id": 1977,
															"name": "R"
														}
													],
													"name": "FieldPath"
												}
											}
										]
									}
								},
								{
									"id": 1979,
									"name": "separator",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "'.'"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					]
				},
				{
					"id": 1984,
					"name": "isViewModelClass",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 709,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1985,
							"name": "isViewModelClass",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if a class is a ViewModel"
							},
							"typeParameter": [
								{
									"id": 1986,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "reference",
												"id": 1986,
												"name": "T"
											}
										],
										"name": "ViewModelConstructor"
									}
								}
							],
							"parameters": [
								{
									"id": 1987,
									"name": "view",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "view",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 1986,
									"name": "T"
								}
							}
						}
					]
				},
				{
					"id": 1980,
					"name": "isViewModelInstance",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 700,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1981,
							"name": "isViewModelInstance",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if an object is ViewModel"
							},
							"typeParameter": [
								{
									"id": 1982,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"id": 2037,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"id": 1982,
														"name": "T"
													}
												],
												"name": "BaseViewModel"
											},
											{
												"type": "reference",
												"id": 2006,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4510,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"qualifiedName": "Pick",
														"package": "typescript",
														"name": "Pick"
													}
												],
												"name": "FieldDataMapping"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 1983,
									"name": "view",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "view",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 1982,
									"name": "T"
								}
							}
						}
					]
				},
				{
					"id": 2123,
					"name": "viewModelFactory",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"originalName": "default",
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 1101,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 2124,
							"name": "viewModelFactory",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a ViewModel class with the specified fields.",
								"text": "```js\nconst fields = {\n    userId: new IntegerField({ label: 'User ID' })\n    firstName: new CharField({ label: 'First Name' }),\n    // label is optional; will be generated as 'Last name'\n    lastName: new CharField(),\n};\n// Options are all optional and can be omitted entirely\nconst options = {\n    // Only one of pkFieldName or getImplicitPkField can be defined.\n    // If neither are provided a default field called 'id' will be created.\n    pkFieldName: 'userId',\n    // Multiple names can be specified for compound keys\n    pkFieldName: ['organisationId', 'departmentId']\n    // You can also specify a function to create the primary key\n    getImplicitPkField(model, fields) {\n         if ('EntityId' in fields) {\n             return ['EntityId', fields.EntityId];\n         }\n         // Generate a name base on model, eg. `userId`\n         const name = model.name[0].toLowerCase() + model.name.slice(1);\n         return [`${name}Id`, new NumberField()];\n     },\n     // Optionally can specify a baseClass for this model. When using `augment`\n     // this is automatically set to the class being augmented.\n     baseClass: BaseViewModel,\n};\nclass User extends viewModelFactory(fields, options) {\n    // Optional; default cache is usually sufficient\n    static cache = new MyCustomCache();\n\n    // Used to describe a single user\n    static label = 'User';\n    // User to describe an indeterminate number of users\n    static labelPlural = 'Users';\n}\n```\n"
							},
							"typeParameter": [
								{
									"id": 2125,
									"name": "FieldMappingType",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1994,
										"name": "FieldsMapping"
									}
								},
								{
									"id": 2126,
									"name": "PkFieldNameT",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 4490,
													"typeArguments": [
														{
															"type": "typeOperator",
															"operator": "keyof",
															"target": {
																"type": "reference",
																"id": 2125,
																"name": "FieldMappingType"
															}
														},
														{
															"type": "intrinsic",
															"name": "string"
														}
													],
													"qualifiedName": "Extract",
													"package": "typescript",
													"name": "Extract"
												}
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 2127,
									"name": "fields",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A map of field name to an instance of `Field`\n"
									},
									"type": {
										"type": "reference",
										"id": 2125,
										"name": "FieldMappingType"
									}
								},
								{
									"id": 2128,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 4561,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2125,
												"name": "FieldMappingType"
											},
											{
												"type": "reference",
												"id": 2126,
												"name": "PkFieldNameT"
											}
										],
										"name": "ViewModelOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2071,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2125,
										"name": "FieldMappingType"
									},
									{
										"type": "reference",
										"id": 2126,
										"name": "PkFieldNameT"
									}
								],
								"name": "ViewModelConstructor"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"kind": 4,
					"children": [
						4542
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2037,
						2098,
						2014
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2071
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						1989,
						2010,
						2121,
						2012,
						2006,
						2008,
						2000,
						2003,
						1994,
						1998,
						2118,
						1993,
						1988,
						2067,
						2114
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1974,
						1984,
						1980,
						2123
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2129,
			"name": "fieldUtils",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2135,
					"name": "ViewModelFieldPaths",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Stores the field paths for a model in a standardised form for use in caching.",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Utils\n"
							}
						]
					},
					"children": [
						{
							"id": 2136,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fieldUtils.ts",
									"line": 70,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2137,
									"name": "new ViewModelFieldPaths",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2138,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"id": 2138,
														"name": "T"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"parameters": [
										{
											"id": 2139,
											"name": "modelClass",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2138,
												"name": "T"
											}
										},
										{
											"id": 2140,
											"name": "flattenedPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2135,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2138,
												"name": "T"
											}
										],
										"name": "ViewModelFieldPaths"
									}
								}
							]
						},
						{
							"id": 2143,
							"name": "fieldPaths",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The expanded paths - any nested fields are represented as an array"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fieldUtils.ts",
									"line": 56,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 2000,
									"typeArguments": [
										{
											"type": "reference",
											"id": 2138,
											"name": "T"
										},
										{
											"type": "reference",
											"id": 4513,
											"typeArguments": [
												{
													"type": "reference",
													"id": 2138,
													"name": "T"
												}
											],
											"name": "ExtractRelatedFields"
										}
									],
									"name": "FieldPath"
								}
							}
						},
						{
							"id": 2142,
							"name": "flattenedPath",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The flattened path - any nested fields are joined with '.'"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fieldUtils.ts",
									"line": 52,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 2146,
							"name": "key",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "A key representation of this field path that can be used as a cache key"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fieldUtils.ts",
									"line": 68,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2141,
							"name": "modelClass",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fieldUtils.ts",
									"line": 48,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2138,
								"name": "T"
							}
						},
						{
							"id": 2144,
							"name": "nonRelationFieldNames",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Names of fields that aren't relations"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fieldUtils.ts",
									"line": 60,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 2145,
							"name": "relations",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Map of relation field name to the paths for that relation"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fieldUtils.ts",
									"line": 64,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 4543,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 2000,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "any"
												},
												{
													"type": "reference",
													"id": 4513,
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "any"
														}
													],
													"name": "ExtractRelatedFields"
												}
											],
											"name": "FieldPath"
										}
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 2147,
							"name": "isSubset",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fieldUtils.ts",
									"line": 101,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2148,
									"name": "isSubset",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Is the specified `paths` a subset of this?"
									},
									"parameters": [
										{
											"id": 2149,
											"name": "paths",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2135,
												"typeArguments": [
													{
														"type": "reference",
														"id": 2138,
														"name": "T"
													}
												],
												"name": "ViewModelFieldPaths"
											}
										},
										{
											"id": 2150,
											"name": "ignoreNested",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "false"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2136
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2143,
								2142,
								2146,
								2141,
								2144,
								2145
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2147
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fieldUtils.ts",
							"line": 47,
							"character": 13
						}
					],
					"typeParameter": [
						{
							"id": 2151,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2071,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ViewModelConstructor"
							}
						}
					]
				},
				{
					"id": 2130,
					"name": "normalizeFields",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fieldUtils.ts",
							"line": 234,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 2131,
							"name": "normalizeFields",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Takes an array of field paths for a model class and returns a normalized version in the form of `ViewModelFieldPaths`.",
								"text": "Note that `ViewModelFieldPaths` can be compared with normal equality operators - they are cached internally so a single\ninstance exists for each unique `fieldNames`\n\nNormalization means:\n* Id fields are always included\n* Expands a related field to include all it's subfields\n* If a related field is referenced ensures the related field sourceFieldName is included\n* Sorts field names consistently\n",
								"tags": [
									{
										"tag": "extract-docs",
										"text": ""
									},
									{
										"tag": "menu-group",
										"text": "Utils\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 2132,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "reference",
												"id": 2132,
												"name": "T"
											}
										],
										"name": "ViewModelConstructor"
									}
								}
							],
							"parameters": [
								{
									"id": 2133,
									"name": "modelClass",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The ViewModel class the fields are from"
									},
									"type": {
										"type": "reference",
										"id": 2132,
										"name": "T"
									}
								},
								{
									"id": 2134,
									"name": "fieldNames",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The array of field paths to normalize\n"
									},
									"type": {
										"type": "reference",
										"id": 2003,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2132,
												"name": "T"
											},
											{
												"type": "reference",
												"id": 4513,
												"typeArguments": [
													{
														"type": "reference",
														"id": 2132,
														"name": "T"
													}
												],
												"name": "ExtractRelatedFields"
											}
										],
										"name": "FieldPaths"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2135,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2132,
										"name": "T"
									}
								],
								"name": "ViewModelFieldPaths"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2135
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						2130
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fieldUtils.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2152,
			"name": "fields/AsyncChoices",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 4601,
					"name": "<internal>",
					"kind": 4,
					"kindString": "Namespace",
					"flags": {},
					"children": [
						{
							"id": 4872,
							"name": "Component",
							"kind": 128,
							"kindString": "Class",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 4874,
									"name": "constructor",
									"kind": 512,
									"kindString": "Constructor",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 488,
											"character": 8
										}
									],
									"signatures": [
										{
											"id": 4875,
											"name": "new Component",
											"kind": 16384,
											"kindString": "Constructor signature",
											"flags": {
												"isExternal": true
											},
											"typeParameter": [
												{
													"id": 4877,
													"name": "P",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {
														"isExternal": true
													},
													"default": {
														"type": "reflection",
														"declaration": {
															"id": 4876,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															}
														}
													}
												},
												{
													"id": 4879,
													"name": "S",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {
														"isExternal": true
													},
													"default": {
														"type": "reflection",
														"declaration": {
															"id": 4878,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															}
														}
													}
												},
												{
													"id": 4880,
													"name": "SS",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {
														"isExternal": true
													},
													"default": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"parameters": [
												{
													"id": 4881,
													"name": "props",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5044,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4877,
																"qualifiedName": "React.Component.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4872,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4877,
														"qualifiedName": "React.Component.P",
														"package": "@types/react",
														"name": "P"
													},
													{
														"type": "reference",
														"id": 4879,
														"qualifiedName": "React.Component.S",
														"package": "@types/react",
														"name": "S"
													},
													{
														"type": "reference",
														"id": 4880,
														"qualifiedName": "React.Component.SS",
														"package": "@types/react",
														"name": "SS"
													}
												],
												"qualifiedName": "React.Component",
												"package": "@types/react",
												"name": "Component"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ComponentLifecycle<P, S, SS>.constructor"
											}
										},
										{
											"id": 4882,
											"name": "new Component",
											"kind": 16384,
											"kindString": "Constructor signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"tags": [
													{
														"tag": "deprecated",
														"text": ""
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/docs/legacy-context.html\n"
													}
												]
											},
											"typeParameter": [
												{
													"id": 4884,
													"name": "P",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {
														"isExternal": true
													},
													"default": {
														"type": "reflection",
														"declaration": {
															"id": 4883,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															}
														}
													}
												},
												{
													"id": 4886,
													"name": "S",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {
														"isExternal": true
													},
													"default": {
														"type": "reflection",
														"declaration": {
															"id": 4885,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															}
														}
													}
												},
												{
													"id": 4887,
													"name": "SS",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {
														"isExternal": true
													},
													"default": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"parameters": [
												{
													"id": 4888,
													"name": "props",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 4877,
														"qualifiedName": "React.Component.P",
														"package": "@types/react",
														"name": "P"
													}
												},
												{
													"id": 4889,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4872,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4877,
														"qualifiedName": "React.Component.P",
														"package": "@types/react",
														"name": "P"
													},
													{
														"type": "reference",
														"id": 4879,
														"qualifiedName": "React.Component.S",
														"package": "@types/react",
														"name": "S"
													},
													{
														"type": "reference",
														"id": 4880,
														"qualifiedName": "React.Component.SS",
														"package": "@types/react",
														"name": "SS"
													}
												],
												"qualifiedName": "React.Component",
												"package": "@types/react",
												"name": "Component"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ComponentLifecycle<P, S, SS>.constructor"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle<P, S, SS>.constructor"
									}
								},
								{
									"id": 4890,
									"name": "context",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "If using the new style context, re-declare this in your class to be the\n`React.ContextType` of your `static contextType`.\nShould be used with type annotation or static contextType.",
										"text": "```ts\nstatic contextType = MyContext\n// For TS pre-3.7:\ncontext!: React.ContextType<typeof MyContext>\n// For TS 3.7 and above:\ndeclare context: React.ContextType<typeof MyContext>\n```\n",
										"tags": [
											{
												"tag": "see",
												"text": "https://reactjs.org/docs/context.html\n"
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 486,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 4909,
									"name": "props",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 511,
											"character": 17
										}
									],
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"id": 5044,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4877,
														"qualifiedName": "React.Component.P",
														"package": "@types/react",
														"name": "P"
													}
												],
												"qualifiedName": "Readonly",
												"package": "typescript",
												"name": "Readonly"
											},
											{
												"type": "reference",
												"id": 5044,
												"typeArguments": [
													{
														"type": "reflection",
														"declaration": {
															"id": 4910,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"children": [
																{
																	"id": 4911,
																	"name": "children",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isExternal": true,
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "node_modules/@types/react/index.d.ts",
																			"line": 511,
																			"character": 49
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 4602,
																		"qualifiedName": "React.ReactNode",
																		"package": "@types/react",
																		"name": "ReactNode"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		4911
																	]
																}
															]
														}
													}
												],
												"qualifiedName": "Readonly",
												"package": "typescript",
												"name": "Readonly"
											}
										]
									}
								},
								{
									"id": 4913,
									"name": "refs",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"tags": [
											{
												"tag": "deprecated",
												"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 517,
											"character": 8
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 4914,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"indexSignature": {
												"id": 4915,
												"name": "__index",
												"kind": 8192,
												"kindString": "Index signature",
												"flags": {
													"isExternal": true
												},
												"parameters": [
													{
														"id": 4916,
														"name": "key",
														"kind": 32768,
														"flags": {
															"isExternal": true
														},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "reference",
													"id": 5049,
													"qualifiedName": "React.ReactInstance",
													"package": "@types/react",
													"name": "ReactInstance"
												}
											}
										}
									}
								},
								{
									"id": 4912,
									"name": "state",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 512,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"id": 5044,
										"typeArguments": [
											{
												"type": "reference",
												"id": 4879,
												"qualifiedName": "React.Component.S",
												"package": "@types/react",
												"name": "S"
											}
										],
										"qualifiedName": "Readonly",
										"package": "typescript",
										"name": "Readonly"
									}
								},
								{
									"id": 4873,
									"name": "contextType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isStatic": true,
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "If set, `this.context` will be set at runtime to the current value of the given Context.",
										"text": "Usage:\n\n```ts\ntype MyContext = number\nconst Ctx = React.createContext<MyContext>(0)\n\nclass Foo extends React.Component {\n  static contextType = Ctx\n  context!: React.ContextType<typeof Ctx>\n  render () {\n    return <>My context's value: {this.context}</>;\n  }\n}\n```\n",
										"tags": [
											{
												"tag": "see",
												"text": "https://reactjs.org/docs/context.html#classcontexttype\n"
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 468,
											"character": 15
										}
									],
									"type": {
										"type": "reference",
										"id": 5039,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"qualifiedName": "React.Context",
										"package": "@types/react",
										"name": "Context"
									}
								},
								{
									"id": 4941,
									"name": "UNSAFE_componentWillMount",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 4942,
											"name": "UNSAFE_componentWillMount",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
												"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use componentDidMount or the constructor instead"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 5017,
												"name": "ComponentLifecycle.UNSAFE_componentWillMount"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 5016,
										"name": "ComponentLifecycle.UNSAFE_componentWillMount"
									}
								},
								{
									"id": 4947,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 4948,
											"name": "UNSAFE_componentWillReceiveProps",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
												"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use static getDerivedStateFromProps instead"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"parameters": [
												{
													"id": 4949,
													"name": "nextProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5044,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4877,
																"qualifiedName": "React.Component.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 4950,
													"name": "nextContext",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 5023,
												"name": "ComponentLifecycle.UNSAFE_componentWillReceiveProps"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 5022,
										"name": "ComponentLifecycle.UNSAFE_componentWillReceiveProps"
									}
								},
								{
									"id": 4956,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 4957,
											"name": "UNSAFE_componentWillUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
												"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use getSnapshotBeforeUpdate instead"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"parameters": [
												{
													"id": 4958,
													"name": "nextProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5044,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4877,
																"qualifiedName": "React.Component.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 4959,
													"name": "nextState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5044,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4879,
																"qualifiedName": "React.Component.S",
																"package": "@types/react",
																"name": "S"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 4960,
													"name": "nextContext",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 5032,
												"name": "ComponentLifecycle.UNSAFE_componentWillUpdate"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 5031,
										"name": "ComponentLifecycle.UNSAFE_componentWillUpdate"
									}
								},
								{
									"id": 4926,
									"name": "componentDidCatch",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 4927,
											"name": "componentDidCatch",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
											},
											"parameters": [
												{
													"id": 4928,
													"name": "error",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 4546,
														"qualifiedName": "Error",
														"package": "typescript",
														"name": "Error"
													}
												},
												{
													"id": 4929,
													"name": "errorInfo",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5050,
														"qualifiedName": "React.ErrorInfo",
														"package": "@types/react",
														"name": "ErrorInfo"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 5002,
												"name": "ComponentLifecycle.componentDidCatch"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 5001,
										"name": "ComponentLifecycle.componentDidCatch"
									}
								},
								{
									"id": 4917,
									"name": "componentDidMount",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 4918,
											"name": "componentDidMount",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4993,
												"name": "ComponentLifecycle.componentDidMount"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4992,
										"name": "ComponentLifecycle.componentDidMount"
									}
								},
								{
									"id": 4934,
									"name": "componentDidUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 4935,
											"name": "componentDidUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately after updating occurs. Not called for the initial render.",
												"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
											},
											"parameters": [
												{
													"id": 4936,
													"name": "prevProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5044,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4877,
																"qualifiedName": "React.Component.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 4937,
													"name": "prevState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5044,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4879,
																"qualifiedName": "React.Component.S",
																"package": "@types/react",
																"name": "S"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 4938,
													"name": "snapshot",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 4880,
														"qualifiedName": "React.Component.SS",
														"package": "@types/react",
														"name": "SS"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 5010,
												"name": "ComponentLifecycle.componentDidUpdate"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 5009,
										"name": "ComponentLifecycle.componentDidUpdate"
									}
								},
								{
									"id": 4939,
									"name": "componentWillMount",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 4940,
											"name": "componentWillMount",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
												"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 5015,
												"name": "ComponentLifecycle.componentWillMount"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 5014,
										"name": "ComponentLifecycle.componentWillMount"
									}
								},
								{
									"id": 4943,
									"name": "componentWillReceiveProps",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 4944,
											"name": "componentWillReceiveProps",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
												"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"parameters": [
												{
													"id": 4945,
													"name": "nextProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5044,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4877,
																"qualifiedName": "React.Component.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 4946,
													"name": "nextContext",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 5019,
												"name": "ComponentLifecycle.componentWillReceiveProps"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 5018,
										"name": "ComponentLifecycle.componentWillReceiveProps"
									}
								},
								{
									"id": 4924,
									"name": "componentWillUnmount",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 4925,
											"name": "componentWillUnmount",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 5000,
												"name": "ComponentLifecycle.componentWillUnmount"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4999,
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								},
								{
									"id": 4951,
									"name": "componentWillUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 4952,
											"name": "componentWillUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
												"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"parameters": [
												{
													"id": 4953,
													"name": "nextProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5044,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4877,
																"qualifiedName": "React.Component.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 4954,
													"name": "nextState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5044,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4879,
																"qualifiedName": "React.Component.S",
																"package": "@types/react",
																"name": "S"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 4955,
													"name": "nextContext",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 5027,
												"name": "ComponentLifecycle.componentWillUpdate"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 5026,
										"name": "ComponentLifecycle.componentWillUpdate"
									}
								},
								{
									"id": 4902,
									"name": "forceUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 503,
											"character": 8
										}
									],
									"signatures": [
										{
											"id": 4903,
											"name": "forceUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 4904,
													"name": "callback",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 4905,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"signatures": [
																{
																	"id": 4906,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 4930,
									"name": "getSnapshotBeforeUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 4931,
											"name": "getSnapshotBeforeUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
												"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
											},
											"parameters": [
												{
													"id": 4932,
													"name": "prevProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5044,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4877,
																"qualifiedName": "React.Component.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 4933,
													"name": "prevState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5044,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4879,
																"qualifiedName": "React.Component.S",
																"package": "@types/react",
																"name": "S"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 4880,
														"qualifiedName": "React.Component.SS",
														"package": "@types/react",
														"name": "SS"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 5006,
												"name": "ComponentLifecycle.getSnapshotBeforeUpdate"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 5005,
										"name": "ComponentLifecycle.getSnapshotBeforeUpdate"
									}
								},
								{
									"id": 4907,
									"name": "render",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 504,
											"character": 8
										}
									],
									"signatures": [
										{
											"id": 4908,
											"name": "render",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 4602,
												"qualifiedName": "React.ReactNode",
												"package": "@types/react",
												"name": "ReactNode"
											}
										}
									]
								},
								{
									"id": 4891,
									"name": "setState",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 498,
											"character": 8
										}
									],
									"signatures": [
										{
											"id": 4892,
											"name": "setState",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"typeParameter": [
												{
													"id": 4893,
													"name": "K",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "intrinsic",
																"name": "symbol"
															}
														]
													}
												}
											],
											"parameters": [
												{
													"id": 4894,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 4879,
																"qualifiedName": "React.Component.S",
																"package": "@types/react",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 4895,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExternal": true
																	},
																	"signatures": [
																		{
																			"id": 4896,
																			"name": "__type",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {
																				"isExternal": true
																			},
																			"parameters": [
																				{
																					"id": 4897,
																					"name": "prevState",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {
																						"isExternal": true
																					},
																					"type": {
																						"type": "reference",
																						"id": 5044,
																						"typeArguments": [
																							{
																								"type": "reference",
																								"id": 4879,
																								"qualifiedName": "React.Component.S",
																								"package": "@types/react",
																								"name": "S"
																							}
																						],
																						"qualifiedName": "Readonly",
																						"package": "typescript",
																						"name": "Readonly"
																					}
																				},
																				{
																					"id": 4898,
																					"name": "props",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {
																						"isExternal": true
																					},
																					"type": {
																						"type": "reference",
																						"id": 5044,
																						"typeArguments": [
																							{
																								"type": "reference",
																								"id": 4877,
																								"qualifiedName": "React.Component.P",
																								"package": "@types/react",
																								"name": "P"
																							}
																						],
																						"qualifiedName": "Readonly",
																						"package": "typescript",
																						"name": "Readonly"
																					}
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": null
																					},
																					{
																						"type": "reference",
																						"id": 4879,
																						"qualifiedName": "React.Component.S",
																						"package": "@types/react",
																						"name": "S"
																					},
																					{
																						"type": "reference",
																						"id": 4510,
																						"typeArguments": [
																							{
																								"type": "reference",
																								"id": 4879,
																								"qualifiedName": "React.Component.S",
																								"package": "@types/react",
																								"name": "S"
																							},
																							{
																								"type": "reference",
																								"id": 4893,
																								"qualifiedName": "K",
																								"package": "@types/react",
																								"name": "K"
																							}
																						],
																						"qualifiedName": "Pick",
																						"package": "typescript",
																						"name": "Pick"
																					}
																				]
																			}
																		}
																	]
																}
															},
															{
																"type": "reference",
																"id": 4510,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 4879,
																		"qualifiedName": "React.Component.S",
																		"package": "@types/react",
																		"name": "S"
																	},
																	{
																		"type": "reference",
																		"id": 4893,
																		"qualifiedName": "K",
																		"package": "@types/react",
																		"name": "K"
																	}
																],
																"qualifiedName": "Pick",
																"package": "typescript",
																"name": "Pick"
															}
														]
													}
												},
												{
													"id": 4899,
													"name": "callback",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 4900,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"signatures": [
																{
																	"id": 4901,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 4919,
									"name": "shouldComponentUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 4920,
											"name": "shouldComponentUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
												"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
											},
											"parameters": [
												{
													"id": 4921,
													"name": "nextProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5044,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4877,
																"qualifiedName": "React.Component.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 4922,
													"name": "nextState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5044,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4879,
																"qualifiedName": "React.Component.S",
																"package": "@types/react",
																"name": "S"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 4923,
													"name": "nextContext",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4995,
												"name": "ComponentLifecycle.shouldComponentUpdate"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4994,
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"groups": [
								{
									"title": "Constructors",
									"kind": 512,
									"children": [
										4874
									]
								},
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4890,
										4909,
										4913,
										4912,
										4873
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										4941,
										4947,
										4956,
										4926,
										4917,
										4934,
										4939,
										4943,
										4924,
										4951,
										4902,
										4930,
										4907,
										4891,
										4919
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 446,
									"character": 10
								}
							],
							"typeParameter": [
								{
									"id": 4962,
									"name": "P",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "reflection",
										"declaration": {
											"id": 4961,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/react/index.d.ts",
													"line": 445,
													"character": 28
												}
											]
										}
									}
								},
								{
									"id": 4964,
									"name": "S",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "reflection",
										"declaration": {
											"id": 4963,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/react/index.d.ts",
													"line": 445,
													"character": 36
												}
											]
										}
									}
								},
								{
									"id": 4965,
									"name": "SS",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"id": 4991,
									"typeArguments": [
										{
											"type": "reference",
											"id": 4877,
											"qualifiedName": "React.Component.P",
											"package": "@types/react",
											"name": "P"
										},
										{
											"type": "reference",
											"id": 4879,
											"qualifiedName": "React.Component.S",
											"package": "@types/react",
											"name": "S"
										},
										{
											"type": "reference",
											"id": 4880,
											"qualifiedName": "React.Component.SS",
											"package": "@types/react",
											"name": "SS"
										}
									],
									"qualifiedName": "React.ComponentLifecycle",
									"package": "@types/react",
									"name": "ComponentLifecycle"
								}
							]
						},
						{
							"id": 4991,
							"name": "ComponentLifecycle",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 5016,
									"name": "UNSAFE_componentWillMount",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 5017,
											"name": "UNSAFE_componentWillMount",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
												"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use componentDidMount or the constructor instead"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 5069,
												"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 5068,
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								},
								{
									"id": 5022,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 5023,
											"name": "UNSAFE_componentWillReceiveProps",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
												"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use static getDerivedStateFromProps instead"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"parameters": [
												{
													"id": 5024,
													"name": "nextProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5044,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5036,
																"qualifiedName": "React.ComponentLifecycle.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 5025,
													"name": "nextContext",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 5075,
												"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 5074,
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								},
								{
									"id": 5031,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 5032,
											"name": "UNSAFE_componentWillUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
												"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use getSnapshotBeforeUpdate instead"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"parameters": [
												{
													"id": 5033,
													"name": "nextProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5044,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5036,
																"qualifiedName": "React.ComponentLifecycle.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 5034,
													"name": "nextState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5044,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5037,
																"qualifiedName": "React.ComponentLifecycle.S",
																"package": "@types/react",
																"name": "S"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 5035,
													"name": "nextContext",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 5084,
												"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 5083,
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								},
								{
									"id": 5001,
									"name": "componentDidCatch",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 5002,
											"name": "componentDidCatch",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
											},
											"parameters": [
												{
													"id": 5003,
													"name": "error",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 4546,
														"qualifiedName": "Error",
														"package": "typescript",
														"name": "Error"
													}
												},
												{
													"id": 5004,
													"name": "errorInfo",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5050,
														"qualifiedName": "React.ErrorInfo",
														"package": "@types/react",
														"name": "ErrorInfo"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 4992,
									"name": "componentDidMount",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 4993,
											"name": "componentDidMount",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 5009,
									"name": "componentDidUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 5010,
											"name": "componentDidUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately after updating occurs. Not called for the initial render.",
												"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
											},
											"parameters": [
												{
													"id": 5011,
													"name": "prevProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5044,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5036,
																"qualifiedName": "React.ComponentLifecycle.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 5012,
													"name": "prevState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5044,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5037,
																"qualifiedName": "React.ComponentLifecycle.S",
																"package": "@types/react",
																"name": "S"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 5013,
													"name": "snapshot",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 5038,
														"qualifiedName": "React.ComponentLifecycle.SS",
														"package": "@types/react",
														"name": "SS"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 5058,
												"name": "NewLifecycle.componentDidUpdate"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 5057,
										"name": "NewLifecycle.componentDidUpdate"
									}
								},
								{
									"id": 5014,
									"name": "componentWillMount",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 5015,
											"name": "componentWillMount",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
												"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 5067,
												"name": "DeprecatedLifecycle.componentWillMount"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 5066,
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								},
								{
									"id": 5018,
									"name": "componentWillReceiveProps",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 5019,
											"name": "componentWillReceiveProps",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
												"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"parameters": [
												{
													"id": 5020,
													"name": "nextProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5044,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5036,
																"qualifiedName": "React.ComponentLifecycle.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 5021,
													"name": "nextContext",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 5071,
												"name": "DeprecatedLifecycle.componentWillReceiveProps"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 5070,
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								},
								{
									"id": 4999,
									"name": "componentWillUnmount",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 5000,
											"name": "componentWillUnmount",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 5026,
									"name": "componentWillUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 5027,
											"name": "componentWillUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
												"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"parameters": [
												{
													"id": 5028,
													"name": "nextProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5044,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5036,
																"qualifiedName": "React.ComponentLifecycle.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 5029,
													"name": "nextState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5044,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5037,
																"qualifiedName": "React.ComponentLifecycle.S",
																"package": "@types/react",
																"name": "S"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 5030,
													"name": "nextContext",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 5079,
												"name": "DeprecatedLifecycle.componentWillUpdate"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 5078,
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								},
								{
									"id": 5005,
									"name": "getSnapshotBeforeUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 5006,
											"name": "getSnapshotBeforeUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
												"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
											},
											"parameters": [
												{
													"id": 5007,
													"name": "prevProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5044,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5036,
																"qualifiedName": "React.ComponentLifecycle.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 5008,
													"name": "prevState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5044,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5037,
																"qualifiedName": "React.ComponentLifecycle.S",
																"package": "@types/react",
																"name": "S"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 5038,
														"qualifiedName": "React.ComponentLifecycle.SS",
														"package": "@types/react",
														"name": "SS"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 5054,
												"name": "NewLifecycle.getSnapshotBeforeUpdate"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 5053,
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								},
								{
									"id": 4994,
									"name": "shouldComponentUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 4995,
											"name": "shouldComponentUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
												"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
											},
											"parameters": [
												{
													"id": 4996,
													"name": "nextProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5044,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5036,
																"qualifiedName": "React.ComponentLifecycle.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 4997,
													"name": "nextState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5044,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5037,
																"qualifiedName": "React.ComponentLifecycle.S",
																"package": "@types/react",
																"name": "S"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 4998,
													"name": "nextContext",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										5016,
										5022,
										5031,
										5001,
										4992,
										5009,
										5014,
										5018,
										4999,
										5026,
										5005,
										4994
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 616,
									"character": 14
								}
							],
							"typeParameter": [
								{
									"id": 5036,
									"name": "P",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								},
								{
									"id": 5037,
									"name": "S",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								},
								{
									"id": 5038,
									"name": "SS",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"id": 5052,
									"typeArguments": [
										{
											"type": "reference",
											"id": 5036,
											"qualifiedName": "React.ComponentLifecycle.P",
											"package": "@types/react",
											"name": "P"
										},
										{
											"type": "reference",
											"id": 5037,
											"qualifiedName": "React.ComponentLifecycle.S",
											"package": "@types/react",
											"name": "S"
										},
										{
											"type": "reference",
											"id": 5038,
											"qualifiedName": "React.ComponentLifecycle.SS",
											"package": "@types/react",
											"name": "SS"
										}
									],
									"qualifiedName": "React.NewLifecycle",
									"package": "@types/react",
									"name": "NewLifecycle"
								},
								{
									"type": "reference",
									"id": 5065,
									"typeArguments": [
										{
											"type": "reference",
											"id": 5036,
											"qualifiedName": "React.ComponentLifecycle.P",
											"package": "@types/react",
											"name": "P"
										},
										{
											"type": "reference",
											"id": 5037,
											"qualifiedName": "React.ComponentLifecycle.S",
											"package": "@types/react",
											"name": "S"
										}
									],
									"qualifiedName": "React.DeprecatedLifecycle",
									"package": "@types/react",
									"name": "DeprecatedLifecycle"
								}
							],
							"extendedBy": [
								{
									"type": "reference",
									"id": 4872,
									"name": "Component"
								}
							]
						},
						{
							"id": 4966,
							"name": "ConcatArray",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 4967,
									"name": "length",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1263,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 4968,
									"name": "join",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4969,
											"name": "join",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 4970,
													"name": "separator",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								},
								{
									"id": 4971,
									"name": "slice",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4972,
											"name": "slice",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 4973,
													"name": "start",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 4974,
													"name": "end",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 4975,
													"qualifiedName": "ConcatArray.T",
													"package": "typescript",
													"name": "T"
												}
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4967
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										4968,
										4971
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1262,
									"character": 10
								}
							],
							"typeParameter": [
								{
									"id": 4975,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"indexSignature": {
								"id": 4976,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {
									"isExternal": true
								},
								"parameters": [
									{
										"id": 4977,
										"name": "n",
										"kind": 32768,
										"flags": {
											"isExternal": true
										},
										"type": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								],
								"type": {
									"type": "reference",
									"id": 4975,
									"qualifiedName": "ConcatArray.T",
									"package": "typescript",
									"name": "T"
								}
							}
						},
						{
							"id": 5118,
							"name": "ConsumerProps",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 5122,
									"name": "unstable_observedBits",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 345,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 5119,
									"name": "children",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 344,
											"character": 8
										}
									],
									"signatures": [
										{
											"id": 5120,
											"name": "children",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 5121,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5123,
														"qualifiedName": "React.ConsumerProps.T",
														"package": "@types/react",
														"name": "T"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4602,
												"qualifiedName": "React.ReactNode",
												"package": "@types/react",
												"name": "ReactNode"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5122
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										5119
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 343,
									"character": 14
								}
							],
							"typeParameter": [
								{
									"id": 5123,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							]
						},
						{
							"id": 5039,
							"name": "Context",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 5041,
									"name": "Consumer",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 382,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"id": 5100,
										"typeArguments": [
											{
												"type": "reference",
												"id": 5043,
												"qualifiedName": "React.Context.T",
												"package": "@types/react",
												"name": "T"
											}
										],
										"qualifiedName": "React.Consumer",
										"package": "@types/react",
										"name": "Consumer"
									}
								},
								{
									"id": 5040,
									"name": "Provider",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 381,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"id": 5098,
										"typeArguments": [
											{
												"type": "reference",
												"id": 5043,
												"qualifiedName": "React.Context.T",
												"package": "@types/react",
												"name": "T"
											}
										],
										"qualifiedName": "React.Provider",
										"package": "@types/react",
										"name": "Provider"
									}
								},
								{
									"id": 5042,
									"name": "displayName",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 383,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5041,
										5040,
										5042
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 380,
									"character": 14
								}
							],
							"typeParameter": [
								{
									"id": 5043,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							]
						},
						{
							"id": 5065,
							"name": "DeprecatedLifecycle",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 5068,
									"name": "UNSAFE_componentWillMount",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 5069,
											"name": "UNSAFE_componentWillMount",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
												"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use componentDidMount or the constructor instead"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 5074,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 5075,
											"name": "UNSAFE_componentWillReceiveProps",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
												"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use static getDerivedStateFromProps instead"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"parameters": [
												{
													"id": 5076,
													"name": "nextProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5044,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5088,
																"qualifiedName": "React.DeprecatedLifecycle.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 5077,
													"name": "nextContext",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 5083,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 5084,
											"name": "UNSAFE_componentWillUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
												"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use getSnapshotBeforeUpdate instead"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"parameters": [
												{
													"id": 5085,
													"name": "nextProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5044,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5088,
																"qualifiedName": "React.DeprecatedLifecycle.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 5086,
													"name": "nextState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5044,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5089,
																"qualifiedName": "React.DeprecatedLifecycle.S",
																"package": "@types/react",
																"name": "S"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 5087,
													"name": "nextContext",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 5066,
									"name": "componentWillMount",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 5067,
											"name": "componentWillMount",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
												"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 5070,
									"name": "componentWillReceiveProps",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 5071,
											"name": "componentWillReceiveProps",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
												"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"parameters": [
												{
													"id": 5072,
													"name": "nextProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5044,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5088,
																"qualifiedName": "React.DeprecatedLifecycle.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 5073,
													"name": "nextContext",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 5078,
									"name": "componentWillUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 5079,
											"name": "componentWillUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
												"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"parameters": [
												{
													"id": 5080,
													"name": "nextProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5044,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5088,
																"qualifiedName": "React.DeprecatedLifecycle.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 5081,
													"name": "nextState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5044,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5089,
																"qualifiedName": "React.DeprecatedLifecycle.S",
																"package": "@types/react",
																"name": "S"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 5082,
													"name": "nextContext",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										5068,
										5074,
										5083,
										5066,
										5070,
										5078
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 686,
									"character": 14
								}
							],
							"typeParameter": [
								{
									"id": 5088,
									"name": "P",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								},
								{
									"id": 5089,
									"name": "S",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"extendedBy": [
								{
									"type": "reference",
									"id": 4991,
									"name": "ComponentLifecycle"
								}
							]
						},
						{
							"id": 5050,
							"name": "ErrorInfo",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 5051,
									"name": "componentStack",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Captures which component contained the exception, and its ancestors."
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 2897,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5051
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 2893,
									"character": 14
								}
							]
						},
						{
							"id": 5112,
							"name": "ExoticComponent",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 5113,
									"name": "$$typeof",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 363,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "symbol"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5113
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 358,
									"character": 14
								}
							],
							"typeParameter": [
								{
									"id": 5115,
									"name": "P",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "reflection",
										"declaration": {
											"id": 5114,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/react/index.d.ts",
													"line": 358,
													"character": 34
												}
											]
										}
									}
								}
							],
							"signatures": [
								{
									"id": 5116,
									"name": "ExoticComponent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "**NOTE**: Exotic components are not callable."
									},
									"parameters": [
										{
											"id": 5117,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 5115,
												"qualifiedName": "React.ExoticComponent.P",
												"package": "@types/react",
												"name": "P"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 4611,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"id": 4851,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"qualifiedName": "React.JSXElementConstructor",
																"package": "@types/react",
																"name": "JSXElementConstructor"
															}
														]
													}
												],
												"qualifiedName": "React.ReactElement",
												"package": "@types/react",
												"name": "ReactElement"
											}
										]
									}
								}
							],
							"extendedBy": [
								{
									"type": "reference",
									"id": 5102,
									"name": "ProviderExoticComponent"
								}
							]
						},
						{
							"id": 4859,
							"name": "IterableIterator",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 4860,
									"name": "[iterator]",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4861,
											"name": "[iterator]",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 4859,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4871,
														"qualifiedName": "IterableIterator.T",
														"package": "typescript",
														"name": "T"
													}
												],
												"qualifiedName": "IterableIterator",
												"package": "typescript",
												"name": "IterableIterator"
											}
										}
									]
								},
								{
									"id": 4862,
									"name": "next",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4863,
											"name": "next",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 4864,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isRest": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "tuple"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	}
																]
															}
														]
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 5046,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4871,
														"qualifiedName": "IterableIterator.T",
														"package": "typescript",
														"name": "T"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "IteratorResult",
												"package": "typescript",
												"name": "IteratorResult"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4980,
												"name": "Iterator.next"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4979,
										"name": "Iterator.next"
									}
								},
								{
									"id": 4865,
									"name": "return",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 4866,
											"name": "return",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 4867,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 5046,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4871,
														"qualifiedName": "IterableIterator.T",
														"package": "typescript",
														"name": "T"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "IteratorResult",
												"package": "typescript",
												"name": "IteratorResult"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4983,
												"name": "Iterator.return"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4982,
										"name": "Iterator.return"
									}
								},
								{
									"id": 4868,
									"name": "throw",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 4869,
											"name": "throw",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 4870,
													"name": "e",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 5046,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4871,
														"qualifiedName": "IterableIterator.T",
														"package": "typescript",
														"name": "T"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "IteratorResult",
												"package": "typescript",
												"name": "IteratorResult"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4986,
												"name": "Iterator.throw"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4985,
										"name": "Iterator.throw"
									}
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										4860,
										4862,
										4865,
										4868
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
									"line": 54,
									"character": 10
								}
							],
							"typeParameter": [
								{
									"id": 4871,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"id": 4978,
									"typeArguments": [
										{
											"type": "reference",
											"id": 4871,
											"qualifiedName": "IterableIterator.T",
											"package": "typescript",
											"name": "T"
										}
									],
									"qualifiedName": "Iterator",
									"package": "typescript",
									"name": "Iterator"
								}
							]
						},
						{
							"id": 4978,
							"name": "Iterator",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 4979,
									"name": "next",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4980,
											"name": "next",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 4981,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isRest": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "tuple"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "reference",
																		"id": 4990,
																		"qualifiedName": "Iterator.TNext",
																		"package": "typescript",
																		"name": "TNext"
																	}
																]
															}
														]
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 5046,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4988,
														"qualifiedName": "Iterator.T",
														"package": "typescript",
														"name": "T"
													},
													{
														"type": "reference",
														"id": 4989,
														"qualifiedName": "Iterator.TReturn",
														"package": "typescript",
														"name": "TReturn"
													}
												],
												"qualifiedName": "IteratorResult",
												"package": "typescript",
												"name": "IteratorResult"
											}
										}
									]
								},
								{
									"id": 4982,
									"name": "return",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 4983,
											"name": "return",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 4984,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 4989,
														"qualifiedName": "Iterator.TReturn",
														"package": "typescript",
														"name": "TReturn"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 5046,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4988,
														"qualifiedName": "Iterator.T",
														"package": "typescript",
														"name": "T"
													},
													{
														"type": "reference",
														"id": 4989,
														"qualifiedName": "Iterator.TReturn",
														"package": "typescript",
														"name": "TReturn"
													}
												],
												"qualifiedName": "IteratorResult",
												"package": "typescript",
												"name": "IteratorResult"
											}
										}
									]
								},
								{
									"id": 4985,
									"name": "throw",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 4986,
											"name": "throw",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 4987,
													"name": "e",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 5046,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4988,
														"qualifiedName": "Iterator.T",
														"package": "typescript",
														"name": "T"
													},
													{
														"type": "reference",
														"id": 4989,
														"qualifiedName": "Iterator.TReturn",
														"package": "typescript",
														"name": "TReturn"
													}
												],
												"qualifiedName": "IteratorResult",
												"package": "typescript",
												"name": "IteratorResult"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										4979,
										4982,
										4985
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
									"line": 43,
									"character": 10
								}
							],
							"typeParameter": [
								{
									"id": 4988,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								},
								{
									"id": 4989,
									"name": "TReturn",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 4990,
									"name": "TNext",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "intrinsic",
										"name": "undefined"
									}
								}
							],
							"extendedBy": [
								{
									"type": "reference",
									"id": 4859,
									"name": "IterableIterator"
								}
							]
						},
						{
							"id": 5094,
							"name": "IteratorReturnResult",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 5095,
									"name": "done",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
											"line": 37,
											"character": 4
										}
									],
									"type": {
										"type": "literal",
										"value": true
									}
								},
								{
									"id": 5096,
									"name": "value",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
											"line": 38,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"id": 5097,
										"qualifiedName": "IteratorReturnResult.TReturn",
										"package": "typescript",
										"name": "TReturn"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5095,
										5096
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
									"line": 36,
									"character": 10
								}
							],
							"typeParameter": [
								{
									"id": 5097,
									"name": "TReturn",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							]
						},
						{
							"id": 5090,
							"name": "IteratorYieldResult",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 5091,
									"name": "done",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
											"line": 32,
											"character": 4
										}
									],
									"type": {
										"type": "literal",
										"value": false
									}
								},
								{
									"id": 5092,
									"name": "value",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
											"line": 33,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"id": 5093,
										"qualifiedName": "IteratorYieldResult.TYield",
										"package": "typescript",
										"name": "TYield"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5091,
										5092
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
									"line": 31,
									"character": 10
								}
							],
							"typeParameter": [
								{
									"id": 5093,
									"name": "TYield",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							]
						},
						{
							"id": 5052,
							"name": "NewLifecycle",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 5057,
									"name": "componentDidUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 5058,
											"name": "componentDidUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately after updating occurs. Not called for the initial render.",
												"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
											},
											"parameters": [
												{
													"id": 5059,
													"name": "prevProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5044,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5062,
																"qualifiedName": "React.NewLifecycle.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 5060,
													"name": "prevState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5044,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5063,
																"qualifiedName": "React.NewLifecycle.S",
																"package": "@types/react",
																"name": "S"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 5061,
													"name": "snapshot",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 5064,
														"qualifiedName": "React.NewLifecycle.SS",
														"package": "@types/react",
														"name": "SS"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 5053,
									"name": "getSnapshotBeforeUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 5054,
											"name": "getSnapshotBeforeUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
												"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
											},
											"parameters": [
												{
													"id": 5055,
													"name": "prevProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5044,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5062,
																"qualifiedName": "React.NewLifecycle.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 5056,
													"name": "prevState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5044,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5063,
																"qualifiedName": "React.NewLifecycle.S",
																"package": "@types/react",
																"name": "S"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 5064,
														"qualifiedName": "React.NewLifecycle.SS",
														"package": "@types/react",
														"name": "SS"
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										5057,
										5053
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 668,
									"character": 14
								}
							],
							"typeParameter": [
								{
									"id": 5062,
									"name": "P",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								},
								{
									"id": 5063,
									"name": "S",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								},
								{
									"id": 5064,
									"name": "SS",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"extendedBy": [
								{
									"type": "reference",
									"id": 4991,
									"name": "ComponentLifecycle"
								}
							]
						},
						{
							"id": 5102,
							"name": "ProviderExoticComponent",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 5104,
									"name": "$$typeof",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 363,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "symbol"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 5113,
										"name": "ExoticComponent.$$typeof"
									}
								},
								{
									"id": 5103,
									"name": "propTypes",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 371,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"id": 5124,
										"typeArguments": [
											{
												"type": "reference",
												"id": 5105,
												"qualifiedName": "React.ProviderExoticComponent.P",
												"package": "@types/react",
												"name": "P"
											}
										],
										"qualifiedName": "React.WeakValidationMap",
										"package": "@types/react",
										"name": "WeakValidationMap"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5104,
										5103
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 370,
									"character": 14
								}
							],
							"typeParameter": [
								{
									"id": 5105,
									"name": "P",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"signatures": [
								{
									"id": 5106,
									"name": "ProviderExoticComponent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "**NOTE**: Exotic components are not callable."
									},
									"parameters": [
										{
											"id": 5107,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 5105,
												"qualifiedName": "React.ProviderExoticComponent.P",
												"package": "@types/react",
												"name": "P"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 4611,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"id": 4851,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"qualifiedName": "React.JSXElementConstructor",
																"package": "@types/react",
																"name": "JSXElementConstructor"
															}
														]
													}
												],
												"qualifiedName": "React.ReactElement",
												"package": "@types/react",
												"name": "ReactElement"
											}
										]
									}
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"id": 5112,
									"typeArguments": [
										{
											"type": "reference",
											"id": 5105,
											"qualifiedName": "React.ProviderExoticComponent.P",
											"package": "@types/react",
											"name": "P"
										}
									],
									"qualifiedName": "React.ExoticComponent",
									"package": "@types/react",
									"name": "ExoticComponent"
								}
							]
						},
						{
							"id": 5108,
							"name": "ProviderProps",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 5110,
									"name": "children",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 340,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"id": 4602,
										"qualifiedName": "React.ReactNode",
										"package": "@types/react",
										"name": "ReactNode"
									}
								},
								{
									"id": 5109,
									"name": "value",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 339,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"id": 5111,
										"qualifiedName": "React.ProviderProps.T",
										"package": "@types/react",
										"name": "T"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5110,
										5109
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 338,
									"character": 14
								}
							],
							"typeParameter": [
								{
									"id": 5111,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							]
						},
						{
							"id": 4611,
							"name": "ReactElement",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 4614,
									"name": "key",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 151,
											"character": 8
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 4850,
												"qualifiedName": "React.Key",
												"package": "@types/react",
												"name": "Key"
											}
										]
									}
								},
								{
									"id": 4613,
									"name": "props",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 150,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"id": 4615,
										"qualifiedName": "React.ReactElement.P",
										"package": "@types/react",
										"name": "P"
									}
								},
								{
									"id": 4612,
									"name": "type",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 149,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"id": 4616,
										"qualifiedName": "React.ReactElement.T",
										"package": "@types/react",
										"name": "T"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4614,
										4613,
										4612
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 148,
									"character": 14
								}
							],
							"typeParameter": [
								{
									"id": 4615,
									"name": "P",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 4616,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 4851,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "React.JSXElementConstructor",
												"package": "@types/react",
												"name": "JSXElementConstructor"
											}
										]
									},
									"default": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 4851,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "React.JSXElementConstructor",
												"package": "@types/react",
												"name": "JSXElementConstructor"
											}
										]
									}
								}
							],
							"extendedBy": [
								{
									"type": "reference",
									"id": 4606,
									"name": "ReactPortal"
								}
							]
						},
						{
							"id": 4618,
							"name": "ReactNodeArray",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 4619,
									"name": "length",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Gets or sets the length of the array. This is a number one higher than the highest index in the array."
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1273,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.length"
									}
								},
								{
									"id": 4838,
									"name": "[iterator]",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4839,
											"name": "[iterator]",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Iterator"
											},
											"type": {
												"type": "reference",
												"id": 4859,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4602,
														"qualifiedName": "React.ReactNode",
														"package": "@types/react",
														"name": "ReactNode"
													}
												],
												"qualifiedName": "IterableIterator",
												"package": "typescript",
												"name": "IterableIterator"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.__@iterator@61761"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.__@iterator@61761"
									}
								},
								{
									"id": 4840,
									"name": "[unscopables]",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4841,
											"name": "[unscopables]",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Returns an object whose properties have the value 'true'\nwhen they will be absent when used in a 'with' statement."
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 4842,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 4843,
															"name": "copyWithin",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
																	"line": 100,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														},
														{
															"id": 4844,
															"name": "entries",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
																	"line": 101,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														},
														{
															"id": 4845,
															"name": "fill",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
																	"line": 102,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														},
														{
															"id": 4846,
															"name": "find",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
																	"line": 103,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														},
														{
															"id": 4847,
															"name": "findIndex",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
																	"line": 104,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														},
														{
															"id": 4848,
															"name": "keys",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
																	"line": 105,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														},
														{
															"id": 4849,
															"name": "values",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
																	"line": 106,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																4843,
																4844,
																4845,
																4846,
																4847,
																4848,
																4849
															]
														}
													]
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.__@unscopables@61785"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.__@unscopables@61785"
									}
								},
								{
									"id": 4629,
									"name": "concat",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4630,
											"name": "concat",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Combines two or more arrays.\nThis method returns a new array without modifying any existing arrays."
											},
											"parameters": [
												{
													"id": 4631,
													"name": "items",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isRest": true
													},
													"comment": {
														"shortText": "Additional arrays and/or items to add to the end of the array.\n"
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 4966,
															"typeArguments": [
																{
																	"type": "reference",
																	"id": 4602,
																	"qualifiedName": "React.ReactNode",
																	"package": "@types/react",
																	"name": "ReactNode"
																}
															],
															"qualifiedName": "ConcatArray",
															"package": "typescript",
															"name": "ConcatArray"
														}
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 4602,
													"qualifiedName": "React.ReactNode",
													"package": "@types/react",
													"name": "ReactNode"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.concat"
											}
										},
										{
											"id": 4632,
											"name": "concat",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Combines two or more arrays.\nThis method returns a new array without modifying any existing arrays."
											},
											"parameters": [
												{
													"id": 4633,
													"name": "items",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isRest": true
													},
													"comment": {
														"shortText": "Additional arrays and/or items to add to the end of the array.\n"
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "union",
															"types": [
																{
																	"type": "reference",
																	"id": 4602,
																	"qualifiedName": "React.ReactNode",
																	"package": "@types/react",
																	"name": "ReactNode"
																},
																{
																	"type": "reference",
																	"id": 4966,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"id": 4602,
																			"qualifiedName": "React.ReactNode",
																			"package": "@types/react",
																			"name": "ReactNode"
																		}
																	],
																	"qualifiedName": "ConcatArray",
																	"package": "typescript",
																	"name": "ConcatArray"
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 4602,
													"qualifiedName": "React.ReactNode",
													"package": "@types/react",
													"name": "ReactNode"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.concat"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.concat"
									}
								},
								{
									"id": 4823,
									"name": "copyWithin",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4824,
											"name": "copyWithin",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Returns the this object after copying a section of the array identified by start and end\nto the same array starting at position target"
											},
											"parameters": [
												{
													"id": 4825,
													"name": "target",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"shortText": "If target is negative, it is treated as length+target where length is the\nlength of the array."
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 4826,
													"name": "start",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"shortText": "If start is negative, it is treated as length+start. If end is negative, it\nis treated as length+end."
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 4827,
													"name": "end",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "If not specified, length of the this object is used as its default value.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4618,
												"qualifiedName": "React.ReactNodeArray",
												"package": "@types/react",
												"name": "ReactNodeArray"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.copyWithin"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.copyWithin"
									}
								},
								{
									"id": 4828,
									"name": "entries",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4829,
											"name": "entries",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Returns an iterable of key, value pairs for every entry in the array"
											},
											"type": {
												"type": "reference",
												"id": 4859,
												"typeArguments": [
													{
														"type": "tuple",
														"elements": [
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "reference",
																"id": 4602,
																"qualifiedName": "React.ReactNode",
																"package": "@types/react",
																"name": "ReactNode"
															}
														]
													}
												],
												"qualifiedName": "IterableIterator",
												"package": "typescript",
												"name": "IterableIterator"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.entries"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.entries"
									}
								},
								{
									"id": 4671,
									"name": "every",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4672,
											"name": "every",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Determines whether all the members of an array satisfy the specified test."
											},
											"typeParameter": [
												{
													"id": 4673,
													"name": "S",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 4602,
														"qualifiedName": "React.ReactNode",
														"package": "@types/react",
														"name": "ReactNode"
													}
												}
											],
											"parameters": [
												{
													"id": 4674,
													"name": "predicate",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"shortText": "A function that accepts up to three arguments. The every method calls\nthe predicate function for each element in the array until the predicate returns a value\nwhich is coercible to the Boolean value false, or until the end of the array."
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 4675,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"signatures": [
																{
																	"id": 4676,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExternal": true
																	},
																	"parameters": [
																		{
																			"id": 4677,
																			"name": "value",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"id": 4602,
																				"qualifiedName": "React.ReactNode",
																				"package": "@types/react",
																				"name": "ReactNode"
																			}
																		},
																		{
																			"id": 4678,
																			"name": "index",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 4679,
																			"name": "array",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"id": 4602,
																					"qualifiedName": "React.ReactNode",
																					"package": "@types/react",
																					"name": "ReactNode"
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "predicate",
																		"name": "value",
																		"asserts": false,
																		"targetType": {
																			"type": "reference",
																			"id": 4673,
																			"qualifiedName": "S",
																			"package": "typescript",
																			"name": "S"
																		}
																	}
																}
															]
														}
													}
												},
												{
													"id": 4680,
													"name": "thisArg",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "An object to which the this keyword can refer in the predicate function.\nIf thisArg is omitted, undefined is used as the this value.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "predicate",
												"name": "this",
												"asserts": false,
												"targetType": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"id": 4673,
														"qualifiedName": "S",
														"package": "typescript",
														"name": "S"
													}
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.every"
											}
										},
										{
											"id": 4681,
											"name": "every",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Determines whether all the members of an array satisfy the specified test."
											},
											"parameters": [
												{
													"id": 4682,
													"name": "predicate",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"shortText": "A function that accepts up to three arguments. The every method calls\nthe predicate function for each element in the array until the predicate returns a value\nwhich is coercible to the Boolean value false, or until the end of the array."
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 4683,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"signatures": [
																{
																	"id": 4684,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExternal": true
																	},
																	"parameters": [
																		{
																			"id": 4685,
																			"name": "value",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"id": 4602,
																				"qualifiedName": "React.ReactNode",
																				"package": "@types/react",
																				"name": "ReactNode"
																			}
																		},
																		{
																			"id": 4686,
																			"name": "index",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 4687,
																			"name": "array",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"id": 4602,
																					"qualifiedName": "React.ReactNode",
																					"package": "@types/react",
																					"name": "ReactNode"
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																}
															]
														}
													}
												},
												{
													"id": 4688,
													"name": "thisArg",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "An object to which the this keyword can refer in the predicate function.\nIf thisArg is omitted, undefined is used as the this value.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.every"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.every"
									}
								},
								{
									"id": 4818,
									"name": "fill",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4819,
											"name": "fill",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Changes all array elements from `start` to `end` index to a static `value` and returns the modified array"
											},
											"parameters": [
												{
													"id": 4820,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"shortText": "value to fill array section with"
													},
													"type": {
														"type": "reference",
														"id": 4602,
														"qualifiedName": "React.ReactNode",
														"package": "@types/react",
														"name": "ReactNode"
													}
												},
												{
													"id": 4821,
													"name": "start",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "index to start filling the array at. If start is negative, it is treated as\nlength+start where length is the length of the array."
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 4822,
													"name": "end",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "index to stop filling the array at. If end is negative, it is treated as\nlength+end.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4618,
												"qualifiedName": "React.ReactNodeArray",
												"package": "@types/react",
												"name": "ReactNodeArray"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.fill"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.fill"
									}
								},
								{
									"id": 4717,
									"name": "filter",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4718,
											"name": "filter",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Returns the elements of an array that meet the condition specified in a callback function."
											},
											"typeParameter": [
												{
													"id": 4719,
													"name": "S",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 4602,
														"qualifiedName": "React.ReactNode",
														"package": "@types/react",
														"name": "ReactNode"
													}
												}
											],
											"parameters": [
												{
													"id": 4720,
													"name": "predicate",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"shortText": "A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array."
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 4721,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"signatures": [
																{
																	"id": 4722,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExternal": true
																	},
																	"parameters": [
																		{
																			"id": 4723,
																			"name": "value",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"id": 4602,
																				"qualifiedName": "React.ReactNode",
																				"package": "@types/react",
																				"name": "ReactNode"
																			}
																		},
																		{
																			"id": 4724,
																			"name": "index",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 4725,
																			"name": "array",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"id": 4602,
																					"qualifiedName": "React.ReactNode",
																					"package": "@types/react",
																					"name": "ReactNode"
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "predicate",
																		"name": "value",
																		"asserts": false,
																		"targetType": {
																			"type": "reference",
																			"id": 4719,
																			"qualifiedName": "S",
																			"package": "typescript",
																			"name": "S"
																		}
																	}
																}
															]
														}
													}
												},
												{
													"id": 4726,
													"name": "thisArg",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 4719,
													"qualifiedName": "S",
													"package": "typescript",
													"name": "S"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.filter"
											}
										},
										{
											"id": 4727,
											"name": "filter",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Returns the elements of an array that meet the condition specified in a callback function."
											},
											"parameters": [
												{
													"id": 4728,
													"name": "predicate",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"shortText": "A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array."
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 4729,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"signatures": [
																{
																	"id": 4730,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExternal": true
																	},
																	"parameters": [
																		{
																			"id": 4731,
																			"name": "value",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"id": 4602,
																				"qualifiedName": "React.ReactNode",
																				"package": "@types/react",
																				"name": "ReactNode"
																			}
																		},
																		{
																			"id": 4732,
																			"name": "index",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 4733,
																			"name": "array",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"id": 4602,
																					"qualifiedName": "React.ReactNode",
																					"package": "@types/react",
																					"name": "ReactNode"
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																}
															]
														}
													}
												},
												{
													"id": 4734,
													"name": "thisArg",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 4602,
													"qualifiedName": "React.ReactNode",
													"package": "@types/react",
													"name": "ReactNode"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.filter"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.filter"
									}
								},
								{
									"id": 4791,
									"name": "find",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4792,
											"name": "find",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Returns the value of the first element in the array where predicate is true, and undefined\notherwise."
											},
											"typeParameter": [
												{
													"id": 4793,
													"name": "S",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 4602,
														"qualifiedName": "React.ReactNode",
														"package": "@types/react",
														"name": "ReactNode"
													}
												}
											],
											"parameters": [
												{
													"id": 4794,
													"name": "predicate",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"shortText": "find calls predicate once for each element of the array, in ascending\norder, until it finds one where predicate returns true. If such an element is found, find\nimmediately returns that element value. Otherwise, find returns undefined."
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 4795,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"signatures": [
																{
																	"id": 4796,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExternal": true
																	},
																	"parameters": [
																		{
																			"id": 4797,
																			"name": "value",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"id": 4602,
																				"qualifiedName": "React.ReactNode",
																				"package": "@types/react",
																				"name": "ReactNode"
																			}
																		},
																		{
																			"id": 4798,
																			"name": "index",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 4799,
																			"name": "obj",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"id": 4602,
																					"qualifiedName": "React.ReactNode",
																					"package": "@types/react",
																					"name": "ReactNode"
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "predicate",
																		"name": "value",
																		"asserts": false,
																		"targetType": {
																			"type": "reference",
																			"id": 4793,
																			"qualifiedName": "S",
																			"package": "typescript",
																			"name": "S"
																		}
																	}
																}
															]
														}
													}
												},
												{
													"id": 4800,
													"name": "thisArg",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "If provided, it will be used as the this value for each invocation of\npredicate. If it is not provided, undefined is used instead.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reference",
														"id": 4793,
														"qualifiedName": "S",
														"package": "typescript",
														"name": "S"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.find"
											}
										},
										{
											"id": 4801,
											"name": "find",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 4802,
													"name": "predicate",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 4803,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"signatures": [
																{
																	"id": 4804,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExternal": true
																	},
																	"parameters": [
																		{
																			"id": 4805,
																			"name": "value",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"id": 4602,
																				"qualifiedName": "React.ReactNode",
																				"package": "@types/react",
																				"name": "ReactNode"
																			}
																		},
																		{
																			"id": 4806,
																			"name": "index",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 4807,
																			"name": "obj",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"id": 4602,
																					"qualifiedName": "React.ReactNode",
																					"package": "@types/react",
																					"name": "ReactNode"
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																}
															]
														}
													}
												},
												{
													"id": 4808,
													"name": "thisArg",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4602,
												"qualifiedName": "React.ReactNode",
												"package": "@types/react",
												"name": "ReactNode"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.find"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.find"
									}
								},
								{
									"id": 4809,
									"name": "findIndex",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4810,
											"name": "findIndex",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Returns the index of the first element in the array where predicate is true, and -1\notherwise."
											},
											"parameters": [
												{
													"id": 4811,
													"name": "predicate",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"shortText": "find calls predicate once for each element of the array, in ascending\norder, until it finds one where predicate returns true. If such an element is found,\nfindIndex immediately returns that element index. Otherwise, findIndex returns -1."
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 4812,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"signatures": [
																{
																	"id": 4813,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExternal": true
																	},
																	"parameters": [
																		{
																			"id": 4814,
																			"name": "value",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"id": 4602,
																				"qualifiedName": "React.ReactNode",
																				"package": "@types/react",
																				"name": "ReactNode"
																			}
																		},
																		{
																			"id": 4815,
																			"name": "index",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 4816,
																			"name": "obj",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"id": 4602,
																					"qualifiedName": "React.ReactNode",
																					"package": "@types/react",
																					"name": "ReactNode"
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																}
															]
														}
													}
												},
												{
													"id": 4817,
													"name": "thisArg",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "If provided, it will be used as the this value for each invocation of\npredicate. If it is not provided, undefined is used instead.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.findIndex"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.findIndex"
									}
								},
								{
									"id": 4698,
									"name": "forEach",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4699,
											"name": "forEach",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Performs the specified action for each element in an array."
											},
											"parameters": [
												{
													"id": 4700,
													"name": "callbackfn",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"shortText": "A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array."
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 4701,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"signatures": [
																{
																	"id": 4702,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExternal": true
																	},
																	"parameters": [
																		{
																			"id": 4703,
																			"name": "value",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"id": 4602,
																				"qualifiedName": "React.ReactNode",
																				"package": "@types/react",
																				"name": "ReactNode"
																			}
																		},
																		{
																			"id": 4704,
																			"name": "index",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 4705,
																			"name": "array",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"id": 4602,
																					"qualifiedName": "React.ReactNode",
																					"package": "@types/react",
																					"name": "ReactNode"
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												},
												{
													"id": 4706,
													"name": "thisArg",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.forEach"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.forEach"
									}
								},
								{
									"id": 4834,
									"name": "includes",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4835,
											"name": "includes",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Determines whether an array includes a certain element, returning true or false as appropriate."
											},
											"parameters": [
												{
													"id": 4836,
													"name": "searchElement",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"shortText": "The element to search for."
													},
													"type": {
														"type": "reference",
														"id": 4602,
														"qualifiedName": "React.ReactNode",
														"package": "@types/react",
														"name": "ReactNode"
													}
												},
												{
													"id": 4837,
													"name": "fromIndex",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "The position in this array at which to begin searching for searchElement.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.includes"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.includes"
									}
								},
								{
									"id": 4663,
									"name": "indexOf",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4664,
											"name": "indexOf",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Returns the index of the first occurrence of a value in an array, or -1 if it is not present."
											},
											"parameters": [
												{
													"id": 4665,
													"name": "searchElement",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"shortText": "The value to locate in the array."
													},
													"type": {
														"type": "reference",
														"id": 4602,
														"qualifiedName": "React.ReactNode",
														"package": "@types/react",
														"name": "ReactNode"
													}
												},
												{
													"id": 4666,
													"name": "fromIndex",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.indexOf"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.indexOf"
									}
								},
								{
									"id": 4634,
									"name": "join",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4635,
											"name": "join",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Adds all the elements of an array into a string, separated by the specified separator string."
											},
											"parameters": [
												{
													"id": 4636,
													"name": "separator",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "A string used to separate one element of the array from the next in the resulting string. If omitted, the array elements are separated with a comma.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.join"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.join"
									}
								},
								{
									"id": 4830,
									"name": "keys",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4831,
											"name": "keys",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Returns an iterable of keys in the array"
											},
											"type": {
												"type": "reference",
												"id": 4859,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"qualifiedName": "IterableIterator",
												"package": "typescript",
												"name": "IterableIterator"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.keys"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.keys"
									}
								},
								{
									"id": 4667,
									"name": "lastIndexOf",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4668,
											"name": "lastIndexOf",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Returns the index of the last occurrence of a specified value in an array, or -1 if it is not present."
											},
											"parameters": [
												{
													"id": 4669,
													"name": "searchElement",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"shortText": "The value to locate in the array."
													},
													"type": {
														"type": "reference",
														"id": 4602,
														"qualifiedName": "React.ReactNode",
														"package": "@types/react",
														"name": "ReactNode"
													}
												},
												{
													"id": 4670,
													"name": "fromIndex",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "The array index at which to begin searching backward. If fromIndex is omitted, the search starts at the last index in the array.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.lastIndexOf"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.lastIndexOf"
									}
								},
								{
									"id": 4707,
									"name": "map",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4708,
											"name": "map",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Calls a defined callback function on each element of an array, and returns an array that contains the results."
											},
											"typeParameter": [
												{
													"id": 4709,
													"name": "U",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {
														"isExternal": true
													}
												}
											],
											"parameters": [
												{
													"id": 4710,
													"name": "callbackfn",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"shortText": "A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array."
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 4711,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"signatures": [
																{
																	"id": 4712,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExternal": true
																	},
																	"parameters": [
																		{
																			"id": 4713,
																			"name": "value",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"id": 4602,
																				"qualifiedName": "React.ReactNode",
																				"package": "@types/react",
																				"name": "ReactNode"
																			}
																		},
																		{
																			"id": 4714,
																			"name": "index",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 4715,
																			"name": "array",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"id": 4602,
																					"qualifiedName": "React.ReactNode",
																					"package": "@types/react",
																					"name": "ReactNode"
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 4709,
																		"qualifiedName": "U",
																		"package": "typescript",
																		"name": "U"
																	}
																}
															]
														}
													}
												},
												{
													"id": 4716,
													"name": "thisArg",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 4709,
													"qualifiedName": "U",
													"package": "typescript",
													"name": "U"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.map"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.map"
									}
								},
								{
									"id": 4624,
									"name": "pop",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4625,
											"name": "pop",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Removes the last element from an array and returns it.\nIf the array is empty, undefined is returned and the array is not modified."
											},
											"type": {
												"type": "reference",
												"id": 4602,
												"qualifiedName": "React.ReactNode",
												"package": "@types/react",
												"name": "ReactNode"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.pop"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.pop"
									}
								},
								{
									"id": 4626,
									"name": "push",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4627,
											"name": "push",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Appends new elements to the end of an array, and returns the new length of the array."
											},
											"parameters": [
												{
													"id": 4628,
													"name": "items",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isRest": true
													},
													"comment": {
														"shortText": "New elements to add to the array.\n"
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 4602,
															"qualifiedName": "React.ReactNode",
															"package": "@types/react",
															"name": "ReactNode"
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.push"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.push"
									}
								},
								{
									"id": 4735,
									"name": "reduce",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4736,
											"name": "reduce",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."
											},
											"parameters": [
												{
													"id": 4737,
													"name": "callbackfn",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"shortText": "A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array."
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 4738,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"signatures": [
																{
																	"id": 4739,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExternal": true
																	},
																	"parameters": [
																		{
																			"id": 4740,
																			"name": "previousValue",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"id": 4602,
																				"qualifiedName": "React.ReactNode",
																				"package": "@types/react",
																				"name": "ReactNode"
																			}
																		},
																		{
																			"id": 4741,
																			"name": "currentValue",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"id": 4602,
																				"qualifiedName": "React.ReactNode",
																				"package": "@types/react",
																				"name": "ReactNode"
																			}
																		},
																		{
																			"id": 4742,
																			"name": "currentIndex",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 4743,
																			"name": "array",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"id": 4602,
																					"qualifiedName": "React.ReactNode",
																					"package": "@types/react",
																					"name": "ReactNode"
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 4602,
																		"qualifiedName": "React.ReactNode",
																		"package": "@types/react",
																		"name": "ReactNode"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4602,
												"qualifiedName": "React.ReactNode",
												"package": "@types/react",
												"name": "ReactNode"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.reduce"
											}
										},
										{
											"id": 4744,
											"name": "reduce",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 4745,
													"name": "callbackfn",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 4746,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"signatures": [
																{
																	"id": 4747,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExternal": true
																	},
																	"parameters": [
																		{
																			"id": 4748,
																			"name": "previousValue",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"id": 4602,
																				"qualifiedName": "React.ReactNode",
																				"package": "@types/react",
																				"name": "ReactNode"
																			}
																		},
																		{
																			"id": 4749,
																			"name": "currentValue",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"id": 4602,
																				"qualifiedName": "React.ReactNode",
																				"package": "@types/react",
																				"name": "ReactNode"
																			}
																		},
																		{
																			"id": 4750,
																			"name": "currentIndex",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 4751,
																			"name": "array",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"id": 4602,
																					"qualifiedName": "React.ReactNode",
																					"package": "@types/react",
																					"name": "ReactNode"
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 4602,
																		"qualifiedName": "React.ReactNode",
																		"package": "@types/react",
																		"name": "ReactNode"
																	}
																}
															]
														}
													}
												},
												{
													"id": 4752,
													"name": "initialValue",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 4602,
														"qualifiedName": "React.ReactNode",
														"package": "@types/react",
														"name": "ReactNode"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4602,
												"qualifiedName": "React.ReactNode",
												"package": "@types/react",
												"name": "ReactNode"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.reduce"
											}
										},
										{
											"id": 4753,
											"name": "reduce",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."
											},
											"typeParameter": [
												{
													"id": 4754,
													"name": "U",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {
														"isExternal": true
													}
												}
											],
											"parameters": [
												{
													"id": 4755,
													"name": "callbackfn",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"shortText": "A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array."
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 4756,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"signatures": [
																{
																	"id": 4757,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExternal": true
																	},
																	"parameters": [
																		{
																			"id": 4758,
																			"name": "previousValue",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"id": 4754,
																				"qualifiedName": "U",
																				"package": "typescript",
																				"name": "U"
																			}
																		},
																		{
																			"id": 4759,
																			"name": "currentValue",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"id": 4602,
																				"qualifiedName": "React.ReactNode",
																				"package": "@types/react",
																				"name": "ReactNode"
																			}
																		},
																		{
																			"id": 4760,
																			"name": "currentIndex",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 4761,
																			"name": "array",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"id": 4602,
																					"qualifiedName": "React.ReactNode",
																					"package": "@types/react",
																					"name": "ReactNode"
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 4754,
																		"qualifiedName": "U",
																		"package": "typescript",
																		"name": "U"
																	}
																}
															]
														}
													}
												},
												{
													"id": 4762,
													"name": "initialValue",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"shortText": "If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n"
													},
													"type": {
														"type": "reference",
														"id": 4754,
														"qualifiedName": "U",
														"package": "typescript",
														"name": "U"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4754,
												"qualifiedName": "U",
												"package": "typescript",
												"name": "U"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.reduce"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.reduce"
									}
								},
								{
									"id": 4763,
									"name": "reduceRight",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4764,
											"name": "reduceRight",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."
											},
											"parameters": [
												{
													"id": 4765,
													"name": "callbackfn",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"shortText": "A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array."
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 4766,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"signatures": [
																{
																	"id": 4767,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExternal": true
																	},
																	"parameters": [
																		{
																			"id": 4768,
																			"name": "previousValue",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"id": 4602,
																				"qualifiedName": "React.ReactNode",
																				"package": "@types/react",
																				"name": "ReactNode"
																			}
																		},
																		{
																			"id": 4769,
																			"name": "currentValue",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"id": 4602,
																				"qualifiedName": "React.ReactNode",
																				"package": "@types/react",
																				"name": "ReactNode"
																			}
																		},
																		{
																			"id": 4770,
																			"name": "currentIndex",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 4771,
																			"name": "array",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"id": 4602,
																					"qualifiedName": "React.ReactNode",
																					"package": "@types/react",
																					"name": "ReactNode"
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 4602,
																		"qualifiedName": "React.ReactNode",
																		"package": "@types/react",
																		"name": "ReactNode"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4602,
												"qualifiedName": "React.ReactNode",
												"package": "@types/react",
												"name": "ReactNode"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.reduceRight"
											}
										},
										{
											"id": 4772,
											"name": "reduceRight",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 4773,
													"name": "callbackfn",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 4774,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"signatures": [
																{
																	"id": 4775,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExternal": true
																	},
																	"parameters": [
																		{
																			"id": 4776,
																			"name": "previousValue",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"id": 4602,
																				"qualifiedName": "React.ReactNode",
																				"package": "@types/react",
																				"name": "ReactNode"
																			}
																		},
																		{
																			"id": 4777,
																			"name": "currentValue",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"id": 4602,
																				"qualifiedName": "React.ReactNode",
																				"package": "@types/react",
																				"name": "ReactNode"
																			}
																		},
																		{
																			"id": 4778,
																			"name": "currentIndex",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 4779,
																			"name": "array",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"id": 4602,
																					"qualifiedName": "React.ReactNode",
																					"package": "@types/react",
																					"name": "ReactNode"
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 4602,
																		"qualifiedName": "React.ReactNode",
																		"package": "@types/react",
																		"name": "ReactNode"
																	}
																}
															]
														}
													}
												},
												{
													"id": 4780,
													"name": "initialValue",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 4602,
														"qualifiedName": "React.ReactNode",
														"package": "@types/react",
														"name": "ReactNode"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4602,
												"qualifiedName": "React.ReactNode",
												"package": "@types/react",
												"name": "ReactNode"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.reduceRight"
											}
										},
										{
											"id": 4781,
											"name": "reduceRight",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."
											},
											"typeParameter": [
												{
													"id": 4782,
													"name": "U",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {
														"isExternal": true
													}
												}
											],
											"parameters": [
												{
													"id": 4783,
													"name": "callbackfn",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"shortText": "A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array."
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 4784,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"signatures": [
																{
																	"id": 4785,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExternal": true
																	},
																	"parameters": [
																		{
																			"id": 4786,
																			"name": "previousValue",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"id": 4782,
																				"qualifiedName": "U",
																				"package": "typescript",
																				"name": "U"
																			}
																		},
																		{
																			"id": 4787,
																			"name": "currentValue",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"id": 4602,
																				"qualifiedName": "React.ReactNode",
																				"package": "@types/react",
																				"name": "ReactNode"
																			}
																		},
																		{
																			"id": 4788,
																			"name": "currentIndex",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 4789,
																			"name": "array",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"id": 4602,
																					"qualifiedName": "React.ReactNode",
																					"package": "@types/react",
																					"name": "ReactNode"
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 4782,
																		"qualifiedName": "U",
																		"package": "typescript",
																		"name": "U"
																	}
																}
															]
														}
													}
												},
												{
													"id": 4790,
													"name": "initialValue",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"shortText": "If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n"
													},
													"type": {
														"type": "reference",
														"id": 4782,
														"qualifiedName": "U",
														"package": "typescript",
														"name": "U"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4782,
												"qualifiedName": "U",
												"package": "typescript",
												"name": "U"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.reduceRight"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.reduceRight"
									}
								},
								{
									"id": 4637,
									"name": "reverse",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4638,
											"name": "reverse",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Reverses the elements in an array in place.\nThis method mutates the array and returns a reference to the same array."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 4602,
													"qualifiedName": "React.ReactNode",
													"package": "@types/react",
													"name": "ReactNode"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.reverse"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.reverse"
									}
								},
								{
									"id": 4639,
									"name": "shift",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4640,
											"name": "shift",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Removes the first element from an array and returns it.\nIf the array is empty, undefined is returned and the array is not modified."
											},
											"type": {
												"type": "reference",
												"id": 4602,
												"qualifiedName": "React.ReactNode",
												"package": "@types/react",
												"name": "ReactNode"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.shift"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.shift"
									}
								},
								{
									"id": 4641,
									"name": "slice",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4642,
											"name": "slice",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Returns a copy of a section of an array.\nFor both start and end, a negative index can be used to indicate an offset from the end of the array.\nFor example, -2 refers to the second to last element of the array."
											},
											"parameters": [
												{
													"id": 4643,
													"name": "start",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "The beginning index of the specified portion of the array.\nIf start is undefined, then the slice begins at index 0."
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 4644,
													"name": "end",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "The end index of the specified portion of the array. This is exclusive of the element at the index 'end'.\nIf end is undefined, then the slice extends to the end of the array.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 4602,
													"qualifiedName": "React.ReactNode",
													"package": "@types/react",
													"name": "ReactNode"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.slice"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.slice"
									}
								},
								{
									"id": 4689,
									"name": "some",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4690,
											"name": "some",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Determines whether the specified callback function returns true for any element of an array."
											},
											"parameters": [
												{
													"id": 4691,
													"name": "predicate",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"shortText": "A function that accepts up to three arguments. The some method calls\nthe predicate function for each element in the array until the predicate returns a value\nwhich is coercible to the Boolean value true, or until the end of the array."
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 4692,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"signatures": [
																{
																	"id": 4693,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExternal": true
																	},
																	"parameters": [
																		{
																			"id": 4694,
																			"name": "value",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"id": 4602,
																				"qualifiedName": "React.ReactNode",
																				"package": "@types/react",
																				"name": "ReactNode"
																			}
																		},
																		{
																			"id": 4695,
																			"name": "index",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 4696,
																			"name": "array",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"id": 4602,
																					"qualifiedName": "React.ReactNode",
																					"package": "@types/react",
																					"name": "ReactNode"
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																}
															]
														}
													}
												},
												{
													"id": 4697,
													"name": "thisArg",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "An object to which the this keyword can refer in the predicate function.\nIf thisArg is omitted, undefined is used as the this value.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.some"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.some"
									}
								},
								{
									"id": 4645,
									"name": "sort",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4646,
											"name": "sort",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Sorts an array in place.\nThis method mutates the array and returns a reference to the same array."
											},
											"parameters": [
												{
													"id": 4647,
													"name": "compareFn",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Function used to determine the order of the elements. It is expected to return\na negative value if the first argument is less than the second argument, zero if they're equal, and a positive\nvalue otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\n```ts\n[11,2,22,1].sort((a, b) => a - b)\n```\n"
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 4648,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"signatures": [
																{
																	"id": 4649,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExternal": true
																	},
																	"parameters": [
																		{
																			"id": 4650,
																			"name": "a",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"id": 4602,
																				"qualifiedName": "React.ReactNode",
																				"package": "@types/react",
																				"name": "ReactNode"
																			}
																		},
																		{
																			"id": 4651,
																			"name": "b",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"id": 4602,
																				"qualifiedName": "React.ReactNode",
																				"package": "@types/react",
																				"name": "ReactNode"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4618,
												"qualifiedName": "React.ReactNodeArray",
												"package": "@types/react",
												"name": "ReactNodeArray"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.sort"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.sort"
									}
								},
								{
									"id": 4652,
									"name": "splice",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4653,
											"name": "splice",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.",
												"returns": "An array containing the elements that were deleted.\n"
											},
											"parameters": [
												{
													"id": 4654,
													"name": "start",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"shortText": "The zero-based location in the array from which to start removing elements."
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 4655,
													"name": "deleteCount",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "The number of elements to remove."
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 4602,
													"qualifiedName": "React.ReactNode",
													"package": "@types/react",
													"name": "ReactNode"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.splice"
											}
										},
										{
											"id": 4656,
											"name": "splice",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.",
												"returns": "An array containing the elements that were deleted.\n"
											},
											"parameters": [
												{
													"id": 4657,
													"name": "start",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"shortText": "The zero-based location in the array from which to start removing elements."
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 4658,
													"name": "deleteCount",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"shortText": "The number of elements to remove."
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 4659,
													"name": "items",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isRest": true
													},
													"comment": {
														"shortText": "Elements to insert into the array in place of the deleted elements."
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 4602,
															"qualifiedName": "React.ReactNode",
															"package": "@types/react",
															"name": "ReactNode"
														}
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 4602,
													"qualifiedName": "React.ReactNode",
													"package": "@types/react",
													"name": "ReactNode"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.splice"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.splice"
									}
								},
								{
									"id": 4622,
									"name": "toLocaleString",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4623,
											"name": "toLocaleString",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Returns a string representation of an array. The elements are converted to string using their toLocaleString methods."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.toLocaleString"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.toLocaleString"
									}
								},
								{
									"id": 4620,
									"name": "toString",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4621,
											"name": "toString",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Returns a string representation of an array."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.toString"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.toString"
									}
								},
								{
									"id": 4660,
									"name": "unshift",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4661,
											"name": "unshift",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Inserts new elements at the start of an array, and returns the new length of the array."
											},
											"parameters": [
												{
													"id": 4662,
													"name": "items",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isRest": true
													},
													"comment": {
														"shortText": "Elements to insert at the start of the array.\n"
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 4602,
															"qualifiedName": "React.ReactNode",
															"package": "@types/react",
															"name": "ReactNode"
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.unshift"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.unshift"
									}
								},
								{
									"id": 4832,
									"name": "values",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4833,
											"name": "values",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Returns an iterable of values in the array"
											},
											"type": {
												"type": "reference",
												"id": 4859,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4602,
														"qualifiedName": "React.ReactNode",
														"package": "@types/react",
														"name": "ReactNode"
													}
												],
												"qualifiedName": "IterableIterator",
												"package": "typescript",
												"name": "IterableIterator"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.values"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.values"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4619
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										4838,
										4840,
										4629,
										4823,
										4828,
										4671,
										4818,
										4717,
										4791,
										4809,
										4698,
										4834,
										4663,
										4634,
										4830,
										4667,
										4707,
										4624,
										4626,
										4735,
										4763,
										4637,
										4639,
										4641,
										4689,
										4645,
										4652,
										4622,
										4620,
										4660,
										4832
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 239,
									"character": 14
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "reference",
											"id": 4602,
											"qualifiedName": "React.ReactNode",
											"package": "@types/react",
											"name": "ReactNode"
										}
									],
									"qualifiedName": "Array",
									"package": "typescript",
									"name": "Array"
								}
							]
						},
						{
							"id": 4606,
							"name": "ReactPortal",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 4608,
									"name": "children",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 195,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"id": 4602,
										"qualifiedName": "React.ReactNode",
										"package": "@types/react",
										"name": "ReactNode"
									}
								},
								{
									"id": 4607,
									"name": "key",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 194,
											"character": 8
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 4850,
												"qualifiedName": "React.Key",
												"package": "@types/react",
												"name": "Key"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 4614,
										"name": "ReactElement.key"
									}
								},
								{
									"id": 4610,
									"name": "props",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 150,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4613,
										"name": "ReactElement.props"
									}
								},
								{
									"id": 4609,
									"name": "type",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 149,
											"character": 8
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 4851,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "React.JSXElementConstructor",
												"package": "@types/react",
												"name": "JSXElementConstructor"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4612,
										"name": "ReactElement.type"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4608,
										4607,
										4610,
										4609
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 193,
									"character": 14
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"id": 4611,
									"qualifiedName": "React.ReactElement",
									"package": "@types/react",
									"name": "ReactElement"
								}
							]
						},
						{
							"id": 5128,
							"name": "Validator",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 5129,
									"name": "[nominalTypeHack]",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/prop-types/index.d.ts",
											"line": 42,
											"character": 4
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 5130,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"children": [
												{
													"id": 5131,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/prop-types/index.d.ts",
															"line": 43,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"id": 5132,
														"qualifiedName": "Validator.T",
														"package": "@types/prop-types",
														"name": "T"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														5131
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5129
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/prop-types/index.d.ts",
									"line": 40,
									"character": 17
								}
							],
							"typeParameter": [
								{
									"id": 5132,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"signatures": [
								{
									"id": 5133,
									"name": "Validator",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 5134,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 5135,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"indexSignature": {
														"id": 5136,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {
															"isExternal": true
														},
														"parameters": [
															{
																"id": 5137,
																"name": "key",
																"kind": 32768,
																"flags": {
																	"isExternal": true
																},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											}
										},
										{
											"id": 5138,
											"name": "propName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5139,
											"name": "componentName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5140,
											"name": "location",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5141,
											"name": "propFullName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 4546,
												"qualifiedName": "Error",
												"package": "typescript",
												"name": "Error"
											}
										]
									}
								}
							]
						},
						{
							"id": 5100,
							"name": "Consumer",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 379,
									"character": 9
								}
							],
							"typeParameter": [
								{
									"id": 5101,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 5112,
								"typeArguments": [
									{
										"type": "reference",
										"id": 5118,
										"typeArguments": [
											{
												"type": "reference",
												"id": 5101,
												"qualifiedName": "T",
												"package": "@types/react",
												"name": "T"
											}
										],
										"qualifiedName": "React.ConsumerProps",
										"package": "@types/react",
										"name": "ConsumerProps"
									}
								],
								"qualifiedName": "React.ExoticComponent",
								"package": "@types/react",
								"name": "ExoticComponent"
							}
						},
						{
							"id": 5046,
							"name": "IteratorResult",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
									"line": 41,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 5047,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								},
								{
									"id": 5048,
									"name": "TReturn",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 5090,
										"typeArguments": [
											{
												"type": "reference",
												"id": 5047,
												"qualifiedName": "T",
												"package": "typescript",
												"name": "T"
											}
										],
										"qualifiedName": "IteratorYieldResult",
										"package": "typescript",
										"name": "IteratorYieldResult"
									},
									{
										"type": "reference",
										"id": 5094,
										"typeArguments": [
											{
												"type": "reference",
												"id": 5048,
												"qualifiedName": "TReturn",
												"package": "typescript",
												"name": "TReturn"
											}
										],
										"qualifiedName": "IteratorReturnResult",
										"package": "typescript",
										"name": "IteratorReturnResult"
									}
								]
							}
						},
						{
							"id": 4851,
							"name": "JSXElementConstructor",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 83,
									"character": 9
								}
							],
							"typeParameter": [
								{
									"id": 4858,
									"name": "P",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 4852,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/react/index.d.ts",
													"line": 84,
													"character": 11
												}
											],
											"signatures": [
												{
													"id": 4853,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 4854,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 4858,
																"qualifiedName": "P",
																"package": "@types/react",
																"name": "P"
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"id": 4611,
																"qualifiedName": "React.ReactElement",
																"package": "@types/react",
																"name": "ReactElement"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												}
											]
										}
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 4855,
											"name": "__type",
											"kind": 512,
											"kindString": "Constructor",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/react/index.d.ts",
													"line": 85,
													"character": 11
												}
											],
											"signatures": [
												{
													"id": 4856,
													"name": "__type",
													"kind": 16384,
													"kindString": "Constructor signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 4857,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 4858,
																"qualifiedName": "P",
																"package": "@types/react",
																"name": "P"
															}
														}
													],
													"type": {
														"type": "reference",
														"id": 4872,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4858,
																"qualifiedName": "P",
																"package": "@types/react",
																"name": "P"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"qualifiedName": "React.Component",
														"package": "@types/react",
														"name": "Component"
													}
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 4850,
							"name": "Key",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 132,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 5098,
							"name": "Provider",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 378,
									"character": 9
								}
							],
							"typeParameter": [
								{
									"id": 5099,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 5102,
								"typeArguments": [
									{
										"type": "reference",
										"id": 5108,
										"typeArguments": [
											{
												"type": "reference",
												"id": 5099,
												"qualifiedName": "T",
												"package": "@types/react",
												"name": "T"
											}
										],
										"qualifiedName": "React.ProviderProps",
										"package": "@types/react",
										"name": "ProviderProps"
									}
								],
								"qualifiedName": "React.ProviderExoticComponent",
								"package": "@types/react",
								"name": "ProviderExoticComponent"
							}
						},
						{
							"id": 4603,
							"name": "ReactChild",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 237,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 4611,
										"qualifiedName": "React.ReactElement",
										"package": "@types/react",
										"name": "ReactElement"
									},
									{
										"type": "reference",
										"id": 4617,
										"qualifiedName": "React.ReactText",
										"package": "@types/react",
										"name": "ReactText"
									}
								]
							}
						},
						{
							"id": 4604,
							"name": "ReactFragment",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 240,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 4605,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/react/index.d.ts",
													"line": 240,
													"character": 25
												}
											]
										}
									},
									{
										"type": "reference",
										"id": 4618,
										"qualifiedName": "React.ReactNodeArray",
										"package": "@types/react",
										"name": "ReactNodeArray"
									}
								]
							}
						},
						{
							"id": 5049,
							"name": "ReactInstance",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 441,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 4872,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"qualifiedName": "React.Component",
										"package": "@types/react",
										"name": "Component"
									},
									{
										"type": "reference",
										"qualifiedName": "Element",
										"package": "typescript",
										"name": "Element"
									}
								]
							}
						},
						{
							"id": 4602,
							"name": "ReactNode",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 241,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 4603,
										"qualifiedName": "React.ReactChild",
										"package": "@types/react",
										"name": "ReactChild"
									},
									{
										"type": "reference",
										"id": 4604,
										"qualifiedName": "React.ReactFragment",
										"package": "@types/react",
										"name": "ReactFragment"
									},
									{
										"type": "reference",
										"id": 4606,
										"qualifiedName": "React.ReactPortal",
										"package": "@types/react",
										"name": "ReactPortal"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 4617,
							"name": "ReactText",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 236,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 5044,
							"name": "Readonly",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Make all properties in T readonly"
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1545,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 5045,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"type": {
								"type": "mapped",
								"parameter": "P",
								"parameterType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"id": 5045,
										"qualifiedName": "T",
										"package": "typescript",
										"name": "T"
									}
								},
								"templateType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"qualifiedName": "P",
										"package": "typescript",
										"name": "P"
									},
									"objectType": {
										"type": "reference",
										"id": 5045,
										"qualifiedName": "T",
										"package": "typescript",
										"name": "T"
									}
								},
								"readonlyModifier": "+"
							}
						},
						{
							"id": 5126,
							"name": "Validator",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 2816,
									"character": 9
								}
							],
							"typeParameter": [
								{
									"id": 5127,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 5128,
								"typeArguments": [
									{
										"type": "reference",
										"id": 5127,
										"qualifiedName": "T",
										"package": "@types/react",
										"name": "T"
									}
								],
								"qualifiedName": "Validator",
								"package": "@types/prop-types",
								"name": "PropTypes.Validator"
							}
						},
						{
							"id": 5124,
							"name": "WeakValidationMap",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 2822,
									"character": 9
								}
							],
							"typeParameter": [
								{
									"id": 5125,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"type": {
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"id": 5125,
										"qualifiedName": "T",
										"package": "@types/react",
										"name": "T"
									}
								},
								"templateType": {
									"type": "conditional",
									"checkType": {
										"type": "literal",
										"value": null
									},
									"extendsType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"qualifiedName": "K",
											"package": "@types/react",
											"name": "K"
										},
										"objectType": {
											"type": "reference",
											"id": 5125,
											"qualifiedName": "T",
											"package": "@types/react",
											"name": "T"
										}
									},
									"trueType": {
										"type": "reference",
										"id": 5126,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"qualifiedName": "K",
															"package": "@types/react",
															"name": "K"
														},
														"objectType": {
															"type": "reference",
															"id": 5125,
															"qualifiedName": "T",
															"package": "@types/react",
															"name": "T"
														}
													},
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										],
										"qualifiedName": "React.Validator",
										"package": "@types/react",
										"name": "Validator"
									},
									"falseType": {
										"type": "conditional",
										"checkType": {
											"type": "intrinsic",
											"name": "undefined"
										},
										"extendsType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"qualifiedName": "K",
												"package": "@types/react",
												"name": "K"
											},
											"objectType": {
												"type": "reference",
												"id": 5125,
												"qualifiedName": "T",
												"package": "@types/react",
												"name": "T"
											}
										},
										"trueType": {
											"type": "reference",
											"id": 5126,
											"typeArguments": [
												{
													"type": "union",
													"types": [
														{
															"type": "indexedAccess",
															"indexType": {
																"type": "reference",
																"qualifiedName": "K",
																"package": "@types/react",
																"name": "K"
															},
															"objectType": {
																"type": "reference",
																"id": 5125,
																"qualifiedName": "T",
																"package": "@types/react",
																"name": "T"
															}
														},
														{
															"type": "literal",
															"value": null
														},
														{
															"type": "intrinsic",
															"name": "undefined"
														}
													]
												}
											],
											"qualifiedName": "React.Validator",
											"package": "@types/react",
											"name": "Validator"
										},
										"falseType": {
											"type": "reference",
											"id": 5126,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"qualifiedName": "K",
														"package": "@types/react",
														"name": "K"
													},
													"objectType": {
														"type": "reference",
														"id": 5125,
														"qualifiedName": "T",
														"package": "@types/react",
														"name": "T"
													}
												}
											],
											"qualifiedName": "React.Validator",
											"package": "@types/react",
											"name": "Validator"
										}
									}
								},
								"optionalModifier": "+"
							}
						}
					],
					"groups": [
						{
							"title": "Classes",
							"kind": 128,
							"children": [
								4872
							]
						},
						{
							"title": "Interfaces",
							"kind": 256,
							"children": [
								4991,
								4966,
								5118,
								5039,
								5065,
								5050,
								5112,
								4859,
								4978,
								5094,
								5090,
								5052,
								5102,
								5108,
								4611,
								4618,
								4606,
								5128
							]
						},
						{
							"title": "Type aliases",
							"kind": 4194304,
							"children": [
								5100,
								5046,
								4851,
								4850,
								5098,
								4603,
								4604,
								5049,
								4602,
								4617,
								5044,
								5126,
								5124
							]
						}
					]
				},
				{
					"id": 2197,
					"name": "AsyncChoices",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Default implementation for [AsyncChoicesInterface](doc:AsyncChoicesInterface)",
						"text": "All options can be customised via `options`.\n\nYou must provide `list` and `retrieve` - everything else can be optional with the following restrictions:\n\n* `getLabel` - this is optional if items returned by `list` and `retrieve` implement [NodeLabeled](doc:NodeLabeled) otherwise it must be provided\n* `getValue` - this is optional if items returned by `list` and `retrieve` implement [Identifiable](doc:Identifiable) otherwise it must be provided\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Async Choices\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 2198,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
									"line": 179,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2199,
									"name": "new AsyncChoices",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2200,
											"name": "ItemType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										},
										{
											"id": 2201,
											"name": "ValueType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 2202,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2194,
												"typeArguments": [
													{
														"type": "reference",
														"id": 2200,
														"name": "ItemType"
													},
													{
														"type": "reference",
														"id": 2201,
														"name": "ValueType"
													}
												],
												"name": "AsyncChoicesOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2197,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2200,
												"name": "ItemType"
											},
											{
												"type": "reference",
												"id": 2201,
												"name": "ValueType"
											}
										],
										"name": "AsyncChoices"
									}
								}
							]
						},
						{
							"id": 2204,
							"name": "multiple",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "If true then multiple values can be selected. When this is true\nretrieve() will be passed and return an array rather than a single value."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
									"line": 177,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2162,
								"name": "AsyncChoicesInterface.multiple"
							}
						},
						{
							"id": 2203,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
									"line": 176,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2194,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2200,
										"name": "ItemType"
									},
									{
										"type": "reference",
										"id": 2201,
										"name": "ValueType"
									}
								],
								"name": "AsyncChoicesOptions"
							}
						},
						{
							"id": 2218,
							"name": "getChoices",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
									"line": 198,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2219,
									"name": "getChoices",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Generate the list of choices. This can return an array of single choices or grouped choices.",
										"text": "A grouped choice is a 2 element Array with a label and a list of choices.\n",
										"returns": "Either an array of single choices or grouped choices.\n"
									},
									"parameters": [
										{
											"id": 2220,
											"name": "items",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2200,
													"name": "ItemType"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"id": 2153,
													"typeArguments": [
														{
															"type": "reference",
															"id": 2201,
															"name": "ValueType"
														}
													],
													"name": "Choice"
												},
												{
													"type": "reference",
													"id": 2159,
													"typeArguments": [
														{
															"type": "reference",
															"id": 2201,
															"name": "ValueType"
														}
													],
													"name": "ChoicesGrouped"
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"id": 2177,
										"name": "AsyncChoicesInterface.getChoices"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 2176,
								"name": "AsyncChoicesInterface.getChoices"
							}
						},
						{
							"id": 2221,
							"name": "getLabel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
									"line": 207,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2222,
									"name": "getLabel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get a label for an item"
									},
									"parameters": [
										{
											"id": 2223,
											"name": "item",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2200,
												"name": "ItemType"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 4602,
										"qualifiedName": "React.ReactNode",
										"package": "@types/react",
										"name": "ReactNode"
									},
									"implementationOf": {
										"type": "reference",
										"id": 2180,
										"name": "AsyncChoicesInterface.getLabel"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 2179,
								"name": "AsyncChoicesInterface.getLabel"
							}
						},
						{
							"id": 2224,
							"name": "getMissingLabel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
									"line": 218,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2225,
									"name": "getMissingLabel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return label to use when an item can't be found. This can be used by widgets to control\nwhat is rendered when an item for a value cannot be found (eg. when it's deleted or\nwhen it's loading). The exact details of how this is used depend on the widget."
									},
									"parameters": [
										{
											"id": 2226,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2201,
												"name": "ValueType"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 4602,
										"qualifiedName": "React.ReactNode",
										"package": "@types/react",
										"name": "ReactNode"
									},
									"implementationOf": {
										"type": "reference",
										"id": 2183,
										"name": "AsyncChoicesInterface.getMissingLabel"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 2182,
								"name": "AsyncChoicesInterface.getMissingLabel"
							}
						},
						{
							"id": 2227,
							"name": "getValue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
									"line": 224,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2228,
									"name": "getValue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the value to use for an item. The value should be unique and is what's used when a\nchoice is selected (eg. it's the value that would be saved to a database)."
									},
									"parameters": [
										{
											"id": 2229,
											"name": "item",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2200,
												"name": "ItemType"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2201,
										"name": "ValueType"
									},
									"implementationOf": {
										"type": "reference",
										"id": 2186,
										"name": "AsyncChoicesInterface.getValue"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 2185,
								"name": "AsyncChoicesInterface.getValue"
							}
						},
						{
							"id": 2208,
							"name": "list",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
									"line": 186,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2209,
									"name": "list",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Function to resolve a list of choices based on the provided params.",
										"text": "What this function is passed depends on the implementation but when used with\n[useAsyncChoices](doc:useAsyncChoices) it will be passed `query` (the query object eg. to\nfilter results with), `paginator` (the current paginator if any) and `listOptions` (any\nadditional options passed on the `listOptions` prop to `useAsyncChoices`).\nOfficial presto widgets all use `useAsyncChoices` and so will use these parameters.\n"
									},
									"parameters": [
										{
											"id": 2210,
											"name": "params",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4543,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2200,
													"name": "ItemType"
												}
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									},
									"implementationOf": {
										"type": "reference",
										"id": 2167,
										"name": "AsyncChoicesInterface.list"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 2166,
								"name": "AsyncChoicesInterface.list"
							}
						},
						{
							"id": 2214,
							"name": "retrieve",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
									"line": 192,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2215,
									"name": "retrieve",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Function to resolve specific values. This is used to know how to render the label for a value(s).",
										"text": "The first parameter is the value to retrieve (will be an array when `multiple` is true).\n\n`deps` is the value returned by `useRetrieveProps`.\n"
									},
									"parameters": [
										{
											"id": 2216,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 2201,
														"name": "ValueType"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 2201,
															"name": "ValueType"
														}
													}
												]
											}
										},
										{
											"id": 2217,
											"name": "deps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "conditional",
												"checkType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"id": 2201,
															"name": "ValueType"
														},
														{
															"type": "array",
															"elementType": {
																"type": "reference",
																"id": 2201,
																"name": "ValueType"
															}
														}
													]
												},
												"extendsType": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"id": 2201,
														"name": "ValueType"
													}
												},
												"trueType": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"id": 2200,
														"name": "ItemType"
													}
												},
												"falseType": {
													"type": "reference",
													"id": 2200,
													"name": "ItemType"
												}
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									},
									"implementationOf": {
										"type": "reference",
										"id": 2173,
										"name": "AsyncChoicesInterface.retrieve"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 2172,
								"name": "AsyncChoicesInterface.retrieve"
							}
						},
						{
							"id": 2205,
							"name": "useListProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
									"line": 183,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2206,
									"name": "useListProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Hook that returns any extra props to pass through to `list` in components/hooks that\nconsume this (eg. [useAsyncChoices](doc:useAsyncChoices)). This is useful to\nstore state for things like pagination.",
										"text": "What this function is passed depends on the implementation but when used with\n[useAsyncChoices](doc:useAsyncChoices) it will be `query` (the query object eg. to\nfilter results with) and `listOptions` (any additional options passed on the `listOptions`\nprop to `useAsyncChoices`).\nOfficial presto widgets all use `useAsyncChoices` and so will use these parameters.\n"
									},
									"parameters": [
										{
											"id": 2207,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"implementationOf": {
										"type": "reference",
										"id": 2164,
										"name": "AsyncChoicesInterface.useListProps"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 2163,
								"name": "AsyncChoicesInterface.useListProps"
							}
						},
						{
							"id": 2230,
							"name": "useResolveItems",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
									"line": 235,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2231,
									"name": "useResolveItems",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Resolve the specific instance of an item to use. By default this should just return `item`\nbut can be used to resolve a specific instance of a class from a cache for example."
									},
									"typeParameter": [
										{
											"id": 2232,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 2233,
											"name": "items",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2232,
												"name": "T"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2232,
										"name": "T"
									},
									"implementationOf": {
										"type": "reference",
										"id": 2189,
										"name": "AsyncChoicesInterface.useResolveItems"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 2188,
								"name": "AsyncChoicesInterface.useResolveItems"
							}
						},
						{
							"id": 2211,
							"name": "useRetrieveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
									"line": 189,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2212,
									"name": "useRetrieveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Hook that returns props to pass through to `retrieve` in components/hooks that consume this (eg. [useAsyncChoices](doc:useAsyncChoices).\nThis is useful for things like hooking into an existing cache (eg. [useViewModelCache](doc:useViewModelCache)).\nThe value returned here is passed as the second parameter to `retrieve`. In addition the `existingValues` key is\npassed through to `useAsyncValue` as the list of items it can resolve existing values from.",
										"text": "What this function is passed depends on the implementation but when used with\n[useAsyncChoices](doc:useAsyncChoices) it will be passed `id` if there's a current value\nand it's not an array, `ids` if there's a current value and it is an array, `existingValues` which is\nthe values returned by `list` (may be null if `list` not yet called) and `retrieveOptions`\n(any additional options passed on the `retrieveOptions` prop to `useAsyncChoices`).\nOfficial presto widgets all use `useAsyncChoices` and so will use these parameters.\n"
									},
									"parameters": [
										{
											"id": 2213,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"implementationOf": {
										"type": "reference",
										"id": 2170,
										"name": "AsyncChoicesInterface.useRetrieveProps"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 2169,
								"name": "AsyncChoicesInterface.useRetrieveProps"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2198
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2204,
								2203
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2218,
								2221,
								2224,
								2227,
								2208,
								2214,
								2205,
								2230,
								2211
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
							"line": 175,
							"character": 6
						}
					],
					"typeParameter": [
						{
							"id": 2234,
							"name": "ItemType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 2235,
							"name": "ValueType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 2161,
							"typeArguments": [
								{
									"type": "reference",
									"id": 2200,
									"name": "ItemType"
								},
								{
									"type": "reference",
									"id": 2201,
									"name": "ValueType"
								}
							],
							"name": "AsyncChoicesInterface"
						}
					]
				},
				{
					"id": 2161,
					"name": "AsyncChoicesInterface",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Interface for asynchronous choices.",
						"text": "A choice is a `value` that identifies the item (eg. an id) and a `label` that\ndescribes the item and is shown to users (eg. the name).\n\nWhen `multiple` is true multiple values can be selected.\n\nTo define async choices two things are required:\n\n1) A function to resolve existing value(s). This is used when viewing existing\n   value(s) and need label(s) to show (eg. when displaying a choice on a detail\n   view or rendering the value selected on a select widget).\n2) A function to list & filter the available  choices. This is used when selecting\n   a value (eg. the options shown in a select widget).\n\nBoth of these functions may need to store state (eg. pagination for a listing)\nor access things from context (eg. read values from a cache). This can be done\nvia two hooks - `useListProps` and `useRetrieveProps`. This functions should be\ncalled from a component or hook that deals with async choices when calling\n`list` and `retrieve` respectively. The return value from the hook is passed to\nthe corresponding function.\n\nFor a default implementation see [AsyncChoices](doc:AsyncChoices)\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Async Choices\n"
							}
						]
					},
					"children": [
						{
							"id": 2162,
							"name": "multiple",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "If true then multiple values can be selected. When this is true\nretrieve() will be passed and return an array rather than a single value."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
									"line": 49,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2176,
							"name": "getChoices",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 2177,
									"name": "getChoices",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Generate the list of choices. This can return an array of single choices or grouped choices.",
										"text": "A grouped choice is a 2 element Array with a label and a list of choices.\n",
										"returns": "Either an array of single choices or grouped choices.\n"
									},
									"parameters": [
										{
											"id": 2178,
											"name": "items",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2192,
													"name": "ItemType"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"id": 2153,
													"typeArguments": [
														{
															"type": "reference",
															"id": 2193,
															"name": "ValueType"
														}
													],
													"name": "Choice"
												},
												{
													"type": "reference",
													"id": 2159,
													"typeArguments": [
														{
															"type": "reference",
															"id": 2193,
															"name": "ValueType"
														}
													],
													"name": "ChoicesGrouped"
												}
											]
										}
									}
								}
							]
						},
						{
							"id": 2179,
							"name": "getLabel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 2180,
									"name": "getLabel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get a label for an item"
									},
									"parameters": [
										{
											"id": 2181,
											"name": "item",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2192,
												"name": "ItemType"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 4602,
										"qualifiedName": "React.ReactNode",
										"package": "@types/react",
										"name": "ReactNode"
									}
								}
							]
						},
						{
							"id": 2182,
							"name": "getMissingLabel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 2183,
									"name": "getMissingLabel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return label to use when an item can't be found. This can be used by widgets to control\nwhat is rendered when an item for a value cannot be found (eg. when it's deleted or\nwhen it's loading). The exact details of how this is used depend on the widget."
									},
									"parameters": [
										{
											"id": 2184,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2193,
												"name": "ValueType"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 4602,
										"qualifiedName": "React.ReactNode",
										"package": "@types/react",
										"name": "ReactNode"
									}
								}
							]
						},
						{
							"id": 2185,
							"name": "getValue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 2186,
									"name": "getValue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the value to use for an item. The value should be unique and is what's used when a\nchoice is selected (eg. it's the value that would be saved to a database)."
									},
									"parameters": [
										{
											"id": 2187,
											"name": "item",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2192,
												"name": "ItemType"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2193,
										"name": "ValueType"
									}
								}
							]
						},
						{
							"id": 2166,
							"name": "list",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 2167,
									"name": "list",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Function to resolve a list of choices based on the provided params.",
										"text": "What this function is passed depends on the implementation but when used with\n[useAsyncChoices](doc:useAsyncChoices) it will be passed `query` (the query object eg. to\nfilter results with), `paginator` (the current paginator if any) and `listOptions` (any\nadditional options passed on the `listOptions` prop to `useAsyncChoices`).\nOfficial presto widgets all use `useAsyncChoices` and so will use these parameters.\n"
									},
									"parameters": [
										{
											"id": 2168,
											"name": "params",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4543,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2192,
													"name": "ItemType"
												}
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2172,
							"name": "retrieve",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 2173,
									"name": "retrieve",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Function to resolve specific values. This is used to know how to render the label for a value(s).",
										"text": "The first parameter is the value to retrieve (will be an array when `multiple` is true).\n\n`deps` is the value returned by `useRetrieveProps`.\n"
									},
									"parameters": [
										{
											"id": 2174,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 2193,
														"name": "ValueType"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 2193,
															"name": "ValueType"
														}
													}
												]
											}
										},
										{
											"id": 2175,
											"name": "deps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "conditional",
												"checkType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"id": 2193,
															"name": "ValueType"
														},
														{
															"type": "array",
															"elementType": {
																"type": "reference",
																"id": 2193,
																"name": "ValueType"
															}
														}
													]
												},
												"extendsType": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"id": 2193,
														"name": "ValueType"
													}
												},
												"trueType": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"id": 2192,
														"name": "ItemType"
													}
												},
												"falseType": {
													"type": "reference",
													"id": 2192,
													"name": "ItemType"
												}
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2163,
							"name": "useListProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 2164,
									"name": "useListProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Hook that returns any extra props to pass through to `list` in components/hooks that\nconsume this (eg. [useAsyncChoices](doc:useAsyncChoices)). This is useful to\nstore state for things like pagination.",
										"text": "What this function is passed depends on the implementation but when used with\n[useAsyncChoices](doc:useAsyncChoices) it will be `query` (the query object eg. to\nfilter results with) and `listOptions` (any additional options passed on the `listOptions`\nprop to `useAsyncChoices`).\nOfficial presto widgets all use `useAsyncChoices` and so will use these parameters.\n"
									},
									"parameters": [
										{
											"id": 2165,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 2188,
							"name": "useResolveItems",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 2189,
									"name": "useResolveItems",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Resolve the specific instance of an item to use. By default this should just return `item`\nbut can be used to resolve a specific instance of a class from a cache for example."
									},
									"typeParameter": [
										{
											"id": 2190,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 2191,
											"name": "item",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2190,
												"name": "T"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2190,
										"name": "T"
									}
								}
							]
						},
						{
							"id": 2169,
							"name": "useRetrieveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 2170,
									"name": "useRetrieveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Hook that returns props to pass through to `retrieve` in components/hooks that consume this (eg. [useAsyncChoices](doc:useAsyncChoices).\nThis is useful for things like hooking into an existing cache (eg. [useViewModelCache](doc:useViewModelCache)).\nThe value returned here is passed as the second parameter to `retrieve`. In addition the `existingValues` key is\npassed through to `useAsyncValue` as the list of items it can resolve existing values from.",
										"text": "What this function is passed depends on the implementation but when used with\n[useAsyncChoices](doc:useAsyncChoices) it will be passed `id` if there's a current value\nand it's not an array, `ids` if there's a current value and it is an array, `existingValues` which is\nthe values returned by `list` (may be null if `list` not yet called) and `retrieveOptions`\n(any additional options passed on the `retrieveOptions` prop to `useAsyncChoices`).\nOfficial presto widgets all use `useAsyncChoices` and so will use these parameters.\n"
									},
									"parameters": [
										{
											"id": 2171,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2162
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2176,
								2179,
								2182,
								2185,
								2166,
								2172,
								2163,
								2188,
								2169
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
							"line": 44,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 2192,
							"name": "ItemType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 2193,
							"name": "ValueType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"id": 2197,
							"name": "AsyncChoices"
						}
					]
				},
				{
					"id": 2153,
					"name": "Choice",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "A single choice"
					},
					"children": [
						{
							"id": 2155,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
									"line": 8,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 4602,
								"qualifiedName": "React.ReactNode",
								"package": "@types/react",
								"name": "ReactNode"
							}
						},
						{
							"id": 2154,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
									"line": 7,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2156,
								"name": "T"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2155,
								2154
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
							"line": 6,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 2156,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"indexSignature": {
						"id": 2157,
						"name": "__index",
						"kind": 8192,
						"kindString": "Index signature",
						"flags": {},
						"parameters": [
							{
								"id": 2158,
								"name": "x",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "any"
						}
					}
				},
				{
					"id": 2194,
					"name": "AsyncChoicesOptions",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "expand-properties",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
							"line": 137,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 2195,
							"name": "ItemType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 2196,
							"name": "ValueType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"id": 4496,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2161,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2195,
												"name": "ItemType"
											},
											{
												"type": "reference",
												"id": 2196,
												"name": "ValueType"
											}
										],
										"name": "AsyncChoicesInterface"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "getChoices"
											},
											{
												"type": "literal",
												"value": "useListProps"
											},
											{
												"type": "literal",
												"value": "useRetrieveProps"
											},
											{
												"type": "literal",
												"value": "getMissingLabel"
											},
											{
												"type": "literal",
												"value": "getLabel"
											},
											{
												"type": "literal",
												"value": "getValue"
											},
											{
												"type": "literal",
												"value": "useResolveItems"
											},
											{
												"type": "literal",
												"value": "multiple"
											}
										]
									}
								],
								"qualifiedName": "Omit",
								"package": "typescript",
								"name": "Omit"
							},
							{
								"type": "reference",
								"id": 4593,
								"typeArguments": [
									{
										"type": "reference",
										"id": 4510,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2161,
												"typeArguments": [
													{
														"type": "reference",
														"id": 2195,
														"name": "ItemType"
													},
													{
														"type": "reference",
														"id": 2196,
														"name": "ValueType"
													}
												],
												"name": "AsyncChoicesInterface"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "getChoices"
													},
													{
														"type": "literal",
														"value": "useListProps"
													},
													{
														"type": "literal",
														"value": "useRetrieveProps"
													},
													{
														"type": "literal",
														"value": "getMissingLabel"
													},
													{
														"type": "literal",
														"value": "getLabel"
													},
													{
														"type": "literal",
														"value": "getValue"
													},
													{
														"type": "literal",
														"value": "useResolveItems"
													},
													{
														"type": "literal",
														"value": "multiple"
													}
												]
											}
										],
										"qualifiedName": "Pick",
										"package": "typescript",
										"name": "Pick"
									}
								],
								"qualifiedName": "Partial",
								"package": "typescript",
								"name": "Partial"
							}
						]
					}
				},
				{
					"id": 2159,
					"name": "ChoicesGrouped",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Grouped choices - a label for the grouping and an array of choices for that label"
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
							"line": 14,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 2160,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 2153,
									"typeArguments": [
										{
											"type": "reference",
											"id": 2160,
											"name": "T"
										}
									],
									"name": "Choice"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"kind": 4,
					"children": [
						4601
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2197
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2161,
						2153
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						2194,
						2159
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2236,
			"name": "fields/BooleanField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2237,
					"name": "BooleanField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Field for Boolean type values. Null count as False for this field.",
						"text": "Follows standard javascript Truthy and Falsy definition.\n\nSee also: [NullableBooleanField](doc:NullableBooleanField).\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 2239,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2240,
									"name": "new BooleanField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2241,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2898,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "FieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2237,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3587,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3586,
								"name": "default.constructor"
							}
						},
						{
							"id": 2245,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3592,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2246,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3593,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2263,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2264,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2265,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "boolean"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3610,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2260,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2161,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3607,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2255,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3602,
								"name": "default.blank"
							}
						},
						{
							"id": 2256,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3603,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2259,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3606,
								"name": "default.choices"
							}
						},
						{
							"id": 2258,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3605,
								"name": "default.helpText"
							}
						},
						{
							"id": 2257,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3604,
								"name": "default.label"
							}
						},
						{
							"id": 2261,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3608,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2262,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3609,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2238,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/BooleanField.ts",
									"line": 14,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'BooleanField'",
							"overwrites": {
								"type": "reference",
								"id": 3585,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2290,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2291,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2067,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NullableBooleanField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3637,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2276,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2277,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2970,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NullableBooleanField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3623,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2286,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2287,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NullableBooleanField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3633,
								"name": "default.isBound"
							}
						},
						{
							"id": 2247,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2248,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NullableBooleanField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2249,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2250,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NullableBooleanField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3594,
								"name": "default.model"
							}
						},
						{
							"id": 2251,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2252,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NullableBooleanField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2253,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2254,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NullableBooleanField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3598,
								"name": "default.name"
							}
						},
						{
							"id": 2288,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2289,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NullableBooleanField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3635,
								"name": "default.value"
							}
						},
						{
							"id": 2284,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2285,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2966,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3632,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3631,
								"name": "default.clone"
							}
						},
						{
							"id": 2292,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2293,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2294,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3640,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3639,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2266,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2267,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2268,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3614,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3613,
								"name": "default.format"
							}
						},
						{
							"id": 2280,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2281,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2282,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 2283,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3628,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3627,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2269,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2270,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2271,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3617,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3616,
								"name": "default.normalize"
							}
						},
						{
							"id": 2242,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/BooleanField.ts",
									"line": 15,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2243,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2244,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"overwrites": {
										"type": "reference",
										"id": 3590,
										"name": "default.parse"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3589,
								"name": "default.parse"
							}
						},
						{
							"id": 2272,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2273,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2274,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2275,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3620,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3619,
								"name": "default.toJS"
							}
						},
						{
							"id": 2278,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2279,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3626,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3625,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2239
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2245,
								2246,
								2263,
								2260,
								2255,
								2256,
								2259,
								2258,
								2257,
								2261,
								2262,
								2238
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2290,
								2276,
								2286,
								2247,
								2251,
								2288
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2284,
								2292,
								2266,
								2280,
								2269,
								2242,
								2272,
								2278
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/BooleanField.ts",
							"line": 13,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3584,
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2237
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/BooleanField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2295,
			"name": "fields/CharField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 5143,
					"name": "<internal>",
					"kind": 4,
					"kindString": "Namespace",
					"flags": {},
					"children": [
						{
							"id": 5144,
							"name": "CharFieldProps",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "expand-properties",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 6,
									"character": 5
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 2898,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "FieldProps"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 5145,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 5146,
													"name": "maxLength",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
															"line": 6,
															"character": 45
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														5146
													]
												}
											],
											"sources": [
												{
													"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
													"line": 6,
													"character": 43
												}
											]
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Type aliases",
							"kind": 4194304,
							"children": [
								5144
							]
						}
					]
				},
				{
					"id": 2296,
					"name": "CharField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Base class for string fields",
						"text": "Other char fields (EmailField, URLField...) will extend this.\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 2298,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 20,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2299,
									"name": "new CharField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2300,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5144,
												"name": "CharFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2296,
										"name": "default"
									},
									"overwrites": {
										"type": "reference",
										"id": 2969,
										"name": "default.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 2968,
								"name": "default.constructor"
							}
						},
						{
							"id": 2302,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2974,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2303,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2975,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2320,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2321,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2322,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2994,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2317,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2161,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2991,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2312,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2986,
								"name": "default.blank"
							}
						},
						{
							"id": 2313,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2987,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2316,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2990,
								"name": "default.choices"
							}
						},
						{
							"id": 2315,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2989,
								"name": "default.helpText"
							}
						},
						{
							"id": 2314,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2988,
								"name": "default.label"
							}
						},
						{
							"id": 2301,
							"name": "maxLength",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 18,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2318,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2992,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2319,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2993,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2297,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 17,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'CharField'",
							"overwrites": {
								"type": "reference",
								"id": 2967,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2350,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2351,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2067,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3024,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2336,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2337,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2970,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3010,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2346,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2347,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3020,
								"name": "default.isBound"
							}
						},
						{
							"id": 2304,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2305,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2306,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2307,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2977,
								"name": "default.model"
							}
						},
						{
							"id": 2308,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2309,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2310,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2311,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2982,
								"name": "default.name"
							}
						},
						{
							"id": 2348,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2349,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3022,
								"name": "default.value"
							}
						},
						{
							"id": 2344,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2345,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2966,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3019,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3018,
								"name": "default.clone"
							}
						},
						{
							"id": 2352,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2353,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2354,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3027,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3026,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2323,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2324,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2325,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2998,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2997,
								"name": "default.format"
							}
						},
						{
							"id": 2340,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2341,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2342,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2343,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3015,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3014,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2329,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2330,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2331,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3004,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3003,
								"name": "default.normalize"
							}
						},
						{
							"id": 2326,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2327,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2328,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3001,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3000,
								"name": "default.parse"
							}
						},
						{
							"id": 2332,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2333,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2334,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2335,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3007,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3006,
								"name": "default.toJS"
							}
						},
						{
							"id": 2338,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2339,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3013,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3012,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2298
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2302,
								2303,
								2320,
								2317,
								2312,
								2313,
								2316,
								2315,
								2314,
								2301,
								2318,
								2319,
								2297
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2350,
								2336,
								2346,
								2304,
								2308,
								2348
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2344,
								2352,
								2323,
								2340,
								2329,
								2326,
								2332,
								2338
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
							"line": 16,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2966,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "string"
								}
							],
							"name": "default"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 2778,
							"name": "DurationField"
						},
						{
							"type": "reference",
							"id": 2838,
							"name": "EmailField"
						},
						{
							"type": "reference",
							"id": 3213,
							"name": "IPAddressField"
						},
						{
							"type": "reference",
							"id": 3457,
							"name": "JsonField"
						},
						{
							"type": "reference",
							"id": 3713,
							"name": "PasswordField"
						},
						{
							"type": "reference",
							"id": 4087,
							"name": "SlugField"
						},
						{
							"type": "reference",
							"id": 4147,
							"name": "TextField"
						},
						{
							"type": "reference",
							"id": 4266,
							"name": "URLField"
						},
						{
							"type": "reference",
							"id": 4326,
							"name": "UUIDField"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"kind": 4,
					"children": [
						5143
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2296
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2355,
			"name": "fields/CurrencyField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 5147,
					"name": "<internal>",
					"kind": 4,
					"kindString": "Namespace",
					"flags": {},
					"children": [
						{
							"id": 5148,
							"name": "DecimalFieldProps",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "expand-properties",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalField.ts",
									"line": 6,
									"character": 5
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 3643,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "NumberFieldProps"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 5149,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 5150,
													"name": "decimalPlaces",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalField.ts",
															"line": 7,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														5150
													]
												}
											],
											"sources": [
												{
													"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalField.ts",
													"line": 6,
													"character": 52
												}
											]
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Type aliases",
							"kind": 4194304,
							"children": [
								5148
							]
						}
					]
				},
				{
					"id": 2356,
					"name": "CurrencyField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Currency Field to store currency values.",
						"text": "Extends DecimalField for precision, TODO - should store additional info on currency types (eg, USD, JPY).\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 2358,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2359,
									"name": "new CurrencyField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2360,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5148,
												"name": "DecimalFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2356,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2659,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2658,
								"name": "default.constructor"
							}
						},
						{
							"id": 2367,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2667,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2368,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2668,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2385,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2386,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2387,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2685,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2382,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2161,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2682,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2377,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2677,
								"name": "default.blank"
							}
						},
						{
							"id": 2378,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2678,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2381,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2681,
								"name": "default.choices"
							}
						},
						{
							"id": 2361,
							"name": "decimalPlaces",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalField.ts",
									"line": 24,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2661,
								"name": "default.decimalPlaces"
							}
						},
						{
							"id": 2380,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2680,
								"name": "default.helpText"
							}
						},
						{
							"id": 2379,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2679,
								"name": "default.label"
							}
						},
						{
							"id": 2366,
							"name": "maxValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
									"line": 25,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2666,
								"name": "default.maxValue"
							}
						},
						{
							"id": 2365,
							"name": "minValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
									"line": 24,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2665,
								"name": "default.minValue"
							}
						},
						{
							"id": 2383,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2683,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2384,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2684,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2357,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CurrencyField.ts",
									"line": 12,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'CurrencyField'",
							"overwrites": {
								"type": "reference",
								"id": 2657,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2412,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2413,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2067,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DecimalField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2712,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2398,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2399,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2970,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DecimalField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2698,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2408,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2409,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DecimalField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2708,
								"name": "default.isBound"
							}
						},
						{
							"id": 2369,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2370,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DecimalField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2371,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2372,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DecimalField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2669,
								"name": "default.model"
							}
						},
						{
							"id": 2373,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2374,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DecimalField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2375,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2376,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DecimalField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2673,
								"name": "default.name"
							}
						},
						{
							"id": 2410,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2411,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DecimalField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2710,
								"name": "default.value"
							}
						},
						{
							"id": 2406,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2407,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2966,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2707,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2706,
								"name": "default.clone"
							}
						},
						{
							"id": 2414,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2415,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2416,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2715,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2714,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2388,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2389,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2390,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2689,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2688,
								"name": "default.format"
							}
						},
						{
							"id": 2402,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2403,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2404,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2405,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2703,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2702,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2391,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2392,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2393,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2692,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2691,
								"name": "default.normalize"
							}
						},
						{
							"id": 2362,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalField.ts",
									"line": 41,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2363,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2364,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2663,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2662,
								"name": "default.parse"
							}
						},
						{
							"id": 2394,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2395,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2396,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2397,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2695,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2694,
								"name": "default.toJS"
							}
						},
						{
							"id": 2400,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2401,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2701,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2700,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2358
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2367,
								2368,
								2385,
								2382,
								2377,
								2378,
								2381,
								2361,
								2380,
								2379,
								2366,
								2365,
								2383,
								2384,
								2357
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2412,
								2398,
								2408,
								2369,
								2373,
								2410
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2406,
								2414,
								2388,
								2402,
								2391,
								2362,
								2394,
								2400
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/CurrencyField.ts",
							"line": 11,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2656,
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"kind": 4,
					"children": [
						5147
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2356
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/CurrencyField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2417,
			"name": "fields/DateField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2418,
					"name": "DateField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"originalName": "default",
					"children": [
						{
							"id": 2420,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2421,
									"name": "new DateField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2422,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2898,
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "Date",
														"package": "typescript",
														"name": "Date"
													},
													{
														"type": "reference",
														"qualifiedName": "Date",
														"package": "typescript",
														"name": "Date"
													}
												],
												"name": "FieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2418,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2969,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2968,
								"name": "default.constructor"
							}
						},
						{
							"id": 2429,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Date",
								"package": "typescript",
								"name": "Date"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2974,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2430,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2975,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2447,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2448,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2449,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"qualifiedName": "Date",
																"package": "typescript",
																"name": "Date"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"qualifiedName": "Date",
																				"package": "typescript",
																				"name": "Date"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2994,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2444,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2161,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2991,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2439,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2986,
								"name": "default.blank"
							}
						},
						{
							"id": 2440,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2987,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2443,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2990,
								"name": "default.choices"
							}
						},
						{
							"id": 2442,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2989,
								"name": "default.helpText"
							}
						},
						{
							"id": 2441,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2988,
								"name": "default.label"
							}
						},
						{
							"id": 2445,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2992,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2446,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2993,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2419,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateField.ts",
									"line": 17,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DateField'",
							"overwrites": {
								"type": "reference",
								"id": 2967,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2471,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2472,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2067,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3024,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2457,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2458,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2970,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3010,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2467,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2468,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3020,
								"name": "default.isBound"
							}
						},
						{
							"id": 2431,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2432,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2433,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2434,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2977,
								"name": "default.model"
							}
						},
						{
							"id": 2435,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2436,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2437,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2438,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2982,
								"name": "default.name"
							}
						},
						{
							"id": 2469,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2470,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3022,
								"name": "default.value"
							}
						},
						{
							"id": 2465,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2466,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2966,
										"typeArguments": [
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3019,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3018,
								"name": "default.clone"
							}
						},
						{
							"id": 2473,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2474,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2475,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3027,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3026,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2450,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2451,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2452,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2998,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2997,
								"name": "default.format"
							}
						},
						{
							"id": 2461,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2462,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2463,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										},
										{
											"id": 2464,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3015,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3014,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2426,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateField.ts",
									"line": 25,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2427,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2428,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"qualifiedName": "Date",
														"package": "typescript",
														"name": "Date"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 3004,
										"name": "default.normalize"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3003,
								"name": "default.normalize"
							}
						},
						{
							"id": 2423,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateField.ts",
									"line": 18,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2424,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2425,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 3001,
										"name": "default.parse"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3000,
								"name": "default.parse"
							}
						},
						{
							"id": 2453,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2454,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2455,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2456,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3007,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3006,
								"name": "default.toJS"
							}
						},
						{
							"id": 2459,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2460,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3013,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3012,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2420
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2429,
								2430,
								2447,
								2444,
								2439,
								2440,
								2443,
								2442,
								2441,
								2445,
								2446,
								2419
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2471,
								2457,
								2467,
								2431,
								2435,
								2469
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2465,
								2473,
								2450,
								2461,
								2426,
								2423,
								2453,
								2459
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateField.ts",
							"line": 16,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2966,
							"typeArguments": [
								{
									"type": "reference",
									"qualifiedName": "Date",
									"package": "typescript",
									"name": "Date"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "reference",
											"qualifiedName": "Date",
											"package": "typescript",
											"name": "Date"
										}
									]
								}
							],
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2418
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2476,
			"name": "fields/DateRangeField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 5152,
					"name": "<internal>",
					"kind": 4,
					"kindString": "Namespace",
					"flags": {},
					"children": [
						{
							"id": 5153,
							"name": "RangeFieldProps",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
									"line": 3,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 5156,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 2898,
										"typeArguments": [
											{
												"type": "reference",
												"id": 5156,
												"name": "T"
											}
										],
										"name": "FieldProps"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 5154,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 5155,
													"name": "separator",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
															"line": 4,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														5155
													]
												}
											],
											"sources": [
												{
													"fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
													"line": 3,
													"character": 42
												}
											]
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Type aliases",
							"kind": 4194304,
							"children": [
								5153
							]
						}
					]
				},
				{
					"id": 2477,
					"name": "DateRangeField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 2479,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2480,
									"name": "new DateRangeField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2481,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5153,
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "Date",
														"package": "typescript",
														"name": "Date"
													}
												],
												"name": "RangeFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2477,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3776,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3775,
								"name": "default.constructor"
							}
						},
						{
							"id": 2483,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Date",
								"package": "typescript",
								"name": "Date"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3780,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2484,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Date",
								"package": "typescript",
								"name": "Date"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3781,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2501,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2502,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2503,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"qualifiedName": "Date",
																"package": "typescript",
																"name": "Date"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"qualifiedName": "Date",
																				"package": "typescript",
																				"name": "Date"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3798,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2498,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2161,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3795,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2493,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3790,
								"name": "default.blank"
							}
						},
						{
							"id": 2494,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3791,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2497,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3794,
								"name": "default.choices"
							}
						},
						{
							"id": 2496,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3793,
								"name": "default.helpText"
							}
						},
						{
							"id": 2495,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3792,
								"name": "default.label"
							}
						},
						{
							"id": 2499,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3796,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2482,
							"name": "separator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
									"line": 17,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3779,
								"name": "default.separator"
							}
						},
						{
							"id": 2500,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3797,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2478,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateRangeField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DateRangeField'",
							"overwrites": {
								"type": "reference",
								"id": 3774,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2531,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2532,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2067,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3828,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2517,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2518,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2970,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3814,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2527,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2528,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3824,
								"name": "default.isBound"
							}
						},
						{
							"id": 2485,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2486,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2487,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2488,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3782,
								"name": "default.model"
							}
						},
						{
							"id": 2489,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2490,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2491,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2492,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3786,
								"name": "default.name"
							}
						},
						{
							"id": 2529,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2530,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3826,
								"name": "default.value"
							}
						},
						{
							"id": 2525,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2526,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2966,
										"typeArguments": [
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3823,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3822,
								"name": "default.clone"
							}
						},
						{
							"id": 2533,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2534,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2535,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3831,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3830,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2504,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2505,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2506,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3802,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3801,
								"name": "default.format"
							}
						},
						{
							"id": 2521,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2522,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2523,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										},
										{
											"id": 2524,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3819,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3818,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2510,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2511,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2512,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3808,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3807,
								"name": "default.normalize"
							}
						},
						{
							"id": 2507,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2508,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2509,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"qualifiedName": "Date",
														"package": "typescript",
														"name": "Date"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3805,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3804,
								"name": "default.parse"
							}
						},
						{
							"id": 2513,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2514,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2515,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2516,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3811,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3810,
								"name": "default.toJS"
							}
						},
						{
							"id": 2519,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2520,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3817,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3816,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2479
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2483,
								2484,
								2501,
								2498,
								2493,
								2494,
								2497,
								2496,
								2495,
								2499,
								2482,
								2500,
								2478
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2531,
								2517,
								2527,
								2485,
								2489,
								2529
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2525,
								2533,
								2504,
								2521,
								2510,
								2507,
								2513,
								2519
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateRangeField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3773,
							"typeArguments": [
								{
									"type": "reference",
									"qualifiedName": "Date",
									"package": "typescript",
									"name": "Date"
								}
							],
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"kind": 4,
					"children": [
						5152
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2477
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateRangeField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2536,
			"name": "fields/DateTimeField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2537,
					"name": "DateTimeField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"originalName": "default",
					"children": [
						{
							"id": 2539,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2540,
									"name": "new DateTimeField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2541,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2898,
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "Date",
														"package": "typescript",
														"name": "Date"
													},
													{
														"type": "reference",
														"qualifiedName": "Date",
														"package": "typescript",
														"name": "Date"
													}
												],
												"name": "FieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2537,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2969,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2968,
								"name": "default.constructor"
							}
						},
						{
							"id": 2548,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Date",
								"package": "typescript",
								"name": "Date"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2974,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2549,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2975,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2566,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2567,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2568,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"qualifiedName": "Date",
																"package": "typescript",
																"name": "Date"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"qualifiedName": "Date",
																				"package": "typescript",
																				"name": "Date"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2994,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2563,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2161,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2991,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2558,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2986,
								"name": "default.blank"
							}
						},
						{
							"id": 2559,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2987,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2562,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2990,
								"name": "default.choices"
							}
						},
						{
							"id": 2561,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2989,
								"name": "default.helpText"
							}
						},
						{
							"id": 2560,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2988,
								"name": "default.label"
							}
						},
						{
							"id": 2564,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2992,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2565,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2993,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2538,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateTimeField.ts",
									"line": 15,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DateTimeField'",
							"overwrites": {
								"type": "reference",
								"id": 2967,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2590,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2591,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2067,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3024,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2576,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2577,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2970,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3010,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2586,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2587,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3020,
								"name": "default.isBound"
							}
						},
						{
							"id": 2550,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2551,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2552,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2553,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2977,
								"name": "default.model"
							}
						},
						{
							"id": 2554,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2555,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2556,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2557,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2982,
								"name": "default.name"
							}
						},
						{
							"id": 2588,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2589,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3022,
								"name": "default.value"
							}
						},
						{
							"id": 2584,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2585,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2966,
										"typeArguments": [
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3019,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3018,
								"name": "default.clone"
							}
						},
						{
							"id": 2592,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2593,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2594,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3027,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3026,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2569,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2570,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2571,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2998,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2997,
								"name": "default.format"
							}
						},
						{
							"id": 2580,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2581,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2582,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										},
										{
											"id": 2583,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3015,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3014,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2545,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateTimeField.ts",
									"line": 22,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2546,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2547,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"qualifiedName": "Date",
														"package": "typescript",
														"name": "Date"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 3004,
										"name": "default.normalize"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3003,
								"name": "default.normalize"
							}
						},
						{
							"id": 2542,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateTimeField.ts",
									"line": 16,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2543,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2544,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 3001,
										"name": "default.parse"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3000,
								"name": "default.parse"
							}
						},
						{
							"id": 2572,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2573,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2574,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2575,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3007,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3006,
								"name": "default.toJS"
							}
						},
						{
							"id": 2578,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2579,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3013,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3012,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2539
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2548,
								2549,
								2566,
								2563,
								2558,
								2559,
								2562,
								2561,
								2560,
								2564,
								2565,
								2538
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2590,
								2576,
								2586,
								2550,
								2554,
								2588
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2584,
								2592,
								2569,
								2580,
								2545,
								2542,
								2572,
								2578
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateTimeField.ts",
							"line": 14,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2966,
							"typeArguments": [
								{
									"type": "reference",
									"qualifiedName": "Date",
									"package": "typescript",
									"name": "Date"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "reference",
											"qualifiedName": "Date",
											"package": "typescript",
											"name": "Date"
										}
									]
								}
							],
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2537
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateTimeField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2595,
			"name": "fields/DateTimeRangeField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2596,
					"name": "DateTimeRangeField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 2598,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2599,
									"name": "new DateTimeRangeField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2600,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5153,
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "Date",
														"package": "typescript",
														"name": "Date"
													}
												],
												"name": "RangeFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2596,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3776,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3775,
								"name": "default.constructor"
							}
						},
						{
							"id": 2602,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Date",
								"package": "typescript",
								"name": "Date"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3780,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2603,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Date",
								"package": "typescript",
								"name": "Date"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3781,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2620,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2621,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2622,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"qualifiedName": "Date",
																"package": "typescript",
																"name": "Date"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"qualifiedName": "Date",
																				"package": "typescript",
																				"name": "Date"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3798,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2617,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2161,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3795,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2612,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3790,
								"name": "default.blank"
							}
						},
						{
							"id": 2613,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3791,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2616,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3794,
								"name": "default.choices"
							}
						},
						{
							"id": 2615,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3793,
								"name": "default.helpText"
							}
						},
						{
							"id": 2614,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3792,
								"name": "default.label"
							}
						},
						{
							"id": 2618,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3796,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2601,
							"name": "separator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
									"line": 17,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3779,
								"name": "default.separator"
							}
						},
						{
							"id": 2619,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3797,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2597,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateTimeRangeField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DateTimeRangeField'",
							"overwrites": {
								"type": "reference",
								"id": 3774,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2650,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2651,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2067,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3828,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2636,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2637,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2970,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3814,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2646,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2647,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3824,
								"name": "default.isBound"
							}
						},
						{
							"id": 2604,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2605,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2606,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2607,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3782,
								"name": "default.model"
							}
						},
						{
							"id": 2608,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2609,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2610,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2611,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3786,
								"name": "default.name"
							}
						},
						{
							"id": 2648,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2649,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3826,
								"name": "default.value"
							}
						},
						{
							"id": 2644,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2645,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2966,
										"typeArguments": [
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3823,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3822,
								"name": "default.clone"
							}
						},
						{
							"id": 2652,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2653,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2654,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3831,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3830,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2623,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2624,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2625,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3802,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3801,
								"name": "default.format"
							}
						},
						{
							"id": 2640,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2641,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2642,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										},
										{
											"id": 2643,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3819,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3818,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2629,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2630,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2631,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3808,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3807,
								"name": "default.normalize"
							}
						},
						{
							"id": 2626,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2627,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2628,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"qualifiedName": "Date",
														"package": "typescript",
														"name": "Date"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3805,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3804,
								"name": "default.parse"
							}
						},
						{
							"id": 2632,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2633,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2634,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2635,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3811,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3810,
								"name": "default.toJS"
							}
						},
						{
							"id": 2638,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2639,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3817,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3816,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2598
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2602,
								2603,
								2620,
								2617,
								2612,
								2613,
								2616,
								2615,
								2614,
								2618,
								2601,
								2619,
								2597
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2650,
								2636,
								2646,
								2604,
								2608,
								2648
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2644,
								2652,
								2623,
								2640,
								2629,
								2626,
								2632,
								2638
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateTimeRangeField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3773,
							"typeArguments": [
								{
									"type": "reference",
									"qualifiedName": "Date",
									"package": "typescript",
									"name": "Date"
								}
							],
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2596
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateTimeRangeField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2655,
			"name": "fields/DecimalField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2656,
					"name": "DecimalField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Decimal Field. Stores decimal value as a string.",
						"text": "To support decimal operations consider a custom implementation that uses a decimal library eg. decimal.js\n\nAlso used by CurrencyField.\n\nSee also: [FloatField](doc:FloatField)\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 2658,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalField.ts",
									"line": 26,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2659,
									"name": "new DecimalField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2660,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5148,
												"name": "DecimalFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2656,
										"name": "default"
									},
									"overwrites": {
										"type": "reference",
										"id": 3651,
										"name": "default.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3650,
								"name": "default.constructor"
							}
						},
						{
							"id": 2667,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3657,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2668,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3658,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2685,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2686,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2687,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3675,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2682,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2161,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3672,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2677,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3667,
								"name": "default.blank"
							}
						},
						{
							"id": 2678,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3668,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2681,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3671,
								"name": "default.choices"
							}
						},
						{
							"id": 2661,
							"name": "decimalPlaces",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalField.ts",
									"line": 24,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2680,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3670,
								"name": "default.helpText"
							}
						},
						{
							"id": 2679,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3669,
								"name": "default.label"
							}
						},
						{
							"id": 2666,
							"name": "maxValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
									"line": 25,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3656,
								"name": "default.maxValue"
							}
						},
						{
							"id": 2665,
							"name": "minValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
									"line": 24,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3655,
								"name": "default.minValue"
							}
						},
						{
							"id": 2683,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3673,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2684,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3674,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2657,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalField.ts",
									"line": 23,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DecimalField'",
							"overwrites": {
								"type": "reference",
								"id": 3649,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2712,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2713,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2067,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3705,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2698,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2699,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2970,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3691,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2708,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2709,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3701,
								"name": "default.isBound"
							}
						},
						{
							"id": 2669,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2670,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2671,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2672,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3659,
								"name": "default.model"
							}
						},
						{
							"id": 2673,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2674,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2675,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2676,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3663,
								"name": "default.name"
							}
						},
						{
							"id": 2710,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2711,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3703,
								"name": "default.value"
							}
						},
						{
							"id": 2706,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2707,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2966,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3700,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3699,
								"name": "default.clone"
							}
						},
						{
							"id": 2714,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2715,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2716,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3708,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3707,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2688,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2689,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2690,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3679,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3678,
								"name": "default.format"
							}
						},
						{
							"id": 2702,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2703,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2704,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2705,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3696,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3695,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2691,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2692,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2693,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3685,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3684,
								"name": "default.normalize"
							}
						},
						{
							"id": 2662,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalField.ts",
									"line": 41,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2663,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2664,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 3682,
										"name": "default.parse"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3681,
								"name": "default.parse"
							}
						},
						{
							"id": 2694,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2695,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2696,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2697,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3688,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3687,
								"name": "default.toJS"
							}
						},
						{
							"id": 2700,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2701,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3694,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3693,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2658
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2667,
								2668,
								2685,
								2682,
								2677,
								2678,
								2681,
								2661,
								2680,
								2679,
								2666,
								2665,
								2683,
								2684,
								2657
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2712,
								2698,
								2708,
								2669,
								2673,
								2710
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2706,
								2714,
								2688,
								2702,
								2691,
								2662,
								2694,
								2700
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalField.ts",
							"line": 22,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3648,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "string"
								}
							],
							"name": "default"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 2356,
							"name": "CurrencyField"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2656
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2717,
			"name": "fields/DecimalRangeField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2718,
					"name": "DecimalRangeField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 2720,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2721,
									"name": "new DecimalRangeField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2722,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5153,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "RangeFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2718,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3776,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3775,
								"name": "default.constructor"
							}
						},
						{
							"id": 2724,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3780,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2725,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3781,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2742,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2743,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2744,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3798,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2739,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2161,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3795,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2734,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3790,
								"name": "default.blank"
							}
						},
						{
							"id": 2735,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3791,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2738,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3794,
								"name": "default.choices"
							}
						},
						{
							"id": 2737,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3793,
								"name": "default.helpText"
							}
						},
						{
							"id": 2736,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3792,
								"name": "default.label"
							}
						},
						{
							"id": 2740,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3796,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2723,
							"name": "separator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
									"line": 17,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3779,
								"name": "default.separator"
							}
						},
						{
							"id": 2741,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3797,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2719,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalRangeField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DecimalRangeField'",
							"overwrites": {
								"type": "reference",
								"id": 3774,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2772,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2773,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2067,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3828,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2758,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2759,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2970,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3814,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2768,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2769,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3824,
								"name": "default.isBound"
							}
						},
						{
							"id": 2726,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2727,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2728,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2729,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3782,
								"name": "default.model"
							}
						},
						{
							"id": 2730,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2731,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2732,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2733,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3786,
								"name": "default.name"
							}
						},
						{
							"id": 2770,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2771,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3826,
								"name": "default.value"
							}
						},
						{
							"id": 2766,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2767,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2966,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3823,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3822,
								"name": "default.clone"
							}
						},
						{
							"id": 2774,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2775,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2776,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3831,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3830,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2745,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2746,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2747,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3802,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3801,
								"name": "default.format"
							}
						},
						{
							"id": 2762,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2763,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2764,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2765,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3819,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3818,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2751,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2752,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2753,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3808,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3807,
								"name": "default.normalize"
							}
						},
						{
							"id": 2748,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2749,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2750,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3805,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3804,
								"name": "default.parse"
							}
						},
						{
							"id": 2754,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2755,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2756,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2757,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3811,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3810,
								"name": "default.toJS"
							}
						},
						{
							"id": 2760,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2761,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3817,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3816,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2720
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2724,
								2725,
								2742,
								2739,
								2734,
								2735,
								2738,
								2737,
								2736,
								2740,
								2723,
								2741,
								2719
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2772,
								2758,
								2768,
								2726,
								2730,
								2770
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2766,
								2774,
								2745,
								2762,
								2751,
								2748,
								2754,
								2760
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalRangeField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3773,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "string"
								}
							],
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2718
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalRangeField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2777,
			"name": "fields/DurationField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2778,
					"name": "DurationField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Duration Field - represents a duration with two components: hour, minute such as 10h5m.",
						"text": "Duration longer than 23h59m is not currently supported.\n\nBackend of choice need to be capable of storing a duration in a similar manner.\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 2780,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2781,
									"name": "new DurationField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2782,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5144,
												"name": "CharFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2778,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2299,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2298,
								"name": "default.constructor"
							}
						},
						{
							"id": 2784,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2302,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2785,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2303,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2802,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2803,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2804,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2320,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2799,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2161,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2317,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2794,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2312,
								"name": "default.blank"
							}
						},
						{
							"id": 2795,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2313,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2798,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2316,
								"name": "default.choices"
							}
						},
						{
							"id": 2797,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2315,
								"name": "default.helpText"
							}
						},
						{
							"id": 2796,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2314,
								"name": "default.label"
							}
						},
						{
							"id": 2783,
							"name": "maxLength",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 18,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2301,
								"name": "default.maxLength"
							}
						},
						{
							"id": 2800,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2318,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2801,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2319,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2779,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DurationField.ts",
									"line": 14,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DurationField'",
							"overwrites": {
								"type": "reference",
								"id": 2297,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2832,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2833,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2067,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2350,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2818,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2819,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2970,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2336,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2828,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2829,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2346,
								"name": "default.isBound"
							}
						},
						{
							"id": 2786,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2787,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2788,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2789,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2304,
								"name": "default.model"
							}
						},
						{
							"id": 2790,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2791,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2792,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2793,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2308,
								"name": "default.name"
							}
						},
						{
							"id": 2830,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2831,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2348,
								"name": "default.value"
							}
						},
						{
							"id": 2826,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2827,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2966,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2345,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2344,
								"name": "default.clone"
							}
						},
						{
							"id": 2834,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2835,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2836,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2353,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2352,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2805,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2806,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2807,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2324,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2323,
								"name": "default.format"
							}
						},
						{
							"id": 2822,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2823,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2824,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2825,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2341,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2340,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2811,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2812,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2813,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2330,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2329,
								"name": "default.normalize"
							}
						},
						{
							"id": 2808,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2809,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2810,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2327,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2326,
								"name": "default.parse"
							}
						},
						{
							"id": 2814,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2815,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2816,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2817,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2333,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2332,
								"name": "default.toJS"
							}
						},
						{
							"id": 2820,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2821,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2339,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2338,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2780
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2784,
								2785,
								2802,
								2799,
								2794,
								2795,
								2798,
								2797,
								2796,
								2783,
								2800,
								2801,
								2779
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2832,
								2818,
								2828,
								2786,
								2790,
								2830
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2826,
								2834,
								2805,
								2822,
								2811,
								2808,
								2814,
								2820
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/DurationField.ts",
							"line": 13,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2296,
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2778
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/DurationField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2837,
			"name": "fields/EmailField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2838,
					"name": "EmailField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 2840,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2841,
									"name": "new EmailField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2842,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5144,
												"name": "CharFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2838,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2299,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2298,
								"name": "default.constructor"
							}
						},
						{
							"id": 2844,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2302,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2845,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2303,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2862,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2863,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2864,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2320,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2859,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2161,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2317,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2854,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2312,
								"name": "default.blank"
							}
						},
						{
							"id": 2855,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2313,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2858,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2316,
								"name": "default.choices"
							}
						},
						{
							"id": 2857,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2315,
								"name": "default.helpText"
							}
						},
						{
							"id": 2856,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2314,
								"name": "default.label"
							}
						},
						{
							"id": 2843,
							"name": "maxLength",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 18,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2301,
								"name": "default.maxLength"
							}
						},
						{
							"id": 2860,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2318,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2861,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2319,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2839,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/EmailField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'EmailField'",
							"overwrites": {
								"type": "reference",
								"id": 2297,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2892,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2893,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2067,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2350,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2878,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2879,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2970,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2336,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2888,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2889,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2346,
								"name": "default.isBound"
							}
						},
						{
							"id": 2846,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2847,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2848,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2849,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2304,
								"name": "default.model"
							}
						},
						{
							"id": 2850,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2851,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2852,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2853,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2308,
								"name": "default.name"
							}
						},
						{
							"id": 2890,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2891,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2348,
								"name": "default.value"
							}
						},
						{
							"id": 2886,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2887,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2966,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2345,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2344,
								"name": "default.clone"
							}
						},
						{
							"id": 2894,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2895,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2896,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2353,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2352,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2865,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2866,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2867,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2324,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2323,
								"name": "default.format"
							}
						},
						{
							"id": 2882,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2883,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2884,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2885,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2341,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2340,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2871,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2872,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2873,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2330,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2329,
								"name": "default.normalize"
							}
						},
						{
							"id": 2868,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2869,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2870,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2327,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2326,
								"name": "default.parse"
							}
						},
						{
							"id": 2874,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2875,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2876,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2877,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2333,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2332,
								"name": "default.toJS"
							}
						},
						{
							"id": 2880,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2881,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2339,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2338,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2840
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2844,
								2845,
								2862,
								2859,
								2854,
								2855,
								2858,
								2857,
								2856,
								2843,
								2860,
								2861,
								2839
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2892,
								2878,
								2888,
								2846,
								2850,
								2890
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2886,
								2894,
								2865,
								2882,
								2871,
								2868,
								2874,
								2880
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/EmailField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2296,
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2838
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/EmailField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2897,
			"name": "fields/Field",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2966,
					"name": "Field",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Base Field",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields"
							},
							{
								"tag": "template",
								"text": "The type of the value for this field.",
								"param": "ValueType"
							},
							{
								"tag": "template",
								"text": "The type this field knows how to parse into the ValueType",
								"param": "ParsableType"
							},
							{
								"tag": "template",
								"text": "The type of a single value for this field. This is only different from `ValueType` if `ValueType` is eg. an array type\n",
								"param": "SingleType"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 2968,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 175,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2969,
									"name": "new Field",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2970,
											"name": "ValueT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										},
										{
											"id": 2971,
											"name": "ParsableValueT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											},
											"default": {
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											}
										},
										{
											"id": 2972,
											"name": "SingleValueT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											}
										}
									],
									"parameters": [
										{
											"id": 2973,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2898,
												"typeArguments": [
													{
														"type": "reference",
														"id": 2970,
														"name": "ValueT"
													},
													{
														"type": "reference",
														"id": 2972,
														"name": "SingleValueT"
													}
												],
												"name": "FieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2966,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"id": 2971,
												"name": "ParsableValueT"
											},
											{
												"type": "reference",
												"id": 2972,
												"name": "SingleValueT"
											}
										],
										"name": "default"
									}
								}
							]
						},
						{
							"id": 2974,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2970,
								"name": "ValueT"
							}
						},
						{
							"id": 2975,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2971,
								"name": "ParsableValueT"
							}
						},
						{
							"id": 2994,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 2970,
										"name": "ValueT"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2995,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2996,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2970,
																"name": "ValueT"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"id": 2970,
																				"name": "ValueT"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 2976,
							"name": "_model",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 86,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 2071,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ViewModelConstructor"
							}
						},
						{
							"id": 2981,
							"name": "_name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 103,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2991,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2161,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"id": 2972,
										"name": "SingleValueT"
									}
								],
								"name": "AsyncChoicesInterface"
							}
						},
						{
							"id": 2986,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2987,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2990,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2972,
										"name": "SingleValueT"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							}
						},
						{
							"id": 2989,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2988,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2992,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2993,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2967,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 129,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"defaultValue": "null"
						},
						{
							"id": 3024,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3025,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2067,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									}
								}
							]
						},
						{
							"id": 3010,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3011,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2970,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									}
								}
							]
						},
						{
							"id": 3020,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3021,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 2977,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2978,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									}
								}
							],
							"setSignature": [
								{
									"id": 2979,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2980,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 2982,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2983,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"setSignature": [
								{
									"id": 2984,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2985,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 3022,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3023,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											}
										]
									}
								}
							]
						},
						{
							"id": 3018,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3019,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2966,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											}
										],
										"name": "default"
									}
								}
							]
						},
						{
							"id": 3026,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3027,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 3028,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 2997,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2998,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2999,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 3014,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3015,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 3016,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											}
										},
										{
											"id": 3017,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 3003,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3004,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 3005,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 2971,
												"name": "ParsableValueT"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											}
										]
									}
								}
							]
						},
						{
							"id": 3000,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3001,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 3002,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 2971,
														"name": "ParsableValueT"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											}
										]
									}
								}
							]
						},
						{
							"id": 3006,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3007,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 3008,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3009,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 3012,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3013,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2968
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2974,
								2975,
								2994,
								2976,
								2981,
								2991,
								2986,
								2987,
								2990,
								2989,
								2988,
								2992,
								2993,
								2967
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3024,
								3010,
								3020,
								2977,
								2982,
								3022
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3018,
								3026,
								2997,
								3014,
								3003,
								3000,
								3006,
								3012
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
							"line": 75,
							"character": 21
						}
					],
					"typeParameter": [
						{
							"id": 3029,
							"name": "ValueT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 3030,
							"name": "ParsableValueT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"default": {
								"type": "reference",
								"id": 2970,
								"name": "ValueT"
							}
						},
						{
							"id": 3031,
							"name": "SingleValueT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "reference",
								"id": 2970,
								"name": "ValueT"
							}
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 2296,
							"name": "CharField"
						},
						{
							"type": "reference",
							"id": 2418,
							"name": "DateField"
						},
						{
							"type": "reference",
							"id": 2537,
							"name": "DateTimeField"
						},
						{
							"type": "reference",
							"id": 2912,
							"name": "RecordBoundField"
						},
						{
							"type": "reference",
							"id": 3033,
							"name": "FileField"
						},
						{
							"type": "reference",
							"id": 3518,
							"name": "ListField"
						},
						{
							"type": "reference",
							"id": 3584,
							"name": "NullableBooleanField"
						},
						{
							"type": "reference",
							"id": 3648,
							"name": "NumberField"
						},
						{
							"type": "reference",
							"id": 3773,
							"name": "RangeField"
						},
						{
							"type": "reference",
							"id": 3859,
							"name": "BaseRelatedViewModelField"
						},
						{
							"type": "reference",
							"id": 4207,
							"name": "TimeField"
						}
					]
				},
				{
					"id": 2898,
					"name": "FieldProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "expand-properties",
								"text": "\n"
							}
						]
					},
					"children": [
						{
							"id": 2907,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Asynchronous choices for this field.",
								"text": "Only one of `asyncChoices` and `choices` should be passed.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 48,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2161,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"id": 2911,
										"name": "SingleValueT"
									}
								],
								"name": "AsyncChoicesInterface"
							}
						},
						{
							"id": 2899,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Is this field allowed to be assigned a blank (null, undefined, \"\") value?",
								"text": "Defaults to false\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 13,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2900,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Frontend values are often stored as strings even if they are not stored like that\nin a backend (eg. database). Depending on your backend implementation it may expect\nempty values to be represented as `null` rather than an empty string. Setting\n`blankAsNull` to `true` indicates that empty strings should be converted to `null`\nwhen being sent to the backend."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 21,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2906,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Choices for this field. Should be a mapping of value to the label for the choice."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 42,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2911,
												"name": "SingleValueT"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"qualifiedName": "Map",
										"package": "typescript",
										"name": "Map"
									},
									{
										"type": "array",
										"elementType": {
											"type": "tuple",
											"elements": [
												{
													"type": "reference",
													"id": 2911,
													"name": "SingleValueT"
												},
												{
													"type": "intrinsic",
													"name": "string"
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 2903,
							"name": "defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Default value for this field. This can either be a function that returns a value or the value directly."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 33,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 2910,
										"name": "ValueT"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2904,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2905,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2910,
																"name": "ValueT"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"id": 2910,
																				"name": "ValueT"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 2902,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Optional help text for this field that might be shown on a form"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 29,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2901,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Label for this field. If not specified will be generated from the name."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 25,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2908,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "True if field should be considered read only (eg. excluded from forms)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 52,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2909,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "True if field should be considered write only (eg. excluded from detail views)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 56,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2907,
								2899,
								2900,
								2906,
								2903,
								2902,
								2901,
								2908,
								2909
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
							"line": 7,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 2910,
							"name": "ValueT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 2911,
							"name": "SingleValueT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "reference",
								"id": 2910,
								"name": "ValueT"
							}
						}
					]
				},
				{
					"id": 2912,
					"name": "RecordBoundField",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2916,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2963,
								"name": "ValueT"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2974,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2917,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2964,
								"name": "ParsableType"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2975,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2934,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 2963,
										"name": "ValueT"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2935,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2936,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2963,
																"name": "ValueT"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"id": 2963,
																				"name": "ValueT"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2994,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2931,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2161,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"id": 2965,
										"name": "SingleValueT"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2991,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2926,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2986,
								"name": "default.blank"
							}
						},
						{
							"id": 2927,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2987,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2915,
							"name": "boundRecord",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 375,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 2067,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "ViewModelInterface"
							},
							"overwrites": {
								"type": "reference",
								"id": 3024,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2930,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2965,
										"name": "SingleValueT"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2990,
								"name": "default.choices"
							}
						},
						{
							"id": 2929,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2989,
								"name": "default.helpText"
							}
						},
						{
							"id": 2914,
							"name": "isBound",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 374,
									"character": 13
								}
							],
							"type": {
								"type": "literal",
								"value": true
							},
							"overwrites": {
								"type": "reference",
								"id": 3020,
								"name": "default.isBound"
							}
						},
						{
							"id": 2928,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2988,
								"name": "default.label"
							}
						},
						{
							"id": 2932,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2992,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2913,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 373,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 2963,
								"name": "ValueT"
							},
							"overwrites": {
								"type": "reference",
								"id": 3022,
								"name": "default.value"
							}
						},
						{
							"id": 2933,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2993,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2950,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2951,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2970,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3010,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2918,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2919,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2920,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2921,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2977,
								"name": "default.model"
							}
						},
						{
							"id": 2922,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2923,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2924,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2925,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2982,
								"name": "default.name"
							}
						},
						{
							"id": 2958,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2959,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2966,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2963,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"id": 2963,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"id": 2963,
												"name": "ValueT"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3019,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3018,
								"name": "default.clone"
							}
						},
						{
							"id": 2960,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2961,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2962,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3027,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3026,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2937,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2938,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2939,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 2963,
												"name": "ValueT"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2998,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2997,
								"name": "default.format"
							}
						},
						{
							"id": 2954,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2955,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2956,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2963,
												"name": "ValueT"
											}
										},
										{
											"id": 2957,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2963,
												"name": "ValueT"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3015,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3014,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2943,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2944,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2945,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 2964,
												"name": "ParsableType"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2963,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3004,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3003,
								"name": "default.normalize"
							}
						},
						{
							"id": 2940,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2941,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2942,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 2964,
														"name": "ParsableType"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2963,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3001,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3000,
								"name": "default.parse"
							}
						},
						{
							"id": 2946,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2947,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2948,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 2963,
												"name": "ValueT"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2949,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3007,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3006,
								"name": "default.toJS"
							}
						},
						{
							"id": 2952,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2953,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3013,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3012,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2916,
								2917,
								2934,
								2931,
								2926,
								2927,
								2915,
								2930,
								2929,
								2914,
								2928,
								2932,
								2913,
								2933
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2950,
								2918,
								2922
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2958,
								2960,
								2937,
								2954,
								2943,
								2940,
								2946,
								2952
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
							"line": 371,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 2963,
							"name": "ValueT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 2964,
							"name": "ParsableType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"default": {
								"type": "reference",
								"id": 2963,
								"name": "ValueT"
							}
						},
						{
							"id": 2965,
							"name": "SingleValueT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "reference",
								"id": 2963,
								"name": "ValueT"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2966,
							"typeArguments": [
								{
									"type": "reference",
									"id": 2963,
									"name": "ValueT"
								},
								{
									"type": "reference",
									"id": 2964,
									"name": "ParsableType"
								},
								{
									"type": "reference",
									"id": 2965,
									"name": "SingleValueT"
								}
							],
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2966
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2898,
						2912
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3032,
			"name": "fields/FileField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 5164,
					"name": "<internal>",
					"kind": 4,
					"kindString": "Namespace",
					"flags": {},
					"children": [
						{
							"id": 5268,
							"name": "AbortSignal",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "A signal object that allows you to communicate with a DOM request (such as a Fetch) and abort it if required via an AbortController object."
							},
							"children": [
								{
									"id": 5269,
									"name": "aborted",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isReadonly": true
									},
									"comment": {
										"shortText": "Returns true if this AbortSignal's AbortController has signaled to abort, and false otherwise."
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1885,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 5270,
									"name": "onabort",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1886,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 5271,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 5272,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 5273,
																	"name": "ev",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"qualifiedName": "Event",
																		"package": "typescript",
																		"name": "Event"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 5274,
									"name": "addEventListener",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5275,
											"name": "addEventListener",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"typeParameter": [
												{
													"id": 5276,
													"name": "K",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "literal",
														"value": "abort"
													}
												}
											],
											"parameters": [
												{
													"id": 5277,
													"name": "type",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5276,
														"qualifiedName": "K",
														"package": "typescript",
														"name": "K"
													}
												},
												{
													"id": 5278,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 5279,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"signatures": [
																{
																	"id": 5280,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExternal": true
																	},
																	"parameters": [
																		{
																			"id": 5281,
																			"name": "ev",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "reference",
																					"id": 5276,
																					"qualifiedName": "K",
																					"package": "typescript",
																					"name": "K"
																				},
																				"objectType": {
																					"type": "reference",
																					"id": 5338,
																					"qualifiedName": "AbortSignalEventMap",
																					"package": "typescript",
																					"name": "AbortSignalEventMap"
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															]
														}
													}
												},
												{
													"id": 5282,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "boolean"
															},
															{
																"type": "reference",
																"id": 5330,
																"qualifiedName": "AddEventListenerOptions",
																"package": "typescript",
																"name": "AddEventListenerOptions"
															}
														]
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"overwrites": {
												"type": "reference",
												"name": "EventTarget.addEventListener"
											}
										},
										{
											"id": 5283,
											"name": "addEventListener",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 5284,
													"name": "type",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 5285,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5335,
														"qualifiedName": "EventListenerOrEventListenerObject",
														"package": "typescript",
														"name": "EventListenerOrEventListenerObject"
													}
												},
												{
													"id": 5286,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "boolean"
															},
															{
																"type": "reference",
																"id": 5330,
																"qualifiedName": "AddEventListenerOptions",
																"package": "typescript",
																"name": "AddEventListenerOptions"
															}
														]
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"overwrites": {
												"type": "reference",
												"name": "EventTarget.addEventListener"
											}
										}
									],
									"overwrites": {
										"type": "reference",
										"name": "EventTarget.addEventListener"
									}
								},
								{
									"id": 5300,
									"name": "dispatchEvent",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5301,
											"name": "dispatchEvent",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Dispatches a synthetic event event to target and returns true if either event's cancelable attribute value is false or its preventDefault() method was not invoked, and false otherwise."
											},
											"parameters": [
												{
													"id": 5302,
													"name": "event",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"qualifiedName": "Event",
														"package": "typescript",
														"name": "Event"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "EventTarget.dispatchEvent"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "EventTarget.dispatchEvent"
									}
								},
								{
									"id": 5287,
									"name": "removeEventListener",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5288,
											"name": "removeEventListener",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"typeParameter": [
												{
													"id": 5289,
													"name": "K",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "literal",
														"value": "abort"
													}
												}
											],
											"parameters": [
												{
													"id": 5290,
													"name": "type",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5289,
														"qualifiedName": "K",
														"package": "typescript",
														"name": "K"
													}
												},
												{
													"id": 5291,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 5292,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"signatures": [
																{
																	"id": 5293,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExternal": true
																	},
																	"parameters": [
																		{
																			"id": 5294,
																			"name": "ev",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "reference",
																					"id": 5289,
																					"qualifiedName": "K",
																					"package": "typescript",
																					"name": "K"
																				},
																				"objectType": {
																					"type": "reference",
																					"id": 5338,
																					"qualifiedName": "AbortSignalEventMap",
																					"package": "typescript",
																					"name": "AbortSignalEventMap"
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															]
														}
													}
												},
												{
													"id": 5295,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "boolean"
															},
															{
																"type": "reference",
																"id": 5336,
																"qualifiedName": "EventListenerOptions",
																"package": "typescript",
																"name": "EventListenerOptions"
															}
														]
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"overwrites": {
												"type": "reference",
												"name": "EventTarget.removeEventListener"
											}
										},
										{
											"id": 5296,
											"name": "removeEventListener",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 5297,
													"name": "type",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 5298,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5335,
														"qualifiedName": "EventListenerOrEventListenerObject",
														"package": "typescript",
														"name": "EventListenerOrEventListenerObject"
													}
												},
												{
													"id": 5299,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "boolean"
															},
															{
																"type": "reference",
																"id": 5336,
																"qualifiedName": "EventListenerOptions",
																"package": "typescript",
																"name": "EventListenerOptions"
															}
														]
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"overwrites": {
												"type": "reference",
												"name": "EventTarget.removeEventListener"
											}
										}
									],
									"overwrites": {
										"type": "reference",
										"name": "EventTarget.removeEventListener"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5269,
										5270
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										5274,
										5300,
										5287
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 1883,
									"character": 10
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"qualifiedName": "EventTarget",
									"package": "typescript",
									"name": "EventTarget"
								}
							]
						},
						{
							"id": 5338,
							"name": "AbortSignalEventMap",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 5339,
									"name": "abort",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1879,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Event",
										"package": "typescript",
										"name": "Event"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5339
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 1878,
									"character": 10
								}
							]
						},
						{
							"id": 5330,
							"name": "AddEventListenerOptions",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 5334,
									"name": "capture",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 457,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 5337,
										"name": "EventListenerOptions.capture"
									}
								},
								{
									"id": 5331,
									"name": "once",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 26,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 5332,
									"name": "passive",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 27,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 5333,
									"name": "signal",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 28,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"id": 5265,
										"qualifiedName": "AbortSignal",
										"package": "typescript",
										"name": "AbortSignal"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5334,
										5331,
										5332,
										5333
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 25,
									"character": 10
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"id": 5336,
									"qualifiedName": "EventListenerOptions",
									"package": "typescript",
									"name": "EventListenerOptions"
								}
							]
						},
						{
							"id": 5188,
							"name": "Blob",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "A file-like object of immutable, raw data. Blobs represent data that isn't necessarily in a JavaScript-native format. The File interface is based on Blob, inheriting blob functionality and expanding it to support files on the user's system."
							},
							"children": [
								{
									"id": 5189,
									"name": "size",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 2378,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 5190,
									"name": "type",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 2379,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5191,
									"name": "arrayBuffer",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5192,
											"name": "arrayBuffer",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "ArrayBuffer",
														"package": "typescript",
														"name": "ArrayBuffer"
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										}
									]
								},
								{
									"id": 5193,
									"name": "slice",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5194,
											"name": "slice",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 5195,
													"name": "start",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 5196,
													"name": "end",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 5197,
													"name": "contentType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 5185,
												"qualifiedName": "Blob",
												"package": "typescript",
												"name": "Blob"
											}
										}
									]
								},
								{
									"id": 5198,
									"name": "stream",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5199,
											"name": "stream",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 5202,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "ReadableStream",
												"package": "typescript",
												"name": "ReadableStream"
											}
										}
									]
								},
								{
									"id": 5200,
									"name": "text",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5201,
											"name": "text",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5189,
										5190
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										5191,
										5193,
										5198,
										5200
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 2377,
									"character": 10
								}
							]
						},
						{
							"id": 5336,
							"name": "EventListenerOptions",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 5337,
									"name": "capture",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 457,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5337
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 456,
									"character": 10
								}
							],
							"extendedBy": [
								{
									"type": "reference",
									"id": 5330,
									"name": "AddEventListenerOptions"
								}
							]
						},
						{
							"id": 5168,
							"name": "File",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Provides information about files and allows JavaScript in a web page to access their content."
							},
							"children": [
								{
									"id": 5169,
									"name": "lastModified",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5009,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 5170,
									"name": "name",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5010,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5172,
									"name": "size",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 2378,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Blob.size"
									}
								},
								{
									"id": 5173,
									"name": "type",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 2379,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Blob.type"
									}
								},
								{
									"id": 5171,
									"name": "webkitRelativePath",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5011,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5174,
									"name": "arrayBuffer",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5175,
											"name": "arrayBuffer",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "ArrayBuffer",
														"package": "typescript",
														"name": "ArrayBuffer"
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Blob.arrayBuffer"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Blob.arrayBuffer"
									}
								},
								{
									"id": 5176,
									"name": "slice",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5177,
											"name": "slice",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 5178,
													"name": "start",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 5179,
													"name": "end",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 5180,
													"name": "contentType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 5185,
												"qualifiedName": "Blob",
												"package": "typescript",
												"name": "Blob"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Blob.slice"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Blob.slice"
									}
								},
								{
									"id": 5181,
									"name": "stream",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5182,
											"name": "stream",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 5202,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "ReadableStream",
												"package": "typescript",
												"name": "ReadableStream"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Blob.stream"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Blob.stream"
									}
								},
								{
									"id": 5183,
									"name": "text",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5184,
											"name": "text",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Blob.text"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Blob.text"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5169,
										5170,
										5172,
										5173,
										5171
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										5174,
										5176,
										5181,
										5183
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 5008,
									"character": 10
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"id": 5185,
									"qualifiedName": "Blob",
									"package": "typescript",
									"name": "Blob"
								}
							]
						},
						{
							"id": 5205,
							"name": "ReadableStream",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "This Streams API interface represents a readable stream of byte data. The Fetch API offers a concrete instance of a ReadableStream through the body property of a Response object."
							},
							"children": [
								{
									"id": 5206,
									"name": "locked",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 11000,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 5207,
									"name": "cancel",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5208,
											"name": "cancel",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 5209,
													"name": "reason",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										}
									]
								},
								{
									"id": 5210,
									"name": "getReader",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5211,
											"name": "getReader",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 5224,
												"typeArguments": [
													{
														"type": "reference",
														"id": 5223,
														"qualifiedName": "ReadableStream.R",
														"package": "typescript",
														"name": "R"
													}
												],
												"qualifiedName": "ReadableStreamDefaultReader",
												"package": "typescript",
												"name": "ReadableStreamDefaultReader"
											}
										}
									]
								},
								{
									"id": 5212,
									"name": "pipeThrough",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5213,
											"name": "pipeThrough",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"typeParameter": [
												{
													"id": 5214,
													"name": "T",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {
														"isExternal": true
													}
												}
											],
											"parameters": [
												{
													"id": 5215,
													"name": "transform",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5237,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5214,
																"qualifiedName": "T",
																"package": "typescript",
																"name": "T"
															},
															{
																"type": "reference",
																"id": 5223,
																"qualifiedName": "ReadableStream.R",
																"package": "typescript",
																"name": "R"
															}
														],
														"qualifiedName": "ReadableWritablePair",
														"package": "typescript",
														"name": "ReadableWritablePair"
													}
												},
												{
													"id": 5216,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 5242,
														"qualifiedName": "StreamPipeOptions",
														"package": "typescript",
														"name": "StreamPipeOptions"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 5202,
												"typeArguments": [
													{
														"type": "reference",
														"id": 5214,
														"qualifiedName": "T",
														"package": "typescript",
														"name": "T"
													}
												],
												"qualifiedName": "ReadableStream",
												"package": "typescript",
												"name": "ReadableStream"
											}
										}
									]
								},
								{
									"id": 5217,
									"name": "pipeTo",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5218,
											"name": "pipeTo",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 5219,
													"name": "destination",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5247,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5223,
																"qualifiedName": "ReadableStream.R",
																"package": "typescript",
																"name": "R"
															}
														],
														"qualifiedName": "WritableStream",
														"package": "typescript",
														"name": "WritableStream"
													}
												},
												{
													"id": 5220,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 5242,
														"qualifiedName": "StreamPipeOptions",
														"package": "typescript",
														"name": "StreamPipeOptions"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										}
									]
								},
								{
									"id": 5221,
									"name": "tee",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5222,
											"name": "tee",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "reference",
														"id": 5202,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5223,
																"qualifiedName": "ReadableStream.R",
																"package": "typescript",
																"name": "R"
															}
														],
														"qualifiedName": "ReadableStream",
														"package": "typescript",
														"name": "ReadableStream"
													},
													{
														"type": "reference",
														"id": 5202,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5223,
																"qualifiedName": "ReadableStream.R",
																"package": "typescript",
																"name": "R"
															}
														],
														"qualifiedName": "ReadableStream",
														"package": "typescript",
														"name": "ReadableStream"
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5206
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										5207,
										5210,
										5212,
										5217,
										5221
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 10999,
									"character": 10
								}
							],
							"typeParameter": [
								{
									"id": 5223,
									"name": "R",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 5327,
							"name": "ReadableStreamDefaultReadDoneResult",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 5328,
									"name": "done",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1441,
											"character": 4
										}
									],
									"type": {
										"type": "literal",
										"value": true
									}
								},
								{
									"id": 5329,
									"name": "value",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1442,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "undefined"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5328,
										5329
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 1440,
									"character": 10
								}
							]
						},
						{
							"id": 5323,
							"name": "ReadableStreamDefaultReadValueResult",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 5324,
									"name": "done",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1446,
											"character": 4
										}
									],
									"type": {
										"type": "literal",
										"value": false
									}
								},
								{
									"id": 5325,
									"name": "value",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1447,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"id": 5326,
										"qualifiedName": "ReadableStreamDefaultReadValueResult.T",
										"package": "typescript",
										"name": "T"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5324,
										5325
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 1445,
									"character": 10
								}
							],
							"typeParameter": [
								{
									"id": 5326,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							]
						},
						{
							"id": 5227,
							"name": "ReadableStreamDefaultReader",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 5232,
									"name": "closed",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 11036,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 5261,
										"name": "ReadableStreamGenericReader.closed"
									}
								},
								{
									"id": 5233,
									"name": "cancel",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5234,
											"name": "cancel",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 5235,
													"name": "reason",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 5263,
												"name": "ReadableStreamGenericReader.cancel"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 5262,
										"name": "ReadableStreamGenericReader.cancel"
									}
								},
								{
									"id": 5228,
									"name": "read",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5229,
											"name": "read",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 5303,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5236,
																"qualifiedName": "ReadableStreamDefaultReader.R",
																"package": "typescript",
																"name": "R"
															}
														],
														"qualifiedName": "ReadableStreamDefaultReadResult",
														"package": "typescript",
														"name": "ReadableStreamDefaultReadResult"
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										}
									]
								},
								{
									"id": 5230,
									"name": "releaseLock",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5231,
											"name": "releaseLock",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5232
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										5233,
										5228,
										5230
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 11025,
									"character": 10
								}
							],
							"typeParameter": [
								{
									"id": 5236,
									"name": "R",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"id": 5260,
									"qualifiedName": "ReadableStreamGenericReader",
									"package": "typescript",
									"name": "ReadableStreamGenericReader"
								}
							]
						},
						{
							"id": 5260,
							"name": "ReadableStreamGenericReader",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 5261,
									"name": "closed",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 11036,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								},
								{
									"id": 5262,
									"name": "cancel",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5263,
											"name": "cancel",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 5264,
													"name": "reason",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5261
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										5262
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 11035,
									"character": 10
								}
							],
							"extendedBy": [
								{
									"type": "reference",
									"id": 5227,
									"name": "ReadableStreamDefaultReader"
								}
							]
						},
						{
							"id": 5237,
							"name": "ReadableWritablePair",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 5238,
									"name": "readable",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1451,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"id": 5202,
										"typeArguments": [
											{
												"type": "reference",
												"id": 5240,
												"qualifiedName": "ReadableWritablePair.R",
												"package": "typescript",
												"name": "R"
											}
										],
										"qualifiedName": "ReadableStream",
										"package": "typescript",
										"name": "ReadableStream"
									}
								},
								{
									"id": 5239,
									"name": "writable",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Provides a convenient, chainable way of piping this readable stream through a transform stream (or any other { writable, readable } pair). It simply pipes the stream into the writable side of the supplied pair, and returns the readable side for further use.",
										"text": "Piping a stream will lock it for the duration of the pipe, preventing any other consumer from acquiring a reader.\n"
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1457,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"id": 5247,
										"typeArguments": [
											{
												"type": "reference",
												"id": 5241,
												"qualifiedName": "ReadableWritablePair.W",
												"package": "typescript",
												"name": "W"
											}
										],
										"qualifiedName": "WritableStream",
										"package": "typescript",
										"name": "WritableStream"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5238,
										5239
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 1450,
									"character": 10
								}
							],
							"typeParameter": [
								{
									"id": 5240,
									"name": "R",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 5241,
									"name": "W",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 5242,
							"name": "StreamPipeOptions",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 5243,
									"name": "preventAbort",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1627,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 5244,
									"name": "preventCancel",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1628,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 5245,
									"name": "preventClose",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "Pipes this readable stream to a given writable stream destination. The way in which the piping process behaves under various error conditions can be customized with a number of passed options. It returns a promise that fulfills when the piping process completes successfully, or rejects if any errors were encountered.",
										"text": "Piping a stream will lock it for the duration of the pipe, preventing any other consumer from acquiring a reader.\n\nErrors and closures of the source and destination streams propagate as follows:\n\nAn error in this source readable stream will abort destination, unless preventAbort is truthy. The returned promise will be rejected with the source's error, or with any error that occurs during aborting the destination.\n\nAn error in destination will cancel this source readable stream, unless preventCancel is truthy. The returned promise will be rejected with the destination's error, or with any error that occurs during canceling the source.\n\nWhen this source readable stream closes, destination will be closed, unless preventClose is truthy. The returned promise will be fulfilled once this process completes, unless an error is encountered while closing the destination, in which case it will be rejected with that error.\n\nIf destination starts out closed or closing, this source readable stream will be canceled, unless preventCancel is true. The returned promise will be rejected with an error indicating piping to a closed stream failed, or with any error that occurs during canceling the source.\n\nThe signal option can be set to an AbortSignal to allow aborting an ongoing pipe operation via the corresponding AbortController. In this case, this source readable stream will be canceled, and destination aborted, unless the respective options preventCancel or preventAbort are set.\n"
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1646,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 5246,
									"name": "signal",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1647,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"id": 5265,
										"qualifiedName": "AbortSignal",
										"package": "typescript",
										"name": "AbortSignal"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5243,
										5244,
										5245,
										5246
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 1626,
									"character": 10
								}
							]
						},
						{
							"id": 5250,
							"name": "WritableStream",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "This Streams API interface provides a standard abstraction for writing streaming data to a destination, known as a sink. This object comes with built-in backpressure and queuing."
							},
							"children": [
								{
									"id": 5251,
									"name": "locked",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 16357,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 5252,
									"name": "abort",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5253,
											"name": "abort",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 5254,
													"name": "reason",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										}
									]
								},
								{
									"id": 5255,
									"name": "close",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5256,
											"name": "close",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										}
									]
								},
								{
									"id": 5257,
									"name": "getWriter",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5258,
											"name": "getWriter",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 5305,
												"typeArguments": [
													{
														"type": "reference",
														"id": 5259,
														"qualifiedName": "WritableStream.W",
														"package": "typescript",
														"name": "W"
													}
												],
												"qualifiedName": "WritableStreamDefaultWriter",
												"package": "typescript",
												"name": "WritableStreamDefaultWriter"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5251
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										5252,
										5255,
										5257
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16356,
									"character": 10
								}
							],
							"typeParameter": [
								{
									"id": 5259,
									"name": "W",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 5308,
							"name": "WritableStreamDefaultWriter",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "This Streams API interface is the object returned by WritableStream.getWriter() and once created locks the < writer to the WritableStream ensuring that no other streams can write to the underlying sink."
							},
							"children": [
								{
									"id": 5309,
									"name": "closed",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 16380,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								},
								{
									"id": 5310,
									"name": "desiredSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 16381,
											"character": 13
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 5311,
									"name": "ready",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 16382,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								},
								{
									"id": 5312,
									"name": "abort",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5313,
											"name": "abort",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 5314,
													"name": "reason",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										}
									]
								},
								{
									"id": 5315,
									"name": "close",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5316,
											"name": "close",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										}
									]
								},
								{
									"id": 5317,
									"name": "releaseLock",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5318,
											"name": "releaseLock",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 5319,
									"name": "write",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5320,
											"name": "write",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 5321,
													"name": "chunk",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 5322,
														"qualifiedName": "WritableStreamDefaultWriter.W",
														"package": "typescript",
														"name": "W"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5309,
										5310,
										5311
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										5312,
										5315,
										5317,
										5319
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16379,
									"character": 10
								}
							],
							"typeParameter": [
								{
									"id": 5322,
									"name": "W",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 5335,
							"name": "EventListenerOrEventListenerObject",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 17604,
									"character": 5
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"qualifiedName": "EventListener",
										"package": "typescript",
										"name": "EventListener"
									},
									{
										"type": "reference",
										"qualifiedName": "EventListenerObject",
										"package": "typescript",
										"name": "EventListenerObject"
									}
								]
							}
						},
						{
							"id": 5303,
							"name": "ReadableStreamDefaultReadResult",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 17636,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 5304,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 5323,
										"typeArguments": [
											{
												"type": "reference",
												"id": 5304,
												"qualifiedName": "T",
												"package": "typescript",
												"name": "T"
											}
										],
										"qualifiedName": "ReadableStreamDefaultReadValueResult",
										"package": "typescript",
										"name": "ReadableStreamDefaultReadValueResult"
									},
									{
										"type": "reference",
										"id": 5327,
										"qualifiedName": "ReadableStreamDefaultReadDoneResult",
										"package": "typescript",
										"name": "ReadableStreamDefaultReadDoneResult"
									}
								]
							}
						},
						{
							"id": 5265,
							"name": "AbortSignal",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 1893,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5266,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExternal": true
									},
									"children": [
										{
											"id": 5267,
											"name": "prototype",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
													"line": 1894,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 5265,
												"qualifiedName": "AbortSignal",
												"package": "typescript",
												"name": "AbortSignal"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												5267
											]
										}
									]
								}
							}
						},
						{
							"id": 5185,
							"name": "Blob",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 2386,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5186,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExternal": true
									},
									"children": [
										{
											"id": 5187,
											"name": "prototype",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
													"line": 2387,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 5185,
												"qualifiedName": "Blob",
												"package": "typescript",
												"name": "Blob"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												5187
											]
										}
									]
								}
							},
							"extendedBy": [
								{
									"type": "reference",
									"id": 5168,
									"name": "File"
								}
							]
						},
						{
							"id": 5165,
							"name": "File",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 5014,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5166,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExternal": true
									},
									"children": [
										{
											"id": 5167,
											"name": "prototype",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
													"line": 5015,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 5165,
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												5167
											]
										}
									]
								}
							}
						},
						{
							"id": 5202,
							"name": "ReadableStream",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 11008,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5203,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExternal": true
									},
									"children": [
										{
											"id": 5204,
											"name": "prototype",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
													"line": 11009,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 5202,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "ReadableStream",
												"package": "typescript",
												"name": "ReadableStream"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												5204
											]
										}
									]
								}
							}
						},
						{
							"id": 5224,
							"name": "ReadableStreamDefaultReader",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 11030,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5225,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExternal": true
									},
									"children": [
										{
											"id": 5226,
											"name": "prototype",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
													"line": 11031,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 5224,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "ReadableStreamDefaultReader",
												"package": "typescript",
												"name": "ReadableStreamDefaultReader"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												5226
											]
										}
									]
								}
							}
						},
						{
							"id": 5247,
							"name": "WritableStream",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16363,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5248,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExternal": true
									},
									"children": [
										{
											"id": 5249,
											"name": "prototype",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
													"line": 16364,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 5247,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "WritableStream",
												"package": "typescript",
												"name": "WritableStream"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												5249
											]
										}
									]
								}
							}
						},
						{
							"id": 5305,
							"name": "WritableStreamDefaultWriter",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16389,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5306,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExternal": true
									},
									"children": [
										{
											"id": 5307,
											"name": "prototype",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
													"line": 16390,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 5305,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "WritableStreamDefaultWriter",
												"package": "typescript",
												"name": "WritableStreamDefaultWriter"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												5307
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"kind": 256,
							"children": [
								5268,
								5338,
								5330,
								5188,
								5336,
								5168,
								5205,
								5327,
								5323,
								5227,
								5260,
								5237,
								5242,
								5250,
								5308
							]
						},
						{
							"title": "Type aliases",
							"kind": 4194304,
							"children": [
								5335,
								5303
							]
						},
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								5265,
								5185,
								5165,
								5202,
								5224,
								5247,
								5305
							]
						}
					]
				},
				{
					"id": 3033,
					"name": "FileField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Base class for File fields",
						"text": "Used by ImageField.\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 3035,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3036,
									"name": "new FileField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3037,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2898,
												"typeArguments": [
													{
														"type": "reference",
														"id": 5165,
														"qualifiedName": "File",
														"package": "typescript",
														"name": "File"
													},
													{
														"type": "reference",
														"id": 5165,
														"qualifiedName": "File",
														"package": "typescript",
														"name": "File"
													}
												],
												"name": "FieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 3033,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2969,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2968,
								"name": "default.constructor"
							}
						},
						{
							"id": 3038,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 5165,
								"qualifiedName": "File",
								"package": "typescript",
								"name": "File"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2974,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 3039,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 5165,
								"qualifiedName": "File",
								"package": "typescript",
								"name": "File"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2975,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 3056,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 5165,
										"qualifiedName": "File",
										"package": "typescript",
										"name": "File"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3057,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3058,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 5165,
																"qualifiedName": "File",
																"package": "typescript",
																"name": "File"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"id": 5165,
																				"qualifiedName": "File",
																				"package": "typescript",
																				"name": "File"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2994,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 3053,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2161,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"id": 5165,
										"qualifiedName": "File",
										"package": "typescript",
										"name": "File"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2991,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 3048,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2986,
								"name": "default.blank"
							}
						},
						{
							"id": 3049,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2987,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 3052,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 5165,
										"qualifiedName": "File",
										"package": "typescript",
										"name": "File"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2990,
								"name": "default.choices"
							}
						},
						{
							"id": 3051,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2989,
								"name": "default.helpText"
							}
						},
						{
							"id": 3050,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2988,
								"name": "default.label"
							}
						},
						{
							"id": 3054,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2992,
								"name": "default.readOnly"
							}
						},
						{
							"id": 3055,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2993,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 3034,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/FileField.ts",
									"line": 12,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'FileField'",
							"overwrites": {
								"type": "reference",
								"id": 2967,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 3086,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3087,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2067,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3024,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 3072,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3073,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2970,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3010,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 3082,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3083,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3020,
								"name": "default.isBound"
							}
						},
						{
							"id": 3040,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3041,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 3042,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3043,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2977,
								"name": "default.model"
							}
						},
						{
							"id": 3044,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3045,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 3046,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3047,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2982,
								"name": "default.name"
							}
						},
						{
							"id": 3084,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3085,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3022,
								"name": "default.value"
							}
						},
						{
							"id": 3080,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3081,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2966,
										"typeArguments": [
											{
												"type": "reference",
												"id": 5165,
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											},
											{
												"type": "reference",
												"id": 5165,
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											},
											{
												"type": "reference",
												"id": 5165,
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3019,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3018,
								"name": "default.clone"
							}
						},
						{
							"id": 3088,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3089,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 3090,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3027,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3026,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 3059,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3060,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 3061,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 5165,
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2998,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2997,
								"name": "default.format"
							}
						},
						{
							"id": 3076,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3077,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 3078,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5165,
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										},
										{
											"id": 3079,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5165,
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3015,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3014,
								"name": "default.isEqual"
							}
						},
						{
							"id": 3065,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3066,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 3067,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 5165,
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 5165,
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3004,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3003,
								"name": "default.normalize"
							}
						},
						{
							"id": 3062,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3063,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 3064,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 5165,
														"qualifiedName": "File",
														"package": "typescript",
														"name": "File"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 5165,
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3001,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3000,
								"name": "default.parse"
							}
						},
						{
							"id": 3068,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3069,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 3070,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 5165,
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3071,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3007,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3006,
								"name": "default.toJS"
							}
						},
						{
							"id": 3074,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3075,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3013,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3012,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3035
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3038,
								3039,
								3056,
								3053,
								3048,
								3049,
								3052,
								3051,
								3050,
								3054,
								3055,
								3034
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3086,
								3072,
								3082,
								3040,
								3044,
								3084
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3080,
								3088,
								3059,
								3076,
								3065,
								3062,
								3068,
								3074
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/FileField.ts",
							"line": 11,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2966,
							"typeArguments": [
								{
									"type": "reference",
									"id": 5165,
									"qualifiedName": "File",
									"package": "typescript",
									"name": "File"
								}
							],
							"name": "default"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 3273,
							"name": "ImageField"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"kind": 4,
					"children": [
						5164
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3033
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/FileField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3091,
			"name": "fields/FloatField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3092,
					"name": "FloatField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Float Field.",
						"text": "Use only if stored number is tolerant on precision error.\n\nSee also: [DecimalField](doc:DecimalField)\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 3094,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3095,
									"name": "new FloatField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3096,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3643,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"name": "NumberFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 3092,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3651,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3650,
								"name": "default.constructor"
							}
						},
						{
							"id": 3102,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3657,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 3103,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3658,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 3120,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3121,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3122,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3675,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 3117,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2161,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3672,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 3112,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3667,
								"name": "default.blank"
							}
						},
						{
							"id": 3113,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3668,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 3116,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3671,
								"name": "default.choices"
							}
						},
						{
							"id": 3115,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3670,
								"name": "default.helpText"
							}
						},
						{
							"id": 3114,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3669,
								"name": "default.label"
							}
						},
						{
							"id": 3101,
							"name": "maxValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
									"line": 25,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3656,
								"name": "default.maxValue"
							}
						},
						{
							"id": 3100,
							"name": "minValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
									"line": 24,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3655,
								"name": "default.minValue"
							}
						},
						{
							"id": 3118,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3673,
								"name": "default.readOnly"
							}
						},
						{
							"id": 3119,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3674,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 3093,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/FloatField.ts",
									"line": 14,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'FloatField'",
							"overwrites": {
								"type": "reference",
								"id": 3649,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 3147,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3148,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2067,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3705,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 3133,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3134,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2970,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3691,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 3143,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3144,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3701,
								"name": "default.isBound"
							}
						},
						{
							"id": 3104,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3105,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 3106,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3107,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3659,
								"name": "default.model"
							}
						},
						{
							"id": 3108,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3109,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 3110,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3111,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3663,
								"name": "default.name"
							}
						},
						{
							"id": 3145,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3146,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3703,
								"name": "default.value"
							}
						},
						{
							"id": 3141,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3142,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2966,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3700,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3699,
								"name": "default.clone"
							}
						},
						{
							"id": 3149,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3150,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 3151,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3708,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3707,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 3123,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3124,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 3125,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3679,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3678,
								"name": "default.format"
							}
						},
						{
							"id": 3137,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3138,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 3139,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 3140,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3696,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3695,
								"name": "default.isEqual"
							}
						},
						{
							"id": 3126,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3127,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 3128,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3685,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3684,
								"name": "default.normalize"
							}
						},
						{
							"id": 3097,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/FloatField.ts",
									"line": 15,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3098,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 3099,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 3682,
										"name": "default.parse"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3681,
								"name": "default.parse"
							}
						},
						{
							"id": 3129,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3130,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 3131,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3132,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3688,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3687,
								"name": "default.toJS"
							}
						},
						{
							"id": 3135,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3136,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3694,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3693,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3094
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3102,
								3103,
								3120,
								3117,
								3112,
								3113,
								3116,
								3115,
								3114,
								3101,
								3100,
								3118,
								3119,
								3093
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3147,
								3133,
								3143,
								3104,
								3108,
								3145
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3141,
								3149,
								3123,
								3137,
								3126,
								3097,
								3129,
								3135
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/FloatField.ts",
							"line": 13,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3648,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "number"
								}
							],
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3092
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/FloatField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3152,
			"name": "fields/FloatRangeField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3153,
					"name": "FloatRangeField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 3155,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3156,
									"name": "new FloatRangeField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3157,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5153,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"name": "RangeFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 3153,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3776,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3775,
								"name": "default.constructor"
							}
						},
						{
							"id": 3159,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3780,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 3160,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3781,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 3177,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3178,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3179,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3798,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 3174,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2161,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3795,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 3169,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3790,
								"name": "default.blank"
							}
						},
						{
							"id": 3170,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3791,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 3173,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3794,
								"name": "default.choices"
							}
						},
						{
							"id": 3172,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3793,
								"name": "default.helpText"
							}
						},
						{
							"id": 3171,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3792,
								"name": "default.label"
							}
						},
						{
							"id": 3175,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3796,
								"name": "default.readOnly"
							}
						},
						{
							"id": 3158,
							"name": "separator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
									"line": 17,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3779,
								"name": "default.separator"
							}
						},
						{
							"id": 3176,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3797,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 3154,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/FloatRangeField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'FloatRangeField'",
							"overwrites": {
								"type": "reference",
								"id": 3774,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 3207,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3208,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2067,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3828,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 3193,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3194,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2970,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3814,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 3203,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3204,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3824,
								"name": "default.isBound"
							}
						},
						{
							"id": 3161,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3162,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 3163,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3164,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3782,
								"name": "default.model"
							}
						},
						{
							"id": 3165,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3166,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 3167,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3168,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3786,
								"name": "default.name"
							}
						},
						{
							"id": 3205,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3206,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3826,
								"name": "default.value"
							}
						},
						{
							"id": 3201,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3202,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2966,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3823,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3822,
								"name": "default.clone"
							}
						},
						{
							"id": 3209,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3210,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 3211,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3831,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3830,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 3180,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3181,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 3182,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3802,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3801,
								"name": "default.format"
							}
						},
						{
							"id": 3197,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3198,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 3199,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 3200,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3819,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3818,
								"name": "default.isEqual"
							}
						},
						{
							"id": 3186,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3187,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 3188,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3808,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3807,
								"name": "default.normalize"
							}
						},
						{
							"id": 3183,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3184,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 3185,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3805,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3804,
								"name": "default.parse"
							}
						},
						{
							"id": 3189,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3190,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 3191,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3192,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3811,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3810,
								"name": "default.toJS"
							}
						},
						{
							"id": 3195,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3196,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3817,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3816,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3155
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3159,
								3160,
								3177,
								3174,
								3169,
								3170,
								3173,
								3172,
								3171,
								3175,
								3158,
								3176,
								3154
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3207,
								3193,
								3203,
								3161,
								3165,
								3205
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3201,
								3209,
								3180,
								3197,
								3186,
								3183,
								3189,
								3195
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/FloatRangeField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3773,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "number"
								}
							],
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3153
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/FloatRangeField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3212,
			"name": "fields/IPAddressField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3213,
					"name": "IPAddressField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 3215,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3216,
									"name": "new IPAddressField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3217,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5144,
												"name": "CharFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 3213,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2299,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2298,
								"name": "default.constructor"
							}
						},
						{
							"id": 3219,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2302,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 3220,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2303,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 3237,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3238,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3239,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2320,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 3234,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2161,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2317,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 3229,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2312,
								"name": "default.blank"
							}
						},
						{
							"id": 3230,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2313,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 3233,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2316,
								"name": "default.choices"
							}
						},
						{
							"id": 3232,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2315,
								"name": "default.helpText"
							}
						},
						{
							"id": 3231,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2314,
								"name": "default.label"
							}
						},
						{
							"id": 3218,
							"name": "maxLength",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 18,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2301,
								"name": "default.maxLength"
							}
						},
						{
							"id": 3235,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2318,
								"name": "default.readOnly"
							}
						},
						{
							"id": 3236,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2319,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 3214,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/IPAddressField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'IPAddressField'",
							"overwrites": {
								"type": "reference",
								"id": 2297,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 3267,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3268,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2067,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2350,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 3253,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3254,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2970,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2336,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 3263,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3264,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2346,
								"name": "default.isBound"
							}
						},
						{
							"id": 3221,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3222,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 3223,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3224,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2304,
								"name": "default.model"
							}
						},
						{
							"id": 3225,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3226,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 3227,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3228,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2308,
								"name": "default.name"
							}
						},
						{
							"id": 3265,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3266,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2348,
								"name": "default.value"
							}
						},
						{
							"id": 3261,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3262,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2966,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2345,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2344,
								"name": "default.clone"
							}
						},
						{
							"id": 3269,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3270,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 3271,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2353,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2352,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 3240,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3241,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 3242,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2324,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2323,
								"name": "default.format"
							}
						},
						{
							"id": 3257,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3258,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 3259,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3260,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2341,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2340,
								"name": "default.isEqual"
							}
						},
						{
							"id": 3246,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3247,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 3248,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2330,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2329,
								"name": "default.normalize"
							}
						},
						{
							"id": 3243,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3244,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 3245,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2327,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2326,
								"name": "default.parse"
							}
						},
						{
							"id": 3249,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3250,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 3251,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3252,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2333,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2332,
								"name": "default.toJS"
							}
						},
						{
							"id": 3255,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3256,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2339,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2338,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3215
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3219,
								3220,
								3237,
								3234,
								3229,
								3230,
								3233,
								3232,
								3231,
								3218,
								3235,
								3236,
								3214
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3267,
								3253,
								3263,
								3221,
								3225,
								3265
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3261,
								3269,
								3240,
								3257,
								3246,
								3243,
								3249,
								3255
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/IPAddressField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2296,
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3213
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/IPAddressField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3272,
			"name": "fields/ImageField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3273,
					"name": "ImageField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Image field.",
						"text": "ImageField is an exact match of FileField, however the representation (format/widget) will be different.\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 3275,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3276,
									"name": "new ImageField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3277,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2898,
												"typeArguments": [
													{
														"type": "reference",
														"id": 5165,
														"qualifiedName": "File",
														"package": "typescript",
														"name": "File"
													},
													{
														"type": "reference",
														"id": 5165,
														"qualifiedName": "File",
														"package": "typescript",
														"name": "File"
													}
												],
												"name": "FieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 3273,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3036,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3035,
								"name": "default.constructor"
							}
						},
						{
							"id": 3278,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 5165,
								"qualifiedName": "File",
								"package": "typescript",
								"name": "File"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3038,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 3279,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 5165,
								"qualifiedName": "File",
								"package": "typescript",
								"name": "File"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3039,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 3296,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 5165,
										"qualifiedName": "File",
										"package": "typescript",
										"name": "File"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3297,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3298,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 5165,
																"qualifiedName": "File",
																"package": "typescript",
																"name": "File"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"id": 5165,
																				"qualifiedName": "File",
																				"package": "typescript",
																				"name": "File"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3056,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 3293,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2161,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"id": 5165,
										"qualifiedName": "File",
										"package": "typescript",
										"name": "File"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3053,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 3288,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3048,
								"name": "default.blank"
							}
						},
						{
							"id": 3289,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3049,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 3292,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 5165,
										"qualifiedName": "File",
										"package": "typescript",
										"name": "File"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3052,
								"name": "default.choices"
							}
						},
						{
							"id": 3291,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3051,
								"name": "default.helpText"
							}
						},
						{
							"id": 3290,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3050,
								"name": "default.label"
							}
						},
						{
							"id": 3294,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3054,
								"name": "default.readOnly"
							}
						},
						{
							"id": 3295,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3055,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 3274,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/ImageField.ts",
									"line": 12,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'ImageField'",
							"overwrites": {
								"type": "reference",
								"id": 3034,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 3326,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3327,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2067,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FileField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3086,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 3312,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3313,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2970,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FileField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3072,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 3322,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3323,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FileField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3082,
								"name": "default.isBound"
							}
						},
						{
							"id": 3280,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3281,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FileField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 3282,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3283,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FileField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3040,
								"name": "default.model"
							}
						},
						{
							"id": 3284,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3285,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FileField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 3286,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3287,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FileField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3044,
								"name": "default.name"
							}
						},
						{
							"id": 3324,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3325,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FileField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3084,
								"name": "default.value"
							}
						},
						{
							"id": 3320,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3321,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2966,
										"typeArguments": [
											{
												"type": "reference",
												"id": 5165,
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											},
											{
												"type": "reference",
												"id": 5165,
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											},
											{
												"type": "reference",
												"id": 5165,
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3081,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3080,
								"name": "default.clone"
							}
						},
						{
							"id": 3328,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3329,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 3330,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3089,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3088,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 3299,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3300,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 3301,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 5165,
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3060,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3059,
								"name": "default.format"
							}
						},
						{
							"id": 3316,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3317,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 3318,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5165,
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										},
										{
											"id": 3319,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5165,
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3077,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3076,
								"name": "default.isEqual"
							}
						},
						{
							"id": 3305,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3306,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 3307,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 5165,
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 5165,
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3066,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3065,
								"name": "default.normalize"
							}
						},
						{
							"id": 3302,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3303,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 3304,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 5165,
														"qualifiedName": "File",
														"package": "typescript",
														"name": "File"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 5165,
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3063,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3062,
								"name": "default.parse"
							}
						},
						{
							"id": 3308,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3309,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 3310,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 5165,
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3311,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3069,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3068,
								"name": "default.toJS"
							}
						},
						{
							"id": 3314,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3315,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3075,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3074,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3275
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3278,
								3279,
								3296,
								3293,
								3288,
								3289,
								3292,
								3291,
								3290,
								3294,
								3295,
								3274
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3326,
								3312,
								3322,
								3280,
								3284,
								3324
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3320,
								3328,
								3299,
								3316,
								3305,
								3302,
								3308,
								3314
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/ImageField.ts",
							"line": 11,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3033,
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3273
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/ImageField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3331,
			"name": "fields/IntegerField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3332,
					"name": "IntegerField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 3334,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3335,
									"name": "new IntegerField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3336,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3643,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"name": "NumberFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 3332,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3651,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3650,
								"name": "default.constructor"
							}
						},
						{
							"id": 3342,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3657,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 3343,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3658,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 3360,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3361,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3362,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3675,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 3357,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2161,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3672,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 3352,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3667,
								"name": "default.blank"
							}
						},
						{
							"id": 3353,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3668,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 3356,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3671,
								"name": "default.choices"
							}
						},
						{
							"id": 3355,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3670,
								"name": "default.helpText"
							}
						},
						{
							"id": 3354,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3669,
								"name": "default.label"
							}
						},
						{
							"id": 3341,
							"name": "maxValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
									"line": 25,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3656,
								"name": "default.maxValue"
							}
						},
						{
							"id": 3340,
							"name": "minValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
									"line": 24,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3655,
								"name": "default.minValue"
							}
						},
						{
							"id": 3358,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3673,
								"name": "default.readOnly"
							}
						},
						{
							"id": 3359,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3674,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 3333,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/IntegerField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'IntegerField'",
							"overwrites": {
								"type": "reference",
								"id": 3649,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 3387,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3388,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2067,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3705,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 3373,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3374,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2970,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3691,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 3383,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3384,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3701,
								"name": "default.isBound"
							}
						},
						{
							"id": 3344,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3345,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 3346,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3347,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3659,
								"name": "default.model"
							}
						},
						{
							"id": 3348,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3349,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 3350,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3351,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3663,
								"name": "default.name"
							}
						},
						{
							"id": 3385,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3386,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3703,
								"name": "default.value"
							}
						},
						{
							"id": 3381,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3382,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2966,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3700,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3699,
								"name": "default.clone"
							}
						},
						{
							"id": 3389,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3390,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 3391,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3708,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3707,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 3363,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3364,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 3365,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3679,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3678,
								"name": "default.format"
							}
						},
						{
							"id": 3377,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3378,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 3379,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 3380,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3696,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3695,
								"name": "default.isEqual"
							}
						},
						{
							"id": 3366,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3367,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 3368,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3685,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3684,
								"name": "default.normalize"
							}
						},
						{
							"id": 3337,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/IntegerField.ts",
									"line": 9,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3338,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 3339,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 3682,
										"name": "default.parse"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3681,
								"name": "default.parse"
							}
						},
						{
							"id": 3369,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3370,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 3371,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3372,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3688,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3687,
								"name": "default.toJS"
							}
						},
						{
							"id": 3375,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3376,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3694,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3693,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3334
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3342,
								3343,
								3360,
								3357,
								3352,
								3353,
								3356,
								3355,
								3354,
								3341,
								3340,
								3358,
								3359,
								3333
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3387,
								3373,
								3383,
								3344,
								3348,
								3385
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3381,
								3389,
								3363,
								3377,
								3366,
								3337,
								3369,
								3375
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/IntegerField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3648,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "number"
										}
									]
								}
							],
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3332
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/IntegerField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3392,
			"name": "fields/IntegerRangeField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3393,
					"name": "IntegerRangeField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 3395,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3396,
									"name": "new IntegerRangeField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3397,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5153,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"name": "RangeFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 3393,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3776,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3775,
								"name": "default.constructor"
							}
						},
						{
							"id": 3399,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3780,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 3400,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3781,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 3417,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3418,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3419,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3798,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 3414,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2161,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3795,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 3409,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3790,
								"name": "default.blank"
							}
						},
						{
							"id": 3410,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3791,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 3413,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3794,
								"name": "default.choices"
							}
						},
						{
							"id": 3412,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3793,
								"name": "default.helpText"
							}
						},
						{
							"id": 3411,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3792,
								"name": "default.label"
							}
						},
						{
							"id": 3415,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3796,
								"name": "default.readOnly"
							}
						},
						{
							"id": 3398,
							"name": "separator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
									"line": 17,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3779,
								"name": "default.separator"
							}
						},
						{
							"id": 3416,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3797,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 3394,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/IntegerRangeField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'IntegerRangeField'",
							"overwrites": {
								"type": "reference",
								"id": 3774,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 3447,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3448,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2067,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3828,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 3433,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3434,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2970,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3814,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 3443,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3444,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3824,
								"name": "default.isBound"
							}
						},
						{
							"id": 3401,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3402,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 3403,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3404,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3782,
								"name": "default.model"
							}
						},
						{
							"id": 3405,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3406,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 3407,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3408,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3786,
								"name": "default.name"
							}
						},
						{
							"id": 3445,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3446,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3826,
								"name": "default.value"
							}
						},
						{
							"id": 3441,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3442,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2966,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3823,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3822,
								"name": "default.clone"
							}
						},
						{
							"id": 3449,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3450,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 3451,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3831,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3830,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 3420,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3421,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 3422,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3802,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3801,
								"name": "default.format"
							}
						},
						{
							"id": 3437,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3438,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 3439,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 3440,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3819,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3818,
								"name": "default.isEqual"
							}
						},
						{
							"id": 3426,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3427,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 3428,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3808,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3807,
								"name": "default.normalize"
							}
						},
						{
							"id": 3423,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3424,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 3425,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3805,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3804,
								"name": "default.parse"
							}
						},
						{
							"id": 3429,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3430,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 3431,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3432,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3811,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3810,
								"name": "default.toJS"
							}
						},
						{
							"id": 3435,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3436,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3817,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3816,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3395
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3399,
								3400,
								3417,
								3414,
								3409,
								3410,
								3413,
								3412,
								3411,
								3415,
								3398,
								3416,
								3394
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3447,
								3433,
								3443,
								3401,
								3405,
								3445
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3441,
								3449,
								3420,
								3437,
								3426,
								3423,
								3429,
								3435
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/IntegerRangeField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3773,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "number"
								}
							],
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3393
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/IntegerRangeField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3452,
			"name": "fields/JsonField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3457,
					"name": "JsonField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"originalName": "default",
					"children": [
						{
							"id": 3459,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3460,
									"name": "new JsonField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3461,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5144,
												"name": "CharFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 3457,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2299,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2298,
								"name": "default.constructor"
							}
						},
						{
							"id": 3467,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2302,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 3468,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2303,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 3485,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3486,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3487,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2320,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 3482,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2161,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2317,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 3477,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2312,
								"name": "default.blank"
							}
						},
						{
							"id": 3478,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2313,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 3481,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2316,
								"name": "default.choices"
							}
						},
						{
							"id": 3480,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2315,
								"name": "default.helpText"
							}
						},
						{
							"id": 3479,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2314,
								"name": "default.label"
							}
						},
						{
							"id": 3466,
							"name": "maxLength",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 18,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2301,
								"name": "default.maxLength"
							}
						},
						{
							"id": 3483,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2318,
								"name": "default.readOnly"
							}
						},
						{
							"id": 3484,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2319,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 3458,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/JsonField.ts",
									"line": 14,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'JsonField'",
							"overwrites": {
								"type": "reference",
								"id": 2297,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 3512,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3513,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2067,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2350,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 3498,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3499,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2970,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2336,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 3508,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3509,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2346,
								"name": "default.isBound"
							}
						},
						{
							"id": 3469,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3470,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 3471,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3472,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2304,
								"name": "default.model"
							}
						},
						{
							"id": 3473,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3474,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 3475,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3476,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2308,
								"name": "default.name"
							}
						},
						{
							"id": 3510,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3511,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2348,
								"name": "default.value"
							}
						},
						{
							"id": 3506,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3507,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2966,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2345,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2344,
								"name": "default.clone"
							}
						},
						{
							"id": 3514,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3515,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 3516,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2353,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2352,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 3488,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3489,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 3490,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2324,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2323,
								"name": "default.format"
							}
						},
						{
							"id": 3502,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3503,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 3504,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3505,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2341,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2340,
								"name": "default.isEqual"
							}
						},
						{
							"id": 3491,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3492,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 3493,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2330,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2329,
								"name": "default.normalize"
							}
						},
						{
							"id": 3462,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/JsonField.ts",
									"line": 15,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3463,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"typeParameter": [
										{
											"id": 3464,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 3465,
											"name": "json",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3453,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3464,
														"name": "T"
													}
												],
												"name": "JSON"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3464,
										"name": "T"
									},
									"overwrites": {
										"type": "reference",
										"id": 2327,
										"name": "default.parse"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 2326,
								"name": "default.parse"
							}
						},
						{
							"id": 3494,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3495,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 3496,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3497,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2333,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2332,
								"name": "default.toJS"
							}
						},
						{
							"id": 3500,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3501,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2339,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2338,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3459
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3467,
								3468,
								3485,
								3482,
								3477,
								3478,
								3481,
								3480,
								3479,
								3466,
								3483,
								3484,
								3458
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3512,
								3498,
								3508,
								3469,
								3473,
								3510
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3506,
								3514,
								3488,
								3502,
								3491,
								3462,
								3494,
								3500
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/JsonField.ts",
							"line": 13,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2296,
							"name": "default"
						}
					]
				},
				{
					"id": 3453,
					"name": "JSON",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/JsonField.ts",
							"line": 3,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 3456,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3454,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3455,
											"name": " __JSON",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/viewmodel/src/fields/JsonField.ts",
													"line": 3,
													"character": 33
												}
											],
											"type": {
												"type": "reference",
												"id": 3456,
												"name": "T"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3455
											]
										}
									],
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/fields/JsonField.ts",
											"line": 3,
											"character": 31
										}
									]
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3457
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						3453
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/JsonField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3517,
			"name": "fields/ListField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3518,
					"name": "ListField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "A container field for an array of values",
						"text": "You must pass `childField` which is the underlying field for each value in the\nlist. `ListField` will call `format`, `parse`, and `normalize` on this field for\neach value in the list.\n\nBy default `defaultValue` will be set to an empty array unless `blankAsNull` is\n`true` in which case it will be set to `null`. `normalize` and `parse` also behave\nin the same way (a falsy value passed to these will either return an empty array\nwhen `blankAsNull` is false or null when it is true).\n\n```js\nconst listOfInts = new ListField({ childField: new IntegerField() });\n```\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 3520,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/ListField.ts",
									"line": 27,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3521,
									"name": "new ListField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 3522,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										},
										{
											"id": 3523,
											"name": "ParsableType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "reference",
												"id": 3522,
												"name": "T"
											}
										}
									],
									"parameters": [
										{
											"id": 3524,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 3525,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 3526,
																	"name": "childField",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "js-packages/@prestojs/viewmodel/src/fields/ListField.ts",
																			"line": 37,
																			"character": 9
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 2966,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 3522,
																				"name": "T"
																			},
																			{
																				"type": "reference",
																				"id": 3523,
																				"name": "ParsableType"
																			},
																			{
																				"type": "reference",
																				"id": 3522,
																				"name": "T"
																			}
																		],
																		"name": "default"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		3526
																	]
																}
															]
														}
													},
													{
														"type": "reference",
														"id": 2898,
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 3522,
																	"name": "T"
																}
															},
															{
																"type": "reference",
																"id": 3522,
																"name": "T"
															}
														],
														"name": "FieldProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3518,
										"typeArguments": [
											{
												"type": "reference",
												"id": 3522,
												"name": "T"
											},
											{
												"type": "reference",
												"id": 3523,
												"name": "ParsableType"
											}
										],
										"name": "default"
									},
									"overwrites": {
										"type": "reference",
										"id": 2969,
										"name": "default.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 2968,
								"name": "default.constructor"
							}
						},
						{
							"id": 3541,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3522,
									"name": "T"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2974,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 3542,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3523,
									"name": "ParsableType"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2975,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 3559,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 3522,
											"name": "T"
										}
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3560,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3561,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 3522,
																	"name": "T"
																}
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"id": 3522,
																					"name": "T"
																				}
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2994,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 3556,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2161,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"id": 3522,
										"name": "T"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2991,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 3551,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2986,
								"name": "default.blank"
							}
						},
						{
							"id": 3552,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2987,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 3527,
							"name": "childField",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/ListField.ts",
									"line": 25,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2966,
								"typeArguments": [
									{
										"type": "reference",
										"id": 3522,
										"name": "T"
									},
									{
										"type": "reference",
										"id": 3523,
										"name": "ParsableType"
									},
									{
										"type": "reference",
										"id": 3522,
										"name": "T"
									}
								],
								"name": "default"
							}
						},
						{
							"id": 3555,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 3522,
										"name": "T"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2990,
								"name": "default.choices"
							}
						},
						{
							"id": 3554,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2989,
								"name": "default.helpText"
							}
						},
						{
							"id": 3553,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2988,
								"name": "default.label"
							}
						},
						{
							"id": 3557,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2992,
								"name": "default.readOnly"
							}
						},
						{
							"id": 3558,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2993,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 3519,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/ListField.ts",
									"line": 23,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'ListField'",
							"overwrites": {
								"type": "reference",
								"id": 2967,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 3576,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3577,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2067,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3024,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 3566,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3567,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2970,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3010,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 3572,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3573,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3020,
								"name": "default.isBound"
							}
						},
						{
							"id": 3543,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3544,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 3545,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3546,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2977,
								"name": "default.model"
							}
						},
						{
							"id": 3547,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3548,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 3549,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3550,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2982,
								"name": "default.name"
							}
						},
						{
							"id": 3574,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3575,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3022,
								"name": "default.value"
							}
						},
						{
							"id": 3570,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3571,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2966,
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 3522,
													"name": "T"
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 3522,
													"name": "T"
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 3522,
													"name": "T"
												}
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3019,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3018,
								"name": "default.clone"
							}
						},
						{
							"id": 3578,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3579,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 3580,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3027,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3026,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 3528,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/ListField.ts",
									"line": 46,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3529,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Calls `childField.format` on each entry in the passed array"
									},
									"parameters": [
										{
											"id": 3530,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 3522,
													"name": "T"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"overwrites": {
										"type": "reference",
										"id": 2998,
										"name": "default.format"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 2997,
								"name": "default.format"
							}
						},
						{
							"id": 3537,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/ListField.ts",
									"line": 97,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3538,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 3539,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 3522,
													"name": "T"
												}
											}
										},
										{
											"id": 3540,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 3522,
													"name": "T"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"overwrites": {
										"type": "reference",
										"id": 3015,
										"name": "default.isEqual"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3014,
								"name": "default.isEqual"
							}
						},
						{
							"id": 3534,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/ListField.ts",
									"line": 80,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3535,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Calls `childField.parse` on each entry in the passed array",
										"text": "If `value` is falsy or an empty array and `blankAsNull` is true\nit will return `null` or if `blankAsNull` is false then it\nwill return an empty array.\n"
									},
									"parameters": [
										{
											"id": 3536,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 3522,
													"name": "T"
												}
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 3004,
										"name": "default.normalize"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3003,
								"name": "default.normalize"
							}
						},
						{
							"id": 3531,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/ListField.ts",
									"line": 60,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3532,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Calls `childField.parse` on each entry in the passed array",
										"text": "If `value` is falsy or an empty array and `blankAsNull` is true\nit will return `null` or if `blankAsNull` is false then it\nwill return an empty array.\n"
									},
									"parameters": [
										{
											"id": 3533,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 3523,
															"name": "ParsableType"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 3522,
													"name": "T"
												}
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 3001,
										"name": "default.parse"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3000,
								"name": "default.parse"
							}
						},
						{
							"id": 3562,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3563,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 3564,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 3522,
													"name": "T"
												}
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3565,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3007,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3006,
								"name": "default.toJS"
							}
						},
						{
							"id": 3568,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3569,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3013,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3012,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3520
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3541,
								3542,
								3559,
								3556,
								3551,
								3552,
								3527,
								3555,
								3554,
								3553,
								3557,
								3558,
								3519
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3576,
								3566,
								3572,
								3543,
								3547,
								3574
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3570,
								3578,
								3528,
								3537,
								3534,
								3531,
								3562,
								3568
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/ListField.ts",
							"line": 22,
							"character": 21
						}
					],
					"typeParameter": [
						{
							"id": 3581,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 3582,
							"name": "ParsableType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "reference",
								"id": 3522,
								"name": "T"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2966,
							"typeArguments": [
								{
									"type": "array",
									"elementType": {
										"type": "reference",
										"id": 3522,
										"name": "T"
									}
								},
								{
									"type": "array",
									"elementType": {
										"type": "reference",
										"id": 3523,
										"name": "ParsableType"
									}
								},
								{
									"type": "reference",
									"id": 3522,
									"name": "T"
								}
							],
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3518
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/ListField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3583,
			"name": "fields/NullableBooleanField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3584,
					"name": "NullableBooleanField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Field for Boolean type values with Null being a valid option. Count both undefined and null as null instead of False.",
						"text": "Follows standard javascript Truthy and Falsy definition except undefined and null.\n\nSee also: [BooleanField](doc:BooleanField).\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 3586,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3587,
									"name": "new NullableBooleanField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3588,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2898,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "FieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 3584,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2969,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2968,
								"name": "default.constructor"
							}
						},
						{
							"id": 3592,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2974,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 3593,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2975,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 3610,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3611,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3612,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "boolean"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2994,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 3607,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2161,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2991,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 3602,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2986,
								"name": "default.blank"
							}
						},
						{
							"id": 3603,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2987,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 3606,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2990,
								"name": "default.choices"
							}
						},
						{
							"id": 3605,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2989,
								"name": "default.helpText"
							}
						},
						{
							"id": 3604,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2988,
								"name": "default.label"
							}
						},
						{
							"id": 3608,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2992,
								"name": "default.readOnly"
							}
						},
						{
							"id": 3609,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2993,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 3585,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NullableBooleanField.ts",
									"line": 14,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'NullableBooleanField'",
							"overwrites": {
								"type": "reference",
								"id": 2967,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 3637,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3638,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2067,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3024,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 3623,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3624,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2970,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3010,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 3633,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3634,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3020,
								"name": "default.isBound"
							}
						},
						{
							"id": 3594,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3595,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 3596,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3597,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2977,
								"name": "default.model"
							}
						},
						{
							"id": 3598,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3599,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 3600,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3601,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2982,
								"name": "default.name"
							}
						},
						{
							"id": 3635,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3636,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3022,
								"name": "default.value"
							}
						},
						{
							"id": 3631,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3632,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2966,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3019,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3018,
								"name": "default.clone"
							}
						},
						{
							"id": 3639,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3640,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 3641,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3027,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3026,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 3613,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3614,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 3615,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2998,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2997,
								"name": "default.format"
							}
						},
						{
							"id": 3627,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3628,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 3629,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 3630,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3015,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3014,
								"name": "default.isEqual"
							}
						},
						{
							"id": 3616,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3617,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 3618,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3004,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3003,
								"name": "default.normalize"
							}
						},
						{
							"id": 3589,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NullableBooleanField.ts",
									"line": 15,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3590,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 3591,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 3001,
										"name": "default.parse"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3000,
								"name": "default.parse"
							}
						},
						{
							"id": 3619,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3620,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 3621,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3622,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3007,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3006,
								"name": "default.toJS"
							}
						},
						{
							"id": 3625,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3626,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3013,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3012,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3586
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3592,
								3593,
								3610,
								3607,
								3602,
								3603,
								3606,
								3605,
								3604,
								3608,
								3609,
								3585
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3637,
								3623,
								3633,
								3594,
								3598,
								3635
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3631,
								3639,
								3613,
								3627,
								3616,
								3589,
								3619,
								3625
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/NullableBooleanField.ts",
							"line": 13,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2966,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "boolean"
								}
							],
							"name": "default"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 2237,
							"name": "BooleanField"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3584
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/NullableBooleanField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3642,
			"name": "fields/NumberField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3648,
					"name": "NumberField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Base class for numeric fields",
						"text": "Other numeric fields (IntegerField, DecimalField, FloatField...) will extend this.\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 3650,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
									"line": 27,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3651,
									"name": "new NumberField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 3652,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										},
										{
											"id": 3653,
											"name": "ParsableValueT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "reference",
												"id": 3652,
												"name": "T"
											}
										}
									],
									"parameters": [
										{
											"id": 3654,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3643,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3652,
														"name": "T"
													}
												],
												"name": "NumberFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 3648,
										"typeArguments": [
											{
												"type": "reference",
												"id": 3652,
												"name": "T"
											},
											{
												"type": "reference",
												"id": 3653,
												"name": "ParsableValueT"
											}
										],
										"name": "default"
									},
									"overwrites": {
										"type": "reference",
										"id": 2969,
										"name": "default.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 2968,
								"name": "default.constructor"
							}
						},
						{
							"id": 3657,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 3652,
								"name": "T"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2974,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 3658,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 3653,
								"name": "ParsableValueT"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2975,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 3675,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 3652,
										"name": "T"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3676,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3677,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 3652,
																"name": "T"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"id": 3652,
																				"name": "T"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2994,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 3672,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2161,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"id": 3652,
										"name": "T"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2991,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 3667,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2986,
								"name": "default.blank"
							}
						},
						{
							"id": 3668,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2987,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 3671,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 3652,
										"name": "T"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2990,
								"name": "default.choices"
							}
						},
						{
							"id": 3670,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2989,
								"name": "default.helpText"
							}
						},
						{
							"id": 3669,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2988,
								"name": "default.label"
							}
						},
						{
							"id": 3656,
							"name": "maxValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
									"line": 25,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3655,
							"name": "minValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
									"line": 24,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3673,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2992,
								"name": "default.readOnly"
							}
						},
						{
							"id": 3674,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2993,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 3649,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
									"line": 23,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'NumberField'",
							"overwrites": {
								"type": "reference",
								"id": 2967,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 3705,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3706,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2067,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3024,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 3691,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3692,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2970,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3010,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 3701,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3702,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3020,
								"name": "default.isBound"
							}
						},
						{
							"id": 3659,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3660,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 3661,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3662,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2977,
								"name": "default.model"
							}
						},
						{
							"id": 3663,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3664,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 3665,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3666,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2982,
								"name": "default.name"
							}
						},
						{
							"id": 3703,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3704,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3022,
								"name": "default.value"
							}
						},
						{
							"id": 3699,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3700,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2966,
										"typeArguments": [
											{
												"type": "reference",
												"id": 3652,
												"name": "T"
											},
											{
												"type": "reference",
												"id": 3652,
												"name": "T"
											},
											{
												"type": "reference",
												"id": 3652,
												"name": "T"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3019,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3018,
								"name": "default.clone"
							}
						},
						{
							"id": 3707,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3708,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 3709,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3027,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3026,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 3678,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3679,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 3680,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 3652,
												"name": "T"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2998,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2997,
								"name": "default.format"
							}
						},
						{
							"id": 3695,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3696,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 3697,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3652,
												"name": "T"
											}
										},
										{
											"id": 3698,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3652,
												"name": "T"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3015,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3014,
								"name": "default.isEqual"
							}
						},
						{
							"id": 3684,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3685,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 3686,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 3653,
												"name": "ParsableValueT"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 3652,
												"name": "T"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3004,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3003,
								"name": "default.normalize"
							}
						},
						{
							"id": 3681,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3682,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 3683,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 3653,
														"name": "ParsableValueT"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 3652,
												"name": "T"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3001,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3000,
								"name": "default.parse"
							}
						},
						{
							"id": 3687,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3688,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 3689,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 3652,
												"name": "T"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3690,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3007,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3006,
								"name": "default.toJS"
							}
						},
						{
							"id": 3693,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3694,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3013,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3012,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3650
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3657,
								3658,
								3675,
								3672,
								3667,
								3668,
								3671,
								3670,
								3669,
								3656,
								3655,
								3673,
								3674,
								3649
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3705,
								3691,
								3701,
								3659,
								3663,
								3703
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3699,
								3707,
								3678,
								3695,
								3684,
								3681,
								3687,
								3693
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
							"line": 19,
							"character": 21
						}
					],
					"typeParameter": [
						{
							"id": 3710,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 3711,
							"name": "ParsableValueT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "reference",
								"id": 3652,
								"name": "T"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2966,
							"typeArguments": [
								{
									"type": "reference",
									"id": 3652,
									"name": "T"
								},
								{
									"type": "reference",
									"id": 3653,
									"name": "ParsableValueT"
								}
							],
							"name": "default"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 2656,
							"name": "DecimalField"
						},
						{
							"type": "reference",
							"id": 3092,
							"name": "FloatField"
						},
						{
							"type": "reference",
							"id": 3332,
							"name": "IntegerField"
						}
					]
				},
				{
					"id": 3643,
					"name": "NumberFieldProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "expand-properties",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
							"line": 6,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 3647,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"id": 2898,
								"typeArguments": [
									{
										"type": "reference",
										"id": 3647,
										"name": "T"
									}
								],
								"name": "FieldProps"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3644,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3646,
											"name": "maxValue",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
													"line": 8,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 3645,
											"name": "minValue",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
													"line": 7,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3646,
												3645
											]
										}
									],
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
											"line": 6,
											"character": 50
										}
									]
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3648
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						3643
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3712,
			"name": "fields/PasswordField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3713,
					"name": "PasswordField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 3715,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3716,
									"name": "new PasswordField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3717,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5144,
												"name": "CharFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 3713,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2299,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2298,
								"name": "default.constructor"
							}
						},
						{
							"id": 3719,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2302,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 3720,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2303,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 3737,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3738,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3739,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2320,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 3734,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2161,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2317,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 3729,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2312,
								"name": "default.blank"
							}
						},
						{
							"id": 3730,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2313,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 3733,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2316,
								"name": "default.choices"
							}
						},
						{
							"id": 3732,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2315,
								"name": "default.helpText"
							}
						},
						{
							"id": 3731,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2314,
								"name": "default.label"
							}
						},
						{
							"id": 3718,
							"name": "maxLength",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 18,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2301,
								"name": "default.maxLength"
							}
						},
						{
							"id": 3735,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2318,
								"name": "default.readOnly"
							}
						},
						{
							"id": 3736,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2319,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 3714,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/PasswordField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'PasswordField'",
							"overwrites": {
								"type": "reference",
								"id": 2297,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 3767,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3768,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2067,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2350,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 3753,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3754,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2970,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2336,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 3763,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3764,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2346,
								"name": "default.isBound"
							}
						},
						{
							"id": 3721,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3722,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 3723,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3724,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2304,
								"name": "default.model"
							}
						},
						{
							"id": 3725,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3726,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 3727,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3728,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2308,
								"name": "default.name"
							}
						},
						{
							"id": 3765,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3766,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2348,
								"name": "default.value"
							}
						},
						{
							"id": 3761,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3762,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2966,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2345,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2344,
								"name": "default.clone"
							}
						},
						{
							"id": 3769,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3770,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 3771,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2353,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2352,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 3740,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3741,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 3742,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2324,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2323,
								"name": "default.format"
							}
						},
						{
							"id": 3757,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3758,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 3759,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3760,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2341,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2340,
								"name": "default.isEqual"
							}
						},
						{
							"id": 3746,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3747,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 3748,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2330,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2329,
								"name": "default.normalize"
							}
						},
						{
							"id": 3743,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3744,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 3745,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2327,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2326,
								"name": "default.parse"
							}
						},
						{
							"id": 3749,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3750,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 3751,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3752,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2333,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2332,
								"name": "default.toJS"
							}
						},
						{
							"id": 3755,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3756,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2339,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2338,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3715
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3719,
								3720,
								3737,
								3734,
								3729,
								3730,
								3733,
								3732,
								3731,
								3718,
								3735,
								3736,
								3714
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3767,
								3753,
								3763,
								3721,
								3725,
								3765
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3761,
								3769,
								3740,
								3757,
								3746,
								3743,
								3749,
								3755
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/PasswordField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2296,
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3713
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/PasswordField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3772,
			"name": "fields/RangeField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3773,
					"name": "RangeField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Base class for range fields (see: https://www.postgresql.org/docs/9.6/rangetypes.html).",
						"text": "Other range based fields (DateTimeRangeField, IntegerRangeField, ...) will extend this.\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 3775,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
									"line": 19,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3776,
									"name": "new RangeField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 3777,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 3778,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5153,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3777,
														"name": "T"
													}
												],
												"name": "RangeFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 3773,
										"typeArguments": [
											{
												"type": "reference",
												"id": 3777,
												"name": "T"
											}
										],
										"name": "default"
									},
									"overwrites": {
										"type": "reference",
										"id": 2969,
										"name": "default.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 2968,
								"name": "default.constructor"
							}
						},
						{
							"id": 3780,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 3777,
								"name": "T"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2974,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 3781,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 3777,
								"name": "T"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2975,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 3798,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 3777,
										"name": "T"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3799,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3800,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 3777,
																"name": "T"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"id": 3777,
																				"name": "T"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2994,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 3795,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2161,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"id": 3777,
										"name": "T"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2991,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 3790,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2986,
								"name": "default.blank"
							}
						},
						{
							"id": 3791,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2987,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 3794,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 3777,
										"name": "T"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2990,
								"name": "default.choices"
							}
						},
						{
							"id": 3793,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2989,
								"name": "default.helpText"
							}
						},
						{
							"id": 3792,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2988,
								"name": "default.label"
							}
						},
						{
							"id": 3796,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2992,
								"name": "default.readOnly"
							}
						},
						{
							"id": 3779,
							"name": "separator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
									"line": 17,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3797,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2993,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 3774,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
									"line": 16,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'RangeField'",
							"overwrites": {
								"type": "reference",
								"id": 2967,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 3828,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3829,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2067,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3024,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 3814,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3815,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2970,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3010,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 3824,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3825,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3020,
								"name": "default.isBound"
							}
						},
						{
							"id": 3782,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3783,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 3784,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3785,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2977,
								"name": "default.model"
							}
						},
						{
							"id": 3786,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3787,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 3788,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3789,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2982,
								"name": "default.name"
							}
						},
						{
							"id": 3826,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3827,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3022,
								"name": "default.value"
							}
						},
						{
							"id": 3822,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3823,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2966,
										"typeArguments": [
											{
												"type": "reference",
												"id": 3777,
												"name": "T"
											},
											{
												"type": "reference",
												"id": 3777,
												"name": "T"
											},
											{
												"type": "reference",
												"id": 3777,
												"name": "T"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3019,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3018,
								"name": "default.clone"
							}
						},
						{
							"id": 3830,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3831,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 3832,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3027,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3026,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 3801,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3802,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 3803,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 3777,
												"name": "T"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2998,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2997,
								"name": "default.format"
							}
						},
						{
							"id": 3818,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3819,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 3820,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3777,
												"name": "T"
											}
										},
										{
											"id": 3821,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3777,
												"name": "T"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3015,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3014,
								"name": "default.isEqual"
							}
						},
						{
							"id": 3807,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3808,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 3809,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 3777,
												"name": "T"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 3777,
												"name": "T"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3004,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3003,
								"name": "default.normalize"
							}
						},
						{
							"id": 3804,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3805,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 3806,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 3777,
														"name": "T"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 3777,
												"name": "T"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3001,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3000,
								"name": "default.parse"
							}
						},
						{
							"id": 3810,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3811,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 3812,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 3777,
												"name": "T"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3813,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3007,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3006,
								"name": "default.toJS"
							}
						},
						{
							"id": 3816,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3817,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3013,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3012,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3775
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3780,
								3781,
								3798,
								3795,
								3790,
								3791,
								3794,
								3793,
								3792,
								3796,
								3779,
								3797,
								3774
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3828,
								3814,
								3824,
								3782,
								3786,
								3826
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3822,
								3830,
								3801,
								3818,
								3807,
								3804,
								3810,
								3816
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
							"line": 15,
							"character": 21
						}
					],
					"typeParameter": [
						{
							"id": 3833,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2966,
							"typeArguments": [
								{
									"type": "reference",
									"id": 3777,
									"name": "T"
								}
							],
							"name": "default"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 2477,
							"name": "DateRangeField"
						},
						{
							"type": "reference",
							"id": 2596,
							"name": "DateTimeRangeField"
						},
						{
							"type": "reference",
							"id": 2718,
							"name": "DecimalRangeField"
						},
						{
							"type": "reference",
							"id": 3153,
							"name": "FloatRangeField"
						},
						{
							"type": "reference",
							"id": 3393,
							"name": "IntegerRangeField"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3773
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3834,
			"name": "fields/RelatedViewModelField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 5352,
					"name": "<internal>",
					"kind": 4,
					"kindString": "Namespace",
					"flags": {},
					"children": [
						{
							"id": 5355,
							"name": "BaseRelatedViewModelValueType",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 10,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 5356,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 5353,
										"typeArguments": [
											{
												"type": "reference",
												"id": 5356,
												"name": "T"
											}
										],
										"name": "RelatedViewModelValueType"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 5353,
											"typeArguments": [
												{
													"type": "reference",
													"id": 5356,
													"name": "T"
												}
											],
											"name": "RelatedViewModelValueType"
										}
									}
								]
							}
						},
						{
							"id": 5359,
							"name": "RelatedViewModelFieldProps",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "expand-properties",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 20,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 5366,
									"name": "TargetViewModelT",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									}
								},
								{
									"id": 5367,
									"name": "FieldValueT",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 5368,
									"name": "SourceFieldNameT",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 2898,
										"typeArguments": [
											{
												"type": "reference",
												"id": 5367,
												"name": "FieldValueT"
											}
										],
										"name": "FieldProps"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 5360,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 5365,
													"name": "cache",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "The cache to use to retrieve related records from. Uses the default model cache if not specified."
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
															"line": 38,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"id": 1827,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5366,
																"name": "TargetViewModelT"
															}
														],
														"name": "ViewModelCache"
													}
												},
												{
													"id": 5361,
													"name": "sourceFieldName",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "The name of the field on the [ViewModel](doc:viewModelFactory) that stores the\nID for this relation"
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
															"line": 29,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"id": 5368,
														"name": "SourceFieldNameT"
													}
												},
												{
													"id": 5362,
													"name": "to",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Either a [ViewModel](doc:viewModelFactory), a function that returns a [ViewModel](doc:viewModelFactory)\nor a function that returns a `Promise` that resolves to a [ViewModel](doc:viewModelFactory)."
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
															"line": 34,
															"character": 4
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reflection",
																"declaration": {
																	"id": 5363,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
																			"line": 34,
																			"character": 9
																		}
																	],
																	"signatures": [
																		{
																			"id": 5364,
																			"name": "__type",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "reference",
																						"typeArguments": [
																							{
																								"type": "reference",
																								"id": 5366,
																								"name": "TargetViewModelT"
																							}
																						],
																						"qualifiedName": "Promise",
																						"package": "typescript",
																						"name": "Promise"
																					},
																					{
																						"type": "reference",
																						"id": 5366,
																						"name": "TargetViewModelT"
																					}
																				]
																			}
																		}
																	]
																}
															},
															{
																"type": "reference",
																"id": 5366,
																"name": "TargetViewModelT"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														5365,
														5361,
														5362
													]
												}
											],
											"sources": [
												{
													"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
													"line": 24,
													"character": 30
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 5357,
							"name": "RelatedViewModelParsableType",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 13,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 5358,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 2008,
										"typeArguments": [
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "literal",
													"value": "fields"
												},
												"objectType": {
													"type": "reference",
													"id": 5358,
													"name": "T"
												}
											}
										],
										"name": "FieldDataMappingRaw"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 2008,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": "fields"
													},
													"objectType": {
														"type": "reference",
														"id": 5358,
														"name": "T"
													}
												}
											],
											"name": "FieldDataMappingRaw"
										}
									}
								]
							}
						},
						{
							"id": 5353,
							"name": "RelatedViewModelValueType",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 7,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 5354,
									"name": "TargetViewModelT",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 4499,
								"typeArguments": [
									{
										"type": "reference",
										"id": 5354,
										"name": "TargetViewModelT"
									}
								],
								"qualifiedName": "InstanceType",
								"package": "typescript",
								"name": "InstanceType"
							}
						}
					],
					"groups": [
						{
							"title": "Type aliases",
							"kind": 4194304,
							"children": [
								5355,
								5359,
								5357,
								5353
							]
						}
					]
				},
				{
					"id": 3859,
					"name": "BaseRelatedViewModelField",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isAbstract": true
					},
					"comment": {
						"shortText": "We split into RelatedViewModelField (for single records) and ManyRelatedViewModelField (for multiple records)\nmainly to making typing easier.",
						"text": "Use `ManyRelatedViewModelField` if `sourceFieldName` refers to a `ListField` otherwise `RelatedViewModelField`.\n"
					},
					"children": [
						{
							"id": 3861,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 80,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3862,
									"name": "new BaseRelatedViewModelField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 3863,
											"name": "TargetViewModelT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"id": 3863,
														"name": "TargetViewModelT"
													}
												],
												"name": "ViewModelConstructor"
											}
										},
										{
											"id": 3864,
											"name": "FieldValueT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 2067,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "ViewModelInterface"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 4499,
															"typeArguments": [
																{
																	"type": "reference",
																	"id": 3863,
																	"name": "TargetViewModelT"
																}
															],
															"qualifiedName": "InstanceType",
															"package": "typescript",
															"name": "InstanceType"
														}
													}
												]
											}
										},
										{
											"id": 3865,
											"name": "ParsableValueT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5357,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3863,
														"name": "TargetViewModelT"
													}
												],
												"name": "RelatedViewModelParsableType"
											}
										},
										{
											"id": 3866,
											"name": "SourceFieldNameT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 3867,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5359,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3863,
														"name": "TargetViewModelT"
													},
													{
														"type": "reference",
														"id": 3864,
														"name": "FieldValueT"
													},
													{
														"type": "reference",
														"id": 3866,
														"name": "SourceFieldNameT"
													}
												],
												"name": "RelatedViewModelFieldProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3859,
										"typeArguments": [
											{
												"type": "reference",
												"id": 3863,
												"name": "TargetViewModelT"
											},
											{
												"type": "reference",
												"id": 3864,
												"name": "FieldValueT"
											},
											{
												"type": "reference",
												"id": 3865,
												"name": "ParsableValueT"
											},
											{
												"type": "reference",
												"id": 3866,
												"name": "SourceFieldNameT"
											}
										],
										"name": "BaseRelatedViewModelField"
									},
									"overwrites": {
										"type": "reference",
										"id": 2969,
										"name": "default.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 2968,
								"name": "default.constructor"
							}
						},
						{
							"id": 3892,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 3864,
								"name": "FieldValueT"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2974,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 3893,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 3865,
								"name": "ParsableValueT"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2975,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 3873,
							"name": "_cache",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 72,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 1827,
								"typeArguments": [
									{
										"type": "reference",
										"id": 3863,
										"name": "TargetViewModelT"
									}
								],
								"name": "default"
							}
						},
						{
							"id": 3910,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 3864,
										"name": "FieldValueT"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3911,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3912,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 3864,
																"name": "FieldValueT"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"id": 3864,
																				"name": "FieldValueT"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2994,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 3881,
							"name": "_isResolvingDeps",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 119,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3868,
							"name": "_loadTo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 69,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3869,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 3870,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 3863,
														"name": "TargetViewModelT"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 3863,
																"name": "TargetViewModelT"
															}
														],
														"qualifiedName": "Promise",
														"package": "typescript",
														"name": "Promise"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 3871,
							"name": "_resolvedTo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 70,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 3863,
								"name": "TargetViewModelT"
							}
						},
						{
							"id": 3872,
							"name": "_resolvingTo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 71,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 3863,
										"name": "TargetViewModelT"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						},
						{
							"id": 3907,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2161,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"id": 3864,
										"name": "FieldValueT"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2991,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 3902,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2986,
								"name": "default.blank"
							}
						},
						{
							"id": 3903,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2987,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 3906,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 3864,
										"name": "FieldValueT"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2990,
								"name": "default.choices"
							}
						},
						{
							"id": 3905,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2989,
								"name": "default.helpText"
							}
						},
						{
							"id": 3904,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2988,
								"name": "default.label"
							}
						},
						{
							"id": 3908,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2992,
								"name": "default.readOnly"
							}
						},
						{
							"id": 3875,
							"name": "sourceField",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 74,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2966,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "default"
							}
						},
						{
							"id": 3874,
							"name": "sourceFieldName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 73,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 3866,
								"name": "SourceFieldNameT"
							}
						},
						{
							"id": 3909,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2993,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 3860,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 129,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"defaultValue": "null",
							"inheritedFrom": {
								"type": "reference",
								"id": 2967,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 3936,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3937,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2067,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3024,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 3890,
							"name": "cache",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 192,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3891,
									"name": "cache",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1827,
										"typeArguments": [
											{
												"type": "reference",
												"id": 3863,
												"name": "TargetViewModelT"
											}
										],
										"name": "default"
									}
								}
							]
						},
						{
							"id": 3926,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3927,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2970,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3010,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 3932,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3933,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3020,
								"name": "default.isBound"
							}
						},
						{
							"id": 3876,
							"name": "many",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 76,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3877,
									"name": "many",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 3894,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3895,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 3896,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3897,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2977,
								"name": "default.model"
							}
						},
						{
							"id": 3898,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3899,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 3900,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3901,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2982,
								"name": "default.name"
							}
						},
						{
							"id": 3888,
							"name": "to",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 171,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3889,
									"name": "to",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the [ViewModel](doc:viewModelFactory) this related field is to.",
										"text": "If `to` was defined as a function returning a `Promise` then you must call `resolveViewModel`\nand wait for the returned `Promise` to resolve before accessing this otherwise an error will be thrown\n"
									},
									"type": {
										"type": "reference",
										"id": 3863,
										"name": "TargetViewModelT"
									}
								}
							]
						},
						{
							"id": 3934,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3935,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3022,
								"name": "default.value"
							}
						},
						{
							"id": 3930,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3931,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2966,
										"typeArguments": [
											{
												"type": "reference",
												"id": 3864,
												"name": "FieldValueT"
											},
											{
												"type": "reference",
												"id": 3864,
												"name": "FieldValueT"
											},
											{
												"type": "reference",
												"id": 3864,
												"name": "FieldValueT"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3019,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3018,
								"name": "default.clone"
							}
						},
						{
							"id": 3878,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 98,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3879,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isPrivate": true
									},
									"comment": {},
									"parameters": [
										{
											"id": 3880,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3863,
												"name": "TargetViewModelT"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"id": 3027,
										"name": "default.contributeToClass"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3026,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 3913,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3914,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 3915,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 3864,
												"name": "FieldValueT"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2998,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2997,
								"name": "default.format"
							}
						},
						{
							"id": 3884,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 161,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3885,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Compares to relations for equality - if the ViewModel has the same data this returns true"
									},
									"parameters": [
										{
											"id": 3886,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3864,
												"name": "FieldValueT"
											}
										},
										{
											"id": 3887,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3864,
												"name": "FieldValueT"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"overwrites": {
										"type": "reference",
										"id": 3015,
										"name": "default.isEqual"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3014,
								"name": "default.isEqual"
							}
						},
						{
							"id": 3919,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3920,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 3921,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 3865,
												"name": "ParsableValueT"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 3864,
												"name": "FieldValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3004,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3003,
								"name": "default.normalize"
							}
						},
						{
							"id": 3916,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3917,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 3918,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 3865,
														"name": "ParsableValueT"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 3864,
												"name": "FieldValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3001,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3000,
								"name": "default.parse"
							}
						},
						{
							"id": 3882,
							"name": "resolveViewModel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 127,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3883,
									"name": "resolveViewModel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Resolves the ViewModel this field links to. This is necessary as the ViewModel might be a dynamic\nimport that hasn't yet loaded.",
										"text": "This needs to be called manually before `to` can be accessed.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 3863,
												"name": "TargetViewModelT"
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 3922,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3923,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 3924,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 3864,
												"name": "FieldValueT"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3925,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3007,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3006,
								"name": "default.toJS"
							}
						},
						{
							"id": 3928,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3929,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3013,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3012,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3861
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3892,
								3893,
								3873,
								3910,
								3881,
								3868,
								3871,
								3872,
								3907,
								3902,
								3903,
								3906,
								3905,
								3904,
								3908,
								3875,
								3874,
								3909,
								3860
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3936,
								3890,
								3926,
								3932,
								3876,
								3894,
								3898,
								3888,
								3934
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3930,
								3878,
								3913,
								3884,
								3919,
								3916,
								3882,
								3922,
								3928
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
							"line": 62,
							"character": 22
						}
					],
					"typeParameter": [
						{
							"id": 3938,
							"name": "TargetViewModelT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2071,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ViewModelConstructor"
							}
						},
						{
							"id": 3939,
							"name": "FieldValueT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 5355,
								"typeArguments": [
									{
										"type": "reference",
										"id": 3863,
										"name": "TargetViewModelT"
									}
								],
								"name": "BaseRelatedViewModelValueType"
							}
						},
						{
							"id": 3940,
							"name": "ParsableValueT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 5357,
								"typeArguments": [
									{
										"type": "reference",
										"id": 3863,
										"name": "TargetViewModelT"
									}
								],
								"name": "RelatedViewModelParsableType"
							}
						},
						{
							"id": 3941,
							"name": "SourceFieldNameT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2966,
							"typeArguments": [
								{
									"type": "reference",
									"id": 3864,
									"name": "FieldValueT"
								},
								{
									"type": "reference",
									"id": 3865,
									"name": "ParsableValueT"
								}
							],
							"name": "default"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 3942,
							"name": "RelatedViewModelField"
						},
						{
							"type": "reference",
							"id": 4014,
							"name": "ManyRelatedViewModelField"
						}
					]
				},
				{
					"id": 4014,
					"name": "ManyRelatedViewModelField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Define a field that contains multiple records from another ViewModel",
						"text": "This behaves the same as [RelatedViewModelField](doc:RelatedViewModelField) but `sourceFieldName`\nmust refer to a [ListField](doc:ListField) and all values are an array instead of a single value.\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"children": [
						{
							"id": 4016,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 4017,
									"name": "new ManyRelatedViewModelField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 4018,
											"name": "TargetViewModelT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"id": 4018,
														"name": "TargetViewModelT"
													}
												],
												"name": "ViewModelConstructor"
											}
										},
										{
											"id": 4019,
											"name": "SourceFieldNameT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 4020,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5359,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4018,
														"name": "TargetViewModelT"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 4499,
															"typeArguments": [
																{
																	"type": "reference",
																	"id": 4018,
																	"name": "TargetViewModelT"
																}
															],
															"qualifiedName": "InstanceType",
															"package": "typescript",
															"name": "InstanceType"
														}
													},
													{
														"type": "reference",
														"id": 4019,
														"name": "SourceFieldNameT"
													}
												],
												"name": "RelatedViewModelFieldProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 4014,
										"typeArguments": [
											{
												"type": "reference",
												"id": 4018,
												"name": "TargetViewModelT"
											},
											{
												"type": "reference",
												"id": 4019,
												"name": "SourceFieldNameT"
											}
										],
										"name": "ManyRelatedViewModelField"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3862,
										"name": "BaseRelatedViewModelField.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3861,
								"name": "BaseRelatedViewModelField.constructor"
							}
						},
						{
							"id": 4045,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 4499,
									"typeArguments": [
										{
											"type": "reference",
											"id": 4018,
											"name": "TargetViewModelT"
										}
									],
									"qualifiedName": "InstanceType",
									"package": "typescript",
									"name": "InstanceType"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3892,
								"name": "BaseRelatedViewModelField.__fieldValueType"
							}
						},
						{
							"id": 4046,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 2008,
									"typeArguments": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "fields"
											},
											"objectType": {
												"type": "reference",
												"id": 4018,
												"name": "TargetViewModelT"
											}
										}
									],
									"name": "FieldDataMappingRaw"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3893,
								"name": "BaseRelatedViewModelField.__parsableValueType"
							}
						},
						{
							"id": 4063,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 4499,
											"typeArguments": [
												{
													"type": "reference",
													"id": 4018,
													"name": "TargetViewModelT"
												}
											],
											"qualifiedName": "InstanceType",
											"package": "typescript",
											"name": "InstanceType"
										}
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 4064,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 4065,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 4499,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"id": 4018,
																			"name": "TargetViewModelT"
																		}
																	],
																	"qualifiedName": "InstanceType",
																	"package": "typescript",
																	"name": "InstanceType"
																}
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"id": 4499,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 4018,
																							"name": "TargetViewModelT"
																						}
																					],
																					"qualifiedName": "InstanceType",
																					"package": "typescript",
																					"name": "InstanceType"
																				}
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3910,
								"name": "BaseRelatedViewModelField._defaultValue"
							}
						},
						{
							"id": 4034,
							"name": "_isResolvingDeps",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 119,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3881,
								"name": "BaseRelatedViewModelField._isResolvingDeps"
							}
						},
						{
							"id": 4060,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2161,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 4499,
											"typeArguments": [
												{
													"type": "reference",
													"id": 4018,
													"name": "TargetViewModelT"
												}
											],
											"qualifiedName": "InstanceType",
											"package": "typescript",
											"name": "InstanceType"
										}
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3907,
								"name": "BaseRelatedViewModelField.asyncChoices"
							}
						},
						{
							"id": 4055,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3902,
								"name": "BaseRelatedViewModelField.blank"
							}
						},
						{
							"id": 4056,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3903,
								"name": "BaseRelatedViewModelField.blankAsNull"
							}
						},
						{
							"id": 4059,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 4499,
											"typeArguments": [
												{
													"type": "reference",
													"id": 4018,
													"name": "TargetViewModelT"
												}
											],
											"qualifiedName": "InstanceType",
											"package": "typescript",
											"name": "InstanceType"
										}
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3906,
								"name": "BaseRelatedViewModelField.choices"
							}
						},
						{
							"id": 4058,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3905,
								"name": "BaseRelatedViewModelField.helpText"
							}
						},
						{
							"id": 4057,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3904,
								"name": "BaseRelatedViewModelField.label"
							}
						},
						{
							"id": 4061,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3908,
								"name": "BaseRelatedViewModelField.readOnly"
							}
						},
						{
							"id": 4028,
							"name": "sourceField",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 74,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2966,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3875,
								"name": "BaseRelatedViewModelField.sourceField"
							}
						},
						{
							"id": 4027,
							"name": "sourceFieldName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 73,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 4019,
								"name": "SourceFieldNameT"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3874,
								"name": "BaseRelatedViewModelField.sourceFieldName"
							}
						},
						{
							"id": 4062,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3909,
								"name": "BaseRelatedViewModelField.writeOnly"
							}
						},
						{
							"id": 4015,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 368,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'ManyRelatedViewModelField'",
							"overwrites": {
								"type": "reference",
								"id": 3860,
								"name": "BaseRelatedViewModelField.fieldClassName"
							}
						},
						{
							"id": 4082,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4083,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2067,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3936,
								"name": "BaseRelatedViewModelField.boundRecord"
							}
						},
						{
							"id": 4043,
							"name": "cache",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 192,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 4044,
									"name": "cache",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1827,
										"typeArguments": [
											{
												"type": "reference",
												"id": 3863,
												"name": "TargetViewModelT"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.cache"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3890,
								"name": "BaseRelatedViewModelField.cache"
							}
						},
						{
							"id": 4072,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 4073,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2970,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3926,
								"name": "BaseRelatedViewModelField.defaultValue"
							}
						},
						{
							"id": 4078,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4079,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3932,
								"name": "BaseRelatedViewModelField.isBound"
							}
						},
						{
							"id": 4029,
							"name": "many",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 76,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 4030,
									"name": "many",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.many"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3876,
								"name": "BaseRelatedViewModelField.many"
							}
						},
						{
							"id": 4047,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4048,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 4049,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 4050,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3894,
								"name": "BaseRelatedViewModelField.model"
							}
						},
						{
							"id": 4051,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4052,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 4053,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 4054,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3898,
								"name": "BaseRelatedViewModelField.name"
							}
						},
						{
							"id": 4041,
							"name": "to",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 171,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 4042,
									"name": "to",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the [ViewModel](doc:viewModelFactory) this related field is to.",
										"text": "If `to` was defined as a function returning a `Promise` then you must call `resolveViewModel`\nand wait for the returned `Promise` to resolve before accessing this otherwise an error will be thrown\n"
									},
									"type": {
										"type": "reference",
										"id": 3863,
										"name": "TargetViewModelT"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.to"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3888,
								"name": "BaseRelatedViewModelField.to"
							}
						},
						{
							"id": 4080,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4081,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3934,
								"name": "BaseRelatedViewModelField.value"
							}
						},
						{
							"id": 4076,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4077,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2966,
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 4499,
													"typeArguments": [
														{
															"type": "reference",
															"id": 4018,
															"name": "TargetViewModelT"
														}
													],
													"qualifiedName": "InstanceType",
													"package": "typescript",
													"name": "InstanceType"
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 4499,
													"typeArguments": [
														{
															"type": "reference",
															"id": 4018,
															"name": "TargetViewModelT"
														}
													],
													"qualifiedName": "InstanceType",
													"package": "typescript",
													"name": "InstanceType"
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 4499,
													"typeArguments": [
														{
															"type": "reference",
															"id": 4018,
															"name": "TargetViewModelT"
														}
													],
													"qualifiedName": "InstanceType",
													"package": "typescript",
													"name": "InstanceType"
												}
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3931,
										"name": "BaseRelatedViewModelField.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3930,
								"name": "BaseRelatedViewModelField.clone"
							}
						},
						{
							"id": 4031,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 98,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 4032,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isPrivate": true
									},
									"comment": {},
									"parameters": [
										{
											"id": 4033,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4018,
												"name": "TargetViewModelT"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3879,
										"name": "BaseRelatedViewModelField.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3878,
								"name": "BaseRelatedViewModelField.contributeToClass"
							}
						},
						{
							"id": 4066,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4067,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 4068,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 4499,
													"typeArguments": [
														{
															"type": "reference",
															"id": 4018,
															"name": "TargetViewModelT"
														}
													],
													"qualifiedName": "InstanceType",
													"package": "typescript",
													"name": "InstanceType"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3914,
										"name": "BaseRelatedViewModelField.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3913,
								"name": "BaseRelatedViewModelField.format"
							}
						},
						{
							"id": 4037,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 161,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 4038,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Compares to relations for equality - if the ViewModel has the same data this returns true"
									},
									"parameters": [
										{
											"id": 4039,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 4499,
													"typeArguments": [
														{
															"type": "reference",
															"id": 4018,
															"name": "TargetViewModelT"
														}
													],
													"qualifiedName": "InstanceType",
													"package": "typescript",
													"name": "InstanceType"
												}
											}
										},
										{
											"id": 4040,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 4499,
													"typeArguments": [
														{
															"type": "reference",
															"id": 4018,
															"name": "TargetViewModelT"
														}
													],
													"qualifiedName": "InstanceType",
													"package": "typescript",
													"name": "InstanceType"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3885,
										"name": "BaseRelatedViewModelField.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3884,
								"name": "BaseRelatedViewModelField.isEqual"
							}
						},
						{
							"id": 4021,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 372,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 4022,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Converts a value into the relations [ViewModel](doc:viewModelFactory) instance."
									},
									"parameters": [
										{
											"id": 4023,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 4499,
											"typeArguments": [
												{
													"type": "reference",
													"id": 4018,
													"name": "TargetViewModelT"
												}
											],
											"qualifiedName": "InstanceType",
											"package": "typescript",
											"name": "InstanceType"
										}
									},
									"overwrites": {
										"type": "reference",
										"id": 3920,
										"name": "BaseRelatedViewModelField.normalize"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3919,
								"name": "BaseRelatedViewModelField.normalize"
							}
						},
						{
							"id": 4069,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4070,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 4071,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 2008,
															"typeArguments": [
																{
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "literal",
																		"value": "fields"
																	},
																	"objectType": {
																		"type": "reference",
																		"id": 4018,
																		"name": "TargetViewModelT"
																	}
																}
															],
															"name": "FieldDataMappingRaw"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 4499,
													"typeArguments": [
														{
															"type": "reference",
															"id": 4018,
															"name": "TargetViewModelT"
														}
													],
													"qualifiedName": "InstanceType",
													"package": "typescript",
													"name": "InstanceType"
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3917,
										"name": "BaseRelatedViewModelField.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3916,
								"name": "BaseRelatedViewModelField.parse"
							}
						},
						{
							"id": 4035,
							"name": "resolveViewModel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 127,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 4036,
									"name": "resolveViewModel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Resolves the ViewModel this field links to. This is necessary as the ViewModel might be a dynamic\nimport that hasn't yet loaded.",
										"text": "This needs to be called manually before `to` can be accessed.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 4018,
												"name": "TargetViewModelT"
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3883,
										"name": "BaseRelatedViewModelField.resolveViewModel"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3882,
								"name": "BaseRelatedViewModelField.resolveViewModel"
							}
						},
						{
							"id": 4024,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 392,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 4025,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Converts the linked record to a plain javascript object"
									},
									"parameters": [
										{
											"id": 4026,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 4499,
													"typeArguments": [
														{
															"type": "reference",
															"id": 4018,
															"name": "TargetViewModelT"
														}
													],
													"qualifiedName": "InstanceType",
													"package": "typescript",
													"name": "InstanceType"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 4543,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"qualifiedName": "Record",
										"package": "typescript",
										"name": "Record"
									},
									"overwrites": {
										"type": "reference",
										"id": 3923,
										"name": "BaseRelatedViewModelField.toJS"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3922,
								"name": "BaseRelatedViewModelField.toJS"
							}
						},
						{
							"id": 4074,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 4075,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3929,
										"name": "BaseRelatedViewModelField.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3928,
								"name": "BaseRelatedViewModelField.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4016
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4045,
								4046,
								4063,
								4034,
								4060,
								4055,
								4056,
								4059,
								4058,
								4057,
								4061,
								4028,
								4027,
								4062,
								4015
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								4082,
								4043,
								4072,
								4078,
								4029,
								4047,
								4051,
								4041,
								4080
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4076,
								4031,
								4066,
								4037,
								4021,
								4069,
								4035,
								4024,
								4074
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
							"line": 359,
							"character": 13
						}
					],
					"typeParameter": [
						{
							"id": 4084,
							"name": "TargetViewModelT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2071,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ViewModelConstructor"
							}
						},
						{
							"id": 4085,
							"name": "SourceFieldNameT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3859,
							"typeArguments": [
								{
									"type": "reference",
									"id": 4018,
									"name": "TargetViewModelT"
								},
								{
									"type": "array",
									"elementType": {
										"type": "reference",
										"id": 5353,
										"typeArguments": [
											{
												"type": "reference",
												"id": 4018,
												"name": "TargetViewModelT"
											}
										],
										"name": "RelatedViewModelValueType"
									}
								},
								{
									"type": "array",
									"elementType": {
										"type": "reference",
										"id": 2008,
										"typeArguments": [
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "literal",
													"value": "fields"
												},
												"objectType": {
													"type": "reference",
													"id": 4018,
													"name": "TargetViewModelT"
												}
											}
										],
										"name": "FieldDataMappingRaw"
									}
								},
								{
									"type": "reference",
									"id": 4019,
									"name": "SourceFieldNameT"
								}
							],
							"name": "BaseRelatedViewModelField"
						}
					]
				},
				{
					"id": 3942,
					"name": "RelatedViewModelField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Define a field that references another ViewModel",
						"text": "This requires two things:\n\n1) The ViewModel to reference\n2) The field on the source ViewModel that contains the ID for the relation\n\nIn the following example `User` has a `Group` as a relation. The id for the\nconnected group is stored on the `groupId` field:\n\n```js\nclass Group extends viewModelFactory({\n  name: new CharField(),\n}) {}\nclass User extends viewModelFactory({\n  name: new CharField(),\n  groupId: new IntegerField(),\n  group: new RelatedViewModelField({\n    to: Group,\n    sourceFieldName: 'groupId',\n  }),\n}) {}\n```\n\nYou can then fetch the data - including the relations - from the cache:\n\n```js\nGroup.cache.add({ id: 1, name: 'Staff' });\nUser.cache.add({ id: 1, name: 'Bob', groupId: 1 });\nUser.cache.get(['name', 'group']);\n// { id: 1, name: 'Bob', groupId: 1, group: { id: 1, name: 'Staff' }}\n```\n\nThe `to` field can also be a function to support circular references:\n\n```js\nclass Group extends viewModelFactory({\n  name: new CharField(),\n  ownerId: new IntegerField(),\n  owner: new RelatedViewModelField({\n    to: () => User,\n    sourceFieldName: 'ownerId',\n  }),\n}) {}\nclass User extends viewModelFactory({\n  name: new CharField(),\n  groupId: new IntegerField(),\n  group: new RelatedViewModelField({\n    to: Group,\n    sourceFieldName: 'groupId',\n  }),\n}) {}\n```\n\nYou can query the circular relations as deep as you want:\n\n```js\nGroup.cache.add({ id: 1, name: 'Staff', ownerId: 1 });\nUser.cache.add({ id: 1, name: 'Bob', groupId: 1 });\nUser.cache.get(['name', 'group', ['group', 'owner'], ['group', 'owner', 'group']);\n// {\n//   id: 1,\n//   name: 'Bob',\n//   groupId: 1,\n//   group: {\n//     id: 1,\n//     name: 'Staff',\n//     ownerId: 1,\n//     owner: {\n//       id: 1,\n//       name: 'Bob',\n//       groupId: 1,\n//       group: {\n//         id: 1,\n//         name: 'Staff',\n//         ownerId: 1,\n//       }\n//     },\n//   },\n// }\n```\n\n`to` can also be a function that returns a Promise. This is useful to\nlazy load modules:\n\n```js\nclass Subscription extends viewModelFactory({\n  userId: new IntegerField(),\n  user: new RelatedViewModelField({\n      sourceFieldName: 'userId',\n      to: async () => {\n        const User = await import('./User').default;\n        return User;\n      }\n  })\n}) {}\n```\n\n**NOTE:** When you return a promise you have to call `resolveViewModel` on\nthat field before it's usable:\n\n```js\nawait Subscription.fields.user.resolveViewModel()\n```\n\nFailure to do this will result in an error being thrown the first time it's accessed.\n\nIf you have multiple values use [ManyRelatedViewModelField](doc:ManyRelatedViewModelField) instead.\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"children": [
						{
							"id": 3944,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3945,
									"name": "new RelatedViewModelField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 3946,
											"name": "TargetViewModelT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"id": 3946,
														"name": "TargetViewModelT"
													}
												],
												"name": "ViewModelConstructor"
											}
										},
										{
											"id": 3947,
											"name": "SourceFieldNameT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 3948,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5359,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3946,
														"name": "TargetViewModelT"
													},
													{
														"type": "reference",
														"id": 4499,
														"typeArguments": [
															{
																"type": "reference",
																"id": 3946,
																"name": "TargetViewModelT"
															}
														],
														"qualifiedName": "InstanceType",
														"package": "typescript",
														"name": "InstanceType"
													},
													{
														"type": "reference",
														"id": 3947,
														"name": "SourceFieldNameT"
													}
												],
												"name": "RelatedViewModelFieldProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3942,
										"typeArguments": [
											{
												"type": "reference",
												"id": 3946,
												"name": "TargetViewModelT"
											},
											{
												"type": "reference",
												"id": 3947,
												"name": "SourceFieldNameT"
											}
										],
										"name": "RelatedViewModelField"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3862,
										"name": "BaseRelatedViewModelField.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3861,
								"name": "BaseRelatedViewModelField.constructor"
							}
						},
						{
							"id": 3973,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 4499,
								"typeArguments": [
									{
										"type": "reference",
										"id": 3946,
										"name": "TargetViewModelT"
									}
								],
								"qualifiedName": "InstanceType",
								"package": "typescript",
								"name": "InstanceType"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3892,
								"name": "BaseRelatedViewModelField.__fieldValueType"
							}
						},
						{
							"id": 3974,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2008,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "fields"
										},
										"objectType": {
											"type": "reference",
											"id": 3946,
											"name": "TargetViewModelT"
										}
									}
								],
								"name": "FieldDataMappingRaw"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3893,
								"name": "BaseRelatedViewModelField.__parsableValueType"
							}
						},
						{
							"id": 3991,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 4499,
										"typeArguments": [
											{
												"type": "reference",
												"id": 3946,
												"name": "TargetViewModelT"
											}
										],
										"qualifiedName": "InstanceType",
										"package": "typescript",
										"name": "InstanceType"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3992,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3993,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 4499,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 3946,
																		"name": "TargetViewModelT"
																	}
																],
																"qualifiedName": "InstanceType",
																"package": "typescript",
																"name": "InstanceType"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"id": 4499,
																				"typeArguments": [
																					{
																						"type": "reference",
																						"id": 3946,
																						"name": "TargetViewModelT"
																					}
																				],
																				"qualifiedName": "InstanceType",
																				"package": "typescript",
																				"name": "InstanceType"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3910,
								"name": "BaseRelatedViewModelField._defaultValue"
							}
						},
						{
							"id": 3962,
							"name": "_isResolvingDeps",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 119,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3881,
								"name": "BaseRelatedViewModelField._isResolvingDeps"
							}
						},
						{
							"id": 3988,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2161,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"id": 4499,
										"typeArguments": [
											{
												"type": "reference",
												"id": 3946,
												"name": "TargetViewModelT"
											}
										],
										"qualifiedName": "InstanceType",
										"package": "typescript",
										"name": "InstanceType"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3907,
								"name": "BaseRelatedViewModelField.asyncChoices"
							}
						},
						{
							"id": 3983,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3902,
								"name": "BaseRelatedViewModelField.blank"
							}
						},
						{
							"id": 3984,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3903,
								"name": "BaseRelatedViewModelField.blankAsNull"
							}
						},
						{
							"id": 3987,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 4499,
										"typeArguments": [
											{
												"type": "reference",
												"id": 3946,
												"name": "TargetViewModelT"
											}
										],
										"qualifiedName": "InstanceType",
										"package": "typescript",
										"name": "InstanceType"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3906,
								"name": "BaseRelatedViewModelField.choices"
							}
						},
						{
							"id": 3986,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3905,
								"name": "BaseRelatedViewModelField.helpText"
							}
						},
						{
							"id": 3985,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3904,
								"name": "BaseRelatedViewModelField.label"
							}
						},
						{
							"id": 3989,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3908,
								"name": "BaseRelatedViewModelField.readOnly"
							}
						},
						{
							"id": 3956,
							"name": "sourceField",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 74,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2966,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3875,
								"name": "BaseRelatedViewModelField.sourceField"
							}
						},
						{
							"id": 3955,
							"name": "sourceFieldName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 73,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 3947,
								"name": "SourceFieldNameT"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3874,
								"name": "BaseRelatedViewModelField.sourceFieldName"
							}
						},
						{
							"id": 3990,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3909,
								"name": "BaseRelatedViewModelField.writeOnly"
							}
						},
						{
							"id": 3943,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 322,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'RelatedViewModelField'",
							"overwrites": {
								"type": "reference",
								"id": 3860,
								"name": "BaseRelatedViewModelField.fieldClassName"
							}
						},
						{
							"id": 4010,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4011,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2067,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3936,
								"name": "BaseRelatedViewModelField.boundRecord"
							}
						},
						{
							"id": 3971,
							"name": "cache",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 192,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3972,
									"name": "cache",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1827,
										"typeArguments": [
											{
												"type": "reference",
												"id": 3863,
												"name": "TargetViewModelT"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.cache"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3890,
								"name": "BaseRelatedViewModelField.cache"
							}
						},
						{
							"id": 4000,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 4001,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2970,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3926,
								"name": "BaseRelatedViewModelField.defaultValue"
							}
						},
						{
							"id": 4006,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4007,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3932,
								"name": "BaseRelatedViewModelField.isBound"
							}
						},
						{
							"id": 3957,
							"name": "many",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 76,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3958,
									"name": "many",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.many"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3876,
								"name": "BaseRelatedViewModelField.many"
							}
						},
						{
							"id": 3975,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3976,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 3977,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3978,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3894,
								"name": "BaseRelatedViewModelField.model"
							}
						},
						{
							"id": 3979,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3980,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 3981,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3982,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3898,
								"name": "BaseRelatedViewModelField.name"
							}
						},
						{
							"id": 3969,
							"name": "to",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 171,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3970,
									"name": "to",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the [ViewModel](doc:viewModelFactory) this related field is to.",
										"text": "If `to` was defined as a function returning a `Promise` then you must call `resolveViewModel`\nand wait for the returned `Promise` to resolve before accessing this otherwise an error will be thrown\n"
									},
									"type": {
										"type": "reference",
										"id": 3863,
										"name": "TargetViewModelT"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.to"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3888,
								"name": "BaseRelatedViewModelField.to"
							}
						},
						{
							"id": 4008,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4009,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3934,
								"name": "BaseRelatedViewModelField.value"
							}
						},
						{
							"id": 4004,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4005,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2966,
										"typeArguments": [
											{
												"type": "reference",
												"id": 4499,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3946,
														"name": "TargetViewModelT"
													}
												],
												"qualifiedName": "InstanceType",
												"package": "typescript",
												"name": "InstanceType"
											},
											{
												"type": "reference",
												"id": 4499,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3946,
														"name": "TargetViewModelT"
													}
												],
												"qualifiedName": "InstanceType",
												"package": "typescript",
												"name": "InstanceType"
											},
											{
												"type": "reference",
												"id": 4499,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3946,
														"name": "TargetViewModelT"
													}
												],
												"qualifiedName": "InstanceType",
												"package": "typescript",
												"name": "InstanceType"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3931,
										"name": "BaseRelatedViewModelField.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3930,
								"name": "BaseRelatedViewModelField.clone"
							}
						},
						{
							"id": 3959,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 98,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3960,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isPrivate": true
									},
									"comment": {},
									"parameters": [
										{
											"id": 3961,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3946,
												"name": "TargetViewModelT"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3879,
										"name": "BaseRelatedViewModelField.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3878,
								"name": "BaseRelatedViewModelField.contributeToClass"
							}
						},
						{
							"id": 3994,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3995,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 3996,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 4499,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3946,
														"name": "TargetViewModelT"
													}
												],
												"qualifiedName": "InstanceType",
												"package": "typescript",
												"name": "InstanceType"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3914,
										"name": "BaseRelatedViewModelField.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3913,
								"name": "BaseRelatedViewModelField.format"
							}
						},
						{
							"id": 3965,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 161,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3966,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Compares to relations for equality - if the ViewModel has the same data this returns true"
									},
									"parameters": [
										{
											"id": 3967,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4499,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3946,
														"name": "TargetViewModelT"
													}
												],
												"qualifiedName": "InstanceType",
												"package": "typescript",
												"name": "InstanceType"
											}
										},
										{
											"id": 3968,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4499,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3946,
														"name": "TargetViewModelT"
													}
												],
												"qualifiedName": "InstanceType",
												"package": "typescript",
												"name": "InstanceType"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3885,
										"name": "BaseRelatedViewModelField.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3884,
								"name": "BaseRelatedViewModelField.isEqual"
							}
						},
						{
							"id": 3949,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 326,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3950,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Converts a value into the relations [ViewModel](doc:viewModelFactory) instance."
									},
									"parameters": [
										{
											"id": 3951,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 4499,
										"typeArguments": [
											{
												"type": "reference",
												"id": 3946,
												"name": "TargetViewModelT"
											}
										],
										"qualifiedName": "InstanceType",
										"package": "typescript",
										"name": "InstanceType"
									},
									"overwrites": {
										"type": "reference",
										"id": 3920,
										"name": "BaseRelatedViewModelField.normalize"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3919,
								"name": "BaseRelatedViewModelField.normalize"
							}
						},
						{
							"id": 3997,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3998,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 3999,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 2008,
														"typeArguments": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "fields"
																},
																"objectType": {
																	"type": "reference",
																	"id": 3946,
																	"name": "TargetViewModelT"
																}
															}
														],
														"name": "FieldDataMappingRaw"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 4499,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3946,
														"name": "TargetViewModelT"
													}
												],
												"qualifiedName": "InstanceType",
												"package": "typescript",
												"name": "InstanceType"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3917,
										"name": "BaseRelatedViewModelField.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3916,
								"name": "BaseRelatedViewModelField.parse"
							}
						},
						{
							"id": 3963,
							"name": "resolveViewModel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 127,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3964,
									"name": "resolveViewModel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Resolves the ViewModel this field links to. This is necessary as the ViewModel might be a dynamic\nimport that hasn't yet loaded.",
										"text": "This needs to be called manually before `to` can be accessed.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 3946,
												"name": "TargetViewModelT"
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3883,
										"name": "BaseRelatedViewModelField.resolveViewModel"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3882,
								"name": "BaseRelatedViewModelField.resolveViewModel"
							}
						},
						{
							"id": 3952,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 339,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3953,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Converts the linked record to a plain javascript object"
									},
									"parameters": [
										{
											"id": 3954,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4499,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3946,
														"name": "TargetViewModelT"
													}
												],
												"qualifiedName": "InstanceType",
												"package": "typescript",
												"name": "InstanceType"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 4543,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"qualifiedName": "Record",
										"package": "typescript",
										"name": "Record"
									},
									"overwrites": {
										"type": "reference",
										"id": 3923,
										"name": "BaseRelatedViewModelField.toJS"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3922,
								"name": "BaseRelatedViewModelField.toJS"
							}
						},
						{
							"id": 4002,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 4003,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3929,
										"name": "BaseRelatedViewModelField.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3928,
								"name": "BaseRelatedViewModelField.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3944
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3973,
								3974,
								3991,
								3962,
								3988,
								3983,
								3984,
								3987,
								3986,
								3985,
								3989,
								3956,
								3955,
								3990,
								3943
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								4010,
								3971,
								4000,
								4006,
								3957,
								3975,
								3979,
								3969,
								4008
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4004,
								3959,
								3994,
								3965,
								3949,
								3997,
								3963,
								3952,
								4002
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
							"line": 313,
							"character": 13
						}
					],
					"typeParameter": [
						{
							"id": 4012,
							"name": "TargetViewModelT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2071,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ViewModelConstructor"
							}
						},
						{
							"id": 4013,
							"name": "SourceFieldNameT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3859,
							"typeArguments": [
								{
									"type": "reference",
									"id": 3946,
									"name": "TargetViewModelT"
								},
								{
									"type": "reference",
									"id": 5353,
									"typeArguments": [
										{
											"type": "reference",
											"id": 3946,
											"name": "TargetViewModelT"
										}
									],
									"name": "RelatedViewModelValueType"
								},
								{
									"type": "reference",
									"id": 2008,
									"typeArguments": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "fields"
											},
											"objectType": {
												"type": "reference",
												"id": 3946,
												"name": "TargetViewModelT"
											}
										}
									],
									"name": "FieldDataMappingRaw"
								},
								{
									"type": "reference",
									"id": 3947,
									"name": "SourceFieldNameT"
								}
							],
							"name": "BaseRelatedViewModelField"
						}
					]
				},
				{
					"id": 3835,
					"name": "UnresolvedRelatedViewModelFieldError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 3845,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 47,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3846,
									"name": "new UnresolvedRelatedViewModelFieldError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 3847,
											"name": "TargetViewModelT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"id": 3847,
														"name": "TargetViewModelT"
													}
												],
												"name": "ViewModelConstructor"
											}
										},
										{
											"id": 3848,
											"name": "FieldValueT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 2067,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "ViewModelInterface"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 4499,
															"typeArguments": [
																{
																	"type": "reference",
																	"id": 3847,
																	"name": "TargetViewModelT"
																}
															],
															"qualifiedName": "InstanceType",
															"package": "typescript",
															"name": "InstanceType"
														}
													}
												]
											}
										},
										{
											"id": 3849,
											"name": "ParsableValueT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5357,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3847,
														"name": "TargetViewModelT"
													}
												],
												"name": "RelatedViewModelParsableType"
											}
										}
									],
									"parameters": [
										{
											"id": 3850,
											"name": "field",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3859,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3847,
														"name": "TargetViewModelT"
													},
													{
														"type": "reference",
														"id": 3848,
														"name": "FieldValueT"
													},
													{
														"type": "reference",
														"id": 3849,
														"name": "ParsableValueT"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "BaseRelatedViewModelField"
											}
										},
										{
											"id": 3851,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3835,
										"typeArguments": [
											{
												"type": "reference",
												"id": 3847,
												"name": "TargetViewModelT"
											},
											{
												"type": "reference",
												"id": 3848,
												"name": "FieldValueT"
											},
											{
												"type": "reference",
												"id": 3849,
												"name": "ParsableValueT"
											}
										],
										"name": "UnresolvedRelatedViewModelFieldError"
									},
									"overwrites": {
										"type": "reference",
										"name": "Error.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Error.constructor"
							}
						},
						{
							"id": 3852,
							"name": "field",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 46,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 3859,
								"typeArguments": [
									{
										"type": "reference",
										"id": 3847,
										"name": "TargetViewModelT"
									},
									{
										"type": "reference",
										"id": 3848,
										"name": "FieldValueT"
									},
									{
										"type": "reference",
										"id": 3849,
										"name": "ParsableValueT"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "BaseRelatedViewModelField"
							}
						},
						{
							"id": 3854,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1023,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.message"
							}
						},
						{
							"id": 3853,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1022,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.name"
							}
						},
						{
							"id": 3855,
							"name": "stack",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1024,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.stack"
							}
						},
						{
							"id": 3844,
							"name": "stackTraceLimit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/globals.d.ts",
									"line": 117,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.stackTraceLimit"
							}
						},
						{
							"id": 3836,
							"name": "captureStackTrace",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 3837,
									"name": "captureStackTrace",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Create .stack property on a target object"
									},
									"parameters": [
										{
											"id": 3838,
											"name": "targetObject",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 3839,
											"name": "constructorOpt",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Function",
												"package": "typescript",
												"name": "Function"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Error.captureStackTrace"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.captureStackTrace"
							}
						},
						{
							"id": 3840,
							"name": "prepareStackTrace",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/globals.d.ts",
									"line": 115,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3841,
									"name": "prepareStackTrace",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Optional override for formatting stack traces",
										"tags": [
											{
												"tag": "see",
												"text": "https://github.com/v8/v8/wiki/Stack%20Trace%20API#customizing-stack-traces\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3842,
											"name": "err",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 4546,
												"qualifiedName": "Error",
												"package": "typescript",
												"name": "Error"
											}
										},
										{
											"id": 3843,
											"name": "stackTraces",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 4566,
													"qualifiedName": "NodeJS.CallSite",
													"package": "@types/node",
													"name": "CallSite"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Error.prepareStackTrace"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.prepareStackTrace"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3845
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3852,
								3854,
								3853,
								3855,
								3844
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3836,
								3840
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
							"line": 41,
							"character": 13
						}
					],
					"typeParameter": [
						{
							"id": 3856,
							"name": "TargetViewModelT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2071,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ViewModelConstructor"
							}
						},
						{
							"id": 3857,
							"name": "FieldValueT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 5355,
								"typeArguments": [
									{
										"type": "reference",
										"id": 3847,
										"name": "TargetViewModelT"
									}
								],
								"name": "BaseRelatedViewModelValueType"
							}
						},
						{
							"id": 3858,
							"name": "ParsableValueT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 5357,
								"typeArguments": [
									{
										"type": "reference",
										"id": 3847,
										"name": "TargetViewModelT"
									}
								],
								"name": "RelatedViewModelParsableType"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 4546,
							"qualifiedName": "Error",
							"package": "typescript",
							"name": "Error"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"kind": 4,
					"children": [
						5352
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3859,
						4014,
						3942,
						3835
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4086,
			"name": "fields/SlugField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 4087,
					"name": "SlugField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 4089,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 4090,
									"name": "new SlugField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 4091,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5144,
												"name": "CharFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 4087,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2299,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2298,
								"name": "default.constructor"
							}
						},
						{
							"id": 4093,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2302,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 4094,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2303,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 4111,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 4112,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 4113,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2320,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 4108,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2161,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2317,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 4103,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2312,
								"name": "default.blank"
							}
						},
						{
							"id": 4104,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2313,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 4107,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2316,
								"name": "default.choices"
							}
						},
						{
							"id": 4106,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2315,
								"name": "default.helpText"
							}
						},
						{
							"id": 4105,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2314,
								"name": "default.label"
							}
						},
						{
							"id": 4092,
							"name": "maxLength",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 18,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2301,
								"name": "default.maxLength"
							}
						},
						{
							"id": 4109,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2318,
								"name": "default.readOnly"
							}
						},
						{
							"id": 4110,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2319,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 4088,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/SlugField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'SlugField'",
							"overwrites": {
								"type": "reference",
								"id": 2297,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 4141,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4142,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2067,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2350,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 4127,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 4128,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2970,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2336,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 4137,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4138,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2346,
								"name": "default.isBound"
							}
						},
						{
							"id": 4095,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4096,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 4097,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 4098,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2304,
								"name": "default.model"
							}
						},
						{
							"id": 4099,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4100,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 4101,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 4102,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2308,
								"name": "default.name"
							}
						},
						{
							"id": 4139,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4140,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2348,
								"name": "default.value"
							}
						},
						{
							"id": 4135,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4136,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2966,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2345,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2344,
								"name": "default.clone"
							}
						},
						{
							"id": 4143,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4144,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 4145,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2353,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2352,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 4114,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4115,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 4116,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2324,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2323,
								"name": "default.format"
							}
						},
						{
							"id": 4131,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4132,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 4133,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4134,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2341,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2340,
								"name": "default.isEqual"
							}
						},
						{
							"id": 4120,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4121,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 4122,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2330,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2329,
								"name": "default.normalize"
							}
						},
						{
							"id": 4117,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4118,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 4119,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2327,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2326,
								"name": "default.parse"
							}
						},
						{
							"id": 4123,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 4124,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 4125,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 4126,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2333,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2332,
								"name": "default.toJS"
							}
						},
						{
							"id": 4129,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 4130,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2339,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2338,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4089
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4093,
								4094,
								4111,
								4108,
								4103,
								4104,
								4107,
								4106,
								4105,
								4092,
								4109,
								4110,
								4088
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								4141,
								4127,
								4137,
								4095,
								4099,
								4139
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4135,
								4143,
								4114,
								4131,
								4120,
								4117,
								4123,
								4129
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/SlugField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2296,
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4087
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/SlugField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4146,
			"name": "fields/TextField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 4147,
					"name": "TextField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 4149,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 4150,
									"name": "new TextField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 4151,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5144,
												"name": "CharFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 4147,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2299,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2298,
								"name": "default.constructor"
							}
						},
						{
							"id": 4153,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2302,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 4154,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2303,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 4171,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 4172,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 4173,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2320,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 4168,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2161,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2317,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 4163,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2312,
								"name": "default.blank"
							}
						},
						{
							"id": 4164,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2313,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 4167,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2316,
								"name": "default.choices"
							}
						},
						{
							"id": 4166,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2315,
								"name": "default.helpText"
							}
						},
						{
							"id": 4165,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2314,
								"name": "default.label"
							}
						},
						{
							"id": 4152,
							"name": "maxLength",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 18,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2301,
								"name": "default.maxLength"
							}
						},
						{
							"id": 4169,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2318,
								"name": "default.readOnly"
							}
						},
						{
							"id": 4170,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2319,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 4148,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/TextField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'TextField'",
							"overwrites": {
								"type": "reference",
								"id": 2297,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 4201,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4202,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2067,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2350,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 4187,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 4188,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2970,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2336,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 4197,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4198,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2346,
								"name": "default.isBound"
							}
						},
						{
							"id": 4155,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4156,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 4157,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 4158,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2304,
								"name": "default.model"
							}
						},
						{
							"id": 4159,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4160,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 4161,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 4162,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2308,
								"name": "default.name"
							}
						},
						{
							"id": 4199,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4200,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2348,
								"name": "default.value"
							}
						},
						{
							"id": 4195,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4196,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2966,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2345,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2344,
								"name": "default.clone"
							}
						},
						{
							"id": 4203,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4204,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 4205,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2353,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2352,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 4174,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4175,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 4176,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2324,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2323,
								"name": "default.format"
							}
						},
						{
							"id": 4191,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4192,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 4193,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4194,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2341,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2340,
								"name": "default.isEqual"
							}
						},
						{
							"id": 4180,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4181,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 4182,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2330,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2329,
								"name": "default.normalize"
							}
						},
						{
							"id": 4177,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4178,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 4179,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2327,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2326,
								"name": "default.parse"
							}
						},
						{
							"id": 4183,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 4184,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 4185,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 4186,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2333,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2332,
								"name": "default.toJS"
							}
						},
						{
							"id": 4189,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 4190,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2339,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2338,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4149
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4153,
								4154,
								4171,
								4168,
								4163,
								4164,
								4167,
								4166,
								4165,
								4152,
								4169,
								4170,
								4148
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								4201,
								4187,
								4197,
								4155,
								4159,
								4199
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4195,
								4203,
								4174,
								4191,
								4180,
								4177,
								4183,
								4189
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/TextField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2296,
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4147
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/TextField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4206,
			"name": "fields/TimeField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 4207,
					"name": "TimeField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Time Field.",
						"text": "String based: Native javascript Date does not have a nice way to describe a time-only object. Make sure any third party library of your choice like MomentJS handles this correctly.\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 4209,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 4210,
									"name": "new TimeField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 4211,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2898,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "FieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 4207,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2969,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2968,
								"name": "default.constructor"
							}
						},
						{
							"id": 4212,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2974,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 4213,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2975,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 4230,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 4231,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 4232,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2994,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 4227,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2161,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2991,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 4222,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2986,
								"name": "default.blank"
							}
						},
						{
							"id": 4223,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2987,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 4226,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2990,
								"name": "default.choices"
							}
						},
						{
							"id": 4225,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2989,
								"name": "default.helpText"
							}
						},
						{
							"id": 4224,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2988,
								"name": "default.label"
							}
						},
						{
							"id": 4228,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2992,
								"name": "default.readOnly"
							}
						},
						{
							"id": 4229,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2993,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 4208,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/TimeField.ts",
									"line": 12,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'TimeField'",
							"overwrites": {
								"type": "reference",
								"id": 2967,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 4260,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4261,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2067,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3024,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 4246,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 4247,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2970,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3010,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 4256,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4257,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3020,
								"name": "default.isBound"
							}
						},
						{
							"id": 4214,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4215,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 4216,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 4217,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2977,
								"name": "default.model"
							}
						},
						{
							"id": 4218,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4219,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 4220,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 4221,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2982,
								"name": "default.name"
							}
						},
						{
							"id": 4258,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4259,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3022,
								"name": "default.value"
							}
						},
						{
							"id": 4254,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4255,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2966,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3019,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3018,
								"name": "default.clone"
							}
						},
						{
							"id": 4262,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4263,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 4264,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3027,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3026,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 4233,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4234,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 4235,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2998,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2997,
								"name": "default.format"
							}
						},
						{
							"id": 4250,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4251,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 4252,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4253,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3015,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3014,
								"name": "default.isEqual"
							}
						},
						{
							"id": 4239,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4240,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 4241,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3004,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3003,
								"name": "default.normalize"
							}
						},
						{
							"id": 4236,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4237,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 4238,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3001,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3000,
								"name": "default.parse"
							}
						},
						{
							"id": 4242,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 4243,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 4244,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 4245,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3007,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3006,
								"name": "default.toJS"
							}
						},
						{
							"id": 4248,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 4249,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3013,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3012,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4209
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4212,
								4213,
								4230,
								4227,
								4222,
								4223,
								4226,
								4225,
								4224,
								4228,
								4229,
								4208
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								4260,
								4246,
								4256,
								4214,
								4218,
								4258
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4254,
								4262,
								4233,
								4250,
								4239,
								4236,
								4242,
								4248
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/TimeField.ts",
							"line": 11,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2966,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "string"
								}
							],
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4207
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/TimeField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4265,
			"name": "fields/URLField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 4266,
					"name": "URLField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 4268,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 4269,
									"name": "new URLField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 4270,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5144,
												"name": "CharFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 4266,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2299,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2298,
								"name": "default.constructor"
							}
						},
						{
							"id": 4272,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2302,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 4273,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2303,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 4290,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 4291,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 4292,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2320,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 4287,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2161,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2317,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 4282,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2312,
								"name": "default.blank"
							}
						},
						{
							"id": 4283,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2313,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 4286,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2316,
								"name": "default.choices"
							}
						},
						{
							"id": 4285,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2315,
								"name": "default.helpText"
							}
						},
						{
							"id": 4284,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2314,
								"name": "default.label"
							}
						},
						{
							"id": 4271,
							"name": "maxLength",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 18,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2301,
								"name": "default.maxLength"
							}
						},
						{
							"id": 4288,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2318,
								"name": "default.readOnly"
							}
						},
						{
							"id": 4289,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2319,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 4267,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/URLField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'URLField'",
							"overwrites": {
								"type": "reference",
								"id": 2297,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 4320,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4321,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2067,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2350,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 4306,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 4307,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2970,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2336,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 4316,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4317,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2346,
								"name": "default.isBound"
							}
						},
						{
							"id": 4274,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4275,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 4276,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 4277,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2304,
								"name": "default.model"
							}
						},
						{
							"id": 4278,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4279,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 4280,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 4281,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2308,
								"name": "default.name"
							}
						},
						{
							"id": 4318,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4319,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2348,
								"name": "default.value"
							}
						},
						{
							"id": 4314,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4315,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2966,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2345,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2344,
								"name": "default.clone"
							}
						},
						{
							"id": 4322,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4323,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 4324,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2353,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2352,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 4293,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4294,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 4295,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2324,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2323,
								"name": "default.format"
							}
						},
						{
							"id": 4310,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4311,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 4312,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4313,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2341,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2340,
								"name": "default.isEqual"
							}
						},
						{
							"id": 4299,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4300,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 4301,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2330,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2329,
								"name": "default.normalize"
							}
						},
						{
							"id": 4296,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4297,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 4298,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2327,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2326,
								"name": "default.parse"
							}
						},
						{
							"id": 4302,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 4303,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 4304,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 4305,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2333,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2332,
								"name": "default.toJS"
							}
						},
						{
							"id": 4308,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 4309,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2339,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2338,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4268
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4272,
								4273,
								4290,
								4287,
								4282,
								4283,
								4286,
								4285,
								4284,
								4271,
								4288,
								4289,
								4267
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								4320,
								4306,
								4316,
								4274,
								4278,
								4318
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4314,
								4322,
								4293,
								4310,
								4299,
								4296,
								4302,
								4308
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/URLField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2296,
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4266
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/URLField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4325,
			"name": "fields/UUIDField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 4326,
					"name": "UUIDField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 4328,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 4329,
									"name": "new UUIDField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 4330,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5144,
												"name": "CharFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 4326,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2299,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2298,
								"name": "default.constructor"
							}
						},
						{
							"id": 4332,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2302,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 4333,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2303,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 4350,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 4351,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 4352,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2320,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 4347,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2161,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2317,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 4342,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2312,
								"name": "default.blank"
							}
						},
						{
							"id": 4343,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2313,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 4346,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2316,
								"name": "default.choices"
							}
						},
						{
							"id": 4345,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2315,
								"name": "default.helpText"
							}
						},
						{
							"id": 4344,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2314,
								"name": "default.label"
							}
						},
						{
							"id": 4331,
							"name": "maxLength",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 18,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2301,
								"name": "default.maxLength"
							}
						},
						{
							"id": 4348,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2318,
								"name": "default.readOnly"
							}
						},
						{
							"id": 4349,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2319,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 4327,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/UUIDField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'UUIDField'",
							"overwrites": {
								"type": "reference",
								"id": 2297,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 4380,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4381,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2067,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2350,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 4366,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 4367,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2970,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2336,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 4376,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4377,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2346,
								"name": "default.isBound"
							}
						},
						{
							"id": 4334,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4335,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 4336,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 4337,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2304,
								"name": "default.model"
							}
						},
						{
							"id": 4338,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4339,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 4340,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 4341,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2308,
								"name": "default.name"
							}
						},
						{
							"id": 4378,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4379,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2970,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2348,
								"name": "default.value"
							}
						},
						{
							"id": 4374,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4375,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2966,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2345,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2344,
								"name": "default.clone"
							}
						},
						{
							"id": 4382,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4383,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 4384,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2353,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2352,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 4353,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4354,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 4355,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2324,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2323,
								"name": "default.format"
							}
						},
						{
							"id": 4370,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4371,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 4372,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4373,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2341,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2340,
								"name": "default.isEqual"
							}
						},
						{
							"id": 4359,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4360,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 4361,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2330,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2329,
								"name": "default.normalize"
							}
						},
						{
							"id": 4356,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4357,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 4358,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2327,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2326,
								"name": "default.parse"
							}
						},
						{
							"id": 4362,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 4363,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 4364,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 4365,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2333,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2332,
								"name": "default.toJS"
							}
						},
						{
							"id": 4368,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 4369,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2339,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2338,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4328
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4332,
								4333,
								4350,
								4347,
								4342,
								4343,
								4346,
								4345,
								4344,
								4331,
								4348,
								4349,
								4327
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								4380,
								4366,
								4376,
								4334,
								4338,
								4378
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4374,
								4382,
								4353,
								4370,
								4359,
								4356,
								4362,
								4368
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/UUIDField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2296,
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4326
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/UUIDField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4385,
			"name": "typeUtil",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 4386,
					"name": "Class",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Utility to type a generic class type, eg.",
						"text": "NOTE: If not dealing with generics just use `typeof <class>` instead\n\n```js\nclass Base<T> {\n  value?: T;\n}\nclass Concrete<T> extends Base<T> {}\nfunction factory<T>(a: Class<Base<T>>): Base<T> {\n  return new a();\n}\nfactory(Concrete);\n```\n"
					},
					"children": [
						{
							"id": 4410,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 4411,
									"name": "new Class",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 4412,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 4409,
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Function.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.constructor"
							}
						},
						{
							"id": 4403,
							"name": "arguments",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 304,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.arguments"
							}
						},
						{
							"id": 4404,
							"name": "caller",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 305,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Function",
								"package": "typescript",
								"name": "Function"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.caller"
							}
						},
						{
							"id": 4402,
							"name": "length",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.length"
							}
						},
						{
							"id": 4405,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Returns the name of the function. Function names are read-only and can not be changed."
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
									"line": 97,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.name"
							}
						},
						{
							"id": 4401,
							"name": "prototype",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 300,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.prototype"
							}
						},
						{
							"id": 4406,
							"name": "[hasInstance]",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 4407,
									"name": "[hasInstance]",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Determines whether the given value inherits from this function if this function was used\nas a constructor function.",
										"text": "A constructor function can control which objects are recognized as its instances by\n'instanceof' by overriding this method.\n"
									},
									"parameters": [
										{
											"id": 4408,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Function.__@hasInstance@61753"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.__@hasInstance@61753"
							}
						},
						{
							"id": 4387,
							"name": "apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 4388,
									"name": "apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Calls the function, substituting the specified object for the this value of the function, and the specified array for the arguments of the function."
									},
									"parameters": [
										{
											"id": 4389,
											"name": "thisArg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The object to be used as the this object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 4390,
											"name": "argArray",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"comment": {
												"shortText": "A set of arguments to be passed to the function.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Function.apply"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.apply"
							}
						},
						{
							"id": 4395,
							"name": "bind",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 4396,
									"name": "bind",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "For a given function, creates a bound function that has the same body as the original function.\nThe this object of the bound function is associated with the specified object, and has the specified initial parameters."
									},
									"parameters": [
										{
											"id": 4397,
											"name": "thisArg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "An object to which the this keyword can refer inside the new function."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 4398,
											"name": "argArray",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isRest": true
											},
											"comment": {
												"shortText": "A list of arguments to be passed to the new function.\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Function.bind"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.bind"
							}
						},
						{
							"id": 4391,
							"name": "call",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 4392,
									"name": "call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Calls a method of an object, substituting another object for the current object."
									},
									"parameters": [
										{
											"id": 4393,
											"name": "thisArg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The object to be used as the current object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 4394,
											"name": "argArray",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isRest": true
											},
											"comment": {
												"shortText": "A list of arguments to be passed to the method.\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Function.call"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.call"
							}
						},
						{
							"id": 4399,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 4400,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of a function."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Function.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4410
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4403,
								4404,
								4402,
								4405,
								4401
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4406,
								4387,
								4395,
								4391,
								4399
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/typeUtil.ts",
							"line": 17,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 4409,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Function",
							"package": "typescript",
							"name": "Function"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						4386
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/typeUtil.ts",
					"line": 17,
					"character": 0
				}
			]
		},
		{
			"id": 4413,
			"name": "useAsyncChoices",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 5375,
					"name": "<internal>",
					"kind": 4,
					"kindString": "Namespace",
					"flags": {},
					"children": [
						{
							"id": 5517,
							"name": "ArrayBufferView",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 5518,
									"name": "buffer",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The ArrayBuffer instance referenced by the array."
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1665,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"id": 5521,
										"qualifiedName": "ArrayBufferLike",
										"package": "typescript",
										"name": "ArrayBufferLike"
									}
								},
								{
									"id": 5519,
									"name": "byteLength",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The length in bytes of the array."
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1670,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 5520,
									"name": "byteOffset",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The offset in bytes of the array."
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1675,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5518,
										5519,
										5520
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1661,
									"character": 10
								}
							]
						},
						{
							"id": 5447,
							"name": "PaginatorInterface",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 5448,
									"name": "currentState",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/build/pagination/Paginator.d.ts",
											"line": 64,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"id": 5482,
										"name": "State"
									}
								},
								{
									"id": 5449,
									"name": "internalState",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/build/pagination/Paginator.d.ts",
											"line": 65,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"id": 5484,
										"name": "InternalState"
									}
								},
								{
									"id": 5456,
									"name": "responseIsSet",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/build/pagination/Paginator.d.ts",
											"line": 68,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 5459,
									"name": "first",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 5460,
											"name": "first",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 5461,
									"name": "firstState",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 5462,
											"name": "firstState",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 5482,
														"name": "State"
													}
												]
											}
										}
									]
								},
								{
									"id": 5471,
									"name": "getRequestInit",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 5472,
											"name": "getRequestInit",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 5473,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 5489,
														"name": "PaginatorRequestOptions"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 5489,
												"name": "PaginatorRequestOptions"
											}
										}
									]
								},
								{
									"id": 5457,
									"name": "hasNextPage",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 5458,
											"name": "hasNextPage",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								},
								{
									"id": 5463,
									"name": "next",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 5464,
											"name": "next",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 5465,
									"name": "nextState",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 5466,
											"name": "nextState",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 5482,
														"name": "State"
													}
												]
											}
										}
									]
								},
								{
									"id": 5467,
									"name": "previous",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 5468,
											"name": "previous",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 5469,
									"name": "previousState",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 5470,
											"name": "previousState",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 5482,
														"name": "State"
													}
												]
											}
										}
									]
								},
								{
									"id": 5477,
									"name": "replaceStateControllers",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 5478,
											"name": "replaceStateControllers",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 5479,
													"name": "currentStatePair",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 5480,
													"name": "internalStatePair",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 5450,
									"name": "setCurrentState",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/build/pagination/Paginator.d.ts",
											"line": 66,
											"character": 4
										}
									],
									"signatures": [
										{
											"id": 5451,
											"name": "setCurrentState",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 5452,
													"name": "set",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 5482,
														"name": "State"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 5453,
									"name": "setInternalState",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/build/pagination/Paginator.d.ts",
											"line": 67,
											"character": 4
										}
									],
									"signatures": [
										{
											"id": 5454,
											"name": "setInternalState",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 5455,
													"name": "set",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 5484,
														"name": "InternalState"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 5474,
									"name": "setResponse",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 5475,
											"name": "setResponse",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 5476,
													"name": "response",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 4543,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"qualifiedName": "Record",
														"package": "typescript",
														"name": "Record"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5448,
										5449,
										5456
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										5459,
										5461,
										5471,
										5457,
										5463,
										5465,
										5467,
										5469,
										5477,
										5450,
										5453,
										5474
									]
								}
							],
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/build/pagination/Paginator.d.ts",
									"line": 63,
									"character": 17
								}
							],
							"typeParameter": [
								{
									"id": 5482,
									"name": "State",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "reflection",
										"declaration": {
											"id": 5481,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/build/pagination/Paginator.d.ts",
													"line": 63,
													"character": 44
												}
											]
										}
									}
								},
								{
									"id": 5484,
									"name": "InternalState",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "reflection",
										"declaration": {
											"id": 5483,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/build/pagination/Paginator.d.ts",
													"line": 63,
													"character": 64
												}
											]
										}
									}
								}
							]
						},
						{
							"id": 5494,
							"name": "RequestInit",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 5495,
									"name": "body",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "A BodyInit object or null to set request's body."
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1468,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 5509,
												"qualifiedName": "BodyInit",
												"package": "typescript",
												"name": "BodyInit"
											}
										]
									}
								},
								{
									"id": 5496,
									"name": "cache",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "A string indicating how the request will interact with the browser's cache to set request's cache."
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1470,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"id": 5510,
										"qualifiedName": "RequestCache",
										"package": "typescript",
										"name": "RequestCache"
									}
								},
								{
									"id": 5497,
									"name": "credentials",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "A string indicating whether credentials will be sent with the request always, never, or only when sent to a same-origin URL. Sets request's credentials."
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1472,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"id": 5511,
										"qualifiedName": "RequestCredentials",
										"package": "typescript",
										"name": "RequestCredentials"
									}
								},
								{
									"id": 5498,
									"name": "headers",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "A Headers object, an object literal, or an array of two-item arrays to set request's headers."
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1474,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"id": 5508,
										"qualifiedName": "HeadersInit",
										"package": "typescript",
										"name": "HeadersInit"
									}
								},
								{
									"id": 5499,
									"name": "integrity",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "A cryptographic hash of the resource to be fetched by request. Sets request's integrity."
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1476,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5500,
									"name": "keepalive",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "A boolean to set request's keepalive."
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1478,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 5501,
									"name": "method",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "A string to set request's method."
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1480,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5502,
									"name": "mode",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "A string to indicate whether the request will use CORS, or will be restricted to same-origin URLs. Sets request's mode."
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1482,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"id": 5512,
										"qualifiedName": "RequestMode",
										"package": "typescript",
										"name": "RequestMode"
									}
								},
								{
									"id": 5503,
									"name": "redirect",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "A string indicating whether request follows redirects, results in an error upon encountering a redirect, or returns the redirect (in an opaque fashion). Sets request's redirect."
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1484,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"id": 5513,
										"qualifiedName": "RequestRedirect",
										"package": "typescript",
										"name": "RequestRedirect"
									}
								},
								{
									"id": 5504,
									"name": "referrer",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "A string whose value is a same-origin URL, \"about:client\", or the empty string, to set request's referrer."
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1486,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5505,
									"name": "referrerPolicy",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "A referrer policy to set request's referrerPolicy."
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1488,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"id": 5514,
										"qualifiedName": "ReferrerPolicy",
										"package": "typescript",
										"name": "ReferrerPolicy"
									}
								},
								{
									"id": 5506,
									"name": "signal",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "An AbortSignal to set request's signal."
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1490,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 5265,
												"qualifiedName": "AbortSignal",
												"package": "typescript",
												"name": "AbortSignal"
											}
										]
									}
								},
								{
									"id": 5507,
									"name": "window",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "Can only be null. Used to disassociate request from any Window."
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1492,
											"character": 4
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5495,
										5496,
										5497,
										5498,
										5499,
										5500,
										5501,
										5502,
										5503,
										5504,
										5505,
										5506,
										5507
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 1466,
									"character": 10
								}
							]
						},
						{
							"id": 5521,
							"name": "ArrayBufferLike",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1652,
									"character": 5
								}
							],
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"qualifiedName": "ArrayBufferTypes",
										"package": "typescript",
										"name": "ArrayBufferTypes"
									}
								},
								"objectType": {
									"type": "reference",
									"qualifiedName": "ArrayBufferTypes",
									"package": "typescript",
									"name": "ArrayBufferTypes"
								}
							}
						},
						{
							"id": 5509,
							"name": "BodyInit",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 17590,
									"character": 5
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 5202,
										"qualifiedName": "ReadableStream",
										"package": "typescript",
										"name": "ReadableStream"
									},
									{
										"type": "reference",
										"id": 5515,
										"qualifiedName": "XMLHttpRequestBodyInit",
										"package": "typescript",
										"name": "XMLHttpRequestBodyInit"
									}
								]
							}
						},
						{
							"id": 5516,
							"name": "BufferSource",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 17591,
									"character": 5
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 5517,
										"qualifiedName": "ArrayBufferView",
										"package": "typescript",
										"name": "ArrayBufferView"
									},
									{
										"type": "reference",
										"qualifiedName": "ArrayBuffer",
										"package": "typescript",
										"name": "ArrayBuffer"
									}
								]
							}
						},
						{
							"id": 5508,
							"name": "HeadersInit",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 17622,
									"character": 5
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									},
									{
										"type": "reference",
										"id": 4543,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"qualifiedName": "Record",
										"package": "typescript",
										"name": "Record"
									},
									{
										"type": "reference",
										"qualifiedName": "Headers",
										"package": "typescript",
										"name": "Headers"
									}
								]
							}
						},
						{
							"id": 5489,
							"name": "PaginatorRequestOptions",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/build/pagination/Paginator.d.ts",
									"line": 1,
									"character": 20
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 4496,
										"typeArguments": [
											{
												"type": "reference",
												"id": 5494,
												"qualifiedName": "RequestInit",
												"package": "typescript",
												"name": "RequestInit"
											},
											{
												"type": "literal",
												"value": "headers"
											}
										],
										"qualifiedName": "Omit",
										"package": "typescript",
										"name": "Omit"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 5490,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 5491,
													"name": "headers",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Any headers to add to the request. You can unset default headers that might be specified in the default\n`Endpoint.defaultConfig.requestInit` by setting the value to `undefined`."
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/util/build/pagination/Paginator.d.ts",
															"line": 6,
															"character": 4
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"id": 5508,
																"qualifiedName": "HeadersInit",
																"package": "typescript",
																"name": "HeadersInit"
															},
															{
																"type": "reference",
																"id": 4543,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Record",
																"package": "typescript",
																"name": "Record"
															}
														]
													}
												},
												{
													"id": 5493,
													"name": "query",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Any query request parameters"
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/util/build/pagination/Paginator.d.ts",
															"line": 14,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"id": 4543,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "boolean"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																]
															}
														],
														"qualifiedName": "Record",
														"package": "typescript",
														"name": "Record"
													}
												},
												{
													"id": 5492,
													"name": "urlArgs",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Any arguments for the [URL](doc:UrlPattern)"
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/util/build/pagination/Paginator.d.ts",
															"line": 10,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"id": 4543,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"qualifiedName": "Record",
														"package": "typescript",
														"name": "Record"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														5491,
														5493,
														5492
													]
												}
											],
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/build/pagination/Paginator.d.ts",
													"line": 1,
													"character": 77
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 5514,
							"name": "ReferrerPolicy",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 17760,
									"character": 5
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": ""
									},
									{
										"type": "literal",
										"value": "no-referrer"
									},
									{
										"type": "literal",
										"value": "no-referrer-when-downgrade"
									},
									{
										"type": "literal",
										"value": "origin"
									},
									{
										"type": "literal",
										"value": "origin-when-cross-origin"
									},
									{
										"type": "literal",
										"value": "same-origin"
									},
									{
										"type": "literal",
										"value": "strict-origin"
									},
									{
										"type": "literal",
										"value": "strict-origin-when-cross-origin"
									},
									{
										"type": "literal",
										"value": "unsafe-url"
									}
								]
							}
						},
						{
							"id": 5510,
							"name": "RequestCache",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 17762,
									"character": 5
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "default"
									},
									{
										"type": "literal",
										"value": "force-cache"
									},
									{
										"type": "literal",
										"value": "no-cache"
									},
									{
										"type": "literal",
										"value": "no-store"
									},
									{
										"type": "literal",
										"value": "only-if-cached"
									},
									{
										"type": "literal",
										"value": "reload"
									}
								]
							}
						},
						{
							"id": 5511,
							"name": "RequestCredentials",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 17763,
									"character": 5
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "include"
									},
									{
										"type": "literal",
										"value": "omit"
									},
									{
										"type": "literal",
										"value": "same-origin"
									}
								]
							}
						},
						{
							"id": 5512,
							"name": "RequestMode",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 17765,
									"character": 5
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "cors"
									},
									{
										"type": "literal",
										"value": "navigate"
									},
									{
										"type": "literal",
										"value": "no-cors"
									},
									{
										"type": "literal",
										"value": "same-origin"
									}
								]
							}
						},
						{
							"id": 5513,
							"name": "RequestRedirect",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 17766,
									"character": 5
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "error"
									},
									{
										"type": "literal",
										"value": "follow"
									},
									{
										"type": "literal",
										"value": "manual"
									}
								]
							}
						},
						{
							"id": 5429,
							"name": "ReturnType",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Obtain the return type of a function type"
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1596,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 5436,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 5433,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1596,
													"character": 26
												}
											],
											"signatures": [
												{
													"id": 5434,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 5435,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"id": 5436,
									"qualifiedName": "T",
									"package": "typescript",
									"name": "T"
								},
								"extendsType": {
									"type": "reflection",
									"declaration": {
										"id": 5430,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {
											"isExternal": true
										},
										"sources": [
											{
												"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
												"line": 1596,
												"character": 61
											}
										],
										"signatures": [
											{
												"id": 5431,
												"name": "__type",
												"kind": 4096,
												"kindString": "Call signature",
												"flags": {
													"isExternal": true
												},
												"parameters": [
													{
														"id": 5432,
														"name": "args",
														"kind": 32768,
														"kindString": "Parameter",
														"flags": {
															"isExternal": true,
															"isRest": true
														},
														"type": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												],
												"type": {
													"type": "inferred",
													"name": "R"
												}
											}
										]
									}
								},
								"trueType": {
									"type": "reference",
									"qualifiedName": "R",
									"package": "typescript",
									"name": "R"
								},
								"falseType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						},
						{
							"id": 5383,
							"name": "UseAsyncChoicesProps",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "expand-properties",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/useAsyncChoices.ts",
									"line": 15,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 5395,
									"name": "ItemT",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 5396,
									"name": "ValueT",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 4510,
										"typeArguments": [
											{
												"type": "reference",
												"id": 5397,
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 5395,
															"name": "ItemT"
														}
													}
												],
												"name": "UseAsyncListingProps"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "accumulatePages"
													},
													{
														"type": "literal",
														"value": "query"
													},
													{
														"type": "literal",
														"value": "trigger"
													}
												]
											}
										],
										"qualifiedName": "Pick",
										"package": "typescript",
										"name": "Pick"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 5384,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 5385,
													"name": "asyncChoices",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "See [AsyncChoices](doc:AsyncChoices]"
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/viewmodel/src/useAsyncChoices.ts",
															"line": 22,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"id": 2161,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5395,
																"name": "ItemT"
															},
															{
																"type": "reference",
																"id": 5396,
																"name": "ValueT"
															}
														],
														"name": "AsyncChoicesInterface"
													}
												},
												{
													"id": 5393,
													"name": "listOptions",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Any extra options to pass through to [list](doc:AsyncChoicesInterface#method-list)",
														"text": "These will be available in both [useListProps](doc:AsyncChoicesInterface#method-list) and [list](doc:AsyncChoicesInterface#method-useListProps) under the `listOptions`\nkey\n"
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/viewmodel/src/useAsyncChoices.ts",
															"line": 47,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"id": 4543,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"qualifiedName": "Record",
														"package": "typescript",
														"name": "Record"
													}
												},
												{
													"id": 5394,
													"name": "retrieveOptions",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Any extra options to pass through to [retrieve](doc:AsyncChoicesInterface#method-retrieve)",
														"text": "These will be available in both [useRetrieveProps](doc:AsyncChoicesInterface#method-retrieve) and [retrieve](doc:AsyncChoicesInterface#method-useRetrieveProps) under the `retrieveOptions`\nkey\n"
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/viewmodel/src/useAsyncChoices.ts",
															"line": 54,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"id": 4543,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"qualifiedName": "Record",
														"package": "typescript",
														"name": "Record"
													}
												},
												{
													"id": 5386,
													"name": "value",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "The currently selected choice(s) - if any",
														"text": "When specified the corresponding label(s) will be resolved\nautomatically.\n"
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/viewmodel/src/useAsyncChoices.ts",
															"line": 29,
															"character": 4
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 5396,
																	"name": "ValueT"
																}
															},
															{
																"type": "reference",
																"id": 5396,
																"name": "ValueT"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												},
												{
													"id": 5390,
													"name": "onRetrieveError",
													"kind": 2048,
													"kindString": "Method",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/viewmodel/src/useAsyncChoices.ts",
															"line": 40,
															"character": 4
														}
													],
													"signatures": [
														{
															"id": 5391,
															"name": "onRetrieveError",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"comment": {
																"shortText": "If provided this function will be called whenever `asyncChoices.retrieve` errors",
																"text": "You can use this to do things like unset a value if it no longer exists.\n"
															},
															"parameters": [
																{
																	"id": 5392,
																	"name": "error",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"id": 4546,
																		"qualifiedName": "Error",
																		"package": "typescript",
																		"name": "Error"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												},
												{
													"id": 5387,
													"name": "onRetrieveSuccess",
													"kind": 2048,
													"kindString": "Method",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/viewmodel/src/useAsyncChoices.ts",
															"line": 34,
															"character": 4
														}
													],
													"signatures": [
														{
															"id": 5388,
															"name": "onRetrieveSuccess",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"comment": {
																"shortText": "If provided this function will be called whenever a value is successfully\nresolved using `asyncChoices.retrieve`."
															},
															"parameters": [
																{
																	"id": 5389,
																	"name": "response",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "reference",
																				"id": 5395,
																				"name": "ItemT"
																			},
																			{
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"id": 5395,
																					"name": "ItemT"
																				}
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														5385,
														5393,
														5394,
														5386
													]
												},
												{
													"title": "Methods",
													"kind": 2048,
													"children": [
														5390,
														5387
													]
												}
											],
											"sources": [
												{
													"fileName": "js-packages/@prestojs/viewmodel/src/useAsyncChoices.ts",
													"line": 18,
													"character": 4
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 5376,
							"name": "UseAsyncChoicesReturn",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "expand-properties",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/useAsyncChoices.ts",
									"line": 60,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 5381,
									"name": "ItemT",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 5382,
									"name": "ValueT",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5377,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 5380,
											"name": "choices",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "See [getChoices](doc:AsyncChoicesInterface#method-getChoices)"
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/viewmodel/src/useAsyncChoices.ts",
													"line": 72,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 5429,
												"typeArguments": [
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "literal",
															"value": "getChoices"
														},
														"objectType": {
															"type": "reference",
															"id": 2161,
															"typeArguments": [
																{
																	"type": "reference",
																	"id": 5381,
																	"name": "ItemT"
																},
																{
																	"type": "reference",
																	"id": 5382,
																	"name": "ValueT"
																}
															],
															"name": "AsyncChoicesInterface"
														}
													}
												],
												"qualifiedName": "ReturnType",
												"package": "typescript",
												"name": "ReturnType"
											}
										},
										{
											"id": 5378,
											"name": "list",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "See [useAsyncListing](doc:useAsyncListing#return-type)"
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/viewmodel/src/useAsyncChoices.ts",
													"line": 64,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 5407,
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 5381,
															"name": "ItemT"
														}
													}
												],
												"name": "UseAsyncListingReturn"
											}
										},
										{
											"id": 5379,
											"name": "selected",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "See [useAsyncValue](doc:useAsyncValue#return-type)"
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/viewmodel/src/useAsyncChoices.ts",
													"line": 68,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 5418,
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 5381,
																	"name": "ItemT"
																}
															},
															{
																"type": "reference",
																"id": 5381,
																"name": "ItemT"
															}
														]
													}
												],
												"name": "UseAsyncValueReturn"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												5380,
												5378,
												5379
											]
										}
									],
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/useAsyncChoices.ts",
											"line": 60,
											"character": 44
										}
									]
								}
							}
						},
						{
							"id": 5485,
							"name": "UseAsyncListingExecuteProps",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "expand-properties",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
									"line": 5,
									"character": 13
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5486,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 5488,
											"name": "paginator",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The paginator instance, if any"
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
													"line": 13,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 5447,
														"name": "PaginatorInterface"
													}
												]
											}
										},
										{
											"id": 5487,
											"name": "query",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Any query parameters"
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
													"line": 9,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 4543,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "boolean"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												5488,
												5487
											]
										}
									],
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
											"line": 5,
											"character": 43
										}
									]
								}
							}
						},
						{
							"id": 5397,
							"name": "UseAsyncListingProps",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "expand-properties",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
									"line": 18,
									"character": 20
								}
							],
							"typeParameter": [
								{
									"id": 5406,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5398,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 5401,
											"name": "accumulatePages",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Whether to accumulate pages as more results are fetched. For example\nif the first page of results is returned, then the next page is fetched\nthen the combined results for the first two pages will be resolved.",
												"text": "This resets whenever `query` changes or if pagination state changes\nto anything other than the next page.\n\nIf this is true you must specify `paginator`.\n"
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
													"line": 44,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5402,
											"name": "paginator",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Optional paginator if result is paginated. This will be monitored for\nany state changes which will trigger a call to `execute`.",
												"text": "Required if `accumulatePages` is true.\n"
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
													"line": 51,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 5447,
														"name": "PaginatorInterface"
													},
													{
														"type": "literal",
														"value": null
													}
												]
											}
										},
										{
											"id": 5400,
											"name": "query",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Any query string parameters for the request"
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
													"line": 33,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 4543,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "boolean"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										},
										{
											"id": 5399,
											"name": "trigger",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "When to trigger the fetch. Defaults to `DEEP` which means whenever a deep\nequality check on `query` or `paginator` state fails it will refetch.",
												"text": "If set to `MANUAL` nothing will happen until it changes to `DEEP` or you\ncall the returned `run` function. You can use this to defer execution until\nthe value is required.\n\nDefaults to 'DEEP'.\n"
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
													"line": 29,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "MANUAL"
													},
													{
														"type": "literal",
														"value": "DEEP"
													}
												]
											}
										},
										{
											"id": 5403,
											"name": "execute",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
													"line": 60,
													"character": 4
												}
											],
											"signatures": [
												{
													"id": 5404,
													"name": "execute",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Asynchronous function that returns the result for the query. Passed an\nobject with `query` and `paginator` keys.",
														"text": "Note that when `trigger` is `DEEP` changes to this function will cause it\nto be called again so you must memoize it (eg. with `useCallback`) if it's\ndefined in your component or hook.\n"
													},
													"parameters": [
														{
															"id": 5405,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 5485,
																"name": "UseAsyncListingExecuteProps"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 5406,
																"name": "T"
															}
														],
														"qualifiedName": "Promise",
														"package": "typescript",
														"name": "Promise"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												5401,
												5402,
												5400,
												5399
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												5403
											]
										}
									],
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
											"line": 18,
											"character": 46
										}
									]
								}
							}
						},
						{
							"id": 5407,
							"name": "UseAsyncListingReturn",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
									"line": 87,
									"character": 20
								}
							],
							"typeParameter": [
								{
									"id": 5417,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"id": 5437,
												"typeArguments": [
													{
														"type": "reference",
														"id": 5417,
														"name": "T"
													}
												],
												"name": "UseAsyncListingReturnCommon"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 5408,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 5409,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"shortText": "Until first call has resolved neither error nor result will be set"
															},
															"sources": [
																{
																	"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
																	"line": 91,
																	"character": 4
																}
															],
															"type": {
																"type": "literal",
																"value": null
															}
														},
														{
															"id": 5410,
															"name": "result",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
																	"line": 92,
																	"character": 4
																}
															],
															"type": {
																"type": "literal",
																"value": null
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																5409,
																5410
															]
														}
													],
													"sources": [
														{
															"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
															"line": 87,
															"character": 81
														}
													]
												}
											}
										]
									},
									{
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"id": 5437,
												"typeArguments": [
													{
														"type": "reference",
														"id": 5417,
														"name": "T"
													}
												],
												"name": "UseAsyncListingReturnCommon"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 5411,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 5412,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"shortText": "Set to the rejected value of the promise. Only one of `error` and `result` can be set. If\n`isLoading` is true consider this stale (ie. based on _previous_ props). This can be useful\nwhen you want the UI to show the previous value until the next value is ready."
															},
															"sources": [
																{
																	"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
																	"line": 99,
																	"character": 4
																}
															],
															"type": {
																"type": "reference",
																"id": 4546,
																"qualifiedName": "Error",
																"package": "typescript",
																"name": "Error"
															}
														},
														{
															"id": 5413,
															"name": "result",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"shortText": "Result will not be set when error is set"
															},
															"sources": [
																{
																	"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
																	"line": 103,
																	"character": 4
																}
															],
															"type": {
																"type": "literal",
																"value": null
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																5412,
																5413
															]
														}
													],
													"sources": [
														{
															"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
															"line": 93,
															"character": 39
														}
													]
												}
											}
										]
									},
									{
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"id": 5437,
												"typeArguments": [
													{
														"type": "reference",
														"id": 5417,
														"name": "T"
													}
												],
												"name": "UseAsyncListingReturnCommon"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 5414,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 5415,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"shortText": "Error will not be set when result is set"
															},
															"sources": [
																{
																	"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
																	"line": 108,
																	"character": 4
																}
															],
															"type": {
																"type": "literal",
																"value": null
															}
														},
														{
															"id": 5416,
															"name": "result",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"shortText": "The value returned from execute"
															},
															"sources": [
																{
																	"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
																	"line": 112,
																	"character": 4
																}
															],
															"type": {
																"type": "reference",
																"id": 5417,
																"name": "T"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																5415,
																5416
															]
														}
													],
													"sources": [
														{
															"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
															"line": 104,
															"character": 39
														}
													]
												}
											}
										]
									}
								]
							}
						},
						{
							"id": 5437,
							"name": "UseAsyncListingReturnCommon",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
									"line": 62,
									"character": 13
								}
							],
							"typeParameter": [
								{
									"id": 5446,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5438,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 5439,
											"name": "isLoading",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "True while `execute` call is in progress."
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
													"line": 66,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5440,
											"name": "paginator",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The same `paginator` passed in to `useAsyncListing`"
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
													"line": 70,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 5447,
														"name": "PaginatorInterface"
													}
												]
											}
										},
										{
											"id": 5444,
											"name": "reset",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
													"line": 85,
													"character": 4
												}
											],
											"signatures": [
												{
													"id": 5445,
													"name": "reset",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "When called will set both result and error to null. Will not immediately trigger\na call to the action but subsequent changes to query or paginator will according\nto the value of `trigger`."
													},
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										},
										{
											"id": 5441,
											"name": "run",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
													"line": 79,
													"character": 4
												}
											],
											"signatures": [
												{
													"id": 5442,
													"name": "run",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "A function to manually trigger the action. If `options.trigger` is `MANUAL`\ncalling this function is the only way to trigger the action.",
														"text": "This function will return a promise that resolves/rejects to same value\nreturned by `execute`. If `accumulatePages` is set the value returned is\nthe accumulated value.\n"
													},
													"parameters": [
														{
															"id": 5443,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 5446,
																"name": "T"
															}
														],
														"qualifiedName": "Promise",
														"package": "typescript",
														"name": "Promise"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												5439,
												5440
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												5444,
												5441
											]
										}
									],
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
											"line": 62,
											"character": 46
										}
									]
								}
							}
						},
						{
							"id": 5418,
							"name": "UseAsyncValueReturn",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/build/useAsyncValue.d.ts",
									"line": 80,
									"character": 20
								}
							],
							"typeParameter": [
								{
									"id": 5428,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5419,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 5420,
											"name": "error",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Set to the rejected value of the promise. Only one of `error` and `value` can be set. If\n`isLoading` is true consider this stale (ie. based on _previous_ props). This can be useful\nwhen you want the UI to show the previous value until the next value is ready."
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/build/useAsyncValue.d.ts",
													"line": 86,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 4546,
														"qualifiedName": "Error",
														"package": "typescript",
														"name": "Error"
													}
												]
											}
										},
										{
											"id": 5421,
											"name": "isLoading",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "True while `resolve` call is in progress."
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/build/useAsyncValue.d.ts",
													"line": 90,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5422,
											"name": "value",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The resolved value"
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/build/useAsyncValue.d.ts",
													"line": 94,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 5428,
														"name": "T"
													},
													{
														"type": "literal",
														"value": null
													}
												]
											}
										},
										{
											"id": 5426,
											"name": "reset",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/build/useAsyncValue.d.ts",
													"line": 112,
													"character": 4
												}
											],
											"signatures": [
												{
													"id": 5427,
													"name": "reset",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "When called will set both result and error to null. Will not immediately trigger\na call to the action but subsequent changes to query or paginator will according\nto the value of `trigger`.",
														"text": "If value is found in `existingValues` then it will still be returned even if\nyou call `reset` - `reset` only clears values that are returned from `resolve`.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										},
										{
											"id": 5423,
											"name": "run",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/build/useAsyncValue.d.ts",
													"line": 103,
													"character": 4
												}
											],
											"signatures": [
												{
													"id": 5424,
													"name": "run",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "A function to manually trigger the action. If `options.trigger` is `MANUAL`\ncalling this function is the only way to trigger the action.",
														"text": "This function will return a promise that resolves/rejects to same value\nreturned by `execute`. If `accumulatePages` is set the value returned is\nthe accumulated value.\n"
													},
													"parameters": [
														{
															"id": 5425,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"qualifiedName": "Promise",
														"package": "typescript",
														"name": "Promise"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												5420,
												5421,
												5422
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												5426,
												5423
											]
										}
									],
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/build/useAsyncValue.d.ts",
											"line": 80,
											"character": 45
										}
									]
								}
							}
						},
						{
							"id": 5515,
							"name": "XMLHttpRequestBodyInit",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 17648,
									"character": 5
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 5185,
										"qualifiedName": "Blob",
										"package": "typescript",
										"name": "Blob"
									},
									{
										"type": "reference",
										"id": 5516,
										"qualifiedName": "BufferSource",
										"package": "typescript",
										"name": "BufferSource"
									},
									{
										"type": "reference",
										"qualifiedName": "FormData",
										"package": "typescript",
										"name": "FormData"
									},
									{
										"type": "reference",
										"qualifiedName": "URLSearchParams",
										"package": "typescript",
										"name": "URLSearchParams"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"kind": 256,
							"children": [
								5517,
								5447,
								5494
							]
						},
						{
							"title": "Type aliases",
							"kind": 4194304,
							"children": [
								5521,
								5509,
								5516,
								5508,
								5489,
								5514,
								5510,
								5511,
								5512,
								5513,
								5429,
								5383,
								5376,
								5485,
								5397,
								5407,
								5437,
								5418,
								5515
							]
						}
					]
				},
				{
					"id": 4414,
					"name": "useAsyncChoices",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"originalName": "default",
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/useAsyncChoices.ts",
							"line": 93,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 4415,
							"name": "useAsyncChoices",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Hook that makes it easy to use an [AsyncChoices](doc:AsyncChoicesInterface) definition.",
								"text": "This hook does the following:\n\n1) Calls [useListProps](doc:AsyncChoicesInterface#method-useListProps) to get any dependencies for [list](doc:AsyncChoicesInterface#method-list)\n\n2) Calls [list](doc:AsyncChoicesInterface#method-list) and passes through the dependencies and a `query` object representing any query parameters for the async call\n\n3) Calls [useRetrieveProps](doc:AsyncChoicesInterface#method-useRetrieveProps) to get any dependencies for [retrieve](doc:AsyncChoicesInterface#method-retrieve)\n\n4) If there is a current `value` [retrieve](doc:AsyncChoicesInterface#method-retrieve) is called and is passed the dependencies returned above\n\n5) An object is returned with the available choices in `choices`, the result of 2 in `list` and result of 4 in `selected`\n",
								"tags": [
									{
										"tag": "extract-docs",
										"text": ""
									},
									{
										"tag": "menu-group",
										"text": "Async Choices\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 4416,
									"name": "ItemT",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 4417,
									"name": "ValueT",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 4418,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 5383,
										"typeArguments": [
											{
												"type": "reference",
												"id": 4416,
												"name": "ItemT"
											},
											{
												"type": "reference",
												"id": 4417,
												"name": "ValueT"
											}
										],
										"name": "UseAsyncChoicesProps"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 5376,
								"typeArguments": [
									{
										"type": "reference",
										"id": 4416,
										"name": "ItemT"
									},
									{
										"type": "reference",
										"id": 4417,
										"name": "ValueT"
									}
								],
								"name": "UseAsyncChoicesReturn"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"kind": 4,
					"children": [
						5375
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						4414
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/useAsyncChoices.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4419,
			"name": "useViewModelCache",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 5522,
					"name": "<internal>",
					"kind": 4,
					"kindString": "Namespace",
					"flags": {},
					"children": [
						{
							"id": 5523,
							"name": "Selector",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/useViewModelCache.ts",
									"line": 5,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 5528,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									}
								},
								{
									"id": 5529,
									"name": "ResultType",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 5530,
									"name": "U",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5524,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/useViewModelCache.ts",
											"line": 5,
											"character": 87
										}
									],
									"signatures": [
										{
											"id": 5525,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 5526,
													"name": "cache",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 1827,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5528,
																"name": "T"
															}
														],
														"name": "ViewModelCache"
													}
												},
												{
													"id": 5527,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isRest": true
													},
													"type": {
														"type": "reference",
														"id": 5530,
														"name": "U"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 5529,
												"name": "ResultType"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Type aliases",
							"kind": 4194304,
							"children": [
								5523
							]
						}
					]
				},
				{
					"id": 4420,
					"name": "useViewModelCache",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"originalName": "default",
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/useViewModelCache.ts",
							"line": 108,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 4421,
							"name": "useViewModelCache",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Select some data out of the cache for use in a component. Whenever the cache data\nchanges the component will re-render with latest value.",
								"text": "See [ViewModelCache](doc:ViewModelCache) for more details on how to read data from the\ncache. The [Field notation](doc:ViewModelCache#Field_notation) documentation goes over\nthe possible formats for the fields argument.\n\nExample usage:\n\n```jsx\nfunction UserView({ id }) {\n    const record = useViewModelCache(User, cache => cache.get(id, ['firstName']));\n\n    return <div>Welcome {record.firstName}</div>;\n}\n```\n\nExtra arguments can be passed through as a third argument to the selector which makes\nit easier to create reusable selectors. We could rewrite the above like:\n\n```jsx\nconst selectUser = (cache, id, fieldNames) => cache.get(id, fieldNames);\nfunction UserView({ id }) {\n    const record = useViewModelCache(User, selectUser, [id, fieldNames]);\n\n    return <div>Welcome {record.firstName}</div>;\n}\n```\n\nSelectors can return anything:\n\n```jsx\nconst usersByGroup = cache => cache.getAll(['groupId', 'firstName', 'email']).reduce((acc, record) => {\n  acc[record.groupId] = acc[record.firstName] || [];\n  acc[record.groupId].push(record);\n  return acc;\n}, {})\nfunction GroupedUserView() {\n  const groupedUsers = useViewModelCache(User, usersByGroup);\n  return ...\n}\n```\n\nIn the preceding example the object returned from `useViewModelChange` will change each time `GroupUserView`\nrenders. This is because the selector returns a new object every time and internally `useViewModelChange`\ndoes a strict equality check to determine whether to return the new value or keep the old value. As an\noptimisation you can pass a third parameter that defines how to compare the previous and current value:\n\n```jsx\nimport isEqual from 'lodash/isEqual';\n\nfunction OptimisedGroupedUserView() {\n  // isEqual does a deep equality check so if the underlying cached values remain the same then the\n  // object returned here will be the same across multiple renders.\n  const groupedUsers = useViewModelCache(User, usersByGroup, [], isEqual);\n  return ...\n}\n```\n",
								"returns": "The data as returned by `selector`\n",
								"tags": [
									{
										"tag": "extract-docs",
										"text": ""
									},
									{
										"tag": "menu-group",
										"text": "Caching\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 4422,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2071,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "reference",
												"id": 4422,
												"name": "T"
											}
										],
										"name": "ViewModelConstructor"
									}
								},
								{
									"id": 4423,
									"name": "ResultType",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 4424,
									"name": "U",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									},
									"default": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 4425,
									"name": "viewModel",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The ViewModel to use the cache from"
									},
									"type": {
										"type": "reference",
										"id": 4422,
										"name": "T"
									}
								},
								{
									"id": 4426,
									"name": "selector",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A function that gets passed the cache and selects data from it. If your selector\nis slow consider using a library like [reselect](https://github.com/reduxjs/reselect) to create\nyour selector with. Note that `get`, `getAll` and `getList` on `ViewModelCache` will return the\nsame object across multiple calls if the underlying data has not changed."
									},
									"type": {
										"type": "reference",
										"id": 5523,
										"typeArguments": [
											{
												"type": "reference",
												"id": 4422,
												"name": "T"
											},
											{
												"type": "reference",
												"id": 4423,
												"name": "ResultType"
											},
											{
												"type": "reference",
												"id": 4424,
												"name": "U"
											}
										],
										"name": "Selector"
									}
								},
								{
									"id": 4427,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Any extra arguments to pass through to the selector. These will be compared shallowly\nand any changes will re-run the selector."
									},
									"type": {
										"type": "reference",
										"id": 4424,
										"name": "U"
									},
									"defaultValue": "..."
								},
								{
									"id": 4428,
									"name": "isEquals",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Optionally control how equality is determined for an object. By default this is\na strict equality check. This is useful as an optimisation when you want the value returned from\na selector to be the same object when the selector re-runs.\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 4429,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 4430,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 4431,
															"name": "currentValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 4423,
																"name": "ResultType"
															}
														},
														{
															"id": 4432,
															"name": "previousValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"id": 4423,
																"name": "ResultType"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									},
									"defaultValue": "defaultEquality"
								}
							],
							"type": {
								"type": "reference",
								"id": 4423,
								"name": "ResultType"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"kind": 4,
					"children": [
						5522
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						4420
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/useViewModelCache.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4433,
			"name": "util",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 4434,
					"name": "freezeObject",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/util.ts",
							"line": 10,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 4435,
							"name": "freezeObject",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 4436,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 4437,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4438,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/util.ts",
											"line": 10,
											"character": 39
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 4439,
					"name": "isDev",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/util.ts",
							"line": 5,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 4440,
							"name": "isDev",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						4434,
						4439
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/util.ts",
					"line": 2,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"kind": 2,
			"children": [
				1826,
				1973,
				2129,
				2152,
				2236,
				2295,
				2355,
				2417,
				2476,
				2536,
				2595,
				2655,
				2717,
				2777,
				2837,
				2897,
				3032,
				3091,
				3152,
				3212,
				3272,
				3331,
				3392,
				3452,
				3517,
				3583,
				3642,
				3712,
				3772,
				3834,
				4086,
				4146,
				4206,
				4265,
				4325,
				4385,
				4413,
				4419,
				4433
			]
		}
	]
}