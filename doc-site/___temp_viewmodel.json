{
	"id": 724,
	"name": "@prestojs/viewmodel",
	"kind": 1,
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 725,
			"name": "ViewModelCache",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 726,
					"name": "ViewModelCache",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Cache for ViewModel instances based on the specified field names set.",
						"text": "The key to the cache is the primary key for the record and the field names\nset on it. For example if you have a record that accepts id, name and email\nyou could have a record cached for id, for name, for email or any\ncombination of the 3 fields. This is to handle the common case of fetching\npartial data from a backend.\n\nThe cache implementation will update any cache entries that are a subset\nof a new cache entry. eg. Caching a record with all the possible fields set\nwould result in all the existing partial field cache entries being updated\nto match the data on the full record for the fields it care about.\n\nUsage:\n\n```js\n// Assume User is a ViewModel already defined\n\n// Add a record\nUser.cache.add(new User({ id: 1, name: 'John' }));\n\n// Retrieve a record\nconst record = User.cache.get(1, ['id', 'name']);\n\n// To update a record just add it again\nUser.cache.add(new User({ id: 1, name: 'Johnny' }));\n\n// Cache is per unique set of fields but a superset will update a subset\nUser.cache.add(new User({ id: 1, name: 'Johnny Smith', email: 'johnny@test.com' }));\nUser.cache.get(1, ['id', 'name']);\n// { id: 1, name: 'Johnny Smith' }\nUser.cache.get(1, ['id', 'name', 'email'])\n// { id: 1, name: 'Johnny Smith', email: 'johnny@test.com' }\n\n// Delete a specific cache for a subset of fields\nUser.cache.delete(1, ['id', 'name']);\nUser.cache.get(1, ['id', 'name']);\n// null\nUser.cache.get(1, ['id', 'name', 'email'])\n// { id: 1, name: 'Johnny Smith', email: 'johnny@test.com' }\n\n// Or all fields\nUser.cache.delete(1);\nUser.cache.get(1, ['id', 'name', 'email'])\n// null\n\n// You can add multiple values at a time\nUser.cache.addList([johnny, sam]);\n\n// You can listen to changes\nUser.cache.addListener(2, ['id', 'name'], (previous, next) => console.log(previous, 'change to', next));\nUser.cache.add(new User({ id: 2, name: 'Bob' }));\n// null changed to User({ id: 2, name: 'Bob' })\nUser.cache.add(new User({ id: 2, name: 'Bobby' }));\n// User({ id: 2, name: 'Bob' }) changed to User({ id: 2, name: 'Bobby' })\nUser.cache.delete(2)\n// User({ id: 2, name: 'Bobby' }) changed to null\n\n// You can listen to multiple changes. If you use this and addList then you only get one\n// call for each change that occurs within addList\nUser.cache.addListenerList(\n // Ids to listen for changes to\n [3, 4],\n // Only get updates for cached records with these field names\n ['id', 'name'],\n (previous, next) => console.log(previous, 'change to', next)\n);\nUser.cache.addList([new User({ id: 3, name: 'Jay' }), new User({ id: 4, name: 'Bee' })]);\n// [null, null] changed to [new User({ id: 3, name: 'Jay' }), new User({ id: 4, name: 'Bee' })]\nUser.cache.addList([new User({ id: 3, name: 'Jayz' }), new User({ id: 4, name: 'Beeb' })]);\n// [new User({ id: 3, name: 'Jay' }), new User({ id: 4, name: 'Bee' })] changed to [new User({ id: 3, name: 'Jayz' }), new User({ id: 4, name: 'Beeb' })]\nUser.cache.delete(3)\n// [new User({ id: 3, name: 'Jayz' }), new User({ id: 4, name: 'Beeb' })] changed to [null, new User({ id: 4, name: 'Beeb' })]\n```\n\n## Field notation\n\nIf a model has a [RelatedViewModelField](doc:RelatedViewModelField) the data for a related field\ncan be retrieved using array notation:\n\n```js\n// Fetch the 'name' field and the related 'group' record and its 'label' field\n['name', ['group', 'label']]\n```\n\nTo fetch all fields from a relation you can just specify its name:\n\n```js\n['name', 'group']\n// This will be expanded to include all non-relation fields on the related ViewModel\n['name', ['group', 'label'], ['group', 'ownerId']]\n```\n\n**NOTE:** Using the shorthand for a relation won't include any nested relation\n\nAccessing deeply related records is supported:\n\n```js\n['name', ['group', 'owner', 'name']]\n```\n\nYou can combine the shorthand with array notation to get all fields and the specified deep relations:\n```js\n['name', 'group', ['group', 'owner', 'name']]\n// Equivalent to:\n['name', ['group', 'label'], ['group', 'owner', 'name']]\n```\n\n**NOTE:** When accessing a relation its `sourceFieldName` is always included regardless\nof whether you explicitly request it:\n\n```js\nUser.cache.get(1, ['name', 'group']);\n// {\n//   id: 1,\n//   name: 'Bob',\n//   groupId: 1,\n//   group: {\n//      id: 1,\n//      label: 'Staff',\n//   }\n// }\n```\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Caching\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 749,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 700,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 750,
									"name": "new ViewModelCache",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {},
									"typeParameter": [
										{
											"id": 751,
											"name": "ViewModelClassType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"id": 751,
														"name": "ViewModelClassType"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"parameters": [
										{
											"id": 752,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The `ViewModel` this class is for\n"
											},
											"type": {
												"type": "reference",
												"id": 751,
												"name": "ViewModelClassType"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 726,
										"typeArguments": [
											{
												"type": "reference",
												"id": 751,
												"name": "ViewModelClassType"
											}
										],
										"name": "default"
									}
								}
							]
						},
						{
							"id": 805,
							"name": "_lastAllRecords",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 971,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1045,
										"typeArguments": [
											{
												"type": "reference",
												"id": 751,
												"name": "ViewModelClassType"
											}
										],
										"name": "ViewModelFieldPaths"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1027,
											"typeArguments": [
												{
													"type": "reference",
													"id": 751,
													"name": "ViewModelClassType"
												},
												{
													"type": "reference",
													"typeArguments": [
														{
															"type": "typeOperator",
															"operator": "keyof",
															"target": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "fields"
																},
																"objectType": {
																	"type": "reference",
																	"id": 751,
																	"name": "ViewModelClassType"
																}
															}
														},
														{
															"type": "intrinsic",
															"name": "string"
														}
													],
													"qualifiedName": "Extract",
													"package": "typescript",
													"name": "Extract"
												}
											],
											"name": "PartialViewModel"
										}
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"defaultValue": "..."
						},
						{
							"id": 838,
							"name": "allChangeListeners",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 1129,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 839,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {},
										"signatures": [
											{
												"id": 840,
												"name": "__type",
												"kind": 4096,
												"kindString": "Call signature",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "void"
												}
											}
										]
									}
								}
							},
							"defaultValue": "[]"
						},
						{
							"id": 754,
							"name": "fieldNameCache",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 694,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 751,
												"name": "ViewModelClassType"
											}
										],
										"name": "RecordFieldNameCache"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							}
						},
						{
							"id": 753,
							"name": "viewModel",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 693,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 751,
								"name": "ViewModelClassType"
							}
						},
						{
							"id": 727,
							"name": "listenerBatcher",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 695,
									"character": 11
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 728,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 729,
											"name": "isActive",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "false"
										},
										{
											"id": 730,
											"name": "pending",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "Map",
												"package": "typescript",
												"name": "Map"
											},
											"defaultValue": "..."
										},
										{
											"id": 732,
											"name": "pendingAll",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"qualifiedName": "Set",
												"package": "typescript",
												"name": "Set"
											},
											"defaultValue": "..."
										},
										{
											"id": 731,
											"name": "pendingNoBatch",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "Map",
												"package": "typescript",
												"name": "Map"
											},
											"defaultValue": "..."
										},
										{
											"id": 743,
											"name": "batch",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
													"line": 531,
													"character": 4
												}
											],
											"signatures": [
												{
													"id": 744,
													"name": "batch",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Start a batch. The passed function is called and any changes queued. Once function returns listeners\nwill be dispatched. The value returned from `run` will be returned.",
														"text": "If any error occurs in `run` then no listeners will be called.\n\nIf you nest batches then all listeners run at the end of the outer batch.\n"
													},
													"typeParameter": [
														{
															"id": 745,
															"name": "T",
															"kind": 131072,
															"kindString": "Type parameter",
															"flags": {}
														}
													],
													"parameters": [
														{
															"id": 746,
															"name": "run",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 747,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"signatures": [
																		{
																			"id": 748,
																			"name": "__type",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 745,
																				"name": "T"
																			}
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"id": 745,
														"name": "T"
													}
												}
											]
										},
										{
											"id": 736,
											"name": "call",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
													"line": 505,
													"character": 4
												}
											],
											"signatures": [
												{
													"id": 737,
													"name": "call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queue a call to a record/field specific listener",
														"text": "If `shouldBatch` is false then there's no guarantees about the listener only being called\nonce.\n"
													},
													"typeParameter": [
														{
															"id": 738,
															"name": "T",
															"kind": 131072,
															"kindString": "Type parameter",
															"flags": {}
														}
													],
													"parameters": [
														{
															"id": 739,
															"name": "listener",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 738,
																		"name": "T"
																	}
																],
																"name": "ChangeListener"
															}
														},
														{
															"id": 740,
															"name": "before",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "reference",
																		"id": 738,
																		"name": "T"
																	}
																]
															}
														},
														{
															"id": 741,
															"name": "after",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "reference",
																		"id": 738,
																		"name": "T"
																	}
																]
															}
														},
														{
															"id": 742,
															"name": "shouldBatch",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															},
															"defaultValue": "true"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										},
										{
											"id": 733,
											"name": "callAll",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
													"line": 492,
													"character": 4
												}
											],
											"signatures": [
												{
													"id": 734,
													"name": "callAll",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queue a call to a non-record/field specific listeners"
													},
													"parameters": [
														{
															"id": 735,
															"name": "listener",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "AllChangesListener"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												729,
												730,
												732,
												731
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												743,
												736,
												733
											]
										}
									]
								}
							},
							"defaultValue": "defaultListenerBatcher"
						},
						{
							"id": 755,
							"name": "cache",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 705,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 756,
									"name": "cache",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							]
						},
						{
							"id": 766,
							"name": "cacheClass",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 751,
									"character": 16
								}
							],
							"getSignature": [
								{
									"id": 767,
									"name": "cacheClass",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 763,
							"name": "acquireFieldNameCache",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 737,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 764,
									"name": "acquireFieldNameCache",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isPrivate": true
									},
									"comment": {
										"shortText": "Acquire the field name cache specific to a primary key"
									},
									"parameters": [
										{
											"id": 765,
											"name": "pk",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The primary key to get the cache for\n"
											},
											"type": {
												"type": "reference",
												"id": 1030,
												"typeArguments": [
													{
														"type": "reference",
														"id": 751,
														"name": "ViewModelClassType"
													}
												],
												"name": "ExtractPkFieldParseableValueType"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 751,
												"name": "ViewModelClassType"
											}
										],
										"name": "RecordFieldNameCache"
									}
								}
							]
						},
						{
							"id": 774,
							"name": "add",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 791,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 775,
									"name": "add",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add a record or records to the cache. Records are cached based on the fields that are\nset (ie. to retrieve the record you would call `get` with the `id` and array of field\nnames that were set on it).",
										"text": "If record A has a superset of fields of record B then when A is cached it\nwill update the cache for record B. The reverse isn't true so as to maintain consistency\nwithin a record.\n"
									},
									"typeParameter": [
										{
											"id": 776,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 751,
																		"name": "ViewModelClassType"
																	}
																],
																"qualifiedName": "InstanceType",
																"package": "typescript",
																"name": "InstanceType"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 751,
																				"name": "ViewModelClassType"
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														],
														"qualifiedName": "Omit",
														"package": "typescript",
														"name": "Omit"
													},
													{
														"type": "reference",
														"id": 943,
														"typeArguments": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "fields"
																},
																"objectType": {
																	"type": "reference",
																	"id": 751,
																	"name": "ViewModelClassType"
																}
															},
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "pkFieldName"
																},
																"objectType": {
																	"type": "reference",
																	"id": 751,
																	"name": "ViewModelClassType"
																}
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 751,
																				"name": "ViewModelClassType"
																			},
																			{
																				"type": "reference",
																				"typeArguments": [
																					{
																						"type": "typeOperator",
																						"operator": "keyof",
																						"target": {
																							"type": "indexedAccess",
																							"indexType": {
																								"type": "literal",
																								"value": "fields"
																							},
																							"objectType": {
																								"type": "reference",
																								"id": 751,
																								"name": "ViewModelClassType"
																							}
																						}
																					},
																					{
																						"type": "intrinsic",
																						"name": "string"
																					}
																				],
																				"qualifiedName": "Extract",
																				"package": "typescript",
																				"name": "Extract"
																			}
																		],
																		"name": "ExtractRootFieldNames"
																	},
																	{
																		"type": "conditional",
																		"checkType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "pkFieldName"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 751,
																				"name": "ViewModelClassType"
																			}
																		},
																		"extendsType": {
																			"type": "intrinsic",
																			"name": "string"
																		},
																		"trueType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "intrinsic",
																				"name": "any"
																			},
																			"objectType": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		},
																		"falseType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "intrinsic",
																				"name": "number"
																			},
																			"objectType": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "literal",
																					"value": "pkFieldName"
																				},
																				"objectType": {
																					"type": "reference",
																					"id": 751,
																					"name": "ViewModelClassType"
																				}
																			}
																		}
																	}
																]
															},
															{
																"type": "reference",
																"id": 776,
																"name": "T"
															}
														],
														"name": "BaseViewModel"
													},
													{
														"type": "reference",
														"id": 912,
														"typeArguments": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "literal",
																			"value": "fields"
																		},
																		"objectType": {
																			"type": "reference",
																			"id": 751,
																			"name": "ViewModelClassType"
																		}
																	},
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "reference",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"id": 751,
																						"name": "ViewModelClassType"
																					},
																					{
																						"type": "reference",
																						"typeArguments": [
																							{
																								"type": "typeOperator",
																								"operator": "keyof",
																								"target": {
																									"type": "indexedAccess",
																									"indexType": {
																										"type": "literal",
																										"value": "fields"
																									},
																									"objectType": {
																										"type": "reference",
																										"id": 751,
																										"name": "ViewModelClassType"
																									}
																								}
																							},
																							{
																								"type": "intrinsic",
																								"name": "string"
																							}
																						],
																						"qualifiedName": "Extract",
																						"package": "typescript",
																						"name": "Extract"
																					}
																				],
																				"name": "ExtractRootFieldNames"
																			},
																			{
																				"type": "conditional",
																				"checkType": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "pkFieldName"
																					},
																					"objectType": {
																						"type": "reference",
																						"id": 751,
																						"name": "ViewModelClassType"
																					}
																				},
																				"extendsType": {
																					"type": "intrinsic",
																					"name": "string"
																				},
																				"trueType": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "intrinsic",
																						"name": "any"
																					},
																					"objectType": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				},
																				"falseType": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "intrinsic",
																						"name": "number"
																					},
																					"objectType": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "literal",
																							"value": "pkFieldName"
																						},
																						"objectType": {
																							"type": "reference",
																							"id": 751,
																							"name": "ViewModelClassType"
																						}
																					}
																				}
																			}
																		]
																	}
																],
																"qualifiedName": "Pick",
																"package": "typescript",
																"name": "Pick"
															}
														],
														"name": "FieldDataMapping"
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 777,
											"name": "recordOrData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The record instance to cache. If a plain object is passed then\nan instance of the view model will be created and returned. An array is also supported\nin which case each entry in the array will be converted to the view model if required\nand returned.\n"
											},
											"type": {
												"type": "reference",
												"id": 776,
												"name": "T"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 776,
										"name": "T"
									}
								},
								{
									"id": 778,
									"name": "add",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 779,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 751,
																		"name": "ViewModelClassType"
																	}
																],
																"qualifiedName": "InstanceType",
																"package": "typescript",
																"name": "InstanceType"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 751,
																				"name": "ViewModelClassType"
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														],
														"qualifiedName": "Omit",
														"package": "typescript",
														"name": "Omit"
													},
													{
														"type": "reference",
														"id": 943,
														"typeArguments": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "fields"
																},
																"objectType": {
																	"type": "reference",
																	"id": 751,
																	"name": "ViewModelClassType"
																}
															},
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "pkFieldName"
																},
																"objectType": {
																	"type": "reference",
																	"id": 751,
																	"name": "ViewModelClassType"
																}
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 751,
																				"name": "ViewModelClassType"
																			},
																			{
																				"type": "reference",
																				"typeArguments": [
																					{
																						"type": "typeOperator",
																						"operator": "keyof",
																						"target": {
																							"type": "indexedAccess",
																							"indexType": {
																								"type": "literal",
																								"value": "fields"
																							},
																							"objectType": {
																								"type": "reference",
																								"id": 751,
																								"name": "ViewModelClassType"
																							}
																						}
																					},
																					{
																						"type": "intrinsic",
																						"name": "string"
																					}
																				],
																				"qualifiedName": "Extract",
																				"package": "typescript",
																				"name": "Extract"
																			}
																		],
																		"name": "ExtractRootFieldNames"
																	},
																	{
																		"type": "conditional",
																		"checkType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "pkFieldName"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 751,
																				"name": "ViewModelClassType"
																			}
																		},
																		"extendsType": {
																			"type": "intrinsic",
																			"name": "string"
																		},
																		"trueType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "intrinsic",
																				"name": "any"
																			},
																			"objectType": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		},
																		"falseType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "intrinsic",
																				"name": "number"
																			},
																			"objectType": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "literal",
																					"value": "pkFieldName"
																				},
																				"objectType": {
																					"type": "reference",
																					"id": 751,
																					"name": "ViewModelClassType"
																				}
																			}
																		}
																	}
																]
															},
															{
																"type": "reference",
																"id": 779,
																"name": "T"
															}
														],
														"name": "BaseViewModel"
													},
													{
														"type": "reference",
														"id": 912,
														"typeArguments": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "literal",
																			"value": "fields"
																		},
																		"objectType": {
																			"type": "reference",
																			"id": 751,
																			"name": "ViewModelClassType"
																		}
																	},
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "reference",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"id": 751,
																						"name": "ViewModelClassType"
																					},
																					{
																						"type": "reference",
																						"typeArguments": [
																							{
																								"type": "typeOperator",
																								"operator": "keyof",
																								"target": {
																									"type": "indexedAccess",
																									"indexType": {
																										"type": "literal",
																										"value": "fields"
																									},
																									"objectType": {
																										"type": "reference",
																										"id": 751,
																										"name": "ViewModelClassType"
																									}
																								}
																							},
																							{
																								"type": "intrinsic",
																								"name": "string"
																							}
																						],
																						"qualifiedName": "Extract",
																						"package": "typescript",
																						"name": "Extract"
																					}
																				],
																				"name": "ExtractRootFieldNames"
																			},
																			{
																				"type": "conditional",
																				"checkType": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "pkFieldName"
																					},
																					"objectType": {
																						"type": "reference",
																						"id": 751,
																						"name": "ViewModelClassType"
																					}
																				},
																				"extendsType": {
																					"type": "intrinsic",
																					"name": "string"
																				},
																				"trueType": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "intrinsic",
																						"name": "any"
																					},
																					"objectType": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				},
																				"falseType": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "intrinsic",
																						"name": "number"
																					},
																					"objectType": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "literal",
																							"value": "pkFieldName"
																						},
																						"objectType": {
																							"type": "reference",
																							"id": 751,
																							"name": "ViewModelClassType"
																						}
																					}
																				}
																			}
																		]
																	}
																],
																"qualifiedName": "Pick",
																"package": "typescript",
																"name": "Pick"
															}
														],
														"name": "FieldDataMapping"
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 780,
											"name": "recordOrData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 779,
													"name": "T"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 779,
											"name": "T"
										}
									}
								},
								{
									"id": 781,
									"name": "add",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 782,
											"name": "FieldNames",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 783,
											"name": "recordOrData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 914,
												"typeArguments": [
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "fields"
																},
																"objectType": {
																	"type": "reference",
																	"id": 751,
																	"name": "ViewModelClassType"
																}
															},
															{
																"type": "reference",
																"id": 782,
																"name": "FieldNames"
															}
														],
														"qualifiedName": "Pick",
														"package": "typescript",
														"name": "Pick"
													}
												],
												"name": "FieldDataMappingRaw"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1027,
										"typeArguments": [
											{
												"type": "reference",
												"id": 751,
												"name": "ViewModelClassType"
											},
											{
												"type": "reference",
												"id": 782,
												"name": "FieldNames"
											}
										],
										"name": "PartialViewModel"
									}
								},
								{
									"id": 784,
									"name": "add",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 785,
											"name": "FieldNames",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 786,
											"name": "recordOrData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 914,
													"typeArguments": [
														{
															"type": "reference",
															"typeArguments": [
																{
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "literal",
																		"value": "fields"
																	},
																	"objectType": {
																		"type": "reference",
																		"id": 751,
																		"name": "ViewModelClassType"
																	}
																},
																{
																	"type": "reference",
																	"id": 785,
																	"name": "FieldNames"
																}
															],
															"qualifiedName": "Pick",
															"package": "typescript",
															"name": "Pick"
														}
													],
													"name": "FieldDataMappingRaw"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1027,
											"typeArguments": [
												{
													"type": "reference",
													"id": 751,
													"name": "ViewModelClassType"
												},
												{
													"type": "reference",
													"id": 785,
													"name": "FieldNames"
												}
											],
											"name": "PartialViewModel"
										}
									}
								}
							]
						},
						{
							"id": 787,
							"name": "addList",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 850,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 788,
									"name": "addList",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add a list of records. Use this in place of manually calling\nadd() on each record individually so that listeners only get\nnotified once of the change to the list rather than for\neach record in the list."
									},
									"typeParameter": [
										{
											"id": 789,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 751,
																		"name": "ViewModelClassType"
																	}
																],
																"qualifiedName": "InstanceType",
																"package": "typescript",
																"name": "InstanceType"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 751,
																				"name": "ViewModelClassType"
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														],
														"qualifiedName": "Omit",
														"package": "typescript",
														"name": "Omit"
													},
													{
														"type": "reference",
														"id": 943,
														"typeArguments": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "fields"
																},
																"objectType": {
																	"type": "reference",
																	"id": 751,
																	"name": "ViewModelClassType"
																}
															},
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "pkFieldName"
																},
																"objectType": {
																	"type": "reference",
																	"id": 751,
																	"name": "ViewModelClassType"
																}
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 751,
																				"name": "ViewModelClassType"
																			},
																			{
																				"type": "reference",
																				"typeArguments": [
																					{
																						"type": "typeOperator",
																						"operator": "keyof",
																						"target": {
																							"type": "indexedAccess",
																							"indexType": {
																								"type": "literal",
																								"value": "fields"
																							},
																							"objectType": {
																								"type": "reference",
																								"id": 751,
																								"name": "ViewModelClassType"
																							}
																						}
																					},
																					{
																						"type": "intrinsic",
																						"name": "string"
																					}
																				],
																				"qualifiedName": "Extract",
																				"package": "typescript",
																				"name": "Extract"
																			}
																		],
																		"name": "ExtractRootFieldNames"
																	},
																	{
																		"type": "conditional",
																		"checkType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "pkFieldName"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 751,
																				"name": "ViewModelClassType"
																			}
																		},
																		"extendsType": {
																			"type": "intrinsic",
																			"name": "string"
																		},
																		"trueType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "intrinsic",
																				"name": "any"
																			},
																			"objectType": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		},
																		"falseType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "intrinsic",
																				"name": "number"
																			},
																			"objectType": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "literal",
																					"value": "pkFieldName"
																				},
																				"objectType": {
																					"type": "reference",
																					"id": 751,
																					"name": "ViewModelClassType"
																				}
																			}
																		}
																	}
																]
															},
															{
																"type": "reference",
																"id": 789,
																"name": "T"
															}
														],
														"name": "BaseViewModel"
													},
													{
														"type": "reference",
														"id": 912,
														"typeArguments": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "literal",
																			"value": "fields"
																		},
																		"objectType": {
																			"type": "reference",
																			"id": 751,
																			"name": "ViewModelClassType"
																		}
																	},
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "reference",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"id": 751,
																						"name": "ViewModelClassType"
																					},
																					{
																						"type": "reference",
																						"typeArguments": [
																							{
																								"type": "typeOperator",
																								"operator": "keyof",
																								"target": {
																									"type": "indexedAccess",
																									"indexType": {
																										"type": "literal",
																										"value": "fields"
																									},
																									"objectType": {
																										"type": "reference",
																										"id": 751,
																										"name": "ViewModelClassType"
																									}
																								}
																							},
																							{
																								"type": "intrinsic",
																								"name": "string"
																							}
																						],
																						"qualifiedName": "Extract",
																						"package": "typescript",
																						"name": "Extract"
																					}
																				],
																				"name": "ExtractRootFieldNames"
																			},
																			{
																				"type": "conditional",
																				"checkType": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "pkFieldName"
																					},
																					"objectType": {
																						"type": "reference",
																						"id": 751,
																						"name": "ViewModelClassType"
																					}
																				},
																				"extendsType": {
																					"type": "intrinsic",
																					"name": "string"
																				},
																				"trueType": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "intrinsic",
																						"name": "any"
																					},
																					"objectType": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				},
																				"falseType": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "intrinsic",
																						"name": "number"
																					},
																					"objectType": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "literal",
																							"value": "pkFieldName"
																						},
																						"objectType": {
																							"type": "reference",
																							"id": 751,
																							"name": "ViewModelClassType"
																						}
																					}
																				}
																			}
																		]
																	}
																],
																"qualifiedName": "Pick",
																"package": "typescript",
																"name": "Pick"
															}
														],
														"name": "FieldDataMapping"
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 790,
											"name": "recordsOrData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The records to add. Can either be an array of instances of the ViewModel\nor an array of data objects (or a mixture of both).\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 789,
													"name": "T"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 789,
											"name": "T"
										}
									}
								},
								{
									"id": 791,
									"name": "addList",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 792,
											"name": "FieldNames",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 793,
											"name": "recordsOrData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 914,
													"typeArguments": [
														{
															"type": "reference",
															"typeArguments": [
																{
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "literal",
																		"value": "fields"
																	},
																	"objectType": {
																		"type": "reference",
																		"id": 751,
																		"name": "ViewModelClassType"
																	}
																},
																{
																	"type": "reference",
																	"id": 792,
																	"name": "FieldNames"
																}
															],
															"qualifiedName": "Pick",
															"package": "typescript",
															"name": "Pick"
														}
													],
													"name": "FieldDataMappingRaw"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1027,
											"typeArguments": [
												{
													"type": "reference",
													"id": 751,
													"name": "ViewModelClassType"
												},
												{
													"type": "reference",
													"id": 792,
													"name": "FieldNames"
												}
											],
											"name": "PartialViewModel"
										}
									}
								}
							]
						},
						{
							"id": 843,
							"name": "addListener",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 1141,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 844,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add a listener to any changes at all. The detail of the changes are not available.",
										"returns": "A function that removes the listener\n"
									},
									"parameters": [
										{
											"id": 845,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "Function to that is called when any change occurs. The function is called with no parameters."
											},
											"type": {
												"type": "reference",
												"name": "AllChangesListener"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ChangeListenerUnsubscribe"
									}
								},
								{
									"id": 846,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add a listener for any changes, additions or deletions for the record(s) identified by\n`pkOrPks` for the field names `fieldNames`.",
										"returns": "A function that removes the listener\n"
									},
									"typeParameter": [
										{
											"id": 847,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "tuple",
														"elements": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "reference",
																			"typeArguments": [
																				{
																					"type": "reference",
																					"id": 751,
																					"name": "ViewModelClassType"
																				}
																			],
																			"name": "ExtractRelatedFields"
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "typeOperator",
																							"operator": "keyof",
																							"target": {
																								"type": "reference",
																								"typeArguments": [
																									{
																										"type": "reference",
																										"id": 751,
																										"name": "ViewModelClassType"
																									}
																								],
																								"name": "ExtractRelatedFields"
																							}
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"qualifiedName": "Extract",
																					"package": "typescript",
																					"name": "Extract"
																				},
																				"objectType": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 751,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														]
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 751,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "fields"
																					},
																					"objectType": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "typeOperator",
																									"operator": "keyof",
																									"target": {
																										"type": "reference",
																										"typeArguments": [
																											{
																												"type": "reference",
																												"id": 751,
																												"name": "ViewModelClassType"
																											}
																										],
																										"name": "ExtractRelatedFields"
																									}
																								},
																								{
																									"type": "intrinsic",
																									"name": "string"
																								}
																							],
																							"qualifiedName": "Extract",
																							"package": "typescript",
																							"name": "Extract"
																						},
																						"objectType": {
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "reference",
																									"id": 751,
																									"name": "ViewModelClassType"
																								}
																							],
																							"name": "ExtractRelatedFields"
																						}
																					}
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	}
																]
															},
															{
																"type": "reference",
																"id": 980,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "ViewModelConstructor"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 980,
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "ViewModelConstructor"
																	}
																],
																"name": "ExtractRelatedFields"
															}
														],
														"name": "FieldPathInner"
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 848,
											"name": "pkOrPks",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "Primary key or array of multiple primary keys that identifies the record(s)\nto listen to changes/additions/deletions to"
											},
											"type": {
												"type": "reference",
												"id": 1030,
												"typeArguments": [
													{
														"type": "reference",
														"id": 751,
														"name": "ViewModelClassType"
													}
												],
												"name": "ExtractPkFieldParseableValueType"
											}
										},
										{
											"id": 849,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "Field names to listen to changes/additions/deletions to. See [Field notation](#Field_notation) for supported format."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 847,
													"name": "T"
												}
											}
										},
										{
											"id": 850,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "Function to call with any changes"
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 1027,
														"typeArguments": [
															{
																"type": "reference",
																"id": 751,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"id": 847,
																"name": "T"
															}
														],
														"name": "PartialViewModel"
													}
												],
												"name": "ChangeListener"
											}
										},
										{
											"id": 851,
											"name": "batch",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Whether or not to batch this call with other calls (defaults to true). You shouldn't need to change the default."
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ChangeListenerUnsubscribe"
									}
								},
								{
									"id": 852,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 853,
											"name": "pkOrPks",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1030,
												"typeArguments": [
													{
														"type": "reference",
														"id": 751,
														"name": "ViewModelClassType"
													}
												],
												"name": "ExtractPkFieldParseableValueType"
											}
										},
										{
											"id": 854,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": "*"
											}
										},
										{
											"id": 855,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 1027,
														"typeArguments": [
															{
																"type": "reference",
																"id": 751,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 751,
																				"name": "ViewModelClassType"
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														],
														"name": "PartialViewModel"
													}
												],
												"name": "ChangeListener"
											}
										},
										{
											"id": 856,
											"name": "batch",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ChangeListenerUnsubscribe"
									}
								},
								{
									"id": 857,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 858,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "tuple",
														"elements": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "reference",
																			"typeArguments": [
																				{
																					"type": "reference",
																					"id": 751,
																					"name": "ViewModelClassType"
																				}
																			],
																			"name": "ExtractRelatedFields"
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "typeOperator",
																							"operator": "keyof",
																							"target": {
																								"type": "reference",
																								"typeArguments": [
																									{
																										"type": "reference",
																										"id": 751,
																										"name": "ViewModelClassType"
																									}
																								],
																								"name": "ExtractRelatedFields"
																							}
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"qualifiedName": "Extract",
																					"package": "typescript",
																					"name": "Extract"
																				},
																				"objectType": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 751,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														]
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 751,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "fields"
																					},
																					"objectType": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "typeOperator",
																									"operator": "keyof",
																									"target": {
																										"type": "reference",
																										"typeArguments": [
																											{
																												"type": "reference",
																												"id": 751,
																												"name": "ViewModelClassType"
																											}
																										],
																										"name": "ExtractRelatedFields"
																									}
																								},
																								{
																									"type": "intrinsic",
																									"name": "string"
																								}
																							],
																							"qualifiedName": "Extract",
																							"package": "typescript",
																							"name": "Extract"
																						},
																						"objectType": {
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "reference",
																									"id": 751,
																									"name": "ViewModelClassType"
																								}
																							],
																							"name": "ExtractRelatedFields"
																						}
																					}
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	}
																]
															},
															{
																"type": "reference",
																"id": 980,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "ViewModelConstructor"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 980,
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "ViewModelConstructor"
																	}
																],
																"name": "ExtractRelatedFields"
															}
														],
														"name": "FieldPathInner"
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 859,
											"name": "pkOrPks",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1030,
													"typeArguments": [
														{
															"type": "reference",
															"id": 751,
															"name": "ViewModelClassType"
														}
													],
													"name": "ExtractPkFieldParseableValueType"
												}
											}
										},
										{
											"id": 860,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 858,
													"name": "T"
												}
											}
										},
										{
											"id": 861,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 1027,
														"typeArguments": [
															{
																"type": "reference",
																"id": 751,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"id": 858,
																"name": "T"
															}
														],
														"name": "PartialViewModel"
													}
												],
												"name": "MultiChangeListener"
											}
										},
										{
											"id": 862,
											"name": "batch",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ChangeListenerUnsubscribe"
									}
								},
								{
									"id": 863,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 864,
											"name": "pkOrPksOrListener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1030,
													"typeArguments": [
														{
															"type": "reference",
															"id": 751,
															"name": "ViewModelClassType"
														}
													],
													"name": "ExtractPkFieldParseableValueType"
												}
											}
										},
										{
											"id": 865,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": "*"
											}
										},
										{
											"id": 866,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 1027,
														"typeArguments": [
															{
																"type": "reference",
																"id": 751,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 751,
																				"name": "ViewModelClassType"
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														],
														"name": "PartialViewModel"
													}
												],
												"name": "MultiChangeListener"
											}
										},
										{
											"id": 867,
											"name": "batch",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ChangeListenerUnsubscribe"
									}
								}
							]
						},
						{
							"id": 868,
							"name": "addListenerList",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 1237,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 869,
									"name": "addListenerList",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 870,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "tuple",
														"elements": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "reference",
																			"typeArguments": [
																				{
																					"type": "reference",
																					"id": 751,
																					"name": "ViewModelClassType"
																				}
																			],
																			"name": "ExtractRelatedFields"
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "typeOperator",
																							"operator": "keyof",
																							"target": {
																								"type": "reference",
																								"typeArguments": [
																									{
																										"type": "reference",
																										"id": 751,
																										"name": "ViewModelClassType"
																									}
																								],
																								"name": "ExtractRelatedFields"
																							}
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"qualifiedName": "Extract",
																					"package": "typescript",
																					"name": "Extract"
																				},
																				"objectType": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 751,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														]
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 751,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "fields"
																					},
																					"objectType": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "typeOperator",
																									"operator": "keyof",
																									"target": {
																										"type": "reference",
																										"typeArguments": [
																											{
																												"type": "reference",
																												"id": 751,
																												"name": "ViewModelClassType"
																											}
																										],
																										"name": "ExtractRelatedFields"
																									}
																								},
																								{
																									"type": "intrinsic",
																									"name": "string"
																								}
																							],
																							"qualifiedName": "Extract",
																							"package": "typescript",
																							"name": "Extract"
																						},
																						"objectType": {
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "reference",
																									"id": 751,
																									"name": "ViewModelClassType"
																								}
																							],
																							"name": "ExtractRelatedFields"
																						}
																					}
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	}
																]
															},
															{
																"type": "reference",
																"id": 980,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "ViewModelConstructor"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 980,
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "ViewModelConstructor"
																	}
																],
																"name": "ExtractRelatedFields"
															}
														],
														"name": "FieldPathInner"
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 871,
											"name": "pks",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1030,
													"typeArguments": [
														{
															"type": "reference",
															"id": 751,
															"name": "ViewModelClassType"
														}
													],
													"name": "ExtractPkFieldParseableValueType"
												}
											}
										},
										{
											"id": 872,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 870,
													"name": "T"
												}
											}
										},
										{
											"id": 873,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 1027,
														"typeArguments": [
															{
																"type": "reference",
																"id": 751,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"id": 870,
																"name": "T"
															}
														],
														"name": "PartialViewModel"
													}
												],
												"name": "MultiChangeListener"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ChangeListenerUnsubscribe"
									}
								},
								{
									"id": 874,
									"name": "addListenerList",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 875,
											"name": "pks",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1030,
													"typeArguments": [
														{
															"type": "reference",
															"id": 751,
															"name": "ViewModelClassType"
														}
													],
													"name": "ExtractPkFieldParseableValueType"
												}
											}
										},
										{
											"id": 876,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": "*"
											}
										},
										{
											"id": 877,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 1027,
														"typeArguments": [
															{
																"type": "reference",
																"id": 751,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 751,
																				"name": "ViewModelClassType"
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														],
														"name": "PartialViewModel"
													}
												],
												"name": "MultiChangeListener"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ChangeListenerUnsubscribe"
									}
								}
							]
						},
						{
							"id": 768,
							"name": "batch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 773,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 769,
									"name": "batch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Batch changes made within provided function. This guarantees that any changes made\nwill result in a single call for each relevant listener.",
										"text": "```js\nUser.cache.addListener(listenerAll);\nUser.cache.addListener(1, ['id', 'name'], listener);\nUser.cache.addListenerList([1, 2], ['id', 'name'], listenerList);\nUser.cache.batch(() => {\n  // This value won't appear in changes at all as it's replaced 2 lines down\n  User.cache.add({ id: 1, name: 'Bob', groupId: 1 });\n  User.cache.add({ id: 2, name: 'Sam', groupId: null });\n  User.cache.add({ id: 1, name: 'Bobby', groupId: 1 });\n});\n// All listeners called once\n```"
									},
									"typeParameter": [
										{
											"id": 770,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 771,
											"name": "run",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 772,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 773,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 770,
																"name": "T"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 770,
										"name": "T"
									}
								}
							]
						},
						{
							"id": 834,
							"name": "delete",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 1113,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 835,
									"name": "delete",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Delete a record from the cache, optionally only for the specified `fieldNames`",
										"text": "If `fieldNames` is omitted then the cache for the record is cleared in it's entirety.\n",
										"returns": "true if anything was removed, false otherwise\n"
									},
									"parameters": [
										{
											"id": 836,
											"name": "pk",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The primary key of the record to delete"
											},
											"type": {
												"type": "reference",
												"id": 1030,
												"typeArguments": [
													{
														"type": "reference",
														"id": 751,
														"name": "ViewModelClassType"
													}
												],
												"name": "ExtractPkFieldParseableValueType"
											}
										},
										{
											"id": 837,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Optionally only delete the entry with the specified field names. If\nthis is not set then all data for the record is removed. See [Field notation](#Field_notation) for supported format.\n"
											},
											"type": {
												"type": "reference",
												"id": 909,
												"typeArguments": [
													{
														"type": "reference",
														"id": 751,
														"name": "ViewModelClassType"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 751,
																"name": "ViewModelClassType"
															}
														],
														"name": "ExtractRelatedFields"
													}
												],
												"name": "FieldPaths"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 794,
							"name": "get",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 876,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 795,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get a record with the specified `fieldNames` set from the cache",
										"returns": "The cached record or null if none found\n"
									},
									"typeParameter": [
										{
											"id": 796,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "tuple",
														"elements": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "reference",
																			"typeArguments": [
																				{
																					"type": "reference",
																					"id": 751,
																					"name": "ViewModelClassType"
																				}
																			],
																			"name": "ExtractRelatedFields"
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "typeOperator",
																							"operator": "keyof",
																							"target": {
																								"type": "reference",
																								"typeArguments": [
																									{
																										"type": "reference",
																										"id": 751,
																										"name": "ViewModelClassType"
																									}
																								],
																								"name": "ExtractRelatedFields"
																							}
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"qualifiedName": "Extract",
																					"package": "typescript",
																					"name": "Extract"
																				},
																				"objectType": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 751,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														]
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 751,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "fields"
																					},
																					"objectType": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "typeOperator",
																									"operator": "keyof",
																									"target": {
																										"type": "reference",
																										"typeArguments": [
																											{
																												"type": "reference",
																												"id": 751,
																												"name": "ViewModelClassType"
																											}
																										],
																										"name": "ExtractRelatedFields"
																									}
																								},
																								{
																									"type": "intrinsic",
																									"name": "string"
																								}
																							],
																							"qualifiedName": "Extract",
																							"package": "typescript",
																							"name": "Extract"
																						},
																						"objectType": {
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "reference",
																									"id": 751,
																									"name": "ViewModelClassType"
																								}
																							],
																							"name": "ExtractRelatedFields"
																						}
																					}
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	}
																]
															},
															{
																"type": "reference",
																"id": 980,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "ViewModelConstructor"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 980,
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "ViewModelConstructor"
																	}
																],
																"name": "ExtractRelatedFields"
															}
														],
														"name": "FieldPathInner"
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 797,
											"name": "pk",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "the primary key of the record to get"
											},
											"type": {
												"type": "reference",
												"id": 1030,
												"typeArguments": [
													{
														"type": "reference",
														"id": 751,
														"name": "ViewModelClassType"
													}
												],
												"name": "ExtractPkFieldParseableValueType"
											}
										},
										{
											"id": 798,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "the field names to use to look up the cache entry. Use '*' to indicate all fields.\nSee [Field notation](#Field_notation) for supported format.\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 796,
													"name": "T"
												}
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1027,
												"typeArguments": [
													{
														"type": "reference",
														"id": 751,
														"name": "ViewModelClassType"
													},
													{
														"type": "reference",
														"id": 796,
														"name": "T"
													}
												],
												"name": "PartialViewModel"
											}
										]
									}
								},
								{
									"id": 799,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 800,
											"name": "pk",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1030,
												"typeArguments": [
													{
														"type": "reference",
														"id": 751,
														"name": "ViewModelClassType"
													}
												],
												"name": "ExtractPkFieldParseableValueType"
											}
										},
										{
											"id": 801,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": "*"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1027,
												"typeArguments": [
													{
														"type": "reference",
														"id": 751,
														"name": "ViewModelClassType"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "literal",
																		"value": "fields"
																	},
																	"objectType": {
																		"type": "reference",
																		"id": 751,
																		"name": "ViewModelClassType"
																	}
																}
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"qualifiedName": "Extract",
														"package": "typescript",
														"name": "Extract"
													}
												],
												"name": "PartialViewModel"
											}
										]
									}
								},
								{
									"id": 802,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the currently cached version of the specified version",
										"returns": "The cached record or null if none found\n"
									},
									"typeParameter": [
										{
											"id": 803,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "tuple",
														"elements": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "reference",
																			"typeArguments": [
																				{
																					"type": "reference",
																					"id": 751,
																					"name": "ViewModelClassType"
																				}
																			],
																			"name": "ExtractRelatedFields"
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "typeOperator",
																							"operator": "keyof",
																							"target": {
																								"type": "reference",
																								"typeArguments": [
																									{
																										"type": "reference",
																										"id": 751,
																										"name": "ViewModelClassType"
																									}
																								],
																								"name": "ExtractRelatedFields"
																							}
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"qualifiedName": "Extract",
																					"package": "typescript",
																					"name": "Extract"
																				},
																				"objectType": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 751,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														]
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 751,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "fields"
																					},
																					"objectType": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "typeOperator",
																									"operator": "keyof",
																									"target": {
																										"type": "reference",
																										"typeArguments": [
																											{
																												"type": "reference",
																												"id": 751,
																												"name": "ViewModelClassType"
																											}
																										],
																										"name": "ExtractRelatedFields"
																									}
																								},
																								{
																									"type": "intrinsic",
																									"name": "string"
																								}
																							],
																							"qualifiedName": "Extract",
																							"package": "typescript",
																							"name": "Extract"
																						},
																						"objectType": {
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "reference",
																									"id": 751,
																									"name": "ViewModelClassType"
																								}
																							],
																							"name": "ExtractRelatedFields"
																						}
																					}
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	}
																]
															},
															{
																"type": "reference",
																"id": 980,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "ViewModelConstructor"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 980,
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "ViewModelConstructor"
																	}
																],
																"name": "ExtractRelatedFields"
															}
														],
														"name": "FieldPathInner"
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 804,
											"name": "record",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "a current instance of a ViewModel to get the latest cached version of\n"
											},
											"type": {
												"type": "reference",
												"id": 1027,
												"typeArguments": [
													{
														"type": "reference",
														"id": 751,
														"name": "ViewModelClassType"
													},
													{
														"type": "reference",
														"id": 803,
														"name": "T"
													}
												],
												"name": "PartialViewModel"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1027,
												"typeArguments": [
													{
														"type": "reference",
														"id": 751,
														"name": "ViewModelClassType"
													},
													{
														"type": "reference",
														"id": 803,
														"name": "T"
													}
												],
												"name": "PartialViewModel"
											}
										]
									}
								}
							]
						},
						{
							"id": 806,
							"name": "getAll",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 985,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 807,
									"name": "getAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get all records in the cache for the specified field names. This acts like `getList` but returns\nall records not just records with specified primary keys.",
										"text": "This function guarantees to return the same array (ie. passes strict equality check) if the underlying\nrecords have not changed.\n"
									},
									"parameters": [
										{
											"id": 808,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "List of field names to return records for. See [Field notation](#Field_notation) for supported format.\n"
											},
											"type": {
												"type": "literal",
												"value": "*"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1027,
											"typeArguments": [
												{
													"type": "reference",
													"id": 751,
													"name": "ViewModelClassType"
												},
												{
													"type": "reference",
													"typeArguments": [
														{
															"type": "typeOperator",
															"operator": "keyof",
															"target": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "fields"
																},
																"objectType": {
																	"type": "reference",
																	"id": 751,
																	"name": "ViewModelClassType"
																}
															}
														},
														{
															"type": "intrinsic",
															"name": "string"
														}
													],
													"qualifiedName": "Extract",
													"package": "typescript",
													"name": "Extract"
												}
											],
											"name": "PartialViewModel"
										}
									}
								},
								{
									"id": 809,
									"name": "getAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 810,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "tuple",
														"elements": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "reference",
																			"typeArguments": [
																				{
																					"type": "reference",
																					"id": 751,
																					"name": "ViewModelClassType"
																				}
																			],
																			"name": "ExtractRelatedFields"
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "typeOperator",
																							"operator": "keyof",
																							"target": {
																								"type": "reference",
																								"typeArguments": [
																									{
																										"type": "reference",
																										"id": 751,
																										"name": "ViewModelClassType"
																									}
																								],
																								"name": "ExtractRelatedFields"
																							}
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"qualifiedName": "Extract",
																					"package": "typescript",
																					"name": "Extract"
																				},
																				"objectType": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 751,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														]
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 751,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "fields"
																					},
																					"objectType": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "typeOperator",
																									"operator": "keyof",
																									"target": {
																										"type": "reference",
																										"typeArguments": [
																											{
																												"type": "reference",
																												"id": 751,
																												"name": "ViewModelClassType"
																											}
																										],
																										"name": "ExtractRelatedFields"
																									}
																								},
																								{
																									"type": "intrinsic",
																									"name": "string"
																								}
																							],
																							"qualifiedName": "Extract",
																							"package": "typescript",
																							"name": "Extract"
																						},
																						"objectType": {
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "reference",
																									"id": 751,
																									"name": "ViewModelClassType"
																								}
																							],
																							"name": "ExtractRelatedFields"
																						}
																					}
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	}
																]
															},
															{
																"type": "reference",
																"id": 980,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "ViewModelConstructor"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 980,
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "ViewModelConstructor"
																	}
																],
																"name": "ExtractRelatedFields"
															}
														],
														"name": "FieldPathInner"
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 811,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 810,
													"name": "T"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1027,
											"typeArguments": [
												{
													"type": "reference",
													"id": 751,
													"name": "ViewModelClassType"
												},
												{
													"type": "reference",
													"id": 810,
													"name": "T"
												}
											],
											"name": "PartialViewModel"
										}
									}
								}
							]
						},
						{
							"id": 812,
							"name": "getList",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 1034,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 813,
									"name": "getList",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get a list of records with the specified `fieldNames` set from the cache",
										"text": "Any record that is not found will end up in the array as a null value. If this\nisn't desired you must filter them manually.\n",
										"returns": "an array of the cached records. Any records not found will be in the array as a null value if `removeNulls` is false otherwise they will be removed.\n"
									},
									"typeParameter": [
										{
											"id": 814,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "tuple",
														"elements": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "reference",
																			"typeArguments": [
																				{
																					"type": "reference",
																					"id": 751,
																					"name": "ViewModelClassType"
																				}
																			],
																			"name": "ExtractRelatedFields"
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "typeOperator",
																							"operator": "keyof",
																							"target": {
																								"type": "reference",
																								"typeArguments": [
																									{
																										"type": "reference",
																										"id": 751,
																										"name": "ViewModelClassType"
																									}
																								],
																								"name": "ExtractRelatedFields"
																							}
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"qualifiedName": "Extract",
																					"package": "typescript",
																					"name": "Extract"
																				},
																				"objectType": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 751,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														]
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 751,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "fields"
																					},
																					"objectType": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "typeOperator",
																									"operator": "keyof",
																									"target": {
																										"type": "reference",
																										"typeArguments": [
																											{
																												"type": "reference",
																												"id": 751,
																												"name": "ViewModelClassType"
																											}
																										],
																										"name": "ExtractRelatedFields"
																									}
																								},
																								{
																									"type": "intrinsic",
																									"name": "string"
																								}
																							],
																							"qualifiedName": "Extract",
																							"package": "typescript",
																							"name": "Extract"
																						},
																						"objectType": {
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "reference",
																									"id": 751,
																									"name": "ViewModelClassType"
																								}
																							],
																							"name": "ExtractRelatedFields"
																						}
																					}
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	}
																]
															},
															{
																"type": "reference",
																"id": 980,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "ViewModelConstructor"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 980,
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "ViewModelConstructor"
																	}
																],
																"name": "ExtractRelatedFields"
															}
														],
														"name": "FieldPathInner"
													}
												]
											}
										},
										{
											"id": 815,
											"name": "RemoveNullsT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"default": {
												"type": "literal",
												"value": true
											}
										}
									],
									"parameters": [
										{
											"id": 816,
											"name": "pks",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "An array of primary keys"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1030,
													"typeArguments": [
														{
															"type": "reference",
															"id": 751,
															"name": "ViewModelClassType"
														}
													],
													"name": "ExtractPkFieldParseableValueType"
												}
											}
										},
										{
											"id": 817,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "the field names to use to look up the cached entries. See [Field notation](#Field_notation) for supported format."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 814,
													"name": "T"
												}
											}
										},
										{
											"id": 818,
											"name": "removeNulls",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "whether to remove entries that have no record in the cache. Defaults to true."
											},
											"type": {
												"type": "reference",
												"id": 815,
												"name": "RemoveNullsT"
											}
										}
									],
									"type": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"id": 815,
											"name": "RemoveNullsT"
										},
										"extendsType": {
											"type": "literal",
											"value": true
										},
										"trueType": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"id": 1027,
												"typeArguments": [
													{
														"type": "reference",
														"id": 751,
														"name": "ViewModelClassType"
													},
													{
														"type": "reference",
														"id": 814,
														"name": "T"
													}
												],
												"name": "PartialViewModel"
											}
										},
										"falseType": {
											"type": "array",
											"elementType": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 1027,
														"typeArguments": [
															{
																"type": "reference",
																"id": 751,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"id": 814,
																"name": "T"
															}
														],
														"name": "PartialViewModel"
													}
												]
											}
										}
									}
								},
								{
									"id": 819,
									"name": "getList",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 820,
											"name": "RemoveNullsT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"default": {
												"type": "literal",
												"value": true
											}
										}
									],
									"parameters": [
										{
											"id": 821,
											"name": "pks",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1030,
													"typeArguments": [
														{
															"type": "reference",
															"id": 751,
															"name": "ViewModelClassType"
														}
													],
													"name": "ExtractPkFieldParseableValueType"
												}
											}
										},
										{
											"id": 822,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": "*"
											}
										},
										{
											"id": 823,
											"name": "removeNulls",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 820,
												"name": "RemoveNullsT"
											}
										}
									],
									"type": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"id": 820,
											"name": "RemoveNullsT"
										},
										"extendsType": {
											"type": "literal",
											"value": true
										},
										"trueType": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"id": 1027,
												"typeArguments": [
													{
														"type": "reference",
														"id": 751,
														"name": "ViewModelClassType"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "literal",
																		"value": "fields"
																	},
																	"objectType": {
																		"type": "reference",
																		"id": 751,
																		"name": "ViewModelClassType"
																	}
																}
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"qualifiedName": "Extract",
														"package": "typescript",
														"name": "Extract"
													}
												],
												"name": "PartialViewModel"
											}
										},
										"falseType": {
											"type": "array",
											"elementType": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 1027,
														"typeArguments": [
															{
																"type": "reference",
																"id": 751,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 751,
																				"name": "ViewModelClassType"
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														],
														"name": "PartialViewModel"
													}
												]
											}
										}
									}
								},
								{
									"id": 824,
									"name": "getList",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get list of cached records from an existing list of records",
										"returns": "an array of the cached records. Any records not found will be in the array as a null value if `removeNulls` is false otherwise they will be removed.\n"
									},
									"typeParameter": [
										{
											"id": 825,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"id": 943,
														"typeArguments": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "fields"
																},
																"objectType": {
																	"type": "reference",
																	"id": 751,
																	"name": "ViewModelClassType"
																}
															},
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "pkFieldName"
																},
																"objectType": {
																	"type": "reference",
																	"id": 751,
																	"name": "ViewModelClassType"
																}
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 751,
																				"name": "ViewModelClassType"
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															},
															{
																"type": "reference",
																"id": 825,
																"name": "T"
															}
														],
														"name": "BaseViewModel"
													},
													{
														"type": "reference",
														"id": 912,
														"typeArguments": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "literal",
																			"value": "fields"
																		},
																		"objectType": {
																			"type": "reference",
																			"id": 751,
																			"name": "ViewModelClassType"
																		}
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "fields"
																					},
																					"objectType": {
																						"type": "reference",
																						"id": 751,
																						"name": "ViewModelClassType"
																					}
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	}
																],
																"qualifiedName": "Pick",
																"package": "typescript",
																"name": "Pick"
															}
														],
														"name": "FieldDataMapping"
													}
												]
											}
										},
										{
											"id": 826,
											"name": "RemoveNullsT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"default": {
												"type": "literal",
												"value": true
											}
										}
									],
									"parameters": [
										{
											"id": 827,
											"name": "records",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "List of existing ViewModel records to get latest cache version for"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 825,
													"name": "T"
												}
											}
										},
										{
											"id": 828,
											"name": "removeNulls",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "whether to remove entries that have no record in the cache. Defaults to true."
											},
											"type": {
												"type": "reference",
												"id": 826,
												"name": "RemoveNullsT"
											}
										}
									],
									"type": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"id": 826,
											"name": "RemoveNullsT"
										},
										"extendsType": {
											"type": "literal",
											"value": true
										},
										"trueType": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"id": 825,
												"name": "T"
											}
										},
										"falseType": {
											"type": "array",
											"elementType": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 825,
														"name": "T"
													}
												]
											}
										}
									}
								},
								{
									"id": 829,
									"name": "getList",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 830,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "tuple",
														"elements": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "reference",
																			"typeArguments": [
																				{
																					"type": "reference",
																					"id": 751,
																					"name": "ViewModelClassType"
																				}
																			],
																			"name": "ExtractRelatedFields"
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "typeOperator",
																							"operator": "keyof",
																							"target": {
																								"type": "reference",
																								"typeArguments": [
																									{
																										"type": "reference",
																										"id": 751,
																										"name": "ViewModelClassType"
																									}
																								],
																								"name": "ExtractRelatedFields"
																							}
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"qualifiedName": "Extract",
																					"package": "typescript",
																					"name": "Extract"
																				},
																				"objectType": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 751,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														]
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 751,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "fields"
																					},
																					"objectType": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "typeOperator",
																									"operator": "keyof",
																									"target": {
																										"type": "reference",
																										"typeArguments": [
																											{
																												"type": "reference",
																												"id": 751,
																												"name": "ViewModelClassType"
																											}
																										],
																										"name": "ExtractRelatedFields"
																									}
																								},
																								{
																									"type": "intrinsic",
																									"name": "string"
																								}
																							],
																							"qualifiedName": "Extract",
																							"package": "typescript",
																							"name": "Extract"
																						},
																						"objectType": {
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "reference",
																									"id": 751,
																									"name": "ViewModelClassType"
																								}
																							],
																							"name": "ExtractRelatedFields"
																						}
																					}
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	}
																]
															},
															{
																"type": "reference",
																"id": 980,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "ViewModelConstructor"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 980,
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "ViewModelConstructor"
																	}
																],
																"name": "ExtractRelatedFields"
															}
														],
														"name": "FieldPathInner"
													}
												]
											}
										},
										{
											"id": 831,
											"name": "RemoveNullsT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"default": {
												"type": "literal",
												"value": true
											}
										}
									],
									"parameters": [
										{
											"id": 832,
											"name": "records",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1027,
													"typeArguments": [
														{
															"type": "reference",
															"id": 751,
															"name": "ViewModelClassType"
														},
														{
															"type": "reference",
															"id": 830,
															"name": "T"
														}
													],
													"name": "PartialViewModel"
												}
											}
										},
										{
											"id": 833,
											"name": "removeNulls",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 831,
												"name": "RemoveNullsT"
											}
										}
									],
									"type": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"id": 831,
											"name": "RemoveNullsT"
										},
										"extendsType": {
											"type": "literal",
											"value": true
										},
										"trueType": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"id": 1027,
												"typeArguments": [
													{
														"type": "reference",
														"id": 751,
														"name": "ViewModelClassType"
													},
													{
														"type": "reference",
														"id": 830,
														"name": "T"
													}
												],
												"name": "PartialViewModel"
											}
										},
										"falseType": {
											"type": "array",
											"elementType": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 1027,
														"typeArguments": [
															{
																"type": "reference",
																"id": 751,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"id": 830,
																"name": "T"
															}
														],
														"name": "PartialViewModel"
													}
												]
											}
										}
									}
								}
							]
						},
						{
							"id": 760,
							"name": "getPkCacheKey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 721,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 761,
									"name": "getPkCacheKey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the cache key to use into for the primary key. Handles compound keys."
									},
									"parameters": [
										{
											"id": 762,
											"name": "pk",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1030,
												"typeArguments": [
													{
														"type": "reference",
														"id": 751,
														"name": "ViewModelClassType"
													}
												],
												"name": "ExtractPkFieldParseableValueType"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 757,
							"name": "isInstanceOfModel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 714,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 758,
									"name": "isInstanceOfModel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Checks if value `a` is an instance of the ViewModel this cache is for"
									},
									"parameters": [
										{
											"id": 759,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "a",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"id": 1027,
											"typeArguments": [
												{
													"type": "reference",
													"id": 751,
													"name": "ViewModelClassType"
												},
												{
													"type": "reference",
													"typeArguments": [
														{
															"type": "typeOperator",
															"operator": "keyof",
															"target": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "fields"
																},
																"objectType": {
																	"type": "reference",
																	"id": 751,
																	"name": "ViewModelClassType"
																}
															}
														},
														{
															"type": "intrinsic",
															"name": "string"
														}
													],
													"qualifiedName": "Extract",
													"package": "typescript",
													"name": "Extract"
												}
											],
											"name": "PartialViewModel"
										}
									}
								}
							]
						},
						{
							"id": 841,
							"name": "onAnyChange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 1131,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 842,
									"name": "onAnyChange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								749
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								805,
								838,
								754,
								753,
								727
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								755,
								766
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								763,
								774,
								787,
								843,
								868,
								768,
								834,
								794,
								806,
								812,
								760,
								757,
								841
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
							"line": 692,
							"character": 21
						}
					],
					"typeParameter": [
						{
							"id": 878,
							"name": "ViewModelClassType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 980,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ViewModelConstructor"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						726
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 879,
			"name": "ViewModelFactory",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 943,
					"name": "BaseViewModel",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The base class all ViewModel classes will extend.",
						"text": "If you use the [baseClass](doc:viewModelFactory##method-viewmodel) option the class passed must extend\n`BaseViewModel`.\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": "\n"
							}
						]
					},
					"children": [
						{
							"id": 944,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 509,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 945,
									"name": "new BaseViewModel",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 946,
											"name": "FieldMappingType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 900,
												"name": "FieldsMapping"
											}
										},
										{
											"id": 947,
											"name": "PkFieldType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"typeArguments": [
																{
																	"type": "typeOperator",
																	"operator": "keyof",
																	"target": {
																		"type": "reference",
																		"id": 946,
																		"name": "FieldMappingType"
																	}
																},
																{
																	"type": "intrinsic",
																	"name": "string"
																}
															],
															"qualifiedName": "Extract",
															"package": "typescript",
															"name": "Extract"
														}
													}
												]
											}
										},
										{
											"id": 948,
											"name": "AssignedFieldNames",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"id": 946,
															"name": "FieldMappingType"
														}
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"qualifiedName": "Extract",
												"package": "typescript",
												"name": "Extract"
											}
										}
									],
									"parameters": [
										{
											"id": 949,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "mapped",
												"parameter": "K",
												"parameterType": {
													"type": "intrinsic",
													"name": "string"
												},
												"templateType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": "__parsableValueType"
													},
													"objectType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"name": "K"
														},
														"objectType": {
															"type": "reference",
															"id": 946,
															"name": "FieldMappingType"
														}
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 943,
										"typeArguments": [
											{
												"type": "reference",
												"id": 946,
												"name": "FieldMappingType"
											},
											{
												"type": "reference",
												"id": 947,
												"name": "PkFieldType"
											},
											{
												"type": "reference",
												"id": 948,
												"name": "AssignedFieldNames"
											}
										],
										"name": "BaseViewModel"
									}
								}
							]
						},
						{
							"id": 961,
							"name": "__recordBoundFields",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 447,
									"character": 12
								}
							],
							"type": {
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "intrinsic",
									"name": "string"
								},
								"templateType": {
									"type": "reference",
									"id": 1823,
									"typeArguments": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "__fieldValueType"
											},
											"objectType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"name": "K"
												},
												"objectType": {
													"type": "reference",
													"id": 946,
													"name": "FieldMappingType"
												}
											}
										},
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "__parsableValueType"
											},
											"objectType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"name": "K"
												},
												"objectType": {
													"type": "reference",
													"id": 946,
													"name": "FieldMappingType"
												}
											}
										},
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "__fieldValueType"
											},
											"objectType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"name": "K"
												},
												"objectType": {
													"type": "reference",
													"id": 946,
													"name": "FieldMappingType"
												}
											}
										}
									],
									"name": "RecordBoundField"
								},
								"readonlyModifier": "+"
							}
						},
						{
							"id": 970,
							"name": "_assignedFieldPaths",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "The `ViewModelFieldPaths` instance for this record. This is a unique instance based on the actual\nassigned fields and can be compared to other instances to determine if the same fields are set."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 823,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 1045,
								"typeArguments": [
									{
										"type": "reference",
										"id": 980,
										"typeArguments": [
											{
												"type": "reference",
												"id": 946,
												"name": "FieldMappingType"
											},
											{
												"type": "reference",
												"id": 947,
												"name": "PkFieldType"
											}
										],
										"name": "ViewModelConstructor"
									}
								],
								"name": "ViewModelFieldPaths"
							}
						},
						{
							"id": 968,
							"name": "_assignedFields",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "List of field names with data available on this instance.",
								"tags": [
									{
										"tag": "type-name",
										"text": "string[]\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 807,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 969,
							"name": "_assignedFieldsDeep",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "Deep field names set on this record. If no relations are set this is the same as `_assignedFields`.",
								"text": "A deep field is a field that is a relation to another model and is represented as an array, eg.\n`['group', 'name']` would be the the `name` field on the `group` relation.\n",
								"tags": [
									{
										"tag": "type-name",
										"text": "string[]\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 817,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 906,
									"typeArguments": [
										{
											"type": "reference",
											"id": 980,
											"typeArguments": [
												{
													"type": "reference",
													"id": 946,
													"name": "FieldMappingType"
												},
												{
													"type": "reference",
													"id": 947,
													"name": "PkFieldType"
												}
											],
											"name": "ViewModelConstructor"
										},
										{
											"type": "reference",
											"typeArguments": [
												{
													"type": "reference",
													"id": 980,
													"typeArguments": [
														{
															"type": "reference",
															"id": 946,
															"name": "FieldMappingType"
														},
														{
															"type": "reference",
															"id": 947,
															"name": "PkFieldType"
														}
													],
													"name": "ViewModelConstructor"
												}
											],
											"name": "ExtractRelatedFields"
										}
									],
									"name": "FieldPath"
								}
							}
						},
						{
							"id": 967,
							"name": "_data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "The assigned data for this record. You usually don't need to access this directly; values\nfor a field can be retrieved from the record directly using the field name",
								"tags": [
									{
										"tag": "type-name",
										"text": "Object\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 798,
									"character": 13
								}
							],
							"type": {
								"type": "mapped",
								"parameter": "k",
								"parameterType": {
									"type": "intrinsic",
									"name": "string"
								},
								"templateType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "__fieldValueType"
									},
									"objectType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"name": "k"
										},
										"objectType": {
											"type": "reference",
											"id": 946,
											"name": "FieldMappingType"
										}
									}
								}
							}
						},
						{
							"id": 962,
							"name": "_f",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 472,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 963,
									"name": "_f",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get fields bound to this record instance. Each field behaves the same as accessing it via ViewModel.fields but\nhas a `value` property that contains the value for that field on this record.",
										"text": "This is useful when you need to know both the field on the ViewModel and the value on a record (eg. when formatting\na value from a record\n\n```js\nconst user = new User({ name: 'Jon Snow' });\nuser.name\n// Jon Snow\nuser._f.name\n// CharField({ name: 'name', label: 'Label' });\nuser._f.name.value\n// Jon Snow\n```\n",
										"tags": [
											{
												"tag": "type-name",
												"text": "{[fieldName: string]: Field}\n"
											}
										]
									},
									"type": {
										"type": "mapped",
										"parameter": "K",
										"parameterType": {
											"type": "intrinsic",
											"name": "string"
										},
										"templateType": {
											"type": "reference",
											"id": 1823,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": "__fieldValueType"
													},
													"objectType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"name": "K"
														},
														"objectType": {
															"type": "reference",
															"id": 946,
															"name": "FieldMappingType"
														}
													}
												},
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": "__parsableValueType"
													},
													"objectType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"name": "K"
														},
														"objectType": {
															"type": "reference",
															"id": 946,
															"name": "FieldMappingType"
														}
													}
												},
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": "__fieldValueType"
													},
													"objectType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"name": "K"
														},
														"objectType": {
															"type": "reference",
															"id": 946,
															"name": "FieldMappingType"
														}
													}
												}
											],
											"name": "RecordBoundField"
										},
										"readonlyModifier": "+"
									}
								}
							]
						},
						{
							"id": 971,
							"name": "_key",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 833,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 972,
									"name": "_key",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the primary key value(s) for this instance. This is to conform to the\n[Identifiable](doc:Identifiable) interface.",
										"tags": [
											{
												"tag": "type-name",
												"text": "PkFieldType\n"
											}
										]
									},
									"type": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"id": 947,
											"name": "PkFieldType"
										},
										"extendsType": {
											"type": "intrinsic",
											"name": "string"
										},
										"trueType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "__fieldValueType"
											},
											"objectType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"name": "PkFieldType"
												},
												"objectType": {
													"type": "reference",
													"id": 946,
													"name": "FieldMappingType"
												}
											}
										},
										"falseType": {
											"type": "mapped",
											"parameter": "K",
											"parameterType": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											},
											"templateType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "literal",
													"value": "__fieldValueType"
												},
												"objectType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"name": "K"
													},
													"objectType": {
														"type": "reference",
														"id": 946,
														"name": "FieldMappingType"
													}
												}
											},
											"nameType": {
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"name": "K"
												},
												"extendsType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "intrinsic",
														"name": "number"
													},
													"objectType": {
														"type": "reference",
														"id": 947,
														"name": "PkFieldType"
													}
												},
												"trueType": {
													"type": "reference",
													"name": "K"
												},
												"falseType": {
													"type": "intrinsic",
													"name": "never"
												}
											}
										}
									}
								}
							]
						},
						{
							"id": 950,
							"name": "_model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 294,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 951,
									"name": "_model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the actual ViewModel class for this instance"
									},
									"type": {
										"type": "reference",
										"id": 980,
										"typeArguments": [
											{
												"type": "reference",
												"id": 946,
												"name": "FieldMappingType"
											},
											{
												"type": "reference",
												"id": 947,
												"name": "PkFieldType"
											}
										],
										"name": "ViewModelConstructor"
									}
								}
							]
						},
						{
							"id": 957,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 343,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 958,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Clone this record, optionally with only a subset of the fields"
									},
									"typeParameter": [
										{
											"id": 959,
											"name": "CloneFieldNames",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 960,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 906,
															"typeArguments": [
																{
																	"type": "reference",
																	"id": 980,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"id": 946,
																			"name": "FieldMappingType"
																		},
																		{
																			"type": "reference",
																			"id": 947,
																			"name": "PkFieldType"
																		}
																	],
																	"name": "ViewModelConstructor"
																},
																{
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "reference",
																			"id": 980,
																			"typeArguments": [
																				{
																					"type": "reference",
																					"id": 946,
																					"name": "FieldMappingType"
																				},
																				{
																					"type": "reference",
																					"id": 947,
																					"name": "PkFieldType"
																				}
																			],
																			"name": "ViewModelConstructor"
																		}
																	],
																	"name": "ExtractRelatedFields"
																}
															],
															"name": "FieldPath"
														}
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 959,
															"name": "CloneFieldNames"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 976,
										"typeArguments": [
											{
												"type": "reference",
												"id": 946,
												"name": "FieldMappingType"
											},
											{
												"type": "reference",
												"id": 947,
												"name": "PkFieldType"
											},
											{
												"type": "reference",
												"id": 959,
												"name": "CloneFieldNames"
											}
										],
										"name": "ViewModelInterface"
									}
								}
							]
						},
						{
							"id": 964,
							"name": "fieldPathIntersection",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 704,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 965,
									"name": "fieldPathIntersection",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Given `records` return the paths that are common between them.",
										"text": "A naive solution is to just check `_assignedFieldsDeep`:\n\n```\nconst paths = intersectionBy(\n  ...assignedData[key].map(record => record._assignedFieldsDeep),\n  p => flattenFieldPath(p).join('|')\n);\n```\n\nbut that would fail if some records had a null value for a relation and others didn't.\n\nThis function handles nested records such that a null relation is ignored. For example if you received:\n\n```\n[\n  {\n    id: 1,\n    nestedRecordId: null,\n    nestedRecord: null,\n  },\n  {\n      id: 2,\n      nestedRecordId: 1,\n      nestedRecord: {\n          id: 1,\n          name: 'Nested Record 1',\n      },\n  },\n  {\n     id: 3,\n     nestedRecordId: 2,\n     nestedRecord: {\n         id: 2,\n         name: 'Nested Record 2',\n         otherField: 'Name',\n     },\n  }\n]\n```\n\nwould result in\n\n```\n['id', 'nestedRecordId', ['nestedRecord', 'id'], ['nestedRecord', 'name']]\n```\n\nNoting that the first record has no nested fields (because they are null) and so get's ignored, and the\nlast record has 'otherField' which the second doesn't so is excluded.\n"
									},
									"parameters": [
										{
											"id": 966,
											"name": "records",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 976,
													"typeArguments": [
														{
															"type": "reference",
															"id": 946,
															"name": "FieldMappingType"
														},
														{
															"type": "reference",
															"id": 947,
															"name": "PkFieldType"
														},
														{
															"type": "reference",
															"typeArguments": [
																{
																	"type": "typeOperator",
																	"operator": "keyof",
																	"target": {
																		"type": "reference",
																		"id": 946,
																		"name": "FieldMappingType"
																	}
																},
																{
																	"type": "intrinsic",
																	"name": "string"
																}
															],
															"qualifiedName": "Extract",
															"package": "typescript",
															"name": "Extract"
														}
													],
													"name": "ViewModelInterface"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 906,
											"typeArguments": [
												{
													"type": "reference",
													"id": 980,
													"typeArguments": [
														{
															"type": "reference",
															"id": 946,
															"name": "FieldMappingType"
														},
														{
															"type": "reference",
															"id": 947,
															"name": "PkFieldType"
														}
													],
													"name": "ViewModelConstructor"
												},
												{
													"type": "reference",
													"typeArguments": [
														{
															"type": "reference",
															"id": 980,
															"typeArguments": [
																{
																	"type": "reference",
																	"id": 946,
																	"name": "FieldMappingType"
																},
																{
																	"type": "reference",
																	"id": 947,
																	"name": "PkFieldType"
																}
															],
															"name": "ViewModelConstructor"
														}
													],
													"name": "ExtractRelatedFields"
												}
											],
											"name": "FieldPath"
										}
									}
								}
							]
						},
						{
							"id": 954,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 321,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 955,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Compares two records to see if they are equivalent.",
										"text": "- If the ViewModel is different then the records are always considered different\n- If the records were initialised with a different set of fields then they are\n  considered different even if the common fields are the same and other fields are\n  all null\n"
									},
									"parameters": [
										{
											"id": 956,
											"name": "record",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 976,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"name": "ViewModelInterface"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 952,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 301,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 953,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the data for this record as a plain object"
									},
									"type": {
										"type": "mapped",
										"parameter": "K",
										"parameterType": {
											"type": "intrinsic",
											"name": "string"
										},
										"templateType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "__fieldValueType"
											},
											"objectType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"name": "K"
												},
												"objectType": {
													"type": "reference",
													"id": 946,
													"name": "FieldMappingType"
												}
											}
										},
										"readonlyModifier": "+"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								944
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								961,
								970,
								968,
								969,
								967
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								962,
								971,
								950
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								957,
								964,
								954,
								952
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 286,
							"character": 13
						}
					],
					"typeParameter": [
						{
							"id": 973,
							"name": "FieldMappingType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 900,
								"name": "FieldsMapping"
							}
						},
						{
							"id": 974,
							"name": "PkFieldType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 946,
										"name": "FieldMappingType"
									}
								],
								"name": "ExtractPkFieldTypes"
							}
						},
						{
							"id": 975,
							"name": "AssignedFieldNames",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 916,
								"typeArguments": [
									{
										"type": "reference",
										"id": 946,
										"name": "FieldMappingType"
									}
								],
								"name": "ExtractFieldNames"
							},
							"default": {
								"type": "reference",
								"id": 916,
								"typeArguments": [
									{
										"type": "reference",
										"id": 946,
										"name": "FieldMappingType"
									}
								],
								"name": "ExtractFieldNames"
							}
						}
					]
				},
				{
					"id": 1007,
					"name": "InvalidFieldError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Thrown when attempting to access a field that does not exist on a ViewModel"
					},
					"children": [
						{
							"id": 1017,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1018,
									"name": "new InvalidFieldError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1019,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1007,
										"name": "InvalidFieldError"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Error.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.constructor"
							}
						},
						{
							"id": 1021,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1023,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.message"
							}
						},
						{
							"id": 1020,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1022,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.name"
							}
						},
						{
							"id": 1022,
							"name": "stack",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1024,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.stack"
							}
						},
						{
							"id": 1016,
							"name": "stackTraceLimit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/node_modules/@types/node/globals.d.ts",
									"line": 117,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.stackTraceLimit"
							}
						},
						{
							"id": 1008,
							"name": "captureStackTrace",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 1009,
									"name": "captureStackTrace",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Create .stack property on a target object"
									},
									"parameters": [
										{
											"id": 1010,
											"name": "targetObject",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 1011,
											"name": "constructorOpt",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Function",
												"package": "typescript",
												"name": "Function"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Error.captureStackTrace"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.captureStackTrace"
							}
						},
						{
							"id": 1012,
							"name": "prepareStackTrace",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/node_modules/@types/node/globals.d.ts",
									"line": 115,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1013,
									"name": "prepareStackTrace",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Optional override for formatting stack traces",
										"tags": [
											{
												"tag": "see",
												"text": "https://github.com/v8/v8/wiki/Stack%20Trace%20API#customizing-stack-traces\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1014,
											"name": "err",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Error",
												"package": "typescript",
												"name": "Error"
											}
										},
										{
											"id": 1015,
											"name": "stackTraces",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"qualifiedName": "NodeJS.CallSite",
													"package": "@types/node",
													"name": "CallSite"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Error.prepareStackTrace"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.prepareStackTrace"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1017
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1021,
								1020,
								1022,
								1016
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1008,
								1012
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 1219,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Error",
							"package": "typescript",
							"name": "Error"
						}
					]
				},
				{
					"id": 920,
					"name": "MissingFieldsError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Thrown when cloning a record and requested fields cannot be found",
						"text": "Gives details on missing fields and will indicate if related records are missing entirely vs\njust some fields\n"
					},
					"children": [
						{
							"id": 930,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 248,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 931,
									"name": "new MissingFieldsError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 932,
											"name": "record",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 976,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										},
										{
											"id": 933,
											"name": "assignedFields",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 934,
											"name": "requestedFieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 906,
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "any"
														},
														{
															"type": "intrinsic",
															"name": "any"
														}
													],
													"name": "FieldPath"
												}
											}
										},
										{
											"id": 935,
											"name": "missingFieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 936,
											"name": "missingRelations",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "tuple",
													"elements": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 920,
										"name": "MissingFieldsError"
									},
									"overwrites": {
										"type": "reference",
										"name": "Error.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Error.constructor"
							}
						},
						{
							"id": 939,
							"name": "assignedFields",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 247,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 941,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1023,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.message"
							}
						},
						{
							"id": 937,
							"name": "missingFieldNames",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 245,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 938,
							"name": "missingRelations",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 246,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "tuple",
									"elements": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							}
						},
						{
							"id": 940,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1022,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.name"
							}
						},
						{
							"id": 942,
							"name": "stack",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1024,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.stack"
							}
						},
						{
							"id": 929,
							"name": "stackTraceLimit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/node_modules/@types/node/globals.d.ts",
									"line": 117,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.stackTraceLimit"
							}
						},
						{
							"id": 921,
							"name": "captureStackTrace",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 922,
									"name": "captureStackTrace",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Create .stack property on a target object"
									},
									"parameters": [
										{
											"id": 923,
											"name": "targetObject",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 924,
											"name": "constructorOpt",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Function",
												"package": "typescript",
												"name": "Function"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Error.captureStackTrace"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.captureStackTrace"
							}
						},
						{
							"id": 925,
							"name": "prepareStackTrace",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/node_modules/@types/node/globals.d.ts",
									"line": 115,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 926,
									"name": "prepareStackTrace",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Optional override for formatting stack traces",
										"tags": [
											{
												"tag": "see",
												"text": "https://github.com/v8/v8/wiki/Stack%20Trace%20API#customizing-stack-traces\n"
											}
										]
									},
									"parameters": [
										{
											"id": 927,
											"name": "err",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Error",
												"package": "typescript",
												"name": "Error"
											}
										},
										{
											"id": 928,
											"name": "stackTraces",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"qualifiedName": "NodeJS.CallSite",
													"package": "@types/node",
													"name": "CallSite"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Error.prepareStackTrace"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.prepareStackTrace"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								930
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								939,
								941,
								937,
								938,
								940,
								942,
								929
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								921,
								925
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 244,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Error",
							"package": "typescript",
							"name": "Error"
						}
					]
				},
				{
					"id": 980,
					"name": "ViewModelConstructor",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "type-name",
								"text": "ViewModel Class\n"
							}
						]
					},
					"children": [
						{
							"id": 1001,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1002,
									"name": "new ViewModelConstructor",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1003,
											"name": "D",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 999,
														"name": "FieldMappingType"
													},
													{
														"type": "reference",
														"id": 1000,
														"name": "PkFieldType"
													}
												],
												"name": "ViewModelInterfaceInputData"
											}
										}
									],
									"parameters": [
										{
											"id": 1004,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1003,
												"name": "D"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 976,
										"typeArguments": [
											{
												"type": "reference",
												"id": 999,
												"name": "FieldMappingType"
											},
											{
												"type": "reference",
												"id": 1000,
												"name": "PkFieldType"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"id": 1003,
															"name": "D"
														}
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"qualifiedName": "Extract",
												"package": "typescript",
												"name": "Extract"
											}
										],
										"name": "ViewModelInterface"
									}
								},
								{
									"id": 1005,
									"name": "new ViewModelConstructor",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1006,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 999,
														"name": "FieldMappingType"
													},
													{
														"type": "reference",
														"id": 1000,
														"name": "PkFieldType"
													}
												],
												"name": "ViewModelInterfaceInputData"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 976,
										"typeArguments": [
											{
												"type": "reference",
												"id": 999,
												"name": "FieldMappingType"
											},
											{
												"type": "reference",
												"id": 1000,
												"name": "PkFieldType"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "reference",
																			"id": 999,
																			"name": "FieldMappingType"
																		},
																		{
																			"type": "reference",
																			"id": 1000,
																			"name": "PkFieldType"
																		}
																	],
																	"name": "ExtractPkFields"
																}
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "reference",
																			"id": 999,
																			"name": "FieldMappingType"
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														],
														"qualifiedName": "Extract",
														"package": "typescript",
														"name": "Extract"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "reference",
																	"id": 999,
																	"name": "FieldMappingType"
																}
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "reference",
																			"id": 999,
																			"name": "FieldMappingType"
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														],
														"qualifiedName": "Extract",
														"package": "typescript",
														"name": "Extract"
													}
												]
											}
										],
										"name": "ViewModelInterface"
									}
								}
							]
						},
						{
							"id": 987,
							"name": "allFieldNames",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "Shortcut to get all field names including primary keys"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 985,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"id": 999,
												"name": "FieldMappingType"
											}
										},
										{
											"type": "intrinsic",
											"name": "string"
										}
									],
									"qualifiedName": "Extract",
									"package": "typescript",
									"name": "Extract"
								}
							}
						},
						{
							"id": 992,
							"name": "cache",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The cache instance for this ViewModel. A default instance of [ViewModelCache](doc:ViewModelCache)\nis created when first accessed or you can explicitly assign a cache:",
								"text": "```js\nclass User extends viewModelFactory(fields) {\n    static cache = new MyCustomCache(User);\n}\n```\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 1026,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 726,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "default"
							}
						},
						{
							"id": 986,
							"name": "fieldNames",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "Shortcut to get the names of all fields excluding primary keys.",
								"text": "If you want all fields including primary key use `allFieldNames`\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 980,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"id": 999,
												"name": "FieldMappingType"
											}
										},
										{
											"type": "intrinsic",
											"name": "string"
										}
									],
									"qualifiedName": "Extract",
									"package": "typescript",
									"name": "Extract"
								}
							}
						},
						{
							"id": 981,
							"name": "fields",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "The bound fields for this ViewModel. These will match the `fields` passed in to `ViewModel` with the\nfollowing differences:\n- If a primary key is created for you this will exist here\n- All fields are bound to the created class. This means you can access the `ViewModel` class from the field on\n  the `model` property, eg. `User.fields.email.model === User` will be true.\n- All fields have the `name` property set to match the key in `fields`\n- All fields have `label` filled out if not explicitly set (eg. if name was `emailAddress` label will be created\n  as `Email Address`)",
								"text": "See also [getField](doc:viewModelFactory#method-getField) for getting a nested field using array notation.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 934,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 999,
								"name": "FieldMappingType"
							}
						},
						{
							"id": 982,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "The singular label for this ViewModel. This should be set by extending the created class.",
								"text": "```js\nclass User extends viewModelFactory(fields) {\n    static label = 'User';\n}\n```\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 945,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 983,
							"name": "labelPlural",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "The label used to describe an indeterminate number of this ViewModel. This should be set by extending the created class.",
								"text": "```js\nclass User extends viewModelFactory(fields) {\n    static labelPlural = 'Users';\n}\n```\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 956,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 984,
							"name": "pkFieldName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "Name of the primary key field for this ViewModel (or fields for compound keys)",
								"text": "If `options.pkFieldName` is not specified a field will be created from `options.getImplicitPk`\nif provided otherwise a default field with name 'id' will be created.\n",
								"tags": [
									{
										"tag": "type-name",
										"text": "string\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 966,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 1000,
								"name": "PkFieldType"
							}
						},
						{
							"id": 985,
							"name": "pkFieldNames",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "Shortcut to get pkFieldName as an array always, even for non-compound keys",
								"tags": [
									{
										"tag": "type-name",
										"text": "string[]\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 973,
									"character": 13
								}
							],
							"type": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"id": 1000,
									"name": "PkFieldType"
								},
								"extendsType": {
									"type": "intrinsic",
									"name": "string"
								},
								"trueType": {
									"type": "tuple",
									"elements": [
										{
											"type": "reference",
											"name": "PkFieldType"
										}
									]
								},
								"falseType": {
									"type": "reference",
									"id": 1000,
									"name": "PkFieldType"
								}
							}
						},
						{
							"id": 988,
							"name": "relationFieldNames",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "Shortcut to get the names of all relation fields",
								"tags": [
									{
										"tag": "type-name",
										"text": "string[]\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 992,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 980,
														"typeArguments": [
															{
																"type": "reference",
																"id": 999,
																"name": "FieldMappingType"
															},
															{
																"type": "reference",
																"id": 1000,
																"name": "PkFieldType"
															}
														],
														"name": "ViewModelConstructor"
													}
												],
												"name": "ExtractRelatedFields"
											}
										},
										{
											"type": "intrinsic",
											"name": "string"
										}
									],
									"qualifiedName": "Extract",
									"package": "typescript",
									"name": "Extract"
								}
							}
						},
						{
							"id": 993,
							"name": "augment",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 994,
									"name": "augment",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create a new class that extends this class with the additional specified fields. To remove a\nfield that exists on the base class set it's value to null.",
										"text": "```js\nclass Base extends viewModelFactory({\n  id: new NumberField({\n    label: 'Id',\n  }),\n  firstName: new CharField({\n    label: 'First Name',\n  }),\n  lastName: new CharField({\n    label: 'Last Name',\n  }),\n  email: new EmailField({\n    label: 'Email',\n  }),\n}) {\n  static label = 'User';\n  static labelPlural = 'Users';\n}\n\nclass User extends BaseUser.augment({\n  region: new IntegerField({\n    label: 'region',\n    required: true,\n    helpText: 'Region Coding of the user',\n    choices: [\n      [1, 'Oceania'],\n      [2, 'Asia'],\n      [3, 'Africa'],\n      [4, 'America'],\n      [5, 'Europe'],\n      [6, 'Antarctica'],\n      [7, 'Atlantis'],\n    ],\n  }),\n  photo: new ImageField({\n    helpText: 'Will be cropped to 400x400',\n  }),\n}) {\n}\n\n// true\nUser instanceof BaseUser\n// true\nUser.label === 'User'\n\n// ['firstName, 'lastName', 'email', 'region', 'photo]\nUser.fieldNames\n```\n",
										"returns": "A new ViewModel class with fields modified according to `newFields`.\n"
									},
									"typeParameter": [
										{
											"id": 995,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 904,
												"typeArguments": [
													{
														"type": "reference",
														"id": 999,
														"name": "FieldMappingType"
													}
												],
												"name": "FieldsMappingOrNull"
											}
										},
										{
											"id": 996,
											"name": "AugmentPkFieldType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "union",
															"types": [
																{
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "reference",
																			"typeArguments": [
																				{
																					"type": "typeOperator",
																					"operator": "keyof",
																					"target": {
																						"type": "reference",
																						"id": 999,
																						"name": "FieldMappingType"
																					}
																				},
																				{
																					"type": "typeOperator",
																					"operator": "keyof",
																					"target": {
																						"type": "reference",
																						"id": 995,
																						"name": "T"
																					}
																				}
																			],
																			"qualifiedName": "Exclude",
																			"package": "typescript",
																			"name": "Exclude"
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		}
																	],
																	"qualifiedName": "Extract",
																	"package": "typescript",
																	"name": "Extract"
																},
																{
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "reference",
																			"typeArguments": [
																				{
																					"type": "typeOperator",
																					"operator": "keyof",
																					"target": {
																						"type": "reference",
																						"id": 995,
																						"name": "T"
																					}
																				},
																				{
																					"type": "typeOperator",
																					"operator": "keyof",
																					"target": {
																						"type": "mapped",
																						"parameter": "P",
																						"parameterType": {
																							"type": "union",
																							"types": [
																								{
																									"type": "intrinsic",
																									"name": "string"
																								},
																								{
																									"type": "intrinsic",
																									"name": "number"
																								},
																								{
																									"type": "intrinsic",
																									"name": "symbol"
																								}
																							]
																						},
																						"templateType": {
																							"type": "indexedAccess",
																							"indexType": {
																								"type": "reference",
																								"name": "P"
																							},
																							"objectType": {
																								"type": "reference",
																								"id": 995,
																								"name": "T"
																							}
																						},
																						"nameType": {
																							"type": "conditional",
																							"checkType": {
																								"type": "indexedAccess",
																								"indexType": {
																									"type": "reference",
																									"name": "P"
																								},
																								"objectType": {
																									"type": "reference",
																									"id": 995,
																									"name": "T"
																								}
																							},
																							"extendsType": {
																								"type": "union",
																								"types": [
																									{
																										"type": "intrinsic",
																										"name": "undefined"
																									},
																									{
																										"type": "literal",
																										"value": null
																									}
																								]
																							},
																							"trueType": {
																								"type": "reference",
																								"name": "P"
																							},
																							"falseType": {
																								"type": "intrinsic",
																								"name": "never"
																							}
																						}
																					}
																				}
																			],
																			"qualifiedName": "Exclude",
																			"package": "typescript",
																			"name": "Exclude"
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		}
																	],
																	"qualifiedName": "Extract",
																	"package": "typescript",
																	"name": "Extract"
																}
															]
														}
													}
												]
											},
											"default": {
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"id": 1000,
													"name": "PkFieldType"
												},
												"extendsType": {
													"type": "intrinsic",
													"name": "string"
												},
												"trueType": {
													"type": "conditional",
													"checkType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"name": "PkFieldType"
														},
														"objectType": {
															"type": "reference",
															"id": 995,
															"name": "T"
														}
													},
													"extendsType": {
														"type": "reference",
														"id": 1877,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "default"
													},
													"trueType": {
														"type": "reference",
														"name": "PkFieldType"
													},
													"falseType": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												"falseType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 997,
											"name": "newFields",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "Map of field name to a `Field` instance (to add the field) or `null` (to remove the field)"
											},
											"type": {
												"type": "reference",
												"id": 995,
												"name": "T"
											}
										},
										{
											"id": 998,
											"name": "newOptions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Provide optional overrides for the options that the original class was created with"
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 999,
																		"name": "FieldMappingType"
																	},
																	{
																		"type": "reference",
																		"id": 995,
																		"name": "T"
																	}
																],
																"name": "AugmentFields"
															},
															{
																"type": "reference",
																"id": 996,
																"name": "AugmentPkFieldType"
															}
														],
														"name": "ViewModelOptions"
													}
												],
												"qualifiedName": "Partial",
												"package": "typescript",
												"name": "Partial"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 980,
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 999,
														"name": "FieldMappingType"
													},
													{
														"type": "reference",
														"id": 995,
														"name": "T"
													}
												],
												"name": "AugmentFields"
											},
											{
												"type": "reference",
												"id": 996,
												"name": "AugmentPkFieldType"
											}
										],
										"name": "ViewModelConstructor"
									}
								}
							]
						},
						{
							"id": 989,
							"name": "getField",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 990,
									"name": "getField",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get a field from this model or a related model",
										"text": "Accepts either a string for a field on this record or array notation for traversing [RelatedViewModelField](doc:RelatedViewModelField)\nfields:\n\n```jsx\nSubscription.getField(['user', 'group', 'owner'])\n```"
									},
									"parameters": [
										{
											"id": 991,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "Either a string or an array of strings where the last element is the final field name to return\nand each other element is a [RelatedViewModelField](doc:RelatedViewModelField) on a ViewModel.\n"
											},
											"type": {
												"type": "reference",
												"id": 906,
												"typeArguments": [
													{
														"type": "reference",
														"id": 980,
														"typeArguments": [
															{
																"type": "reference",
																"id": 999,
																"name": "FieldMappingType"
															},
															{
																"type": "reference",
																"id": 1000,
																"name": "PkFieldType"
															}
														],
														"name": "ViewModelConstructor"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 980,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 999,
																		"name": "FieldMappingType"
																	},
																	{
																		"type": "reference",
																		"id": 1000,
																		"name": "PkFieldType"
																	}
																],
																"name": "ViewModelConstructor"
															}
														],
														"name": "ExtractRelatedFields"
													}
												],
												"name": "FieldPath"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1877,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "default"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1001
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								987,
								992,
								986,
								981,
								982,
								983,
								984,
								985,
								988
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								993,
								989
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 879,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 999,
							"name": "FieldMappingType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 900,
								"name": "FieldsMapping"
							}
						},
						{
							"id": 1000,
							"name": "PkFieldType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 999,
										"name": "FieldMappingType"
									}
								],
								"name": "ViewModelPkFieldType"
							}
						}
					]
				},
				{
					"id": 895,
					"name": "CompoundPrimaryKey",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 10,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 896,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 10,
									"character": 33
								}
							],
							"indexSignature": {
								"id": 897,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 898,
										"name": "fieldName",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"id": 894,
									"name": "SinglePrimaryKey"
								}
							}
						}
					}
				},
				{
					"id": 916,
					"name": "ExtractFieldNames",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "type-name",
								"text": "string\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 118,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 917,
							"name": "FieldMappingType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 900,
								"name": "FieldsMapping"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"id": 917,
									"name": "FieldMappingType"
								}
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"qualifiedName": "Extract",
						"package": "typescript",
						"name": "Extract"
					}
				},
				{
					"id": 1030,
					"name": "ExtractPkFieldParseableValueType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Extracts the parseable type for primary key on a ViewModel"
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 1564,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 1031,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 980,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ViewModelConstructor"
							}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "literal",
								"value": "pkFieldName"
							},
							"objectType": {
								"type": "reference",
								"id": 1031,
								"name": "T"
							}
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "string"
						},
						"trueType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "literal",
								"value": "__parsableValueType"
							},
							"objectType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "pkFieldName"
									},
									"objectType": {
										"type": "reference",
										"id": 1031,
										"name": "T"
									}
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "fields"
									},
									"objectType": {
										"type": "reference",
										"id": 1031,
										"name": "T"
									}
								}
							}
						},
						"falseType": {
							"type": "mapped",
							"parameter": "K",
							"parameterType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "pkFieldNames"
								},
								"objectType": {
									"type": "reference",
									"id": 1031,
									"name": "T"
								}
							},
							"templateType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "__parsableValueType"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"name": "K"
									},
									"objectType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "fields"
										},
										"objectType": {
											"type": "reference",
											"id": 1031,
											"name": "T"
										}
									}
								}
							}
						}
					}
				},
				{
					"id": 918,
					"name": "ExtractStarFieldNames",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Extract fields when specified using '*'. Currently this is all fields but could change to be\nnon-relation fields only"
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 127,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 919,
							"name": "FieldMappingType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 900,
								"name": "FieldsMapping"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 916,
						"typeArguments": [
							{
								"type": "reference",
								"id": 919,
								"name": "FieldMappingType"
							}
						],
						"name": "ExtractFieldNames"
					}
				},
				{
					"id": 912,
					"name": "FieldDataMapping",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 107,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 913,
							"name": "FieldMappingType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 900,
								"name": "FieldsMapping"
							}
						}
					],
					"type": {
						"type": "mapped",
						"parameter": "K",
						"parameterType": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"id": 913,
								"name": "FieldMappingType"
							}
						},
						"templateType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "literal",
								"value": "__fieldValueType"
							},
							"objectType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"name": "K"
								},
								"objectType": {
									"type": "reference",
									"id": 913,
									"name": "FieldMappingType"
								}
							}
						},
						"readonlyModifier": "+"
					}
				},
				{
					"id": 914,
					"name": "FieldDataMappingRaw",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 111,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 915,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 900,
								"name": "FieldsMapping"
							}
						}
					],
					"type": {
						"type": "mapped",
						"parameter": "K",
						"parameterType": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"id": 915,
								"name": "T"
							}
						},
						"templateType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "literal",
								"value": "__parsableValueType"
							},
							"objectType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"name": "K"
								},
								"objectType": {
									"type": "reference",
									"id": 915,
									"name": "T"
								}
							}
						},
						"optionalModifier": "+"
					}
				},
				{
					"id": 906,
					"name": "FieldPath",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 48,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 907,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 980,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ViewModelConstructor"
							}
						},
						{
							"id": 908,
							"name": "R",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 907,
										"name": "T"
									}
								],
								"name": "ExtractRelatedFields"
							},
							"default": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 907,
										"name": "T"
									}
								],
								"name": "ExtractRelatedFields"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "fields"
											},
											"objectType": {
												"type": "reference",
												"id": 907,
												"name": "T"
											}
										}
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Extract",
								"package": "typescript",
								"name": "Extract"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "mapped",
										"parameter": "K",
										"parameterType": {
											"type": "reference",
											"typeArguments": [
												{
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "reference",
														"id": 908,
														"name": "R"
													}
												},
												{
													"type": "intrinsic",
													"name": "string"
												}
											],
											"qualifiedName": "Extract",
											"package": "typescript",
											"name": "Extract"
										},
										"templateType": {
											"type": "reference",
											"typeArguments": [
												{
													"type": "mapped",
													"parameter": "J",
													"parameterType": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "literal",
																		"value": "fields"
																	},
																	"objectType": {
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "reference",
																			"name": "K"
																		},
																		"objectType": {
																			"type": "reference",
																			"id": 908,
																			"name": "R"
																		}
																	}
																}
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"qualifiedName": "Extract",
														"package": "typescript",
														"name": "Extract"
													},
													"templateType": {
														"type": "union",
														"types": [
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "reference",
																		"name": "K"
																	},
																	{
																		"type": "reference",
																		"name": "J"
																	}
																]
															},
															{
																"type": "conditional",
																"checkType": {
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "reference",
																		"name": "J"
																	},
																	"objectType": {
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "literal",
																			"value": "fields"
																		},
																		"objectType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "reference",
																				"name": "K"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 908,
																				"name": "R"
																			}
																		}
																	}
																},
																"extendsType": {
																	"type": "reference",
																	"id": 2770,
																	"typeArguments": [
																		{
																			"type": "inferred",
																			"name": "X"
																		},
																		{
																			"type": "intrinsic",
																			"name": "any"
																		},
																		{
																			"type": "intrinsic",
																			"name": "any"
																		}
																	],
																	"name": "BaseRelatedViewModelField"
																},
																"trueType": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "tuple",
																			"elements": [
																				{
																					"type": "reference",
																					"name": "K"
																				},
																				{
																					"type": "reference",
																					"name": "J"
																				}
																			]
																		},
																		{
																			"type": "reference",
																			"name": "X"
																		}
																	],
																	"name": "FieldPathInner"
																},
																"falseType": {
																	"type": "intrinsic",
																	"name": "never"
																}
															}
														]
													}
												}
											],
											"name": "ValueOf"
										}
									}
								],
								"name": "ValueOf"
							}
						]
					}
				},
				{
					"id": 909,
					"name": "FieldPaths",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "type-name",
								"text": "'*'|[string|string[]][]\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 67,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 910,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 980,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ViewModelConstructor"
							}
						},
						{
							"id": 911,
							"name": "R",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 910,
										"name": "T"
									}
								],
								"name": "ExtractRelatedFields"
							},
							"default": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 910,
										"name": "T"
									}
								],
								"name": "ExtractRelatedFields"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "*"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 906,
									"typeArguments": [
										{
											"type": "reference",
											"id": 910,
											"name": "T"
										},
										{
											"type": "reference",
											"id": 911,
											"name": "R"
										}
									],
									"name": "FieldPath"
								}
							}
						]
					}
				},
				{
					"id": 900,
					"name": "FieldsMapping",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 13,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 901,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 13,
									"character": 28
								}
							],
							"indexSignature": {
								"id": 902,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 903,
										"name": "fieldName",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"id": 1877,
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "any"
										}
									],
									"name": "Field"
								}
							}
						}
					}
				},
				{
					"id": 904,
					"name": "FieldsMappingOrNull",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 15,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 905,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 900,
								"name": "FieldsMapping"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 1877,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Field"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							},
							{
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"id": 905,
										"name": "T"
									}
								},
								"templateType": {
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": null
										},
										{
											"type": "reference",
											"id": 1877,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "any"
												}
											],
											"name": "Field"
										}
									]
								},
								"optionalModifier": "+"
							}
						]
					}
				},
				{
					"id": 1027,
					"name": "PartialViewModel",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Type to describe a ViewModel instance with only some fields set",
						"text": "Usage:\n\n```ts\nconst Person = viewModelFactory({\n  name: new Field<string>(),\n  age: new Field<number>(),\n});\ntype AgeOnly = PartialViewModel<typeof Person, 'age'>;\n```\n"
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 1550,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 1028,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 980,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ViewModelConstructor"
							}
						},
						{
							"id": 1029,
							"name": "FieldNames",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 906,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1028,
										"name": "T"
									}
								],
								"name": "FieldPath"
							},
							"default": {
								"type": "reference",
								"id": 916,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "fields"
										},
										"objectType": {
											"type": "reference",
											"id": 1028,
											"name": "T"
										}
									}
								],
								"name": "ExtractFieldNames"
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1028,
												"name": "T"
											}
										],
										"qualifiedName": "InstanceType",
										"package": "typescript",
										"name": "InstanceType"
									},
									{
										"type": "reference",
										"id": 916,
										"typeArguments": [
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "literal",
													"value": "fields"
												},
												"objectType": {
													"type": "reference",
													"id": 1028,
													"name": "T"
												}
											}
										],
										"name": "ExtractFieldNames"
									}
								],
								"qualifiedName": "Omit",
								"package": "typescript",
								"name": "Omit"
							},
							{
								"type": "reference",
								"id": 976,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "fields"
										},
										"objectType": {
											"type": "reference",
											"id": 1028,
											"name": "T"
										}
									},
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "pkFieldName"
										},
										"objectType": {
											"type": "reference",
											"id": 1028,
											"name": "T"
										}
									},
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 1028,
														"name": "T"
													},
													{
														"type": "reference",
														"id": 1029,
														"name": "FieldNames"
													}
												],
												"name": "ExtractRootFieldNames"
											},
											{
												"type": "conditional",
												"checkType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": "pkFieldName"
													},
													"objectType": {
														"type": "reference",
														"id": 1028,
														"name": "T"
													}
												},
												"extendsType": {
													"type": "intrinsic",
													"name": "string"
												},
												"trueType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": "pkFieldName"
													},
													"objectType": {
														"type": "reference",
														"id": 1028,
														"name": "T"
													}
												},
												"falseType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "intrinsic",
														"name": "number"
													},
													"objectType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "literal",
															"value": "pkFieldName"
														},
														"objectType": {
															"type": "reference",
															"id": 1028,
															"name": "T"
														}
													}
												}
											}
										]
									}
								],
								"name": "ViewModelInterface"
							}
						]
					}
				},
				{
					"id": 899,
					"name": "PrimaryKey",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 11,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 894,
								"name": "SinglePrimaryKey"
							},
							{
								"type": "reference",
								"id": 895,
								"name": "CompoundPrimaryKey"
							}
						]
					}
				},
				{
					"id": 894,
					"name": "SinglePrimaryKey",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 9,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 976,
					"name": "ViewModelInterface",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 853,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 977,
							"name": "FieldMappingType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 900,
								"name": "FieldsMapping"
							}
						},
						{
							"id": 978,
							"name": "PkFieldType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 977,
										"name": "FieldMappingType"
									}
								],
								"name": "ExtractPkFieldTypes"
							}
						},
						{
							"id": 979,
							"name": "AssignedFieldNames",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 916,
								"typeArguments": [
									{
										"type": "reference",
										"id": 977,
										"name": "FieldMappingType"
									}
								],
								"name": "ExtractFieldNames"
							},
							"default": {
								"type": "reference",
								"id": 916,
								"typeArguments": [
									{
										"type": "reference",
										"id": 977,
										"name": "FieldMappingType"
									}
								],
								"name": "ExtractFieldNames"
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"id": 943,
								"typeArguments": [
									{
										"type": "reference",
										"id": 977,
										"name": "FieldMappingType"
									},
									{
										"type": "reference",
										"id": 978,
										"name": "PkFieldType"
									},
									{
										"type": "reference",
										"id": 979,
										"name": "AssignedFieldNames"
									}
								],
								"name": "BaseViewModel"
							},
							{
								"type": "reference",
								"id": 912,
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 977,
												"name": "FieldMappingType"
											},
											{
												"type": "reference",
												"id": 979,
												"name": "AssignedFieldNames"
											}
										],
										"qualifiedName": "Pick",
										"package": "typescript",
										"name": "Pick"
									}
								],
								"name": "FieldDataMapping"
							}
						]
					}
				},
				{
					"id": 1023,
					"name": "ViewModelValues",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Type to describe values of an instance of ViewModel",
						"text": "Usage:\n\n```ts\nconst Person = viewModelFactory({\n  name: new Field<string>(),\n  age: new Field<number>(),\n});\ntype PersonValues = ViewModelValues<typeof Person>;\n```\n"
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 1527,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 1024,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 980,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ViewModelConstructor"
							}
						},
						{
							"id": 1025,
							"name": "FieldNames",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "fields"
									},
									"objectType": {
										"type": "reference",
										"id": 1024,
										"name": "T"
									}
								}
							},
							"default": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "fields"
									},
									"objectType": {
										"type": "reference",
										"id": 1024,
										"name": "T"
									}
								}
							}
						},
						{
							"id": 1026,
							"name": "OptionalFieldNames",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "fields"
									},
									"objectType": {
										"type": "reference",
										"id": 1024,
										"name": "T"
									}
								}
							},
							"default": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "fields"
									},
									"objectType": {
										"type": "reference",
										"id": 1024,
										"name": "T"
									}
								}
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "indexedAccess",
												"indexType": {
													"type": "literal",
													"value": "fields"
												},
												"objectType": {
													"type": "reference",
													"id": 1024,
													"name": "T"
												}
											}
										},
										{
											"type": "reference",
											"id": 1025,
											"name": "FieldNames"
										}
									],
									"qualifiedName": "Extract",
									"package": "typescript",
									"name": "Extract"
								},
								"templateType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "__fieldValueType"
									},
									"objectType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"name": "K"
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "fields"
											},
											"objectType": {
												"type": "reference",
												"id": 1024,
												"name": "T"
											}
										}
									}
								}
							},
							{
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "indexedAccess",
												"indexType": {
													"type": "literal",
													"value": "fields"
												},
												"objectType": {
													"type": "reference",
													"id": 1024,
													"name": "T"
												}
											}
										},
										{
											"type": "reference",
											"id": 1026,
											"name": "OptionalFieldNames"
										}
									],
									"qualifiedName": "Extract",
									"package": "typescript",
									"name": "Extract"
								},
								"templateType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "__fieldValueType"
									},
									"objectType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"name": "K"
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "fields"
											},
											"objectType": {
												"type": "reference",
												"id": 1024,
												"name": "T"
											}
										}
									}
								},
								"optionalModifier": "+"
							}
						]
					}
				},
				{
					"id": 880,
					"name": "flattenFieldPath",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 164,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 881,
							"name": "flattenFieldPath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Flatten a nested path to a single level with dot notation",
								"text": "eg.\n```\nflattenFieldPath([\n  'id',\n  ['user', ['group', 'id']],\n  ['user', 'groupId'],\n  ['user', 'id'],\n  'userId'\n])\n// ['id', 'user.group.id', 'user.groupId', 'user.id', 'userId']\n```\n"
							},
							"typeParameter": [
								{
									"id": 882,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 980,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "reference",
												"id": 882,
												"name": "T"
											}
										],
										"name": "ViewModelConstructor"
									}
								},
								{
									"id": 883,
									"name": "R",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 882,
												"name": "T"
											}
										],
										"name": "ExtractRelatedFields"
									},
									"default": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 882,
												"name": "T"
											}
										],
										"name": "ExtractRelatedFields"
									}
								}
							],
							"parameters": [
								{
									"id": 884,
									"name": "fieldPath",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 906,
												"typeArguments": [
													{
														"type": "reference",
														"id": 882,
														"name": "T"
													},
													{
														"type": "reference",
														"id": 883,
														"name": "R"
													}
												],
												"name": "FieldPath"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 906,
													"typeArguments": [
														{
															"type": "reference",
															"id": 882,
															"name": "T"
														},
														{
															"type": "reference",
															"id": 883,
															"name": "R"
														}
													],
													"name": "FieldPath"
												}
											}
										]
									}
								},
								{
									"id": 885,
									"name": "separator",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "'.'"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					]
				},
				{
					"id": 890,
					"name": "isViewModelClass",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 872,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 891,
							"name": "isViewModelClass",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if a class is a ViewModel"
							},
							"typeParameter": [
								{
									"id": 892,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 980,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "reference",
												"id": 892,
												"name": "T"
											}
										],
										"name": "ViewModelConstructor"
									}
								}
							],
							"parameters": [
								{
									"id": 893,
									"name": "view",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "view",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 892,
									"name": "T"
								}
							}
						}
					]
				},
				{
					"id": 886,
					"name": "isViewModelInstance",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 863,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 887,
							"name": "isViewModelInstance",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if an object is ViewModel"
							},
							"typeParameter": [
								{
									"id": 888,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"id": 943,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"id": 888,
														"name": "T"
													}
												],
												"name": "BaseViewModel"
											},
											{
												"type": "reference",
												"id": 912,
												"typeArguments": [
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"qualifiedName": "Pick",
														"package": "typescript",
														"name": "Pick"
													}
												],
												"name": "FieldDataMapping"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 889,
									"name": "view",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "view",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 888,
									"name": "T"
								}
							}
						}
					]
				},
				{
					"id": 1032,
					"name": "viewModelFactory",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"originalName": "default",
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 1264,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 1033,
							"name": "viewModelFactory",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a ViewModel class with the specified fields.",
								"text": "```js\nconst fields = {\n    userId: new IntegerField({ label: 'User ID' })\n    firstName: new CharField({ label: 'First Name' }),\n    // label is optional; will be generated as 'Last name'\n    lastName: new CharField(),\n};\n// Options are all optional and can be omitted entirely\nconst options = {\n    // Only one of pkFieldName or getImplicitPkField can be defined.\n    // If neither are provided a default field called 'id' will be created.\n    pkFieldName: 'userId',\n    // Multiple names can be specified for compound keys\n    pkFieldName: ['organisationId', 'departmentId']\n    // You can also specify a function to create the primary key\n    getImplicitPkField(model, fields) {\n         if ('EntityId' in fields) {\n             return ['EntityId', fields.EntityId];\n         }\n         // Generate a name base on model, eg. `userId`\n         const name = model.name[0].toLowerCase() + model.name.slice(1);\n         return [`${name}Id`, new NumberField()];\n     },\n     // Optionally can specify a baseClass for this model. When using `augment`\n     // this is automatically set to the class being augmented.\n     baseClass: BaseViewModel,\n};\nclass User extends viewModelFactory(fields, options) {\n    // Optional; default cache is usually sufficient\n    static cache = new MyCustomCache();\n\n    // Used to describe a single user\n    static label = 'User';\n    // User to describe an indeterminate number of users\n    static labelPlural = 'Users';\n}\n```\n"
							},
							"typeParameter": [
								{
									"id": 1034,
									"name": "FieldMappingType",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 900,
										"name": "FieldsMapping"
									}
								},
								{
									"id": 1035,
									"name": "PkFieldNameT",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"typeArguments": [
														{
															"type": "typeOperator",
															"operator": "keyof",
															"target": {
																"type": "reference",
																"id": 1034,
																"name": "FieldMappingType"
															}
														},
														{
															"type": "intrinsic",
															"name": "string"
														}
													],
													"qualifiedName": "Extract",
													"package": "typescript",
													"name": "Extract"
												}
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 1036,
									"name": "fields",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A map of field name to an instance of `Field`\n"
									},
									"type": {
										"type": "reference",
										"id": 1034,
										"name": "FieldMappingType"
									}
								},
								{
									"id": 1037,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1034,
												"name": "FieldMappingType"
											},
											{
												"type": "reference",
												"id": 1035,
												"name": "PkFieldNameT"
											}
										],
										"name": "ViewModelOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 980,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1034,
										"name": "FieldMappingType"
									},
									{
										"type": "reference",
										"id": 1035,
										"name": "PkFieldNameT"
									}
								],
								"name": "ViewModelConstructor"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						943,
						1007,
						920
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						980
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						895,
						916,
						1030,
						918,
						912,
						914,
						906,
						909,
						900,
						904,
						1027,
						899,
						894,
						976,
						1023
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						880,
						890,
						886,
						1032
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1038,
			"name": "fieldUtils",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 1045,
					"name": "ViewModelFieldPaths",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Stores the field paths for a model in a standardised form for use in caching.",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Utils\n"
							}
						]
					},
					"children": [
						{
							"id": 1046,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fieldUtils.ts",
									"line": 74,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1047,
									"name": "new ViewModelFieldPaths",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1048,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"id": 1048,
														"name": "T"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"parameters": [
										{
											"id": 1049,
											"name": "modelClass",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1048,
												"name": "T"
											}
										},
										{
											"id": 1050,
											"name": "flattenedPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1045,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1048,
												"name": "T"
											}
										],
										"name": "ViewModelFieldPaths"
									}
								}
							]
						},
						{
							"id": 1053,
							"name": "fieldPaths",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The expanded paths - any nested fields are represented as an array"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fieldUtils.ts",
									"line": 60,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 906,
									"typeArguments": [
										{
											"type": "reference",
											"id": 1048,
											"name": "T"
										},
										{
											"type": "reference",
											"typeArguments": [
												{
													"type": "reference",
													"id": 1048,
													"name": "T"
												}
											],
											"name": "ExtractRelatedFields"
										}
									],
									"name": "FieldPath"
								}
							}
						},
						{
							"id": 1052,
							"name": "flattenedPath",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The flattened path - any nested fields are joined with '.'"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fieldUtils.ts",
									"line": 56,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1056,
							"name": "key",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "A key representation of this field path that can be used as a cache key"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fieldUtils.ts",
									"line": 72,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1051,
							"name": "modelClass",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fieldUtils.ts",
									"line": 52,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 1048,
								"name": "T"
							}
						},
						{
							"id": 1054,
							"name": "nonRelationFieldNames",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Names of fields that aren't relations"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fieldUtils.ts",
									"line": 64,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1055,
							"name": "relations",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Map of relation field name to the paths for that relation"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fieldUtils.ts",
									"line": 68,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 906,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "any"
												},
												{
													"type": "reference",
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "any"
														}
													],
													"name": "ExtractRelatedFields"
												}
											],
											"name": "FieldPath"
										}
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 1057,
							"name": "isSubset",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fieldUtils.ts",
									"line": 105,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1058,
									"name": "isSubset",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Is the specified `paths` a subset of this?"
									},
									"parameters": [
										{
											"id": 1059,
											"name": "paths",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1045,
												"typeArguments": [
													{
														"type": "reference",
														"id": 1048,
														"name": "T"
													}
												],
												"name": "ViewModelFieldPaths"
											}
										},
										{
											"id": 1060,
											"name": "ignoreNested",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "false"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1046
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1053,
								1052,
								1056,
								1051,
								1054,
								1055
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1057
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fieldUtils.ts",
							"line": 51,
							"character": 13
						}
					],
					"typeParameter": [
						{
							"id": 1061,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 980,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ViewModelConstructor"
							}
						}
					]
				},
				{
					"id": 1044,
					"name": "CACHE_KEY_FIELD_SEPARATOR",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fieldUtils.ts",
							"line": 43,
							"character": 13
						}
					],
					"type": {
						"type": "literal",
						"value": "⁞"
					},
					"defaultValue": "'⁞'"
				},
				{
					"id": 1039,
					"name": "normalizeFields",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fieldUtils.ts",
							"line": 246,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1040,
							"name": "normalizeFields",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Takes an array of field paths for a model class and returns a normalized version in the form of `ViewModelFieldPaths`.",
								"text": "Note that `ViewModelFieldPaths` can be compared with normal equality operators - they are cached internally so a single\ninstance exists for each unique `fieldNames`\n\nNormalization means:\n* Id fields are always included\n* Expands a related field to include all it's subfields\n* If a related field is referenced ensures the related field sourceFieldName is included\n* Sorts field names consistently\n",
								"tags": [
									{
										"tag": "extract-docs",
										"text": ""
									},
									{
										"tag": "menu-group",
										"text": "Utils\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 1041,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 980,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "reference",
												"id": 1041,
												"name": "T"
											}
										],
										"name": "ViewModelConstructor"
									}
								}
							],
							"parameters": [
								{
									"id": 1042,
									"name": "modelClass",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The ViewModel class the fields are from"
									},
									"type": {
										"type": "reference",
										"id": 1041,
										"name": "T"
									}
								},
								{
									"id": 1043,
									"name": "fieldNames",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The array of field paths to normalize\n"
									},
									"type": {
										"type": "reference",
										"id": 909,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1041,
												"name": "T"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 1041,
														"name": "T"
													}
												],
												"name": "ExtractRelatedFields"
											}
										],
										"name": "FieldPaths"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1045,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1041,
										"name": "T"
									}
								],
								"name": "ViewModelFieldPaths"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1045
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1044
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1039
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fieldUtils.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1062,
			"name": "fields/AsyncChoices",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 1146,
					"name": "default",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1063
				},
				{
					"id": 1110,
					"name": "AsyncChoicesInterface",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Interface for asynchronous choices.",
						"text": "A choice is a `value` that identifies the item (eg. an id) and a `label` that\ndescribes the item and is shown to users (eg. the name).\n\nWhen `multiple` is true multiple values can be selected.\n\nTo define async choices two things are required:\n\n1) A function to resolve existing value(s). This is used when viewing existing\n   value(s) and need label(s) to show (eg. when displaying a choice on a detail\n   view or rendering the value selected on a select widget).\n2) A function to list & filter the available  choices. This is used when selecting\n   a value (eg. the options shown in a select widget).\n\nBoth of these functions may need to store state (eg. pagination for a listing)\nor access things from context (eg. read values from a cache). This can be done\nvia two hooks - `useListProps` and `useRetrieveProps`. This functions should be\ncalled from a component or hook that deals with async choices when calling\n`list` and `retrieve` respectively. The return value from the hook is passed to\nthe corresponding function.\n\nFor a default implementation see [AsyncChoices](doc:AsyncChoices)\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Async Choices\n"
							}
						]
					},
					"children": [
						{
							"id": 1111,
							"name": "multiple",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "If true then multiple values can be selected. When this is true\nretrieve() will be passed and return an array rather than a single value."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
									"line": 49,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1125,
							"name": "getChoices",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 1126,
									"name": "getChoices",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Generate the list of choices. This can return an array of single choices or grouped choices.",
										"text": "A grouped choice is a 2 element Array with a label and a list of choices.\n",
										"returns": "Either an array of single choices or grouped choices.\n"
									},
									"parameters": [
										{
											"id": 1127,
											"name": "items",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1141,
													"name": "ItemType"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"id": 1102,
													"typeArguments": [
														{
															"type": "reference",
															"id": 1142,
															"name": "ValueType"
														}
													],
													"name": "Choice"
												},
												{
													"type": "reference",
													"id": 1108,
													"typeArguments": [
														{
															"type": "reference",
															"id": 1142,
															"name": "ValueType"
														}
													],
													"name": "ChoicesGrouped"
												}
											]
										}
									}
								}
							]
						},
						{
							"id": 1128,
							"name": "getLabel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 1129,
									"name": "getLabel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get a label for an item"
									},
									"parameters": [
										{
											"id": 1130,
											"name": "item",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1141,
												"name": "ItemType"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "React.ReactNode",
										"package": "@types/react",
										"name": "ReactNode"
									}
								}
							]
						},
						{
							"id": 1131,
							"name": "getMissingLabel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 1132,
									"name": "getMissingLabel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return label to use when an item can't be found. This can be used by widgets to control\nwhat is rendered when an item for a value cannot be found (eg. when it's deleted or\nwhen it's loading). The exact details of how this is used depend on the widget."
									},
									"parameters": [
										{
											"id": 1133,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1142,
												"name": "ValueType"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "React.ReactNode",
										"package": "@types/react",
										"name": "ReactNode"
									}
								}
							]
						},
						{
							"id": 1134,
							"name": "getValue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 1135,
									"name": "getValue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the value to use for an item. The value should be unique and is what's used when a\nchoice is selected (eg. it's the value that would be saved to a database)."
									},
									"parameters": [
										{
											"id": 1136,
											"name": "item",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1141,
												"name": "ItemType"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1142,
										"name": "ValueType"
									}
								}
							]
						},
						{
							"id": 1115,
							"name": "list",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 1116,
									"name": "list",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Function to resolve a list of choices based on the provided params.",
										"text": "What this function is passed depends on the implementation but when used with\n[useAsyncChoices](doc:useAsyncChoices) it will be passed `query` (the query object eg. to\nfilter results with), `paginator` (the current paginator if any) and `listOptions` (any\nadditional options passed on the `listOptions` prop to `useAsyncChoices`).\nOfficial presto widgets all use `useAsyncChoices` and so will use these parameters.\n"
									},
									"parameters": [
										{
											"id": 1117,
											"name": "params",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1141,
													"name": "ItemType"
												}
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1121,
							"name": "retrieve",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 1122,
									"name": "retrieve",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Function to resolve specific values. This is used to know how to render the label for a value(s).",
										"text": "The first parameter is the value to retrieve (will be an array when `multiple` is true).\n\n`deps` is the value returned by `useRetrieveProps`.\n"
									},
									"parameters": [
										{
											"id": 1123,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 1142,
														"name": "ValueType"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 1142,
															"name": "ValueType"
														}
													}
												]
											}
										},
										{
											"id": 1124,
											"name": "deps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "conditional",
												"checkType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"id": 1142,
															"name": "ValueType"
														},
														{
															"type": "array",
															"elementType": {
																"type": "reference",
																"id": 1142,
																"name": "ValueType"
															}
														}
													]
												},
												"extendsType": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"id": 1142,
														"name": "ValueType"
													}
												},
												"trueType": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"id": 1141,
														"name": "ItemType"
													}
												},
												"falseType": {
													"type": "reference",
													"id": 1141,
													"name": "ItemType"
												}
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1112,
							"name": "useListProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 1113,
									"name": "useListProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Hook that returns any extra props to pass through to `list` in components/hooks that\nconsume this (eg. [useAsyncChoices](doc:useAsyncChoices)). This is useful to\nstore state for things like pagination.",
										"text": "What this function is passed depends on the implementation but when used with\n[useAsyncChoices](doc:useAsyncChoices) it will be `query` (the query object eg. to\nfilter results with) and `listOptions` (any additional options passed on the `listOptions`\nprop to `useAsyncChoices`).\nOfficial presto widgets all use `useAsyncChoices` and so will use these parameters.\n"
									},
									"parameters": [
										{
											"id": 1114,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 1137,
							"name": "useResolveItems",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 1138,
									"name": "useResolveItems",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Resolve the specific instance of an item to use. By default this should just return `item`\nbut can be used to resolve a specific instance of a class from a cache for example."
									},
									"typeParameter": [
										{
											"id": 1139,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 1140,
											"name": "item",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1139,
												"name": "T"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1139,
										"name": "T"
									}
								}
							]
						},
						{
							"id": 1118,
							"name": "useRetrieveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 1119,
									"name": "useRetrieveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Hook that returns props to pass through to `retrieve` in components/hooks that consume this (eg. [useAsyncChoices](doc:useAsyncChoices).\nThis is useful for things like hooking into an existing cache (eg. [useViewModelCache](doc:useViewModelCache)).\nThe value returned here is passed as the second parameter to `retrieve`. In addition the `existingValues` key is\npassed through to `useAsyncValue` as the list of items it can resolve existing values from.",
										"text": "What this function is passed depends on the implementation but when used with\n[useAsyncChoices](doc:useAsyncChoices) it will be passed `id` if there's a current value\nand it's not an array, `ids` if there's a current value and it is an array, `existingValues` which is\nthe values returned by `list` (may be null if `list` not yet called) and `retrieveOptions`\n(any additional options passed on the `retrieveOptions` prop to `useAsyncChoices`).\nOfficial presto widgets all use `useAsyncChoices` and so will use these parameters.\n"
									},
									"parameters": [
										{
											"id": 1120,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1111
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1125,
								1128,
								1131,
								1134,
								1115,
								1121,
								1112,
								1137,
								1118
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
							"line": 44,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 1141,
							"name": "ItemType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1142,
							"name": "ValueType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"id": 1063,
							"name": "AsyncChoices"
						}
					]
				},
				{
					"id": 1102,
					"name": "Choice",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "A single choice"
					},
					"children": [
						{
							"id": 1104,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
									"line": 8,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "React.ReactNode",
								"package": "@types/react",
								"name": "ReactNode"
							}
						},
						{
							"id": 1103,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
									"line": 7,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 1105,
								"name": "T"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1104,
								1103
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
							"line": 6,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 1105,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"indexSignature": {
						"id": 1106,
						"name": "__index",
						"kind": 8192,
						"kindString": "Index signature",
						"flags": {},
						"parameters": [
							{
								"id": 1107,
								"name": "x",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "any"
						}
					}
				},
				{
					"id": 1143,
					"name": "AsyncChoicesOptions",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "expand-properties",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
							"line": 137,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 1144,
							"name": "ItemType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1145,
							"name": "ValueType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1110,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1144,
												"name": "ItemType"
											},
											{
												"type": "reference",
												"id": 1145,
												"name": "ValueType"
											}
										],
										"name": "AsyncChoicesInterface"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "getChoices"
											},
											{
												"type": "literal",
												"value": "useListProps"
											},
											{
												"type": "literal",
												"value": "useRetrieveProps"
											},
											{
												"type": "literal",
												"value": "getMissingLabel"
											},
											{
												"type": "literal",
												"value": "getLabel"
											},
											{
												"type": "literal",
												"value": "getValue"
											},
											{
												"type": "literal",
												"value": "useResolveItems"
											},
											{
												"type": "literal",
												"value": "multiple"
											}
										]
									}
								],
								"qualifiedName": "Omit",
								"package": "typescript",
								"name": "Omit"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1110,
												"typeArguments": [
													{
														"type": "reference",
														"id": 1144,
														"name": "ItemType"
													},
													{
														"type": "reference",
														"id": 1145,
														"name": "ValueType"
													}
												],
												"name": "AsyncChoicesInterface"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "getChoices"
													},
													{
														"type": "literal",
														"value": "useListProps"
													},
													{
														"type": "literal",
														"value": "useRetrieveProps"
													},
													{
														"type": "literal",
														"value": "getMissingLabel"
													},
													{
														"type": "literal",
														"value": "getLabel"
													},
													{
														"type": "literal",
														"value": "getValue"
													},
													{
														"type": "literal",
														"value": "useResolveItems"
													},
													{
														"type": "literal",
														"value": "multiple"
													}
												]
											}
										],
										"qualifiedName": "Pick",
										"package": "typescript",
										"name": "Pick"
									}
								],
								"qualifiedName": "Partial",
								"package": "typescript",
								"name": "Partial"
							}
						]
					}
				},
				{
					"id": 1108,
					"name": "ChoicesGrouped",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Grouped choices - a label for the grouping and an array of choices for that label"
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
							"line": 14,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 1109,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1102,
									"typeArguments": [
										{
											"type": "reference",
											"id": 1109,
											"name": "T"
										}
									],
									"name": "Choice"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						1146
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1110,
						1102
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						1143,
						1108
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1147,
			"name": "fields/BooleanField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 1148,
					"name": "BooleanField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Field for Boolean type values. Null count as False for this field.",
						"text": "Follows standard javascript Truthy and Falsy definition.\n\nSee also: [NullableBooleanField](doc:NullableBooleanField).\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 1150,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1151,
									"name": "new BooleanField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1152,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1809,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "FieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 1148,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2498,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2497,
								"name": "default.constructor"
							}
						},
						{
							"id": 1156,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2503,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 1157,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2504,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 1174,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1175,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1176,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "boolean"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2521,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 1171,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1110,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2518,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 1166,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2513,
								"name": "default.blank"
							}
						},
						{
							"id": 1167,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2514,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 1170,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2517,
								"name": "default.choices"
							}
						},
						{
							"id": 1169,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2516,
								"name": "default.helpText"
							}
						},
						{
							"id": 1168,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2515,
								"name": "default.label"
							}
						},
						{
							"id": 1172,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2519,
								"name": "default.readOnly"
							}
						},
						{
							"id": 1173,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2520,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 1149,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/BooleanField.ts",
									"line": 14,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'BooleanField'",
							"overwrites": {
								"type": "reference",
								"id": 2496,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 1201,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1202,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 976,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NullableBooleanField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2548,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 1187,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 1188,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1881,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NullableBooleanField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2534,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 1197,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1198,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NullableBooleanField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2544,
								"name": "default.isBound"
							}
						},
						{
							"id": 1158,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1159,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 980,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NullableBooleanField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 1160,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1161,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NullableBooleanField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2505,
								"name": "default.model"
							}
						},
						{
							"id": 1162,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1163,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NullableBooleanField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 1164,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1165,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NullableBooleanField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2509,
								"name": "default.name"
							}
						},
						{
							"id": 1199,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1200,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NullableBooleanField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2546,
								"name": "default.value"
							}
						},
						{
							"id": 1195,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1196,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1877,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2543,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2542,
								"name": "default.clone"
							}
						},
						{
							"id": 1203,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1204,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 1205,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2551,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2550,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 1177,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1178,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 1179,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2525,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2524,
								"name": "default.format"
							}
						},
						{
							"id": 1191,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1192,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 1193,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1194,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2539,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2538,
								"name": "default.isEqual"
							}
						},
						{
							"id": 1180,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1181,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 1182,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2528,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2527,
								"name": "default.normalize"
							}
						},
						{
							"id": 1153,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/BooleanField.ts",
									"line": 15,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1154,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 1155,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"overwrites": {
										"type": "reference",
										"id": 2501,
										"name": "default.parse"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 2500,
								"name": "default.parse"
							}
						},
						{
							"id": 1183,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1184,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 1185,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1186,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2531,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2530,
								"name": "default.toJS"
							}
						},
						{
							"id": 1189,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1190,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2537,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2536,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1150
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1156,
								1157,
								1174,
								1171,
								1166,
								1167,
								1170,
								1169,
								1168,
								1172,
								1173,
								1149
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								1201,
								1187,
								1197,
								1158,
								1162,
								1199
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1195,
								1203,
								1177,
								1191,
								1180,
								1153,
								1183,
								1189
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/BooleanField.ts",
							"line": 13,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2495,
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1148
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/BooleanField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1206,
			"name": "fields/CharField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 1207,
					"name": "CharField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Base class for string fields",
						"text": "Other char fields (EmailField, URLField...) will extend this.\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 1209,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 20,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1210,
									"name": "new CharField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1211,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CharFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 1207,
										"name": "default"
									},
									"overwrites": {
										"type": "reference",
										"id": 1880,
										"name": "default.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1879,
								"name": "default.constructor"
							}
						},
						{
							"id": 1213,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1885,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 1214,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1886,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 1231,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1232,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1233,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1905,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 1228,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1110,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1902,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 1223,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1897,
								"name": "default.blank"
							}
						},
						{
							"id": 1224,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1898,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 1227,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1901,
								"name": "default.choices"
							}
						},
						{
							"id": 1226,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1900,
								"name": "default.helpText"
							}
						},
						{
							"id": 1225,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1899,
								"name": "default.label"
							}
						},
						{
							"id": 1212,
							"name": "maxLength",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 18,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1229,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1903,
								"name": "default.readOnly"
							}
						},
						{
							"id": 1230,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1904,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 1208,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 17,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'CharField'",
							"overwrites": {
								"type": "reference",
								"id": 1878,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 1261,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1262,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 976,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1935,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 1247,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 1248,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1881,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1921,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 1257,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1258,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1931,
								"name": "default.isBound"
							}
						},
						{
							"id": 1215,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1216,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 980,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 1217,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1218,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1888,
								"name": "default.model"
							}
						},
						{
							"id": 1219,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1220,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 1221,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1222,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1893,
								"name": "default.name"
							}
						},
						{
							"id": 1259,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1260,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1933,
								"name": "default.value"
							}
						},
						{
							"id": 1255,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1256,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1877,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1930,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1929,
								"name": "default.clone"
							}
						},
						{
							"id": 1263,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1264,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 1265,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1938,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1937,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 1234,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1235,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 1236,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1909,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1908,
								"name": "default.format"
							}
						},
						{
							"id": 1251,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1252,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 1253,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1254,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1926,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1925,
								"name": "default.isEqual"
							}
						},
						{
							"id": 1240,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1241,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 1242,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1915,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1914,
								"name": "default.normalize"
							}
						},
						{
							"id": 1237,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1238,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 1239,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1912,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1911,
								"name": "default.parse"
							}
						},
						{
							"id": 1243,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1244,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 1245,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1246,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1918,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1917,
								"name": "default.toJS"
							}
						},
						{
							"id": 1249,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1250,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1924,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1923,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1209
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1213,
								1214,
								1231,
								1228,
								1223,
								1224,
								1227,
								1226,
								1225,
								1212,
								1229,
								1230,
								1208
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								1261,
								1247,
								1257,
								1215,
								1219,
								1259
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1255,
								1263,
								1234,
								1251,
								1240,
								1237,
								1243,
								1249
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
							"line": 16,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1877,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "string"
								}
							],
							"name": "default"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 1689,
							"name": "DurationField"
						},
						{
							"type": "reference",
							"id": 1749,
							"name": "EmailField"
						},
						{
							"type": "reference",
							"id": 2124,
							"name": "IPAddressField"
						},
						{
							"type": "reference",
							"id": 2368,
							"name": "JsonField"
						},
						{
							"type": "reference",
							"id": 2624,
							"name": "PasswordField"
						},
						{
							"type": "reference",
							"id": 2998,
							"name": "SlugField"
						},
						{
							"type": "reference",
							"id": 3058,
							"name": "TextField"
						},
						{
							"type": "reference",
							"id": 3177,
							"name": "URLField"
						},
						{
							"type": "reference",
							"id": 3237,
							"name": "UUIDField"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1207
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1266,
			"name": "fields/CurrencyField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 1267,
					"name": "CurrencyField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Currency Field to store currency values.",
						"text": "Extends DecimalField for precision, TODO - should store additional info on currency types (eg, USD, JPY).\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 1269,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1270,
									"name": "new CurrencyField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1271,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DecimalFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 1267,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1570,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1569,
								"name": "default.constructor"
							}
						},
						{
							"id": 1278,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1578,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 1279,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1579,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 1296,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1297,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1298,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1596,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 1293,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1110,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1593,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 1288,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1588,
								"name": "default.blank"
							}
						},
						{
							"id": 1289,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1589,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 1292,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1592,
								"name": "default.choices"
							}
						},
						{
							"id": 1272,
							"name": "decimalPlaces",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalField.ts",
									"line": 24,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1572,
								"name": "default.decimalPlaces"
							}
						},
						{
							"id": 1291,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1591,
								"name": "default.helpText"
							}
						},
						{
							"id": 1290,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1590,
								"name": "default.label"
							}
						},
						{
							"id": 1277,
							"name": "maxValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
									"line": 25,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1577,
								"name": "default.maxValue"
							}
						},
						{
							"id": 1276,
							"name": "minValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
									"line": 24,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1576,
								"name": "default.minValue"
							}
						},
						{
							"id": 1294,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1594,
								"name": "default.readOnly"
							}
						},
						{
							"id": 1295,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1595,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 1268,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CurrencyField.ts",
									"line": 12,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'CurrencyField'",
							"overwrites": {
								"type": "reference",
								"id": 1568,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 1323,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1324,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 976,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DecimalField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1623,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 1309,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 1310,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1881,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DecimalField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1609,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 1319,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1320,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DecimalField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1619,
								"name": "default.isBound"
							}
						},
						{
							"id": 1280,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1281,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 980,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DecimalField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 1282,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1283,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DecimalField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1580,
								"name": "default.model"
							}
						},
						{
							"id": 1284,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1285,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DecimalField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 1286,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1287,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DecimalField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1584,
								"name": "default.name"
							}
						},
						{
							"id": 1321,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1322,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DecimalField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1621,
								"name": "default.value"
							}
						},
						{
							"id": 1317,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1318,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1877,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1618,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1617,
								"name": "default.clone"
							}
						},
						{
							"id": 1325,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1326,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 1327,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1626,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1625,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 1299,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1300,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 1301,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1600,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1599,
								"name": "default.format"
							}
						},
						{
							"id": 1313,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1314,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 1315,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1316,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1614,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1613,
								"name": "default.isEqual"
							}
						},
						{
							"id": 1302,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1303,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 1304,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1603,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1602,
								"name": "default.normalize"
							}
						},
						{
							"id": 1273,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalField.ts",
									"line": 41,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1274,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 1275,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1574,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1573,
								"name": "default.parse"
							}
						},
						{
							"id": 1305,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1306,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 1307,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1308,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1606,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1605,
								"name": "default.toJS"
							}
						},
						{
							"id": 1311,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1312,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1612,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1611,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1269
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1278,
								1279,
								1296,
								1293,
								1288,
								1289,
								1292,
								1272,
								1291,
								1290,
								1277,
								1276,
								1294,
								1295,
								1268
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								1323,
								1309,
								1319,
								1280,
								1284,
								1321
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1317,
								1325,
								1299,
								1313,
								1302,
								1273,
								1305,
								1311
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/CurrencyField.ts",
							"line": 11,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1567,
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1267
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/CurrencyField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1328,
			"name": "fields/DateField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 1329,
					"name": "DateField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"originalName": "default",
					"children": [
						{
							"id": 1331,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1332,
									"name": "new DateField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1333,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1809,
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "Date",
														"package": "typescript",
														"name": "Date"
													},
													{
														"type": "reference",
														"qualifiedName": "Date",
														"package": "typescript",
														"name": "Date"
													}
												],
												"name": "FieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 1329,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1880,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1879,
								"name": "default.constructor"
							}
						},
						{
							"id": 1340,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Date",
								"package": "typescript",
								"name": "Date"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1885,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 1341,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1886,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 1358,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1359,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1360,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"qualifiedName": "Date",
																"package": "typescript",
																"name": "Date"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"qualifiedName": "Date",
																				"package": "typescript",
																				"name": "Date"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1905,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 1355,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1110,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1902,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 1350,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1897,
								"name": "default.blank"
							}
						},
						{
							"id": 1351,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1898,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 1354,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1901,
								"name": "default.choices"
							}
						},
						{
							"id": 1353,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1900,
								"name": "default.helpText"
							}
						},
						{
							"id": 1352,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1899,
								"name": "default.label"
							}
						},
						{
							"id": 1356,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1903,
								"name": "default.readOnly"
							}
						},
						{
							"id": 1357,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1904,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 1330,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateField.ts",
									"line": 17,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DateField'",
							"overwrites": {
								"type": "reference",
								"id": 1878,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 1382,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1383,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 976,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1935,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 1368,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 1369,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1881,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1921,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 1378,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1379,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1931,
								"name": "default.isBound"
							}
						},
						{
							"id": 1342,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1343,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 980,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 1344,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1345,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1888,
								"name": "default.model"
							}
						},
						{
							"id": 1346,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1347,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 1348,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1349,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1893,
								"name": "default.name"
							}
						},
						{
							"id": 1380,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1381,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1933,
								"name": "default.value"
							}
						},
						{
							"id": 1376,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1377,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1877,
										"typeArguments": [
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1930,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1929,
								"name": "default.clone"
							}
						},
						{
							"id": 1384,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1385,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 1386,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1938,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1937,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 1361,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1362,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 1363,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1909,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1908,
								"name": "default.format"
							}
						},
						{
							"id": 1372,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1373,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 1374,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										},
										{
											"id": 1375,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1926,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1925,
								"name": "default.isEqual"
							}
						},
						{
							"id": 1337,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateField.ts",
									"line": 25,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1338,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 1339,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"qualifiedName": "Date",
														"package": "typescript",
														"name": "Date"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 1915,
										"name": "default.normalize"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1914,
								"name": "default.normalize"
							}
						},
						{
							"id": 1334,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateField.ts",
									"line": 18,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1335,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 1336,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 1912,
										"name": "default.parse"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1911,
								"name": "default.parse"
							}
						},
						{
							"id": 1364,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1365,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 1366,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1367,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1918,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1917,
								"name": "default.toJS"
							}
						},
						{
							"id": 1370,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1371,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1924,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1923,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1331
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1340,
								1341,
								1358,
								1355,
								1350,
								1351,
								1354,
								1353,
								1352,
								1356,
								1357,
								1330
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								1382,
								1368,
								1378,
								1342,
								1346,
								1380
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1376,
								1384,
								1361,
								1372,
								1337,
								1334,
								1364,
								1370
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateField.ts",
							"line": 16,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1877,
							"typeArguments": [
								{
									"type": "reference",
									"qualifiedName": "Date",
									"package": "typescript",
									"name": "Date"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "reference",
											"qualifiedName": "Date",
											"package": "typescript",
											"name": "Date"
										}
									]
								}
							],
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1329
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1387,
			"name": "fields/DateRangeField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 1388,
					"name": "DateRangeField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 1390,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1391,
									"name": "new DateRangeField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1392,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "Date",
														"package": "typescript",
														"name": "Date"
													}
												],
												"name": "RangeFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 1388,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2687,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2686,
								"name": "default.constructor"
							}
						},
						{
							"id": 1394,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Date",
								"package": "typescript",
								"name": "Date"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2691,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 1395,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Date",
								"package": "typescript",
								"name": "Date"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2692,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 1412,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1413,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1414,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"qualifiedName": "Date",
																"package": "typescript",
																"name": "Date"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"qualifiedName": "Date",
																				"package": "typescript",
																				"name": "Date"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2709,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 1409,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1110,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2706,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 1404,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2701,
								"name": "default.blank"
							}
						},
						{
							"id": 1405,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2702,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 1408,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2705,
								"name": "default.choices"
							}
						},
						{
							"id": 1407,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2704,
								"name": "default.helpText"
							}
						},
						{
							"id": 1406,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2703,
								"name": "default.label"
							}
						},
						{
							"id": 1410,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2707,
								"name": "default.readOnly"
							}
						},
						{
							"id": 1393,
							"name": "separator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
									"line": 17,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2690,
								"name": "default.separator"
							}
						},
						{
							"id": 1411,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2708,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 1389,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateRangeField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DateRangeField'",
							"overwrites": {
								"type": "reference",
								"id": 2685,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 1442,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1443,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 976,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2739,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 1428,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 1429,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1881,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2725,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 1438,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1439,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2735,
								"name": "default.isBound"
							}
						},
						{
							"id": 1396,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1397,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 980,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 1398,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1399,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2693,
								"name": "default.model"
							}
						},
						{
							"id": 1400,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1401,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 1402,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1403,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2697,
								"name": "default.name"
							}
						},
						{
							"id": 1440,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1441,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2737,
								"name": "default.value"
							}
						},
						{
							"id": 1436,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1437,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1877,
										"typeArguments": [
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2734,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2733,
								"name": "default.clone"
							}
						},
						{
							"id": 1444,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1445,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 1446,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2742,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2741,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 1415,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1416,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 1417,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2713,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2712,
								"name": "default.format"
							}
						},
						{
							"id": 1432,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1433,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 1434,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										},
										{
											"id": 1435,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2730,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2729,
								"name": "default.isEqual"
							}
						},
						{
							"id": 1421,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1422,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 1423,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2719,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2718,
								"name": "default.normalize"
							}
						},
						{
							"id": 1418,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1419,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 1420,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"qualifiedName": "Date",
														"package": "typescript",
														"name": "Date"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2716,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2715,
								"name": "default.parse"
							}
						},
						{
							"id": 1424,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1425,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 1426,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1427,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2722,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2721,
								"name": "default.toJS"
							}
						},
						{
							"id": 1430,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1431,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2728,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2727,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1390
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1394,
								1395,
								1412,
								1409,
								1404,
								1405,
								1408,
								1407,
								1406,
								1410,
								1393,
								1411,
								1389
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								1442,
								1428,
								1438,
								1396,
								1400,
								1440
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1436,
								1444,
								1415,
								1432,
								1421,
								1418,
								1424,
								1430
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateRangeField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2684,
							"typeArguments": [
								{
									"type": "reference",
									"qualifiedName": "Date",
									"package": "typescript",
									"name": "Date"
								}
							],
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1388
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateRangeField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1447,
			"name": "fields/DateTimeField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 1448,
					"name": "DateTimeField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"originalName": "default",
					"children": [
						{
							"id": 1450,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1451,
									"name": "new DateTimeField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1452,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1809,
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "Date",
														"package": "typescript",
														"name": "Date"
													},
													{
														"type": "reference",
														"qualifiedName": "Date",
														"package": "typescript",
														"name": "Date"
													}
												],
												"name": "FieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 1448,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1880,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1879,
								"name": "default.constructor"
							}
						},
						{
							"id": 1459,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Date",
								"package": "typescript",
								"name": "Date"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1885,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 1460,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1886,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 1477,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1478,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1479,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"qualifiedName": "Date",
																"package": "typescript",
																"name": "Date"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"qualifiedName": "Date",
																				"package": "typescript",
																				"name": "Date"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1905,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 1474,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1110,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1902,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 1469,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1897,
								"name": "default.blank"
							}
						},
						{
							"id": 1470,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1898,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 1473,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1901,
								"name": "default.choices"
							}
						},
						{
							"id": 1472,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1900,
								"name": "default.helpText"
							}
						},
						{
							"id": 1471,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1899,
								"name": "default.label"
							}
						},
						{
							"id": 1475,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1903,
								"name": "default.readOnly"
							}
						},
						{
							"id": 1476,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1904,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 1449,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateTimeField.ts",
									"line": 15,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DateTimeField'",
							"overwrites": {
								"type": "reference",
								"id": 1878,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 1501,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1502,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 976,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1935,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 1487,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 1488,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1881,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1921,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 1497,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1498,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1931,
								"name": "default.isBound"
							}
						},
						{
							"id": 1461,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1462,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 980,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 1463,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1464,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1888,
								"name": "default.model"
							}
						},
						{
							"id": 1465,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1466,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 1467,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1468,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1893,
								"name": "default.name"
							}
						},
						{
							"id": 1499,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1500,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1933,
								"name": "default.value"
							}
						},
						{
							"id": 1495,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1496,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1877,
										"typeArguments": [
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1930,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1929,
								"name": "default.clone"
							}
						},
						{
							"id": 1503,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1504,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 1505,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1938,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1937,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 1480,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1481,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 1482,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1909,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1908,
								"name": "default.format"
							}
						},
						{
							"id": 1491,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1492,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 1493,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										},
										{
											"id": 1494,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1926,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1925,
								"name": "default.isEqual"
							}
						},
						{
							"id": 1456,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateTimeField.ts",
									"line": 22,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1457,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 1458,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"qualifiedName": "Date",
														"package": "typescript",
														"name": "Date"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 1915,
										"name": "default.normalize"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1914,
								"name": "default.normalize"
							}
						},
						{
							"id": 1453,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateTimeField.ts",
									"line": 16,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1454,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 1455,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 1912,
										"name": "default.parse"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1911,
								"name": "default.parse"
							}
						},
						{
							"id": 1483,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1484,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 1485,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1486,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1918,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1917,
								"name": "default.toJS"
							}
						},
						{
							"id": 1489,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1490,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1924,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1923,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1450
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1459,
								1460,
								1477,
								1474,
								1469,
								1470,
								1473,
								1472,
								1471,
								1475,
								1476,
								1449
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								1501,
								1487,
								1497,
								1461,
								1465,
								1499
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1495,
								1503,
								1480,
								1491,
								1456,
								1453,
								1483,
								1489
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateTimeField.ts",
							"line": 14,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1877,
							"typeArguments": [
								{
									"type": "reference",
									"qualifiedName": "Date",
									"package": "typescript",
									"name": "Date"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "reference",
											"qualifiedName": "Date",
											"package": "typescript",
											"name": "Date"
										}
									]
								}
							],
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1448
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateTimeField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1506,
			"name": "fields/DateTimeRangeField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 1507,
					"name": "DateTimeRangeField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 1509,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1510,
									"name": "new DateTimeRangeField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1511,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "Date",
														"package": "typescript",
														"name": "Date"
													}
												],
												"name": "RangeFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 1507,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2687,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2686,
								"name": "default.constructor"
							}
						},
						{
							"id": 1513,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Date",
								"package": "typescript",
								"name": "Date"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2691,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 1514,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Date",
								"package": "typescript",
								"name": "Date"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2692,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 1531,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1532,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1533,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"qualifiedName": "Date",
																"package": "typescript",
																"name": "Date"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"qualifiedName": "Date",
																				"package": "typescript",
																				"name": "Date"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2709,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 1528,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1110,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2706,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 1523,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2701,
								"name": "default.blank"
							}
						},
						{
							"id": 1524,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2702,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 1527,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2705,
								"name": "default.choices"
							}
						},
						{
							"id": 1526,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2704,
								"name": "default.helpText"
							}
						},
						{
							"id": 1525,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2703,
								"name": "default.label"
							}
						},
						{
							"id": 1529,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2707,
								"name": "default.readOnly"
							}
						},
						{
							"id": 1512,
							"name": "separator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
									"line": 17,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2690,
								"name": "default.separator"
							}
						},
						{
							"id": 1530,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2708,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 1508,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateTimeRangeField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DateTimeRangeField'",
							"overwrites": {
								"type": "reference",
								"id": 2685,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 1561,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1562,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 976,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2739,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 1547,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 1548,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1881,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2725,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 1557,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1558,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2735,
								"name": "default.isBound"
							}
						},
						{
							"id": 1515,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1516,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 980,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 1517,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1518,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2693,
								"name": "default.model"
							}
						},
						{
							"id": 1519,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1520,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 1521,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1522,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2697,
								"name": "default.name"
							}
						},
						{
							"id": 1559,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1560,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2737,
								"name": "default.value"
							}
						},
						{
							"id": 1555,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1556,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1877,
										"typeArguments": [
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2734,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2733,
								"name": "default.clone"
							}
						},
						{
							"id": 1563,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1564,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 1565,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2742,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2741,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 1534,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1535,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 1536,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2713,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2712,
								"name": "default.format"
							}
						},
						{
							"id": 1551,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1552,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 1553,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										},
										{
											"id": 1554,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2730,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2729,
								"name": "default.isEqual"
							}
						},
						{
							"id": 1540,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1541,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 1542,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2719,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2718,
								"name": "default.normalize"
							}
						},
						{
							"id": 1537,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1538,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 1539,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"qualifiedName": "Date",
														"package": "typescript",
														"name": "Date"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2716,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2715,
								"name": "default.parse"
							}
						},
						{
							"id": 1543,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1544,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 1545,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1546,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2722,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2721,
								"name": "default.toJS"
							}
						},
						{
							"id": 1549,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1550,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2728,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2727,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1509
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1513,
								1514,
								1531,
								1528,
								1523,
								1524,
								1527,
								1526,
								1525,
								1529,
								1512,
								1530,
								1508
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								1561,
								1547,
								1557,
								1515,
								1519,
								1559
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1555,
								1563,
								1534,
								1551,
								1540,
								1537,
								1543,
								1549
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateTimeRangeField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2684,
							"typeArguments": [
								{
									"type": "reference",
									"qualifiedName": "Date",
									"package": "typescript",
									"name": "Date"
								}
							],
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1507
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateTimeRangeField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1566,
			"name": "fields/DecimalField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 1567,
					"name": "DecimalField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Decimal Field. Stores decimal value as a string.",
						"text": "To support decimal operations consider a custom implementation that uses a decimal library eg. decimal.js\n\nAlso used by CurrencyField.\n\nSee also: [FloatField](doc:FloatField)\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 1569,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalField.ts",
									"line": 26,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1570,
									"name": "new DecimalField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1571,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DecimalFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 1567,
										"name": "default"
									},
									"overwrites": {
										"type": "reference",
										"id": 2562,
										"name": "default.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 2561,
								"name": "default.constructor"
							}
						},
						{
							"id": 1578,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2568,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 1579,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2569,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 1596,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1597,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1598,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2586,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 1593,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1110,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2583,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 1588,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2578,
								"name": "default.blank"
							}
						},
						{
							"id": 1589,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2579,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 1592,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2582,
								"name": "default.choices"
							}
						},
						{
							"id": 1572,
							"name": "decimalPlaces",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalField.ts",
									"line": 24,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1591,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2581,
								"name": "default.helpText"
							}
						},
						{
							"id": 1590,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2580,
								"name": "default.label"
							}
						},
						{
							"id": 1577,
							"name": "maxValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
									"line": 25,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2567,
								"name": "default.maxValue"
							}
						},
						{
							"id": 1576,
							"name": "minValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
									"line": 24,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2566,
								"name": "default.minValue"
							}
						},
						{
							"id": 1594,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2584,
								"name": "default.readOnly"
							}
						},
						{
							"id": 1595,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2585,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 1568,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalField.ts",
									"line": 23,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DecimalField'",
							"overwrites": {
								"type": "reference",
								"id": 2560,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 1623,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1624,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 976,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2616,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 1609,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 1610,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1881,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2602,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 1619,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1620,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2612,
								"name": "default.isBound"
							}
						},
						{
							"id": 1580,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1581,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 980,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 1582,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1583,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2570,
								"name": "default.model"
							}
						},
						{
							"id": 1584,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1585,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 1586,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1587,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2574,
								"name": "default.name"
							}
						},
						{
							"id": 1621,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1622,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2614,
								"name": "default.value"
							}
						},
						{
							"id": 1617,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1618,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1877,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2611,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2610,
								"name": "default.clone"
							}
						},
						{
							"id": 1625,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1626,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 1627,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2619,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2618,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 1599,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1600,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 1601,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2590,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2589,
								"name": "default.format"
							}
						},
						{
							"id": 1613,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1614,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 1615,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1616,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2607,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2606,
								"name": "default.isEqual"
							}
						},
						{
							"id": 1602,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1603,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 1604,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2596,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2595,
								"name": "default.normalize"
							}
						},
						{
							"id": 1573,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalField.ts",
									"line": 41,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1574,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 1575,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 2593,
										"name": "default.parse"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 2592,
								"name": "default.parse"
							}
						},
						{
							"id": 1605,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1606,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 1607,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1608,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2599,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2598,
								"name": "default.toJS"
							}
						},
						{
							"id": 1611,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1612,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2605,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2604,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1569
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1578,
								1579,
								1596,
								1593,
								1588,
								1589,
								1592,
								1572,
								1591,
								1590,
								1577,
								1576,
								1594,
								1595,
								1568
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								1623,
								1609,
								1619,
								1580,
								1584,
								1621
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1617,
								1625,
								1599,
								1613,
								1602,
								1573,
								1605,
								1611
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalField.ts",
							"line": 22,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2559,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "string"
								}
							],
							"name": "default"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 1267,
							"name": "CurrencyField"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1567
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1628,
			"name": "fields/DecimalRangeField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 1629,
					"name": "DecimalRangeField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 1631,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1632,
									"name": "new DecimalRangeField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1633,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "RangeFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 1629,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2687,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2686,
								"name": "default.constructor"
							}
						},
						{
							"id": 1635,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2691,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 1636,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2692,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 1653,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1654,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1655,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2709,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 1650,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1110,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2706,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 1645,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2701,
								"name": "default.blank"
							}
						},
						{
							"id": 1646,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2702,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 1649,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2705,
								"name": "default.choices"
							}
						},
						{
							"id": 1648,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2704,
								"name": "default.helpText"
							}
						},
						{
							"id": 1647,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2703,
								"name": "default.label"
							}
						},
						{
							"id": 1651,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2707,
								"name": "default.readOnly"
							}
						},
						{
							"id": 1634,
							"name": "separator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
									"line": 17,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2690,
								"name": "default.separator"
							}
						},
						{
							"id": 1652,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2708,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 1630,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalRangeField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DecimalRangeField'",
							"overwrites": {
								"type": "reference",
								"id": 2685,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 1683,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1684,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 976,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2739,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 1669,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 1670,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1881,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2725,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 1679,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1680,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2735,
								"name": "default.isBound"
							}
						},
						{
							"id": 1637,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1638,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 980,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 1639,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1640,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2693,
								"name": "default.model"
							}
						},
						{
							"id": 1641,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1642,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 1643,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1644,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2697,
								"name": "default.name"
							}
						},
						{
							"id": 1681,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1682,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2737,
								"name": "default.value"
							}
						},
						{
							"id": 1677,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1678,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1877,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2734,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2733,
								"name": "default.clone"
							}
						},
						{
							"id": 1685,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1686,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 1687,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2742,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2741,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 1656,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1657,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 1658,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2713,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2712,
								"name": "default.format"
							}
						},
						{
							"id": 1673,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1674,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 1675,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1676,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2730,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2729,
								"name": "default.isEqual"
							}
						},
						{
							"id": 1662,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1663,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 1664,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2719,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2718,
								"name": "default.normalize"
							}
						},
						{
							"id": 1659,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1660,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 1661,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2716,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2715,
								"name": "default.parse"
							}
						},
						{
							"id": 1665,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1666,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 1667,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1668,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2722,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2721,
								"name": "default.toJS"
							}
						},
						{
							"id": 1671,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1672,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2728,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2727,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1631
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1635,
								1636,
								1653,
								1650,
								1645,
								1646,
								1649,
								1648,
								1647,
								1651,
								1634,
								1652,
								1630
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								1683,
								1669,
								1679,
								1637,
								1641,
								1681
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1677,
								1685,
								1656,
								1673,
								1662,
								1659,
								1665,
								1671
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalRangeField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2684,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "string"
								}
							],
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1629
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalRangeField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1688,
			"name": "fields/DurationField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 1689,
					"name": "DurationField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Duration Field - represents a duration with two components: hour, minute such as 10h5m.",
						"text": "Duration longer than 23h59m is not currently supported.\n\nBackend of choice need to be capable of storing a duration in a similar manner.\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 1691,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1692,
									"name": "new DurationField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1693,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CharFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 1689,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1210,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1209,
								"name": "default.constructor"
							}
						},
						{
							"id": 1695,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1213,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 1696,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1214,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 1713,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1714,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1715,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1231,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 1710,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1110,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1228,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 1705,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1223,
								"name": "default.blank"
							}
						},
						{
							"id": 1706,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1224,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 1709,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1227,
								"name": "default.choices"
							}
						},
						{
							"id": 1708,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1226,
								"name": "default.helpText"
							}
						},
						{
							"id": 1707,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1225,
								"name": "default.label"
							}
						},
						{
							"id": 1694,
							"name": "maxLength",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 18,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1212,
								"name": "default.maxLength"
							}
						},
						{
							"id": 1711,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1229,
								"name": "default.readOnly"
							}
						},
						{
							"id": 1712,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1230,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 1690,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DurationField.ts",
									"line": 14,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DurationField'",
							"overwrites": {
								"type": "reference",
								"id": 1208,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 1743,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1744,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 976,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1261,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 1729,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 1730,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1881,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1247,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 1739,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1740,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1257,
								"name": "default.isBound"
							}
						},
						{
							"id": 1697,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1698,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 980,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 1699,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1700,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1215,
								"name": "default.model"
							}
						},
						{
							"id": 1701,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1702,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 1703,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1704,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1219,
								"name": "default.name"
							}
						},
						{
							"id": 1741,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1742,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1259,
								"name": "default.value"
							}
						},
						{
							"id": 1737,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1738,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1877,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1256,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1255,
								"name": "default.clone"
							}
						},
						{
							"id": 1745,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1746,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 1747,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1264,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1263,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 1716,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1717,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 1718,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1235,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1234,
								"name": "default.format"
							}
						},
						{
							"id": 1733,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1734,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 1735,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1736,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1252,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1251,
								"name": "default.isEqual"
							}
						},
						{
							"id": 1722,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1723,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 1724,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1241,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1240,
								"name": "default.normalize"
							}
						},
						{
							"id": 1719,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1720,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 1721,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1238,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1237,
								"name": "default.parse"
							}
						},
						{
							"id": 1725,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1726,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 1727,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1728,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1244,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1243,
								"name": "default.toJS"
							}
						},
						{
							"id": 1731,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1732,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1250,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1249,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1691
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1695,
								1696,
								1713,
								1710,
								1705,
								1706,
								1709,
								1708,
								1707,
								1694,
								1711,
								1712,
								1690
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								1743,
								1729,
								1739,
								1697,
								1701,
								1741
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1737,
								1745,
								1716,
								1733,
								1722,
								1719,
								1725,
								1731
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/DurationField.ts",
							"line": 13,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1207,
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1689
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/DurationField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1748,
			"name": "fields/EmailField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 1749,
					"name": "EmailField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 1751,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1752,
									"name": "new EmailField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1753,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CharFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 1749,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1210,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1209,
								"name": "default.constructor"
							}
						},
						{
							"id": 1755,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1213,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 1756,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1214,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 1773,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1774,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1775,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1231,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 1770,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1110,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1228,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 1765,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1223,
								"name": "default.blank"
							}
						},
						{
							"id": 1766,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1224,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 1769,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1227,
								"name": "default.choices"
							}
						},
						{
							"id": 1768,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1226,
								"name": "default.helpText"
							}
						},
						{
							"id": 1767,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1225,
								"name": "default.label"
							}
						},
						{
							"id": 1754,
							"name": "maxLength",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 18,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1212,
								"name": "default.maxLength"
							}
						},
						{
							"id": 1771,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1229,
								"name": "default.readOnly"
							}
						},
						{
							"id": 1772,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1230,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 1750,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/EmailField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'EmailField'",
							"overwrites": {
								"type": "reference",
								"id": 1208,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 1803,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1804,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 976,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1261,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 1789,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 1790,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1881,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1247,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 1799,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1800,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1257,
								"name": "default.isBound"
							}
						},
						{
							"id": 1757,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1758,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 980,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 1759,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1760,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1215,
								"name": "default.model"
							}
						},
						{
							"id": 1761,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1762,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 1763,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1764,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1219,
								"name": "default.name"
							}
						},
						{
							"id": 1801,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1802,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1259,
								"name": "default.value"
							}
						},
						{
							"id": 1797,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1798,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1877,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1256,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1255,
								"name": "default.clone"
							}
						},
						{
							"id": 1805,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1806,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 1807,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1264,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1263,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 1776,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1777,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 1778,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1235,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1234,
								"name": "default.format"
							}
						},
						{
							"id": 1793,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1794,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 1795,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1796,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1252,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1251,
								"name": "default.isEqual"
							}
						},
						{
							"id": 1782,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1783,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 1784,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1241,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1240,
								"name": "default.normalize"
							}
						},
						{
							"id": 1779,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1780,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 1781,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1238,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1237,
								"name": "default.parse"
							}
						},
						{
							"id": 1785,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1786,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 1787,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1788,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1244,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1243,
								"name": "default.toJS"
							}
						},
						{
							"id": 1791,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1792,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1250,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1249,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1751
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1755,
								1756,
								1773,
								1770,
								1765,
								1766,
								1769,
								1768,
								1767,
								1754,
								1771,
								1772,
								1750
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								1803,
								1789,
								1799,
								1757,
								1761,
								1801
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1797,
								1805,
								1776,
								1793,
								1782,
								1779,
								1785,
								1791
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/EmailField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1207,
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1749
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/EmailField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1808,
			"name": "fields/Field",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 1877,
					"name": "Field",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Base Field",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields"
							},
							{
								"tag": "template",
								"text": "The type of the value for this field.",
								"param": "ValueType"
							},
							{
								"tag": "template",
								"text": "The type this field knows how to parse into the ValueType",
								"param": "ParsableType"
							},
							{
								"tag": "template",
								"text": "The type of a single value for this field. This is only different from `ValueType` if `ValueType` is eg. an array type\n",
								"param": "SingleType"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 1879,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 175,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1880,
									"name": "new Field",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1881,
											"name": "ValueT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										},
										{
											"id": 1882,
											"name": "ParsableValueT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											},
											"default": {
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											}
										},
										{
											"id": 1883,
											"name": "SingleValueT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											}
										}
									],
									"parameters": [
										{
											"id": 1884,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1809,
												"typeArguments": [
													{
														"type": "reference",
														"id": 1881,
														"name": "ValueT"
													},
													{
														"type": "reference",
														"id": 1883,
														"name": "SingleValueT"
													}
												],
												"name": "FieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 1877,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"id": 1882,
												"name": "ParsableValueT"
											},
											{
												"type": "reference",
												"id": 1883,
												"name": "SingleValueT"
											}
										],
										"name": "default"
									}
								}
							]
						},
						{
							"id": 1885,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 1881,
								"name": "ValueT"
							}
						},
						{
							"id": 1886,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 1882,
								"name": "ParsableValueT"
							}
						},
						{
							"id": 1905,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 1881,
										"name": "ValueT"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1906,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1907,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1881,
																"name": "ValueT"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"id": 1881,
																				"name": "ValueT"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 1887,
							"name": "_model",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 86,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 980,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ViewModelConstructor"
							}
						},
						{
							"id": 1892,
							"name": "_name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 103,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1902,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1110,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"id": 1883,
										"name": "SingleValueT"
									}
								],
								"name": "AsyncChoicesInterface"
							}
						},
						{
							"id": 1897,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1898,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1901,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1883,
										"name": "SingleValueT"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							}
						},
						{
							"id": 1900,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1899,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1903,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1904,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1878,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 129,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"defaultValue": "null"
						},
						{
							"id": 1935,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1936,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 976,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									}
								}
							]
						},
						{
							"id": 1921,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 1922,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1881,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									}
								}
							]
						},
						{
							"id": 1931,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1932,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 1888,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1889,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 980,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									}
								}
							],
							"setSignature": [
								{
									"id": 1890,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1891,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 1893,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1894,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"setSignature": [
								{
									"id": 1895,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1896,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 1933,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1934,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											}
										]
									}
								}
							]
						},
						{
							"id": 1929,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1930,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1877,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											}
										],
										"name": "default"
									}
								}
							]
						},
						{
							"id": 1937,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1938,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 1939,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 1908,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1909,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 1910,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 1925,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1926,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 1927,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											}
										},
										{
											"id": 1928,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 1914,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1915,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 1916,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 1882,
												"name": "ParsableValueT"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											}
										]
									}
								}
							]
						},
						{
							"id": 1911,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1912,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 1913,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 1882,
														"name": "ParsableValueT"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											}
										]
									}
								}
							]
						},
						{
							"id": 1917,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1918,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 1919,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1920,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 1923,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1924,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1879
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1885,
								1886,
								1905,
								1887,
								1892,
								1902,
								1897,
								1898,
								1901,
								1900,
								1899,
								1903,
								1904,
								1878
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								1935,
								1921,
								1931,
								1888,
								1893,
								1933
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1929,
								1937,
								1908,
								1925,
								1914,
								1911,
								1917,
								1923
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
							"line": 75,
							"character": 21
						}
					],
					"typeParameter": [
						{
							"id": 1940,
							"name": "ValueT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1941,
							"name": "ParsableValueT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"default": {
								"type": "reference",
								"id": 1881,
								"name": "ValueT"
							}
						},
						{
							"id": 1942,
							"name": "SingleValueT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "reference",
								"id": 1881,
								"name": "ValueT"
							}
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 1207,
							"name": "CharField"
						},
						{
							"type": "reference",
							"id": 1329,
							"name": "DateField"
						},
						{
							"type": "reference",
							"id": 1448,
							"name": "DateTimeField"
						},
						{
							"type": "reference",
							"id": 1823,
							"name": "RecordBoundField"
						},
						{
							"type": "reference",
							"id": 1944,
							"name": "FileField"
						},
						{
							"type": "reference",
							"id": 2429,
							"name": "ListField"
						},
						{
							"type": "reference",
							"id": 2495,
							"name": "NullableBooleanField"
						},
						{
							"type": "reference",
							"id": 2559,
							"name": "NumberField"
						},
						{
							"type": "reference",
							"id": 2684,
							"name": "RangeField"
						},
						{
							"type": "reference",
							"id": 2770,
							"name": "BaseRelatedViewModelField"
						},
						{
							"type": "reference",
							"id": 3118,
							"name": "TimeField"
						}
					]
				},
				{
					"id": 1809,
					"name": "FieldProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "expand-properties",
								"text": "\n"
							}
						]
					},
					"children": [
						{
							"id": 1818,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Asynchronous choices for this field.",
								"text": "Only one of `asyncChoices` and `choices` should be passed.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 48,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 1110,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"id": 1822,
										"name": "SingleValueT"
									}
								],
								"name": "AsyncChoicesInterface"
							}
						},
						{
							"id": 1810,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Is this field allowed to be assigned a blank (null, undefined, \"\") value?",
								"text": "Defaults to false\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 13,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1811,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Frontend values are often stored as strings even if they are not stored like that\nin a backend (eg. database). Depending on your backend implementation it may expect\nempty values to be represented as `null` rather than an empty string. Setting\n`blankAsNull` to `true` indicates that empty strings should be converted to `null`\nwhen being sent to the backend."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 21,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1817,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Choices for this field. Should be a mapping of value to the label for the choice."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 42,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1822,
												"name": "SingleValueT"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"qualifiedName": "Map",
										"package": "typescript",
										"name": "Map"
									},
									{
										"type": "array",
										"elementType": {
											"type": "tuple",
											"elements": [
												{
													"type": "reference",
													"id": 1822,
													"name": "SingleValueT"
												},
												{
													"type": "intrinsic",
													"name": "string"
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 1814,
							"name": "defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Default value for this field. This can either be a function that returns a value or the value directly."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 33,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 1821,
										"name": "ValueT"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1815,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1816,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1821,
																"name": "ValueT"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"id": 1821,
																				"name": "ValueT"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 1813,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Optional help text for this field that might be shown on a form"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 29,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1812,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Label for this field. If not specified will be generated from the name."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 25,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1819,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "True if field should be considered read only (eg. excluded from forms)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 52,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1820,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "True if field should be considered write only (eg. excluded from detail views)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 56,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1818,
								1810,
								1811,
								1817,
								1814,
								1813,
								1812,
								1819,
								1820
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
							"line": 7,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 1821,
							"name": "ValueT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1822,
							"name": "SingleValueT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "reference",
								"id": 1821,
								"name": "ValueT"
							}
						}
					]
				},
				{
					"id": 1823,
					"name": "RecordBoundField",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1827,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 1874,
								"name": "ValueT"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1885,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 1828,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 1875,
								"name": "ParsableType"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1886,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 1845,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 1874,
										"name": "ValueT"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1846,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1847,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1874,
																"name": "ValueT"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"id": 1874,
																				"name": "ValueT"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1905,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 1842,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1110,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"id": 1876,
										"name": "SingleValueT"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1902,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 1837,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1897,
								"name": "default.blank"
							}
						},
						{
							"id": 1838,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1898,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 1826,
							"name": "boundRecord",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 375,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 976,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "ViewModelInterface"
							},
							"overwrites": {
								"type": "reference",
								"id": 1935,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 1841,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1876,
										"name": "SingleValueT"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1901,
								"name": "default.choices"
							}
						},
						{
							"id": 1840,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1900,
								"name": "default.helpText"
							}
						},
						{
							"id": 1825,
							"name": "isBound",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 374,
									"character": 13
								}
							],
							"type": {
								"type": "literal",
								"value": true
							},
							"overwrites": {
								"type": "reference",
								"id": 1931,
								"name": "default.isBound"
							}
						},
						{
							"id": 1839,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1899,
								"name": "default.label"
							}
						},
						{
							"id": 1843,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1903,
								"name": "default.readOnly"
							}
						},
						{
							"id": 1824,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 373,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 1874,
								"name": "ValueT"
							},
							"overwrites": {
								"type": "reference",
								"id": 1933,
								"name": "default.value"
							}
						},
						{
							"id": 1844,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1904,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 1861,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 1862,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1881,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1921,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 1829,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1830,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 980,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 1831,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1832,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1888,
								"name": "default.model"
							}
						},
						{
							"id": 1833,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1834,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 1835,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1836,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1893,
								"name": "default.name"
							}
						},
						{
							"id": 1869,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1870,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1877,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1874,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"id": 1874,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"id": 1874,
												"name": "ValueT"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1930,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1929,
								"name": "default.clone"
							}
						},
						{
							"id": 1871,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1872,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 1873,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1938,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1937,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 1848,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1849,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 1850,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 1874,
												"name": "ValueT"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1909,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1908,
								"name": "default.format"
							}
						},
						{
							"id": 1865,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1866,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 1867,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1874,
												"name": "ValueT"
											}
										},
										{
											"id": 1868,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1874,
												"name": "ValueT"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1926,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1925,
								"name": "default.isEqual"
							}
						},
						{
							"id": 1854,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1855,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 1856,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 1875,
												"name": "ParsableType"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1874,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1915,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1914,
								"name": "default.normalize"
							}
						},
						{
							"id": 1851,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1852,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 1853,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 1875,
														"name": "ParsableType"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1874,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1912,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1911,
								"name": "default.parse"
							}
						},
						{
							"id": 1857,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1858,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 1859,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 1874,
												"name": "ValueT"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1860,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1918,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1917,
								"name": "default.toJS"
							}
						},
						{
							"id": 1863,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1864,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1924,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1923,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1827,
								1828,
								1845,
								1842,
								1837,
								1838,
								1826,
								1841,
								1840,
								1825,
								1839,
								1843,
								1824,
								1844
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								1861,
								1829,
								1833
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1869,
								1871,
								1848,
								1865,
								1854,
								1851,
								1857,
								1863
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
							"line": 371,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 1874,
							"name": "ValueT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1875,
							"name": "ParsableType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"default": {
								"type": "reference",
								"id": 1874,
								"name": "ValueT"
							}
						},
						{
							"id": 1876,
							"name": "SingleValueT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "reference",
								"id": 1874,
								"name": "ValueT"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1877,
							"typeArguments": [
								{
									"type": "reference",
									"id": 1874,
									"name": "ValueT"
								},
								{
									"type": "reference",
									"id": 1875,
									"name": "ParsableType"
								},
								{
									"type": "reference",
									"id": 1876,
									"name": "SingleValueT"
								}
							],
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1877
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1809,
						1823
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1943,
			"name": "fields/FileField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 1944,
					"name": "FileField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Base class for File fields",
						"text": "Used by ImageField.\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 1946,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1947,
									"name": "new FileField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1948,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1809,
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "File",
														"package": "typescript",
														"name": "File"
													},
													{
														"type": "reference",
														"qualifiedName": "File",
														"package": "typescript",
														"name": "File"
													}
												],
												"name": "FieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 1944,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1880,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1879,
								"name": "default.constructor"
							}
						},
						{
							"id": 1949,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "File",
								"package": "typescript",
								"name": "File"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1885,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 1950,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "File",
								"package": "typescript",
								"name": "File"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1886,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 1967,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"qualifiedName": "File",
										"package": "typescript",
										"name": "File"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1968,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1969,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"qualifiedName": "File",
																"package": "typescript",
																"name": "File"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"qualifiedName": "File",
																				"package": "typescript",
																				"name": "File"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1905,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 1964,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1110,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"qualifiedName": "File",
										"package": "typescript",
										"name": "File"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1902,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 1959,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1897,
								"name": "default.blank"
							}
						},
						{
							"id": 1960,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1898,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 1963,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"qualifiedName": "File",
										"package": "typescript",
										"name": "File"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1901,
								"name": "default.choices"
							}
						},
						{
							"id": 1962,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1900,
								"name": "default.helpText"
							}
						},
						{
							"id": 1961,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1899,
								"name": "default.label"
							}
						},
						{
							"id": 1965,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1903,
								"name": "default.readOnly"
							}
						},
						{
							"id": 1966,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1904,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 1945,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/FileField.ts",
									"line": 12,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'FileField'",
							"overwrites": {
								"type": "reference",
								"id": 1878,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 1997,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1998,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 976,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1935,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 1983,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 1984,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1881,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1921,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 1993,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1994,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1931,
								"name": "default.isBound"
							}
						},
						{
							"id": 1951,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1952,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 980,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 1953,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1954,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1888,
								"name": "default.model"
							}
						},
						{
							"id": 1955,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1956,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 1957,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1958,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1893,
								"name": "default.name"
							}
						},
						{
							"id": 1995,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1996,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1933,
								"name": "default.value"
							}
						},
						{
							"id": 1991,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1992,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1877,
										"typeArguments": [
											{
												"type": "reference",
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											},
											{
												"type": "reference",
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											},
											{
												"type": "reference",
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1930,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1929,
								"name": "default.clone"
							}
						},
						{
							"id": 1999,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2000,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2001,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1938,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1937,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 1970,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1971,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 1972,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1909,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1908,
								"name": "default.format"
							}
						},
						{
							"id": 1987,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1988,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 1989,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										},
										{
											"id": 1990,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1926,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1925,
								"name": "default.isEqual"
							}
						},
						{
							"id": 1976,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1977,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 1978,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1915,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1914,
								"name": "default.normalize"
							}
						},
						{
							"id": 1973,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1974,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 1975,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"qualifiedName": "File",
														"package": "typescript",
														"name": "File"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1912,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1911,
								"name": "default.parse"
							}
						},
						{
							"id": 1979,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1980,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 1981,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1982,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1918,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1917,
								"name": "default.toJS"
							}
						},
						{
							"id": 1985,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1986,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1924,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1923,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1946
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1949,
								1950,
								1967,
								1964,
								1959,
								1960,
								1963,
								1962,
								1961,
								1965,
								1966,
								1945
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								1997,
								1983,
								1993,
								1951,
								1955,
								1995
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1991,
								1999,
								1970,
								1987,
								1976,
								1973,
								1979,
								1985
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/FileField.ts",
							"line": 11,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1877,
							"typeArguments": [
								{
									"type": "reference",
									"qualifiedName": "File",
									"package": "typescript",
									"name": "File"
								}
							],
							"name": "default"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 2184,
							"name": "ImageField"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1944
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/FileField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2002,
			"name": "fields/FloatField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2003,
					"name": "FloatField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Float Field.",
						"text": "Use only if stored number is tolerant on precision error.\n\nSee also: [DecimalField](doc:DecimalField)\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 2005,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2006,
									"name": "new FloatField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2007,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2554,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"name": "NumberFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2003,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2562,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2561,
								"name": "default.constructor"
							}
						},
						{
							"id": 2013,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2568,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2014,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2569,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2031,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2032,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2033,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2586,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2028,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1110,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2583,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2023,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2578,
								"name": "default.blank"
							}
						},
						{
							"id": 2024,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2579,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2027,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2582,
								"name": "default.choices"
							}
						},
						{
							"id": 2026,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2581,
								"name": "default.helpText"
							}
						},
						{
							"id": 2025,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2580,
								"name": "default.label"
							}
						},
						{
							"id": 2012,
							"name": "maxValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
									"line": 25,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2567,
								"name": "default.maxValue"
							}
						},
						{
							"id": 2011,
							"name": "minValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
									"line": 24,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2566,
								"name": "default.minValue"
							}
						},
						{
							"id": 2029,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2584,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2030,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2585,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2004,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/FloatField.ts",
									"line": 14,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'FloatField'",
							"overwrites": {
								"type": "reference",
								"id": 2560,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2058,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2059,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 976,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2616,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2044,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2045,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1881,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2602,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2054,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2055,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2612,
								"name": "default.isBound"
							}
						},
						{
							"id": 2015,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2016,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 980,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2017,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2018,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2570,
								"name": "default.model"
							}
						},
						{
							"id": 2019,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2020,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2021,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2022,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2574,
								"name": "default.name"
							}
						},
						{
							"id": 2056,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2057,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2614,
								"name": "default.value"
							}
						},
						{
							"id": 2052,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2053,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1877,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2611,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2610,
								"name": "default.clone"
							}
						},
						{
							"id": 2060,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2061,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2062,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2619,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2618,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2034,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2035,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2036,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2590,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2589,
								"name": "default.format"
							}
						},
						{
							"id": 2048,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2049,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2050,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2051,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2607,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2606,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2037,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2038,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2039,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2596,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2595,
								"name": "default.normalize"
							}
						},
						{
							"id": 2008,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/FloatField.ts",
									"line": 15,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2009,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2010,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 2593,
										"name": "default.parse"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 2592,
								"name": "default.parse"
							}
						},
						{
							"id": 2040,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2041,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2042,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2043,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2599,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2598,
								"name": "default.toJS"
							}
						},
						{
							"id": 2046,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2047,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2605,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2604,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2005
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2013,
								2014,
								2031,
								2028,
								2023,
								2024,
								2027,
								2026,
								2025,
								2012,
								2011,
								2029,
								2030,
								2004
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2058,
								2044,
								2054,
								2015,
								2019,
								2056
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2052,
								2060,
								2034,
								2048,
								2037,
								2008,
								2040,
								2046
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/FloatField.ts",
							"line": 13,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2559,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "number"
								}
							],
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2003
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/FloatField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2063,
			"name": "fields/FloatRangeField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2064,
					"name": "FloatRangeField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 2066,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2067,
									"name": "new FloatRangeField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2068,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"name": "RangeFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2064,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2687,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2686,
								"name": "default.constructor"
							}
						},
						{
							"id": 2070,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2691,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2071,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2692,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2088,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2089,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2090,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2709,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2085,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1110,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2706,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2080,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2701,
								"name": "default.blank"
							}
						},
						{
							"id": 2081,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2702,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2084,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2705,
								"name": "default.choices"
							}
						},
						{
							"id": 2083,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2704,
								"name": "default.helpText"
							}
						},
						{
							"id": 2082,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2703,
								"name": "default.label"
							}
						},
						{
							"id": 2086,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2707,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2069,
							"name": "separator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
									"line": 17,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2690,
								"name": "default.separator"
							}
						},
						{
							"id": 2087,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2708,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2065,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/FloatRangeField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'FloatRangeField'",
							"overwrites": {
								"type": "reference",
								"id": 2685,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2118,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2119,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 976,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2739,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2104,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2105,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1881,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2725,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2114,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2115,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2735,
								"name": "default.isBound"
							}
						},
						{
							"id": 2072,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2073,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 980,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2074,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2075,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2693,
								"name": "default.model"
							}
						},
						{
							"id": 2076,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2077,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2078,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2079,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2697,
								"name": "default.name"
							}
						},
						{
							"id": 2116,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2117,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2737,
								"name": "default.value"
							}
						},
						{
							"id": 2112,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2113,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1877,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2734,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2733,
								"name": "default.clone"
							}
						},
						{
							"id": 2120,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2121,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2122,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2742,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2741,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2091,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2092,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2093,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2713,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2712,
								"name": "default.format"
							}
						},
						{
							"id": 2108,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2109,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2110,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2111,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2730,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2729,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2097,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2098,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2099,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2719,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2718,
								"name": "default.normalize"
							}
						},
						{
							"id": 2094,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2095,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2096,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2716,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2715,
								"name": "default.parse"
							}
						},
						{
							"id": 2100,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2101,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2102,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2103,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2722,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2721,
								"name": "default.toJS"
							}
						},
						{
							"id": 2106,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2107,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2728,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2727,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2066
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2070,
								2071,
								2088,
								2085,
								2080,
								2081,
								2084,
								2083,
								2082,
								2086,
								2069,
								2087,
								2065
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2118,
								2104,
								2114,
								2072,
								2076,
								2116
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2112,
								2120,
								2091,
								2108,
								2097,
								2094,
								2100,
								2106
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/FloatRangeField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2684,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "number"
								}
							],
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2064
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/FloatRangeField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2123,
			"name": "fields/IPAddressField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2124,
					"name": "IPAddressField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 2126,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2127,
									"name": "new IPAddressField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2128,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CharFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2124,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1210,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1209,
								"name": "default.constructor"
							}
						},
						{
							"id": 2130,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1213,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2131,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1214,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2148,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2149,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2150,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1231,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2145,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1110,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1228,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2140,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1223,
								"name": "default.blank"
							}
						},
						{
							"id": 2141,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1224,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2144,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1227,
								"name": "default.choices"
							}
						},
						{
							"id": 2143,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1226,
								"name": "default.helpText"
							}
						},
						{
							"id": 2142,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1225,
								"name": "default.label"
							}
						},
						{
							"id": 2129,
							"name": "maxLength",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 18,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1212,
								"name": "default.maxLength"
							}
						},
						{
							"id": 2146,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1229,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2147,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1230,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2125,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/IPAddressField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'IPAddressField'",
							"overwrites": {
								"type": "reference",
								"id": 1208,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2178,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2179,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 976,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1261,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2164,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2165,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1881,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1247,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2174,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2175,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1257,
								"name": "default.isBound"
							}
						},
						{
							"id": 2132,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2133,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 980,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2134,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2135,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1215,
								"name": "default.model"
							}
						},
						{
							"id": 2136,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2137,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2138,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2139,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1219,
								"name": "default.name"
							}
						},
						{
							"id": 2176,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2177,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1259,
								"name": "default.value"
							}
						},
						{
							"id": 2172,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2173,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1877,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1256,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1255,
								"name": "default.clone"
							}
						},
						{
							"id": 2180,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2181,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2182,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1264,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1263,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2151,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2152,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2153,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1235,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1234,
								"name": "default.format"
							}
						},
						{
							"id": 2168,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2169,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2170,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2171,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1252,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1251,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2157,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2158,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2159,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1241,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1240,
								"name": "default.normalize"
							}
						},
						{
							"id": 2154,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2155,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2156,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1238,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1237,
								"name": "default.parse"
							}
						},
						{
							"id": 2160,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2161,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2162,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2163,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1244,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1243,
								"name": "default.toJS"
							}
						},
						{
							"id": 2166,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2167,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1250,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1249,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2126
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2130,
								2131,
								2148,
								2145,
								2140,
								2141,
								2144,
								2143,
								2142,
								2129,
								2146,
								2147,
								2125
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2178,
								2164,
								2174,
								2132,
								2136,
								2176
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2172,
								2180,
								2151,
								2168,
								2157,
								2154,
								2160,
								2166
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/IPAddressField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1207,
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2124
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/IPAddressField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2183,
			"name": "fields/ImageField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2184,
					"name": "ImageField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Image field.",
						"text": "ImageField is an exact match of FileField, however the representation (format/widget) will be different.\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 2186,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2187,
									"name": "new ImageField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2188,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1809,
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "File",
														"package": "typescript",
														"name": "File"
													},
													{
														"type": "reference",
														"qualifiedName": "File",
														"package": "typescript",
														"name": "File"
													}
												],
												"name": "FieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2184,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1947,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1946,
								"name": "default.constructor"
							}
						},
						{
							"id": 2189,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "File",
								"package": "typescript",
								"name": "File"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1949,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2190,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "File",
								"package": "typescript",
								"name": "File"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1950,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2207,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"qualifiedName": "File",
										"package": "typescript",
										"name": "File"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2208,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2209,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"qualifiedName": "File",
																"package": "typescript",
																"name": "File"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"qualifiedName": "File",
																				"package": "typescript",
																				"name": "File"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1967,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2204,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1110,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"qualifiedName": "File",
										"package": "typescript",
										"name": "File"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1964,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2199,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1959,
								"name": "default.blank"
							}
						},
						{
							"id": 2200,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1960,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2203,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"qualifiedName": "File",
										"package": "typescript",
										"name": "File"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1963,
								"name": "default.choices"
							}
						},
						{
							"id": 2202,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1962,
								"name": "default.helpText"
							}
						},
						{
							"id": 2201,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1961,
								"name": "default.label"
							}
						},
						{
							"id": 2205,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1965,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2206,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1966,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2185,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/ImageField.ts",
									"line": 12,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'ImageField'",
							"overwrites": {
								"type": "reference",
								"id": 1945,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2237,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2238,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 976,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FileField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1997,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2223,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2224,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1881,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FileField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1983,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2233,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2234,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FileField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1993,
								"name": "default.isBound"
							}
						},
						{
							"id": 2191,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2192,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 980,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FileField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2193,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2194,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FileField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1951,
								"name": "default.model"
							}
						},
						{
							"id": 2195,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2196,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FileField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2197,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2198,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FileField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1955,
								"name": "default.name"
							}
						},
						{
							"id": 2235,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2236,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FileField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1995,
								"name": "default.value"
							}
						},
						{
							"id": 2231,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2232,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1877,
										"typeArguments": [
											{
												"type": "reference",
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											},
											{
												"type": "reference",
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											},
											{
												"type": "reference",
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1992,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1991,
								"name": "default.clone"
							}
						},
						{
							"id": 2239,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2240,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2241,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2000,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1999,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2210,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2211,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2212,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1971,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1970,
								"name": "default.format"
							}
						},
						{
							"id": 2227,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2228,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2229,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										},
										{
											"id": 2230,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1988,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1987,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2216,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2217,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2218,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1977,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1976,
								"name": "default.normalize"
							}
						},
						{
							"id": 2213,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2214,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2215,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"qualifiedName": "File",
														"package": "typescript",
														"name": "File"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1974,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1973,
								"name": "default.parse"
							}
						},
						{
							"id": 2219,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2220,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2221,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2222,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1980,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1979,
								"name": "default.toJS"
							}
						},
						{
							"id": 2225,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2226,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1986,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1985,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2186
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2189,
								2190,
								2207,
								2204,
								2199,
								2200,
								2203,
								2202,
								2201,
								2205,
								2206,
								2185
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2237,
								2223,
								2233,
								2191,
								2195,
								2235
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2231,
								2239,
								2210,
								2227,
								2216,
								2213,
								2219,
								2225
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/ImageField.ts",
							"line": 11,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1944,
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2184
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/ImageField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2242,
			"name": "fields/IntegerField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2243,
					"name": "IntegerField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 2245,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2246,
									"name": "new IntegerField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2247,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2554,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"name": "NumberFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2243,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2562,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2561,
								"name": "default.constructor"
							}
						},
						{
							"id": 2253,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2568,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2254,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2569,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2271,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2272,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2273,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2586,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2268,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1110,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2583,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2263,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2578,
								"name": "default.blank"
							}
						},
						{
							"id": 2264,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2579,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2267,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2582,
								"name": "default.choices"
							}
						},
						{
							"id": 2266,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2581,
								"name": "default.helpText"
							}
						},
						{
							"id": 2265,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2580,
								"name": "default.label"
							}
						},
						{
							"id": 2252,
							"name": "maxValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
									"line": 25,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2567,
								"name": "default.maxValue"
							}
						},
						{
							"id": 2251,
							"name": "minValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
									"line": 24,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2566,
								"name": "default.minValue"
							}
						},
						{
							"id": 2269,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2584,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2270,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2585,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2244,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/IntegerField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'IntegerField'",
							"overwrites": {
								"type": "reference",
								"id": 2560,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2298,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2299,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 976,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2616,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2284,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2285,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1881,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2602,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2294,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2295,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2612,
								"name": "default.isBound"
							}
						},
						{
							"id": 2255,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2256,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 980,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2257,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2258,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2570,
								"name": "default.model"
							}
						},
						{
							"id": 2259,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2260,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2261,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2262,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2574,
								"name": "default.name"
							}
						},
						{
							"id": 2296,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2297,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2614,
								"name": "default.value"
							}
						},
						{
							"id": 2292,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2293,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1877,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2611,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2610,
								"name": "default.clone"
							}
						},
						{
							"id": 2300,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2301,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2302,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2619,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2618,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2274,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2275,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2276,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2590,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2589,
								"name": "default.format"
							}
						},
						{
							"id": 2288,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2289,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2290,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2291,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2607,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2606,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2277,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2278,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2279,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2596,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2595,
								"name": "default.normalize"
							}
						},
						{
							"id": 2248,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/IntegerField.ts",
									"line": 9,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2249,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2250,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 2593,
										"name": "default.parse"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 2592,
								"name": "default.parse"
							}
						},
						{
							"id": 2280,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2281,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2282,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2283,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2599,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2598,
								"name": "default.toJS"
							}
						},
						{
							"id": 2286,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2287,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2605,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2604,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2245
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2253,
								2254,
								2271,
								2268,
								2263,
								2264,
								2267,
								2266,
								2265,
								2252,
								2251,
								2269,
								2270,
								2244
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2298,
								2284,
								2294,
								2255,
								2259,
								2296
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2292,
								2300,
								2274,
								2288,
								2277,
								2248,
								2280,
								2286
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/IntegerField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2559,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "number"
										}
									]
								}
							],
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2243
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/IntegerField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2303,
			"name": "fields/IntegerRangeField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2304,
					"name": "IntegerRangeField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 2306,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2307,
									"name": "new IntegerRangeField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2308,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"name": "RangeFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2304,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2687,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2686,
								"name": "default.constructor"
							}
						},
						{
							"id": 2310,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2691,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2311,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2692,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2328,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2329,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2330,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2709,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2325,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1110,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2706,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2320,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2701,
								"name": "default.blank"
							}
						},
						{
							"id": 2321,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2702,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2324,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2705,
								"name": "default.choices"
							}
						},
						{
							"id": 2323,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2704,
								"name": "default.helpText"
							}
						},
						{
							"id": 2322,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2703,
								"name": "default.label"
							}
						},
						{
							"id": 2326,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2707,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2309,
							"name": "separator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
									"line": 17,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2690,
								"name": "default.separator"
							}
						},
						{
							"id": 2327,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2708,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2305,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/IntegerRangeField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'IntegerRangeField'",
							"overwrites": {
								"type": "reference",
								"id": 2685,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2358,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2359,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 976,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2739,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2344,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2345,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1881,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2725,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2354,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2355,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2735,
								"name": "default.isBound"
							}
						},
						{
							"id": 2312,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2313,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 980,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2314,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2315,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2693,
								"name": "default.model"
							}
						},
						{
							"id": 2316,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2317,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2318,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2319,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2697,
								"name": "default.name"
							}
						},
						{
							"id": 2356,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2357,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2737,
								"name": "default.value"
							}
						},
						{
							"id": 2352,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2353,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1877,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2734,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2733,
								"name": "default.clone"
							}
						},
						{
							"id": 2360,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2361,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2362,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2742,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2741,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2331,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2332,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2333,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2713,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2712,
								"name": "default.format"
							}
						},
						{
							"id": 2348,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2349,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2350,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2351,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2730,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2729,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2337,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2338,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2339,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2719,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2718,
								"name": "default.normalize"
							}
						},
						{
							"id": 2334,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2335,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2336,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2716,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2715,
								"name": "default.parse"
							}
						},
						{
							"id": 2340,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2341,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2342,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2343,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2722,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2721,
								"name": "default.toJS"
							}
						},
						{
							"id": 2346,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2347,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2728,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2727,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2306
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2310,
								2311,
								2328,
								2325,
								2320,
								2321,
								2324,
								2323,
								2322,
								2326,
								2309,
								2327,
								2305
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2358,
								2344,
								2354,
								2312,
								2316,
								2356
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2352,
								2360,
								2331,
								2348,
								2337,
								2334,
								2340,
								2346
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/IntegerRangeField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2684,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "number"
								}
							],
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2304
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/IntegerRangeField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2363,
			"name": "fields/JsonField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2368,
					"name": "JsonField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"originalName": "default",
					"children": [
						{
							"id": 2370,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2371,
									"name": "new JsonField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2372,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CharFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2368,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1210,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1209,
								"name": "default.constructor"
							}
						},
						{
							"id": 2378,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1213,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2379,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1214,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2396,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2397,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2398,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1231,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2393,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1110,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1228,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2388,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1223,
								"name": "default.blank"
							}
						},
						{
							"id": 2389,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1224,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2392,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1227,
								"name": "default.choices"
							}
						},
						{
							"id": 2391,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1226,
								"name": "default.helpText"
							}
						},
						{
							"id": 2390,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1225,
								"name": "default.label"
							}
						},
						{
							"id": 2377,
							"name": "maxLength",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 18,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1212,
								"name": "default.maxLength"
							}
						},
						{
							"id": 2394,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1229,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2395,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1230,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2369,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/JsonField.ts",
									"line": 14,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'JsonField'",
							"overwrites": {
								"type": "reference",
								"id": 1208,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2423,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2424,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 976,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1261,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2409,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2410,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1881,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1247,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2419,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2420,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1257,
								"name": "default.isBound"
							}
						},
						{
							"id": 2380,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2381,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 980,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2382,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2383,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1215,
								"name": "default.model"
							}
						},
						{
							"id": 2384,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2385,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2386,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2387,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1219,
								"name": "default.name"
							}
						},
						{
							"id": 2421,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2422,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1259,
								"name": "default.value"
							}
						},
						{
							"id": 2417,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2418,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1877,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1256,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1255,
								"name": "default.clone"
							}
						},
						{
							"id": 2425,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2426,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2427,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1264,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1263,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2399,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2400,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2401,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1235,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1234,
								"name": "default.format"
							}
						},
						{
							"id": 2413,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2414,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2415,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2416,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1252,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1251,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2402,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2403,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2404,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1241,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1240,
								"name": "default.normalize"
							}
						},
						{
							"id": 2373,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/JsonField.ts",
									"line": 15,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2374,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"typeParameter": [
										{
											"id": 2375,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 2376,
											"name": "json",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2364,
												"typeArguments": [
													{
														"type": "reference",
														"id": 2375,
														"name": "T"
													}
												],
												"name": "JSON"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2375,
										"name": "T"
									},
									"overwrites": {
										"type": "reference",
										"id": 1238,
										"name": "default.parse"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1237,
								"name": "default.parse"
							}
						},
						{
							"id": 2405,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2406,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2407,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2408,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1244,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1243,
								"name": "default.toJS"
							}
						},
						{
							"id": 2411,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2412,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1250,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1249,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2370
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2378,
								2379,
								2396,
								2393,
								2388,
								2389,
								2392,
								2391,
								2390,
								2377,
								2394,
								2395,
								2369
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2423,
								2409,
								2419,
								2380,
								2384,
								2421
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2417,
								2425,
								2399,
								2413,
								2402,
								2373,
								2405,
								2411
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/JsonField.ts",
							"line": 13,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1207,
							"name": "default"
						}
					]
				},
				{
					"id": 2364,
					"name": "JSON",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/JsonField.ts",
							"line": 3,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 2367,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2365,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 2366,
											"name": " __JSON",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/viewmodel/src/fields/JsonField.ts",
													"line": 3,
													"character": 33
												}
											],
											"type": {
												"type": "reference",
												"id": 2367,
												"name": "T"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												2366
											]
										}
									],
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/fields/JsonField.ts",
											"line": 3,
											"character": 31
										}
									]
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2368
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						2364
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/JsonField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2428,
			"name": "fields/ListField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2429,
					"name": "ListField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "A container field for an array of values",
						"text": "You must pass `childField` which is the underlying field for each value in the\nlist. `ListField` will call `format`, `parse`, and `normalize` on this field for\neach value in the list.\n\nBy default `defaultValue` will be set to an empty array unless `blankAsNull` is\n`true` in which case it will be set to `null`. `normalize` and `parse` also behave\nin the same way (a falsy value passed to these will either return an empty array\nwhen `blankAsNull` is false or null when it is true).\n\n```js\nconst listOfInts = new ListField({ childField: new IntegerField() });\n```\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 2431,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/ListField.ts",
									"line": 27,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2432,
									"name": "new ListField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2433,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										},
										{
											"id": 2434,
											"name": "ParsableType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "reference",
												"id": 2433,
												"name": "T"
											}
										}
									],
									"parameters": [
										{
											"id": 2435,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2436,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 2437,
																	"name": "childField",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "js-packages/@prestojs/viewmodel/src/fields/ListField.ts",
																			"line": 37,
																			"character": 9
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 1877,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 2433,
																				"name": "T"
																			},
																			{
																				"type": "reference",
																				"id": 2434,
																				"name": "ParsableType"
																			},
																			{
																				"type": "reference",
																				"id": 2433,
																				"name": "T"
																			}
																		],
																		"name": "default"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		2437
																	]
																}
															]
														}
													},
													{
														"type": "reference",
														"id": 1809,
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 2433,
																	"name": "T"
																}
															},
															{
																"type": "reference",
																"id": 2433,
																"name": "T"
															}
														],
														"name": "FieldProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2429,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2433,
												"name": "T"
											},
											{
												"type": "reference",
												"id": 2434,
												"name": "ParsableType"
											}
										],
										"name": "default"
									},
									"overwrites": {
										"type": "reference",
										"id": 1880,
										"name": "default.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1879,
								"name": "default.constructor"
							}
						},
						{
							"id": 2452,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 2433,
									"name": "T"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1885,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2453,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 2434,
									"name": "ParsableType"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1886,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2470,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 2433,
											"name": "T"
										}
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2471,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2472,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 2433,
																	"name": "T"
																}
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"id": 2433,
																					"name": "T"
																				}
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1905,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2467,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1110,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"id": 2433,
										"name": "T"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1902,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2462,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1897,
								"name": "default.blank"
							}
						},
						{
							"id": 2463,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1898,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2438,
							"name": "childField",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/ListField.ts",
									"line": 25,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1877,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2433,
										"name": "T"
									},
									{
										"type": "reference",
										"id": 2434,
										"name": "ParsableType"
									},
									{
										"type": "reference",
										"id": 2433,
										"name": "T"
									}
								],
								"name": "default"
							}
						},
						{
							"id": 2466,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2433,
										"name": "T"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1901,
								"name": "default.choices"
							}
						},
						{
							"id": 2465,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1900,
								"name": "default.helpText"
							}
						},
						{
							"id": 2464,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1899,
								"name": "default.label"
							}
						},
						{
							"id": 2468,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1903,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2469,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1904,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2430,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/ListField.ts",
									"line": 23,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'ListField'",
							"overwrites": {
								"type": "reference",
								"id": 1878,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2487,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2488,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 976,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1935,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2477,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2478,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1881,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1921,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2483,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2484,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1931,
								"name": "default.isBound"
							}
						},
						{
							"id": 2454,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2455,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 980,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2456,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2457,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1888,
								"name": "default.model"
							}
						},
						{
							"id": 2458,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2459,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2460,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2461,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1893,
								"name": "default.name"
							}
						},
						{
							"id": 2485,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2486,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1933,
								"name": "default.value"
							}
						},
						{
							"id": 2481,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2482,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1877,
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2433,
													"name": "T"
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2433,
													"name": "T"
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2433,
													"name": "T"
												}
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1930,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1929,
								"name": "default.clone"
							}
						},
						{
							"id": 2489,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2490,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2491,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1938,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1937,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2439,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/ListField.ts",
									"line": 46,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2440,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Calls `childField.format` on each entry in the passed array"
									},
									"parameters": [
										{
											"id": 2441,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2433,
													"name": "T"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"overwrites": {
										"type": "reference",
										"id": 1909,
										"name": "default.format"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1908,
								"name": "default.format"
							}
						},
						{
							"id": 2448,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/ListField.ts",
									"line": 97,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2449,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2450,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2433,
													"name": "T"
												}
											}
										},
										{
											"id": 2451,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2433,
													"name": "T"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"overwrites": {
										"type": "reference",
										"id": 1926,
										"name": "default.isEqual"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1925,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2445,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/ListField.ts",
									"line": 80,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2446,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Calls `childField.parse` on each entry in the passed array",
										"text": "If `value` is falsy or an empty array and `blankAsNull` is true\nit will return `null` or if `blankAsNull` is false then it\nwill return an empty array.\n"
									},
									"parameters": [
										{
											"id": 2447,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2433,
													"name": "T"
												}
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 1915,
										"name": "default.normalize"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1914,
								"name": "default.normalize"
							}
						},
						{
							"id": 2442,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/ListField.ts",
									"line": 60,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2443,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Calls `childField.parse` on each entry in the passed array",
										"text": "If `value` is falsy or an empty array and `blankAsNull` is true\nit will return `null` or if `blankAsNull` is false then it\nwill return an empty array.\n"
									},
									"parameters": [
										{
											"id": 2444,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 2434,
															"name": "ParsableType"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2433,
													"name": "T"
												}
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 1912,
										"name": "default.parse"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1911,
								"name": "default.parse"
							}
						},
						{
							"id": 2473,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2474,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2475,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2433,
													"name": "T"
												}
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2476,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1918,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1917,
								"name": "default.toJS"
							}
						},
						{
							"id": 2479,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2480,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1924,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1923,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2431
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2452,
								2453,
								2470,
								2467,
								2462,
								2463,
								2438,
								2466,
								2465,
								2464,
								2468,
								2469,
								2430
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2487,
								2477,
								2483,
								2454,
								2458,
								2485
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2481,
								2489,
								2439,
								2448,
								2445,
								2442,
								2473,
								2479
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/ListField.ts",
							"line": 22,
							"character": 21
						}
					],
					"typeParameter": [
						{
							"id": 2492,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 2493,
							"name": "ParsableType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "reference",
								"id": 2433,
								"name": "T"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1877,
							"typeArguments": [
								{
									"type": "array",
									"elementType": {
										"type": "reference",
										"id": 2433,
										"name": "T"
									}
								},
								{
									"type": "array",
									"elementType": {
										"type": "reference",
										"id": 2434,
										"name": "ParsableType"
									}
								},
								{
									"type": "reference",
									"id": 2433,
									"name": "T"
								}
							],
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2429
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/ListField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2494,
			"name": "fields/NullableBooleanField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2495,
					"name": "NullableBooleanField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Field for Boolean type values with Null being a valid option. Count both undefined and null as null instead of False.",
						"text": "Follows standard javascript Truthy and Falsy definition except undefined and null.\n\nSee also: [BooleanField](doc:BooleanField).\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 2497,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2498,
									"name": "new NullableBooleanField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2499,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1809,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "FieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2495,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1880,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1879,
								"name": "default.constructor"
							}
						},
						{
							"id": 2503,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1885,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2504,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1886,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2521,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2522,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2523,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "boolean"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1905,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2518,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1110,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1902,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2513,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1897,
								"name": "default.blank"
							}
						},
						{
							"id": 2514,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1898,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2517,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1901,
								"name": "default.choices"
							}
						},
						{
							"id": 2516,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1900,
								"name": "default.helpText"
							}
						},
						{
							"id": 2515,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1899,
								"name": "default.label"
							}
						},
						{
							"id": 2519,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1903,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2520,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1904,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2496,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NullableBooleanField.ts",
									"line": 14,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'NullableBooleanField'",
							"overwrites": {
								"type": "reference",
								"id": 1878,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2548,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2549,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 976,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1935,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2534,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2535,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1881,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1921,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2544,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2545,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1931,
								"name": "default.isBound"
							}
						},
						{
							"id": 2505,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2506,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 980,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2507,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2508,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1888,
								"name": "default.model"
							}
						},
						{
							"id": 2509,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2510,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2511,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2512,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1893,
								"name": "default.name"
							}
						},
						{
							"id": 2546,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2547,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1933,
								"name": "default.value"
							}
						},
						{
							"id": 2542,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2543,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1877,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1930,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1929,
								"name": "default.clone"
							}
						},
						{
							"id": 2550,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2551,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2552,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1938,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1937,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2524,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2525,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2526,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1909,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1908,
								"name": "default.format"
							}
						},
						{
							"id": 2538,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2539,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2540,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 2541,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1926,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1925,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2527,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2528,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2529,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1915,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1914,
								"name": "default.normalize"
							}
						},
						{
							"id": 2500,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NullableBooleanField.ts",
									"line": 15,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2501,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2502,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 1912,
										"name": "default.parse"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1911,
								"name": "default.parse"
							}
						},
						{
							"id": 2530,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2531,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2532,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2533,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1918,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1917,
								"name": "default.toJS"
							}
						},
						{
							"id": 2536,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2537,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1924,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1923,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2497
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2503,
								2504,
								2521,
								2518,
								2513,
								2514,
								2517,
								2516,
								2515,
								2519,
								2520,
								2496
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2548,
								2534,
								2544,
								2505,
								2509,
								2546
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2542,
								2550,
								2524,
								2538,
								2527,
								2500,
								2530,
								2536
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/NullableBooleanField.ts",
							"line": 13,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1877,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "boolean"
								}
							],
							"name": "default"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 1148,
							"name": "BooleanField"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2495
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/NullableBooleanField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2553,
			"name": "fields/NumberField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2559,
					"name": "NumberField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Base class for numeric fields",
						"text": "Other numeric fields (IntegerField, DecimalField, FloatField...) will extend this.\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 2561,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
									"line": 27,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2562,
									"name": "new NumberField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2563,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										},
										{
											"id": 2564,
											"name": "ParsableValueT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "reference",
												"id": 2563,
												"name": "T"
											}
										}
									],
									"parameters": [
										{
											"id": 2565,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2554,
												"typeArguments": [
													{
														"type": "reference",
														"id": 2563,
														"name": "T"
													}
												],
												"name": "NumberFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2559,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2563,
												"name": "T"
											},
											{
												"type": "reference",
												"id": 2564,
												"name": "ParsableValueT"
											}
										],
										"name": "default"
									},
									"overwrites": {
										"type": "reference",
										"id": 1880,
										"name": "default.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1879,
								"name": "default.constructor"
							}
						},
						{
							"id": 2568,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2563,
								"name": "T"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1885,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2569,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2564,
								"name": "ParsableValueT"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1886,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2586,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 2563,
										"name": "T"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2587,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2588,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2563,
																"name": "T"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"id": 2563,
																				"name": "T"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1905,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2583,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1110,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"id": 2563,
										"name": "T"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1902,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2578,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1897,
								"name": "default.blank"
							}
						},
						{
							"id": 2579,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1898,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2582,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2563,
										"name": "T"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1901,
								"name": "default.choices"
							}
						},
						{
							"id": 2581,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1900,
								"name": "default.helpText"
							}
						},
						{
							"id": 2580,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1899,
								"name": "default.label"
							}
						},
						{
							"id": 2567,
							"name": "maxValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
									"line": 25,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2566,
							"name": "minValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
									"line": 24,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2584,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1903,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2585,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1904,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2560,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
									"line": 23,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'NumberField'",
							"overwrites": {
								"type": "reference",
								"id": 1878,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2616,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2617,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 976,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1935,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2602,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2603,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1881,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1921,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2612,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2613,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1931,
								"name": "default.isBound"
							}
						},
						{
							"id": 2570,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2571,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 980,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2572,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2573,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1888,
								"name": "default.model"
							}
						},
						{
							"id": 2574,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2575,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2576,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2577,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1893,
								"name": "default.name"
							}
						},
						{
							"id": 2614,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2615,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1933,
								"name": "default.value"
							}
						},
						{
							"id": 2610,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2611,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1877,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2563,
												"name": "T"
											},
											{
												"type": "reference",
												"id": 2563,
												"name": "T"
											},
											{
												"type": "reference",
												"id": 2563,
												"name": "T"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1930,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1929,
								"name": "default.clone"
							}
						},
						{
							"id": 2618,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2619,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2620,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1938,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1937,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2589,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2590,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2591,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 2563,
												"name": "T"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1909,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1908,
								"name": "default.format"
							}
						},
						{
							"id": 2606,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2607,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2608,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2563,
												"name": "T"
											}
										},
										{
											"id": 2609,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2563,
												"name": "T"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1926,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1925,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2595,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2596,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2597,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 2564,
												"name": "ParsableValueT"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2563,
												"name": "T"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1915,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1914,
								"name": "default.normalize"
							}
						},
						{
							"id": 2592,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2593,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2594,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 2564,
														"name": "ParsableValueT"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2563,
												"name": "T"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1912,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1911,
								"name": "default.parse"
							}
						},
						{
							"id": 2598,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2599,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2600,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 2563,
												"name": "T"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2601,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1918,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1917,
								"name": "default.toJS"
							}
						},
						{
							"id": 2604,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2605,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1924,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1923,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2561
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2568,
								2569,
								2586,
								2583,
								2578,
								2579,
								2582,
								2581,
								2580,
								2567,
								2566,
								2584,
								2585,
								2560
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2616,
								2602,
								2612,
								2570,
								2574,
								2614
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2610,
								2618,
								2589,
								2606,
								2595,
								2592,
								2598,
								2604
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
							"line": 19,
							"character": 21
						}
					],
					"typeParameter": [
						{
							"id": 2621,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 2622,
							"name": "ParsableValueT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "reference",
								"id": 2563,
								"name": "T"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1877,
							"typeArguments": [
								{
									"type": "reference",
									"id": 2563,
									"name": "T"
								},
								{
									"type": "reference",
									"id": 2564,
									"name": "ParsableValueT"
								}
							],
							"name": "default"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 1567,
							"name": "DecimalField"
						},
						{
							"type": "reference",
							"id": 2003,
							"name": "FloatField"
						},
						{
							"type": "reference",
							"id": 2243,
							"name": "IntegerField"
						}
					]
				},
				{
					"id": 2554,
					"name": "NumberFieldProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "expand-properties",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
							"line": 6,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 2558,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"id": 1809,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2558,
										"name": "T"
									}
								],
								"name": "FieldProps"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2555,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 2557,
											"name": "maxValue",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
													"line": 8,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2556,
											"name": "minValue",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
													"line": 7,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												2557,
												2556
											]
										}
									],
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
											"line": 6,
											"character": 50
										}
									]
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2559
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						2554
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2623,
			"name": "fields/PasswordField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2624,
					"name": "PasswordField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 2626,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2627,
									"name": "new PasswordField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2628,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CharFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2624,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1210,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1209,
								"name": "default.constructor"
							}
						},
						{
							"id": 2630,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1213,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2631,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1214,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2648,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2649,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2650,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1231,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2645,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1110,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1228,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2640,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1223,
								"name": "default.blank"
							}
						},
						{
							"id": 2641,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1224,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2644,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1227,
								"name": "default.choices"
							}
						},
						{
							"id": 2643,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1226,
								"name": "default.helpText"
							}
						},
						{
							"id": 2642,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1225,
								"name": "default.label"
							}
						},
						{
							"id": 2629,
							"name": "maxLength",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 18,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1212,
								"name": "default.maxLength"
							}
						},
						{
							"id": 2646,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1229,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2647,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1230,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2625,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/PasswordField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'PasswordField'",
							"overwrites": {
								"type": "reference",
								"id": 1208,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2678,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2679,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 976,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1261,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2664,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2665,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1881,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1247,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2674,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2675,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1257,
								"name": "default.isBound"
							}
						},
						{
							"id": 2632,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2633,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 980,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2634,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2635,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1215,
								"name": "default.model"
							}
						},
						{
							"id": 2636,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2637,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2638,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2639,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1219,
								"name": "default.name"
							}
						},
						{
							"id": 2676,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2677,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1259,
								"name": "default.value"
							}
						},
						{
							"id": 2672,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2673,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1877,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1256,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1255,
								"name": "default.clone"
							}
						},
						{
							"id": 2680,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2681,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2682,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1264,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1263,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2651,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2652,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2653,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1235,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1234,
								"name": "default.format"
							}
						},
						{
							"id": 2668,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2669,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2670,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2671,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1252,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1251,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2657,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2658,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2659,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1241,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1240,
								"name": "default.normalize"
							}
						},
						{
							"id": 2654,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2655,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2656,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1238,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1237,
								"name": "default.parse"
							}
						},
						{
							"id": 2660,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2661,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2662,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2663,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1244,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1243,
								"name": "default.toJS"
							}
						},
						{
							"id": 2666,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2667,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1250,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1249,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2626
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2630,
								2631,
								2648,
								2645,
								2640,
								2641,
								2644,
								2643,
								2642,
								2629,
								2646,
								2647,
								2625
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2678,
								2664,
								2674,
								2632,
								2636,
								2676
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2672,
								2680,
								2651,
								2668,
								2657,
								2654,
								2660,
								2666
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/PasswordField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1207,
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2624
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/PasswordField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2683,
			"name": "fields/RangeField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2684,
					"name": "RangeField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Base class for range fields (see: https://www.postgresql.org/docs/9.6/rangetypes.html).",
						"text": "Other range based fields (DateTimeRangeField, IntegerRangeField, ...) will extend this.\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 2686,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
									"line": 19,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2687,
									"name": "new RangeField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2688,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 2689,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 2688,
														"name": "T"
													}
												],
												"name": "RangeFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2684,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2688,
												"name": "T"
											}
										],
										"name": "default"
									},
									"overwrites": {
										"type": "reference",
										"id": 1880,
										"name": "default.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1879,
								"name": "default.constructor"
							}
						},
						{
							"id": 2691,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2688,
								"name": "T"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1885,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2692,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2688,
								"name": "T"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1886,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2709,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 2688,
										"name": "T"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2710,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2711,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2688,
																"name": "T"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"id": 2688,
																				"name": "T"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1905,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2706,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1110,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"id": 2688,
										"name": "T"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1902,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2701,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1897,
								"name": "default.blank"
							}
						},
						{
							"id": 2702,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1898,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2705,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2688,
										"name": "T"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1901,
								"name": "default.choices"
							}
						},
						{
							"id": 2704,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1900,
								"name": "default.helpText"
							}
						},
						{
							"id": 2703,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1899,
								"name": "default.label"
							}
						},
						{
							"id": 2707,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1903,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2690,
							"name": "separator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
									"line": 17,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2708,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1904,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2685,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
									"line": 16,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'RangeField'",
							"overwrites": {
								"type": "reference",
								"id": 1878,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2739,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2740,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 976,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1935,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2725,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2726,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1881,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1921,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2735,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2736,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1931,
								"name": "default.isBound"
							}
						},
						{
							"id": 2693,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2694,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 980,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2695,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2696,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1888,
								"name": "default.model"
							}
						},
						{
							"id": 2697,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2698,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2699,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2700,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1893,
								"name": "default.name"
							}
						},
						{
							"id": 2737,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2738,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1933,
								"name": "default.value"
							}
						},
						{
							"id": 2733,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2734,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1877,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2688,
												"name": "T"
											},
											{
												"type": "reference",
												"id": 2688,
												"name": "T"
											},
											{
												"type": "reference",
												"id": 2688,
												"name": "T"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1930,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1929,
								"name": "default.clone"
							}
						},
						{
							"id": 2741,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2742,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2743,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1938,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1937,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2712,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2713,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2714,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 2688,
												"name": "T"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1909,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1908,
								"name": "default.format"
							}
						},
						{
							"id": 2729,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2730,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2731,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2688,
												"name": "T"
											}
										},
										{
											"id": 2732,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2688,
												"name": "T"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1926,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1925,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2718,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2719,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2720,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 2688,
												"name": "T"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2688,
												"name": "T"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1915,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1914,
								"name": "default.normalize"
							}
						},
						{
							"id": 2715,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2716,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2717,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 2688,
														"name": "T"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2688,
												"name": "T"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1912,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1911,
								"name": "default.parse"
							}
						},
						{
							"id": 2721,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2722,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2723,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 2688,
												"name": "T"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2724,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1918,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1917,
								"name": "default.toJS"
							}
						},
						{
							"id": 2727,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2728,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1924,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1923,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2686
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2691,
								2692,
								2709,
								2706,
								2701,
								2702,
								2705,
								2704,
								2703,
								2707,
								2690,
								2708,
								2685
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2739,
								2725,
								2735,
								2693,
								2697,
								2737
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2733,
								2741,
								2712,
								2729,
								2718,
								2715,
								2721,
								2727
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
							"line": 15,
							"character": 21
						}
					],
					"typeParameter": [
						{
							"id": 2744,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1877,
							"typeArguments": [
								{
									"type": "reference",
									"id": 2688,
									"name": "T"
								}
							],
							"name": "default"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 1388,
							"name": "DateRangeField"
						},
						{
							"type": "reference",
							"id": 1507,
							"name": "DateTimeRangeField"
						},
						{
							"type": "reference",
							"id": 1629,
							"name": "DecimalRangeField"
						},
						{
							"type": "reference",
							"id": 2064,
							"name": "FloatRangeField"
						},
						{
							"type": "reference",
							"id": 2304,
							"name": "IntegerRangeField"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2684
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2745,
			"name": "fields/RelatedViewModelField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2770,
					"name": "BaseRelatedViewModelField",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isAbstract": true
					},
					"comment": {
						"shortText": "We split into RelatedViewModelField (for single records) and ManyRelatedViewModelField (for multiple records)\nmainly to making typing easier.",
						"text": "Use `ManyRelatedViewModelField` if `sourceFieldName` refers to a `ListField` otherwise `RelatedViewModelField`.\n"
					},
					"children": [
						{
							"id": 2772,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 80,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2773,
									"name": "new BaseRelatedViewModelField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2774,
											"name": "TargetViewModelT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"id": 2774,
														"name": "TargetViewModelT"
													}
												],
												"name": "ViewModelConstructor"
											}
										},
										{
											"id": 2775,
											"name": "FieldValueT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 976,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "ViewModelInterface"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"typeArguments": [
																{
																	"type": "reference",
																	"id": 2774,
																	"name": "TargetViewModelT"
																}
															],
															"qualifiedName": "InstanceType",
															"package": "typescript",
															"name": "InstanceType"
														}
													}
												]
											}
										},
										{
											"id": 2776,
											"name": "ParsableValueT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 2774,
														"name": "TargetViewModelT"
													}
												],
												"name": "RelatedViewModelParsableType"
											}
										},
										{
											"id": 2777,
											"name": "SourceFieldNameT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 2778,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 2774,
														"name": "TargetViewModelT"
													},
													{
														"type": "reference",
														"id": 2775,
														"name": "FieldValueT"
													},
													{
														"type": "reference",
														"id": 2777,
														"name": "SourceFieldNameT"
													}
												],
												"name": "RelatedViewModelFieldProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2770,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2774,
												"name": "TargetViewModelT"
											},
											{
												"type": "reference",
												"id": 2775,
												"name": "FieldValueT"
											},
											{
												"type": "reference",
												"id": 2776,
												"name": "ParsableValueT"
											},
											{
												"type": "reference",
												"id": 2777,
												"name": "SourceFieldNameT"
											}
										],
										"name": "BaseRelatedViewModelField"
									},
									"overwrites": {
										"type": "reference",
										"id": 1880,
										"name": "default.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1879,
								"name": "default.constructor"
							}
						},
						{
							"id": 2803,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2775,
								"name": "FieldValueT"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1885,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2804,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2776,
								"name": "ParsableValueT"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1886,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2784,
							"name": "_cache",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 72,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 726,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2774,
										"name": "TargetViewModelT"
									}
								],
								"name": "default"
							}
						},
						{
							"id": 2821,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 2775,
										"name": "FieldValueT"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2822,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2823,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2775,
																"name": "FieldValueT"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"id": 2775,
																				"name": "FieldValueT"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1905,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2792,
							"name": "_isResolvingDeps",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 119,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2779,
							"name": "_loadTo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 69,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2780,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2781,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 2774,
														"name": "TargetViewModelT"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 2774,
																"name": "TargetViewModelT"
															}
														],
														"qualifiedName": "Promise",
														"package": "typescript",
														"name": "Promise"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 2782,
							"name": "_resolvedTo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 70,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 2774,
								"name": "TargetViewModelT"
							}
						},
						{
							"id": 2783,
							"name": "_resolvingTo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 71,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2774,
										"name": "TargetViewModelT"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						},
						{
							"id": 2818,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1110,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"id": 2775,
										"name": "FieldValueT"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1902,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2813,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1897,
								"name": "default.blank"
							}
						},
						{
							"id": 2814,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1898,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2817,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2775,
										"name": "FieldValueT"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1901,
								"name": "default.choices"
							}
						},
						{
							"id": 2816,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1900,
								"name": "default.helpText"
							}
						},
						{
							"id": 2815,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1899,
								"name": "default.label"
							}
						},
						{
							"id": 2819,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1903,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2786,
							"name": "sourceField",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 74,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 1877,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "default"
							}
						},
						{
							"id": 2785,
							"name": "sourceFieldName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 73,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2777,
								"name": "SourceFieldNameT"
							}
						},
						{
							"id": 2820,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1904,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2771,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 129,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"defaultValue": "null",
							"inheritedFrom": {
								"type": "reference",
								"id": 1878,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2847,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2848,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 976,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1935,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2801,
							"name": "cache",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 192,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2802,
									"name": "cache",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 726,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2774,
												"name": "TargetViewModelT"
											}
										],
										"name": "default"
									}
								}
							]
						},
						{
							"id": 2837,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2838,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1881,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1921,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2843,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2844,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1931,
								"name": "default.isBound"
							}
						},
						{
							"id": 2787,
							"name": "many",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 76,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2788,
									"name": "many",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 2805,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2806,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 980,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2807,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2808,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1888,
								"name": "default.model"
							}
						},
						{
							"id": 2809,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2810,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2811,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2812,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1893,
								"name": "default.name"
							}
						},
						{
							"id": 2799,
							"name": "to",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 171,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2800,
									"name": "to",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the [ViewModel](doc:viewModelFactory) this related field is to.",
										"text": "If `to` was defined as a function returning a `Promise` then you must call `resolveViewModel`\nand wait for the returned `Promise` to resolve before accessing this otherwise an error will be thrown\n"
									},
									"type": {
										"type": "reference",
										"id": 2774,
										"name": "TargetViewModelT"
									}
								}
							]
						},
						{
							"id": 2845,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2846,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1933,
								"name": "default.value"
							}
						},
						{
							"id": 2841,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2842,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1877,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2775,
												"name": "FieldValueT"
											},
											{
												"type": "reference",
												"id": 2775,
												"name": "FieldValueT"
											},
											{
												"type": "reference",
												"id": 2775,
												"name": "FieldValueT"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1930,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1929,
								"name": "default.clone"
							}
						},
						{
							"id": 2789,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 98,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2790,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isPrivate": true
									},
									"comment": {},
									"parameters": [
										{
											"id": 2791,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2774,
												"name": "TargetViewModelT"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"id": 1938,
										"name": "default.contributeToClass"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1937,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2824,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2825,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2826,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 2775,
												"name": "FieldValueT"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1909,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1908,
								"name": "default.format"
							}
						},
						{
							"id": 2795,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 161,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2796,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Compares to relations for equality - if the ViewModel has the same data this returns true"
									},
									"parameters": [
										{
											"id": 2797,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2775,
												"name": "FieldValueT"
											}
										},
										{
											"id": 2798,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2775,
												"name": "FieldValueT"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"overwrites": {
										"type": "reference",
										"id": 1926,
										"name": "default.isEqual"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1925,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2830,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2831,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2832,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 2776,
												"name": "ParsableValueT"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2775,
												"name": "FieldValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1915,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1914,
								"name": "default.normalize"
							}
						},
						{
							"id": 2827,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2828,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2829,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 2776,
														"name": "ParsableValueT"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2775,
												"name": "FieldValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1912,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1911,
								"name": "default.parse"
							}
						},
						{
							"id": 2793,
							"name": "resolveViewModel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 127,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2794,
									"name": "resolveViewModel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Resolves the ViewModel this field links to. This is necessary as the ViewModel might be a dynamic\nimport that hasn't yet loaded.",
										"text": "This needs to be called manually before `to` can be accessed.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2774,
												"name": "TargetViewModelT"
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2833,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2834,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2835,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 2775,
												"name": "FieldValueT"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2836,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1918,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1917,
								"name": "default.toJS"
							}
						},
						{
							"id": 2839,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2840,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1924,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1923,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2772
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2803,
								2804,
								2784,
								2821,
								2792,
								2779,
								2782,
								2783,
								2818,
								2813,
								2814,
								2817,
								2816,
								2815,
								2819,
								2786,
								2785,
								2820,
								2771
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2847,
								2801,
								2837,
								2843,
								2787,
								2805,
								2809,
								2799,
								2845
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2841,
								2789,
								2824,
								2795,
								2830,
								2827,
								2793,
								2833,
								2839
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
							"line": 62,
							"character": 22
						}
					],
					"typeParameter": [
						{
							"id": 2849,
							"name": "TargetViewModelT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 980,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ViewModelConstructor"
							}
						},
						{
							"id": 2850,
							"name": "FieldValueT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2774,
										"name": "TargetViewModelT"
									}
								],
								"name": "BaseRelatedViewModelValueType"
							}
						},
						{
							"id": 2851,
							"name": "ParsableValueT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2774,
										"name": "TargetViewModelT"
									}
								],
								"name": "RelatedViewModelParsableType"
							}
						},
						{
							"id": 2852,
							"name": "SourceFieldNameT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1877,
							"typeArguments": [
								{
									"type": "reference",
									"id": 2775,
									"name": "FieldValueT"
								},
								{
									"type": "reference",
									"id": 2776,
									"name": "ParsableValueT"
								}
							],
							"name": "default"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 2853,
							"name": "RelatedViewModelField"
						},
						{
							"type": "reference",
							"id": 2925,
							"name": "ManyRelatedViewModelField"
						}
					]
				},
				{
					"id": 2925,
					"name": "ManyRelatedViewModelField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Define a field that contains multiple records from another ViewModel",
						"text": "This behaves the same as [RelatedViewModelField](doc:RelatedViewModelField) but `sourceFieldName`\nmust refer to a [ListField](doc:ListField) and all values are an array instead of a single value.\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"children": [
						{
							"id": 2927,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2928,
									"name": "new ManyRelatedViewModelField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2929,
											"name": "TargetViewModelT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"id": 2929,
														"name": "TargetViewModelT"
													}
												],
												"name": "ViewModelConstructor"
											}
										},
										{
											"id": 2930,
											"name": "SourceFieldNameT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 2931,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 2929,
														"name": "TargetViewModelT"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"typeArguments": [
																{
																	"type": "reference",
																	"id": 2929,
																	"name": "TargetViewModelT"
																}
															],
															"qualifiedName": "InstanceType",
															"package": "typescript",
															"name": "InstanceType"
														}
													},
													{
														"type": "reference",
														"id": 2930,
														"name": "SourceFieldNameT"
													}
												],
												"name": "RelatedViewModelFieldProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2925,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2929,
												"name": "TargetViewModelT"
											},
											{
												"type": "reference",
												"id": 2930,
												"name": "SourceFieldNameT"
											}
										],
										"name": "ManyRelatedViewModelField"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2773,
										"name": "BaseRelatedViewModelField.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2772,
								"name": "BaseRelatedViewModelField.constructor"
							}
						},
						{
							"id": 2956,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "reference",
											"id": 2929,
											"name": "TargetViewModelT"
										}
									],
									"qualifiedName": "InstanceType",
									"package": "typescript",
									"name": "InstanceType"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2803,
								"name": "BaseRelatedViewModelField.__fieldValueType"
							}
						},
						{
							"id": 2957,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 914,
									"typeArguments": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "fields"
											},
											"objectType": {
												"type": "reference",
												"id": 2929,
												"name": "TargetViewModelT"
											}
										}
									],
									"name": "FieldDataMappingRaw"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2804,
								"name": "BaseRelatedViewModelField.__parsableValueType"
							}
						},
						{
							"id": 2974,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"typeArguments": [
												{
													"type": "reference",
													"id": 2929,
													"name": "TargetViewModelT"
												}
											],
											"qualifiedName": "InstanceType",
											"package": "typescript",
											"name": "InstanceType"
										}
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2975,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2976,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "reference",
																			"id": 2929,
																			"name": "TargetViewModelT"
																		}
																	],
																	"qualifiedName": "InstanceType",
																	"package": "typescript",
																	"name": "InstanceType"
																}
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 2929,
																							"name": "TargetViewModelT"
																						}
																					],
																					"qualifiedName": "InstanceType",
																					"package": "typescript",
																					"name": "InstanceType"
																				}
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2821,
								"name": "BaseRelatedViewModelField._defaultValue"
							}
						},
						{
							"id": 2945,
							"name": "_isResolvingDeps",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 119,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2792,
								"name": "BaseRelatedViewModelField._isResolvingDeps"
							}
						},
						{
							"id": 2971,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1110,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"typeArguments": [
												{
													"type": "reference",
													"id": 2929,
													"name": "TargetViewModelT"
												}
											],
											"qualifiedName": "InstanceType",
											"package": "typescript",
											"name": "InstanceType"
										}
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2818,
								"name": "BaseRelatedViewModelField.asyncChoices"
							}
						},
						{
							"id": 2966,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2813,
								"name": "BaseRelatedViewModelField.blank"
							}
						},
						{
							"id": 2967,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2814,
								"name": "BaseRelatedViewModelField.blankAsNull"
							}
						},
						{
							"id": 2970,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"typeArguments": [
												{
													"type": "reference",
													"id": 2929,
													"name": "TargetViewModelT"
												}
											],
											"qualifiedName": "InstanceType",
											"package": "typescript",
											"name": "InstanceType"
										}
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2817,
								"name": "BaseRelatedViewModelField.choices"
							}
						},
						{
							"id": 2969,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2816,
								"name": "BaseRelatedViewModelField.helpText"
							}
						},
						{
							"id": 2968,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2815,
								"name": "BaseRelatedViewModelField.label"
							}
						},
						{
							"id": 2972,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2819,
								"name": "BaseRelatedViewModelField.readOnly"
							}
						},
						{
							"id": 2939,
							"name": "sourceField",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 74,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 1877,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2786,
								"name": "BaseRelatedViewModelField.sourceField"
							}
						},
						{
							"id": 2938,
							"name": "sourceFieldName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 73,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2930,
								"name": "SourceFieldNameT"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2785,
								"name": "BaseRelatedViewModelField.sourceFieldName"
							}
						},
						{
							"id": 2973,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2820,
								"name": "BaseRelatedViewModelField.writeOnly"
							}
						},
						{
							"id": 2926,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 368,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'ManyRelatedViewModelField'",
							"overwrites": {
								"type": "reference",
								"id": 2771,
								"name": "BaseRelatedViewModelField.fieldClassName"
							}
						},
						{
							"id": 2993,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2994,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 976,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2847,
								"name": "BaseRelatedViewModelField.boundRecord"
							}
						},
						{
							"id": 2954,
							"name": "cache",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 192,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2955,
									"name": "cache",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 726,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2774,
												"name": "TargetViewModelT"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.cache"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2801,
								"name": "BaseRelatedViewModelField.cache"
							}
						},
						{
							"id": 2983,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2984,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1881,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2837,
								"name": "BaseRelatedViewModelField.defaultValue"
							}
						},
						{
							"id": 2989,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2990,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2843,
								"name": "BaseRelatedViewModelField.isBound"
							}
						},
						{
							"id": 2940,
							"name": "many",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 76,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2941,
									"name": "many",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.many"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2787,
								"name": "BaseRelatedViewModelField.many"
							}
						},
						{
							"id": 2958,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2959,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 980,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2960,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2961,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2805,
								"name": "BaseRelatedViewModelField.model"
							}
						},
						{
							"id": 2962,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2963,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2964,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2965,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2809,
								"name": "BaseRelatedViewModelField.name"
							}
						},
						{
							"id": 2952,
							"name": "to",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 171,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2953,
									"name": "to",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the [ViewModel](doc:viewModelFactory) this related field is to.",
										"text": "If `to` was defined as a function returning a `Promise` then you must call `resolveViewModel`\nand wait for the returned `Promise` to resolve before accessing this otherwise an error will be thrown\n"
									},
									"type": {
										"type": "reference",
										"id": 2774,
										"name": "TargetViewModelT"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.to"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2799,
								"name": "BaseRelatedViewModelField.to"
							}
						},
						{
							"id": 2991,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2992,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2845,
								"name": "BaseRelatedViewModelField.value"
							}
						},
						{
							"id": 2987,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2988,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1877,
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"typeArguments": [
														{
															"type": "reference",
															"id": 2929,
															"name": "TargetViewModelT"
														}
													],
													"qualifiedName": "InstanceType",
													"package": "typescript",
													"name": "InstanceType"
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"typeArguments": [
														{
															"type": "reference",
															"id": 2929,
															"name": "TargetViewModelT"
														}
													],
													"qualifiedName": "InstanceType",
													"package": "typescript",
													"name": "InstanceType"
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"typeArguments": [
														{
															"type": "reference",
															"id": 2929,
															"name": "TargetViewModelT"
														}
													],
													"qualifiedName": "InstanceType",
													"package": "typescript",
													"name": "InstanceType"
												}
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2842,
										"name": "BaseRelatedViewModelField.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2841,
								"name": "BaseRelatedViewModelField.clone"
							}
						},
						{
							"id": 2942,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 98,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2943,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isPrivate": true
									},
									"comment": {},
									"parameters": [
										{
											"id": 2944,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2929,
												"name": "TargetViewModelT"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2790,
										"name": "BaseRelatedViewModelField.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2789,
								"name": "BaseRelatedViewModelField.contributeToClass"
							}
						},
						{
							"id": 2977,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2978,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2979,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"typeArguments": [
														{
															"type": "reference",
															"id": 2929,
															"name": "TargetViewModelT"
														}
													],
													"qualifiedName": "InstanceType",
													"package": "typescript",
													"name": "InstanceType"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2825,
										"name": "BaseRelatedViewModelField.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2824,
								"name": "BaseRelatedViewModelField.format"
							}
						},
						{
							"id": 2948,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 161,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2949,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Compares to relations for equality - if the ViewModel has the same data this returns true"
									},
									"parameters": [
										{
											"id": 2950,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"typeArguments": [
														{
															"type": "reference",
															"id": 2929,
															"name": "TargetViewModelT"
														}
													],
													"qualifiedName": "InstanceType",
													"package": "typescript",
													"name": "InstanceType"
												}
											}
										},
										{
											"id": 2951,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"typeArguments": [
														{
															"type": "reference",
															"id": 2929,
															"name": "TargetViewModelT"
														}
													],
													"qualifiedName": "InstanceType",
													"package": "typescript",
													"name": "InstanceType"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2796,
										"name": "BaseRelatedViewModelField.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2795,
								"name": "BaseRelatedViewModelField.isEqual"
							}
						},
						{
							"id": 2932,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 372,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2933,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Converts a value into the relations [ViewModel](doc:viewModelFactory) instance."
									},
									"parameters": [
										{
											"id": 2934,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"typeArguments": [
												{
													"type": "reference",
													"id": 2929,
													"name": "TargetViewModelT"
												}
											],
											"qualifiedName": "InstanceType",
											"package": "typescript",
											"name": "InstanceType"
										}
									},
									"overwrites": {
										"type": "reference",
										"id": 2831,
										"name": "BaseRelatedViewModelField.normalize"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 2830,
								"name": "BaseRelatedViewModelField.normalize"
							}
						},
						{
							"id": 2980,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2981,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2982,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 914,
															"typeArguments": [
																{
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "literal",
																		"value": "fields"
																	},
																	"objectType": {
																		"type": "reference",
																		"id": 2929,
																		"name": "TargetViewModelT"
																	}
																}
															],
															"name": "FieldDataMappingRaw"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"typeArguments": [
														{
															"type": "reference",
															"id": 2929,
															"name": "TargetViewModelT"
														}
													],
													"qualifiedName": "InstanceType",
													"package": "typescript",
													"name": "InstanceType"
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2828,
										"name": "BaseRelatedViewModelField.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2827,
								"name": "BaseRelatedViewModelField.parse"
							}
						},
						{
							"id": 2946,
							"name": "resolveViewModel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 127,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2947,
									"name": "resolveViewModel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Resolves the ViewModel this field links to. This is necessary as the ViewModel might be a dynamic\nimport that hasn't yet loaded.",
										"text": "This needs to be called manually before `to` can be accessed.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2929,
												"name": "TargetViewModelT"
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2794,
										"name": "BaseRelatedViewModelField.resolveViewModel"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2793,
								"name": "BaseRelatedViewModelField.resolveViewModel"
							}
						},
						{
							"id": 2935,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 392,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2936,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Converts the linked record to a plain javascript object"
									},
									"parameters": [
										{
											"id": 2937,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"typeArguments": [
														{
															"type": "reference",
															"id": 2929,
															"name": "TargetViewModelT"
														}
													],
													"qualifiedName": "InstanceType",
													"package": "typescript",
													"name": "InstanceType"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"qualifiedName": "Record",
										"package": "typescript",
										"name": "Record"
									},
									"overwrites": {
										"type": "reference",
										"id": 2834,
										"name": "BaseRelatedViewModelField.toJS"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 2833,
								"name": "BaseRelatedViewModelField.toJS"
							}
						},
						{
							"id": 2985,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2986,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2840,
										"name": "BaseRelatedViewModelField.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2839,
								"name": "BaseRelatedViewModelField.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2927
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2956,
								2957,
								2974,
								2945,
								2971,
								2966,
								2967,
								2970,
								2969,
								2968,
								2972,
								2939,
								2938,
								2973,
								2926
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2993,
								2954,
								2983,
								2989,
								2940,
								2958,
								2962,
								2952,
								2991
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2987,
								2942,
								2977,
								2948,
								2932,
								2980,
								2946,
								2935,
								2985
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
							"line": 359,
							"character": 13
						}
					],
					"typeParameter": [
						{
							"id": 2995,
							"name": "TargetViewModelT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 980,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ViewModelConstructor"
							}
						},
						{
							"id": 2996,
							"name": "SourceFieldNameT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2770,
							"typeArguments": [
								{
									"type": "reference",
									"id": 2929,
									"name": "TargetViewModelT"
								},
								{
									"type": "array",
									"elementType": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2929,
												"name": "TargetViewModelT"
											}
										],
										"name": "RelatedViewModelValueType"
									}
								},
								{
									"type": "array",
									"elementType": {
										"type": "reference",
										"id": 914,
										"typeArguments": [
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "literal",
													"value": "fields"
												},
												"objectType": {
													"type": "reference",
													"id": 2929,
													"name": "TargetViewModelT"
												}
											}
										],
										"name": "FieldDataMappingRaw"
									}
								},
								{
									"type": "reference",
									"id": 2930,
									"name": "SourceFieldNameT"
								}
							],
							"name": "BaseRelatedViewModelField"
						}
					]
				},
				{
					"id": 2853,
					"name": "RelatedViewModelField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Define a field that references another ViewModel",
						"text": "This requires two things:\n\n1) The ViewModel to reference\n2) The field on the source ViewModel that contains the ID for the relation\n\nIn the following example `User` has a `Group` as a relation. The id for the\nconnected group is stored on the `groupId` field:\n\n```js\nclass Group extends viewModelFactory({\n  name: new CharField(),\n}) {}\nclass User extends viewModelFactory({\n  name: new CharField(),\n  groupId: new IntegerField(),\n  group: new RelatedViewModelField({\n    to: Group,\n    sourceFieldName: 'groupId',\n  }),\n}) {}\n```\n\nYou can then fetch the data - including the relations - from the cache:\n\n```js\nGroup.cache.add({ id: 1, name: 'Staff' });\nUser.cache.add({ id: 1, name: 'Bob', groupId: 1 });\nUser.cache.get(['name', 'group']);\n// { id: 1, name: 'Bob', groupId: 1, group: { id: 1, name: 'Staff' }}\n```\n\nThe `to` field can also be a function to support circular references:\n\n```js\nclass Group extends viewModelFactory({\n  name: new CharField(),\n  ownerId: new IntegerField(),\n  owner: new RelatedViewModelField({\n    to: () => User,\n    sourceFieldName: 'ownerId',\n  }),\n}) {}\nclass User extends viewModelFactory({\n  name: new CharField(),\n  groupId: new IntegerField(),\n  group: new RelatedViewModelField({\n    to: Group,\n    sourceFieldName: 'groupId',\n  }),\n}) {}\n```\n\nYou can query the circular relations as deep as you want:\n\n```js\nGroup.cache.add({ id: 1, name: 'Staff', ownerId: 1 });\nUser.cache.add({ id: 1, name: 'Bob', groupId: 1 });\nUser.cache.get(['name', 'group', ['group', 'owner'], ['group', 'owner', 'group']);\n// {\n//   id: 1,\n//   name: 'Bob',\n//   groupId: 1,\n//   group: {\n//     id: 1,\n//     name: 'Staff',\n//     ownerId: 1,\n//     owner: {\n//       id: 1,\n//       name: 'Bob',\n//       groupId: 1,\n//       group: {\n//         id: 1,\n//         name: 'Staff',\n//         ownerId: 1,\n//       }\n//     },\n//   },\n// }\n```\n\n`to` can also be a function that returns a Promise. This is useful to\nlazy load modules:\n\n```js\nclass Subscription extends viewModelFactory({\n  userId: new IntegerField(),\n  user: new RelatedViewModelField({\n      sourceFieldName: 'userId',\n      to: async () => {\n        const User = await import('./User').default;\n        return User;\n      }\n  })\n}) {}\n```\n\n**NOTE:** When you return a promise you have to call `resolveViewModel` on\nthat field before it's usable:\n\n```js\nawait Subscription.fields.user.resolveViewModel()\n```\n\nFailure to do this will result in an error being thrown the first time it's accessed.\n\nIf you have multiple values use [ManyRelatedViewModelField](doc:ManyRelatedViewModelField) instead.\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"children": [
						{
							"id": 2855,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2856,
									"name": "new RelatedViewModelField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2857,
											"name": "TargetViewModelT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"id": 2857,
														"name": "TargetViewModelT"
													}
												],
												"name": "ViewModelConstructor"
											}
										},
										{
											"id": 2858,
											"name": "SourceFieldNameT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 2859,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 2857,
														"name": "TargetViewModelT"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 2857,
																"name": "TargetViewModelT"
															}
														],
														"qualifiedName": "InstanceType",
														"package": "typescript",
														"name": "InstanceType"
													},
													{
														"type": "reference",
														"id": 2858,
														"name": "SourceFieldNameT"
													}
												],
												"name": "RelatedViewModelFieldProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2853,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2857,
												"name": "TargetViewModelT"
											},
											{
												"type": "reference",
												"id": 2858,
												"name": "SourceFieldNameT"
											}
										],
										"name": "RelatedViewModelField"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2773,
										"name": "BaseRelatedViewModelField.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2772,
								"name": "BaseRelatedViewModelField.constructor"
							}
						},
						{
							"id": 2884,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2857,
										"name": "TargetViewModelT"
									}
								],
								"qualifiedName": "InstanceType",
								"package": "typescript",
								"name": "InstanceType"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2803,
								"name": "BaseRelatedViewModelField.__fieldValueType"
							}
						},
						{
							"id": 2885,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 914,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "fields"
										},
										"objectType": {
											"type": "reference",
											"id": 2857,
											"name": "TargetViewModelT"
										}
									}
								],
								"name": "FieldDataMappingRaw"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2804,
								"name": "BaseRelatedViewModelField.__parsableValueType"
							}
						},
						{
							"id": 2902,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2857,
												"name": "TargetViewModelT"
											}
										],
										"qualifiedName": "InstanceType",
										"package": "typescript",
										"name": "InstanceType"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2903,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2904,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 2857,
																		"name": "TargetViewModelT"
																	}
																],
																"qualifiedName": "InstanceType",
																"package": "typescript",
																"name": "InstanceType"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"id": 2857,
																						"name": "TargetViewModelT"
																					}
																				],
																				"qualifiedName": "InstanceType",
																				"package": "typescript",
																				"name": "InstanceType"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2821,
								"name": "BaseRelatedViewModelField._defaultValue"
							}
						},
						{
							"id": 2873,
							"name": "_isResolvingDeps",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 119,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2792,
								"name": "BaseRelatedViewModelField._isResolvingDeps"
							}
						},
						{
							"id": 2899,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1110,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2857,
												"name": "TargetViewModelT"
											}
										],
										"qualifiedName": "InstanceType",
										"package": "typescript",
										"name": "InstanceType"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2818,
								"name": "BaseRelatedViewModelField.asyncChoices"
							}
						},
						{
							"id": 2894,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2813,
								"name": "BaseRelatedViewModelField.blank"
							}
						},
						{
							"id": 2895,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2814,
								"name": "BaseRelatedViewModelField.blankAsNull"
							}
						},
						{
							"id": 2898,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2857,
												"name": "TargetViewModelT"
											}
										],
										"qualifiedName": "InstanceType",
										"package": "typescript",
										"name": "InstanceType"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2817,
								"name": "BaseRelatedViewModelField.choices"
							}
						},
						{
							"id": 2897,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2816,
								"name": "BaseRelatedViewModelField.helpText"
							}
						},
						{
							"id": 2896,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2815,
								"name": "BaseRelatedViewModelField.label"
							}
						},
						{
							"id": 2900,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2819,
								"name": "BaseRelatedViewModelField.readOnly"
							}
						},
						{
							"id": 2867,
							"name": "sourceField",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 74,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 1877,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2786,
								"name": "BaseRelatedViewModelField.sourceField"
							}
						},
						{
							"id": 2866,
							"name": "sourceFieldName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 73,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2858,
								"name": "SourceFieldNameT"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2785,
								"name": "BaseRelatedViewModelField.sourceFieldName"
							}
						},
						{
							"id": 2901,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2820,
								"name": "BaseRelatedViewModelField.writeOnly"
							}
						},
						{
							"id": 2854,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 322,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'RelatedViewModelField'",
							"overwrites": {
								"type": "reference",
								"id": 2771,
								"name": "BaseRelatedViewModelField.fieldClassName"
							}
						},
						{
							"id": 2921,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2922,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 976,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2847,
								"name": "BaseRelatedViewModelField.boundRecord"
							}
						},
						{
							"id": 2882,
							"name": "cache",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 192,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2883,
									"name": "cache",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 726,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2774,
												"name": "TargetViewModelT"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.cache"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2801,
								"name": "BaseRelatedViewModelField.cache"
							}
						},
						{
							"id": 2911,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2912,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1881,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2837,
								"name": "BaseRelatedViewModelField.defaultValue"
							}
						},
						{
							"id": 2917,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2918,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2843,
								"name": "BaseRelatedViewModelField.isBound"
							}
						},
						{
							"id": 2868,
							"name": "many",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 76,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2869,
									"name": "many",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.many"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2787,
								"name": "BaseRelatedViewModelField.many"
							}
						},
						{
							"id": 2886,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2887,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 980,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2888,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2889,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2805,
								"name": "BaseRelatedViewModelField.model"
							}
						},
						{
							"id": 2890,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2891,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2892,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2893,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2809,
								"name": "BaseRelatedViewModelField.name"
							}
						},
						{
							"id": 2880,
							"name": "to",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 171,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2881,
									"name": "to",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the [ViewModel](doc:viewModelFactory) this related field is to.",
										"text": "If `to` was defined as a function returning a `Promise` then you must call `resolveViewModel`\nand wait for the returned `Promise` to resolve before accessing this otherwise an error will be thrown\n"
									},
									"type": {
										"type": "reference",
										"id": 2774,
										"name": "TargetViewModelT"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.to"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2799,
								"name": "BaseRelatedViewModelField.to"
							}
						},
						{
							"id": 2919,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2920,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2845,
								"name": "BaseRelatedViewModelField.value"
							}
						},
						{
							"id": 2915,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2916,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1877,
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 2857,
														"name": "TargetViewModelT"
													}
												],
												"qualifiedName": "InstanceType",
												"package": "typescript",
												"name": "InstanceType"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 2857,
														"name": "TargetViewModelT"
													}
												],
												"qualifiedName": "InstanceType",
												"package": "typescript",
												"name": "InstanceType"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 2857,
														"name": "TargetViewModelT"
													}
												],
												"qualifiedName": "InstanceType",
												"package": "typescript",
												"name": "InstanceType"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2842,
										"name": "BaseRelatedViewModelField.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2841,
								"name": "BaseRelatedViewModelField.clone"
							}
						},
						{
							"id": 2870,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 98,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2871,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isPrivate": true
									},
									"comment": {},
									"parameters": [
										{
											"id": 2872,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2857,
												"name": "TargetViewModelT"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2790,
										"name": "BaseRelatedViewModelField.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2789,
								"name": "BaseRelatedViewModelField.contributeToClass"
							}
						},
						{
							"id": 2905,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2906,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2907,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 2857,
														"name": "TargetViewModelT"
													}
												],
												"qualifiedName": "InstanceType",
												"package": "typescript",
												"name": "InstanceType"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2825,
										"name": "BaseRelatedViewModelField.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2824,
								"name": "BaseRelatedViewModelField.format"
							}
						},
						{
							"id": 2876,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 161,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2877,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Compares to relations for equality - if the ViewModel has the same data this returns true"
									},
									"parameters": [
										{
											"id": 2878,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 2857,
														"name": "TargetViewModelT"
													}
												],
												"qualifiedName": "InstanceType",
												"package": "typescript",
												"name": "InstanceType"
											}
										},
										{
											"id": 2879,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 2857,
														"name": "TargetViewModelT"
													}
												],
												"qualifiedName": "InstanceType",
												"package": "typescript",
												"name": "InstanceType"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2796,
										"name": "BaseRelatedViewModelField.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2795,
								"name": "BaseRelatedViewModelField.isEqual"
							}
						},
						{
							"id": 2860,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 326,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2861,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Converts a value into the relations [ViewModel](doc:viewModelFactory) instance."
									},
									"parameters": [
										{
											"id": 2862,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2857,
												"name": "TargetViewModelT"
											}
										],
										"qualifiedName": "InstanceType",
										"package": "typescript",
										"name": "InstanceType"
									},
									"overwrites": {
										"type": "reference",
										"id": 2831,
										"name": "BaseRelatedViewModelField.normalize"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 2830,
								"name": "BaseRelatedViewModelField.normalize"
							}
						},
						{
							"id": 2908,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2909,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2910,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 914,
														"typeArguments": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "fields"
																},
																"objectType": {
																	"type": "reference",
																	"id": 2857,
																	"name": "TargetViewModelT"
																}
															}
														],
														"name": "FieldDataMappingRaw"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 2857,
														"name": "TargetViewModelT"
													}
												],
												"qualifiedName": "InstanceType",
												"package": "typescript",
												"name": "InstanceType"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2828,
										"name": "BaseRelatedViewModelField.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2827,
								"name": "BaseRelatedViewModelField.parse"
							}
						},
						{
							"id": 2874,
							"name": "resolveViewModel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 127,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2875,
									"name": "resolveViewModel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Resolves the ViewModel this field links to. This is necessary as the ViewModel might be a dynamic\nimport that hasn't yet loaded.",
										"text": "This needs to be called manually before `to` can be accessed.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2857,
												"name": "TargetViewModelT"
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2794,
										"name": "BaseRelatedViewModelField.resolveViewModel"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2793,
								"name": "BaseRelatedViewModelField.resolveViewModel"
							}
						},
						{
							"id": 2863,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 339,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2864,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Converts the linked record to a plain javascript object"
									},
									"parameters": [
										{
											"id": 2865,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 2857,
														"name": "TargetViewModelT"
													}
												],
												"qualifiedName": "InstanceType",
												"package": "typescript",
												"name": "InstanceType"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"qualifiedName": "Record",
										"package": "typescript",
										"name": "Record"
									},
									"overwrites": {
										"type": "reference",
										"id": 2834,
										"name": "BaseRelatedViewModelField.toJS"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 2833,
								"name": "BaseRelatedViewModelField.toJS"
							}
						},
						{
							"id": 2913,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2914,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2840,
										"name": "BaseRelatedViewModelField.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2839,
								"name": "BaseRelatedViewModelField.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2855
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2884,
								2885,
								2902,
								2873,
								2899,
								2894,
								2895,
								2898,
								2897,
								2896,
								2900,
								2867,
								2866,
								2901,
								2854
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2921,
								2882,
								2911,
								2917,
								2868,
								2886,
								2890,
								2880,
								2919
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2915,
								2870,
								2905,
								2876,
								2860,
								2908,
								2874,
								2863,
								2913
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
							"line": 313,
							"character": 13
						}
					],
					"typeParameter": [
						{
							"id": 2923,
							"name": "TargetViewModelT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 980,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ViewModelConstructor"
							}
						},
						{
							"id": 2924,
							"name": "SourceFieldNameT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2770,
							"typeArguments": [
								{
									"type": "reference",
									"id": 2857,
									"name": "TargetViewModelT"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "reference",
											"id": 2857,
											"name": "TargetViewModelT"
										}
									],
									"name": "RelatedViewModelValueType"
								},
								{
									"type": "reference",
									"id": 914,
									"typeArguments": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "fields"
											},
											"objectType": {
												"type": "reference",
												"id": 2857,
												"name": "TargetViewModelT"
											}
										}
									],
									"name": "FieldDataMappingRaw"
								},
								{
									"type": "reference",
									"id": 2858,
									"name": "SourceFieldNameT"
								}
							],
							"name": "BaseRelatedViewModelField"
						}
					]
				},
				{
					"id": 2746,
					"name": "UnresolvedRelatedViewModelFieldError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 2756,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 47,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2757,
									"name": "new UnresolvedRelatedViewModelFieldError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2758,
											"name": "TargetViewModelT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"id": 2758,
														"name": "TargetViewModelT"
													}
												],
												"name": "ViewModelConstructor"
											}
										},
										{
											"id": 2759,
											"name": "FieldValueT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 976,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "ViewModelInterface"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"typeArguments": [
																{
																	"type": "reference",
																	"id": 2758,
																	"name": "TargetViewModelT"
																}
															],
															"qualifiedName": "InstanceType",
															"package": "typescript",
															"name": "InstanceType"
														}
													}
												]
											}
										},
										{
											"id": 2760,
											"name": "ParsableValueT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 2758,
														"name": "TargetViewModelT"
													}
												],
												"name": "RelatedViewModelParsableType"
											}
										}
									],
									"parameters": [
										{
											"id": 2761,
											"name": "field",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2770,
												"typeArguments": [
													{
														"type": "reference",
														"id": 2758,
														"name": "TargetViewModelT"
													},
													{
														"type": "reference",
														"id": 2759,
														"name": "FieldValueT"
													},
													{
														"type": "reference",
														"id": 2760,
														"name": "ParsableValueT"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "BaseRelatedViewModelField"
											}
										},
										{
											"id": 2762,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2746,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2758,
												"name": "TargetViewModelT"
											},
											{
												"type": "reference",
												"id": 2759,
												"name": "FieldValueT"
											},
											{
												"type": "reference",
												"id": 2760,
												"name": "ParsableValueT"
											}
										],
										"name": "UnresolvedRelatedViewModelFieldError"
									},
									"overwrites": {
										"type": "reference",
										"name": "Error.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Error.constructor"
							}
						},
						{
							"id": 2763,
							"name": "field",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 46,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2770,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2758,
										"name": "TargetViewModelT"
									},
									{
										"type": "reference",
										"id": 2759,
										"name": "FieldValueT"
									},
									{
										"type": "reference",
										"id": 2760,
										"name": "ParsableValueT"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "BaseRelatedViewModelField"
							}
						},
						{
							"id": 2765,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1023,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.message"
							}
						},
						{
							"id": 2764,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1022,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.name"
							}
						},
						{
							"id": 2766,
							"name": "stack",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1024,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.stack"
							}
						},
						{
							"id": 2755,
							"name": "stackTraceLimit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/node_modules/@types/node/globals.d.ts",
									"line": 117,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.stackTraceLimit"
							}
						},
						{
							"id": 2747,
							"name": "captureStackTrace",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 2748,
									"name": "captureStackTrace",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Create .stack property on a target object"
									},
									"parameters": [
										{
											"id": 2749,
											"name": "targetObject",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 2750,
											"name": "constructorOpt",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Function",
												"package": "typescript",
												"name": "Function"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Error.captureStackTrace"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.captureStackTrace"
							}
						},
						{
							"id": 2751,
							"name": "prepareStackTrace",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/node_modules/@types/node/globals.d.ts",
									"line": 115,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2752,
									"name": "prepareStackTrace",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Optional override for formatting stack traces",
										"tags": [
											{
												"tag": "see",
												"text": "https://github.com/v8/v8/wiki/Stack%20Trace%20API#customizing-stack-traces\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2753,
											"name": "err",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Error",
												"package": "typescript",
												"name": "Error"
											}
										},
										{
											"id": 2754,
											"name": "stackTraces",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"qualifiedName": "NodeJS.CallSite",
													"package": "@types/node",
													"name": "CallSite"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Error.prepareStackTrace"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.prepareStackTrace"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2756
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2763,
								2765,
								2764,
								2766,
								2755
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2747,
								2751
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
							"line": 41,
							"character": 13
						}
					],
					"typeParameter": [
						{
							"id": 2767,
							"name": "TargetViewModelT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 980,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ViewModelConstructor"
							}
						},
						{
							"id": 2768,
							"name": "FieldValueT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2758,
										"name": "TargetViewModelT"
									}
								],
								"name": "BaseRelatedViewModelValueType"
							}
						},
						{
							"id": 2769,
							"name": "ParsableValueT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2758,
										"name": "TargetViewModelT"
									}
								],
								"name": "RelatedViewModelParsableType"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Error",
							"package": "typescript",
							"name": "Error"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2770,
						2925,
						2853,
						2746
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2997,
			"name": "fields/SlugField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2998,
					"name": "SlugField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 3000,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3001,
									"name": "new SlugField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3002,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CharFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2998,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1210,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1209,
								"name": "default.constructor"
							}
						},
						{
							"id": 3004,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1213,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 3005,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1214,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 3022,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3023,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3024,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1231,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 3019,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1110,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1228,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 3014,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1223,
								"name": "default.blank"
							}
						},
						{
							"id": 3015,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1224,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 3018,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1227,
								"name": "default.choices"
							}
						},
						{
							"id": 3017,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1226,
								"name": "default.helpText"
							}
						},
						{
							"id": 3016,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1225,
								"name": "default.label"
							}
						},
						{
							"id": 3003,
							"name": "maxLength",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 18,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1212,
								"name": "default.maxLength"
							}
						},
						{
							"id": 3020,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1229,
								"name": "default.readOnly"
							}
						},
						{
							"id": 3021,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1230,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2999,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/SlugField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'SlugField'",
							"overwrites": {
								"type": "reference",
								"id": 1208,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 3052,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3053,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 976,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1261,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 3038,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3039,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1881,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1247,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 3048,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3049,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1257,
								"name": "default.isBound"
							}
						},
						{
							"id": 3006,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3007,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 980,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 3008,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3009,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1215,
								"name": "default.model"
							}
						},
						{
							"id": 3010,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3011,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 3012,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3013,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1219,
								"name": "default.name"
							}
						},
						{
							"id": 3050,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3051,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1259,
								"name": "default.value"
							}
						},
						{
							"id": 3046,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3047,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1877,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1256,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1255,
								"name": "default.clone"
							}
						},
						{
							"id": 3054,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3055,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 3056,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1264,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1263,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 3025,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3026,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 3027,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1235,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1234,
								"name": "default.format"
							}
						},
						{
							"id": 3042,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3043,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 3044,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3045,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1252,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1251,
								"name": "default.isEqual"
							}
						},
						{
							"id": 3031,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3032,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 3033,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1241,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1240,
								"name": "default.normalize"
							}
						},
						{
							"id": 3028,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3029,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 3030,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1238,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1237,
								"name": "default.parse"
							}
						},
						{
							"id": 3034,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3035,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 3036,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3037,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1244,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1243,
								"name": "default.toJS"
							}
						},
						{
							"id": 3040,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3041,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1250,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1249,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3000
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3004,
								3005,
								3022,
								3019,
								3014,
								3015,
								3018,
								3017,
								3016,
								3003,
								3020,
								3021,
								2999
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3052,
								3038,
								3048,
								3006,
								3010,
								3050
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3046,
								3054,
								3025,
								3042,
								3031,
								3028,
								3034,
								3040
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/SlugField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1207,
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2998
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/SlugField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3057,
			"name": "fields/TextField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3058,
					"name": "TextField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 3060,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3061,
									"name": "new TextField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3062,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CharFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 3058,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1210,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1209,
								"name": "default.constructor"
							}
						},
						{
							"id": 3064,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1213,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 3065,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1214,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 3082,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3083,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3084,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1231,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 3079,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1110,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1228,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 3074,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1223,
								"name": "default.blank"
							}
						},
						{
							"id": 3075,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1224,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 3078,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1227,
								"name": "default.choices"
							}
						},
						{
							"id": 3077,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1226,
								"name": "default.helpText"
							}
						},
						{
							"id": 3076,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1225,
								"name": "default.label"
							}
						},
						{
							"id": 3063,
							"name": "maxLength",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 18,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1212,
								"name": "default.maxLength"
							}
						},
						{
							"id": 3080,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1229,
								"name": "default.readOnly"
							}
						},
						{
							"id": 3081,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1230,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 3059,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/TextField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'TextField'",
							"overwrites": {
								"type": "reference",
								"id": 1208,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 3112,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3113,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 976,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1261,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 3098,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3099,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1881,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1247,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 3108,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3109,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1257,
								"name": "default.isBound"
							}
						},
						{
							"id": 3066,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3067,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 980,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 3068,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3069,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1215,
								"name": "default.model"
							}
						},
						{
							"id": 3070,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3071,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 3072,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3073,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1219,
								"name": "default.name"
							}
						},
						{
							"id": 3110,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3111,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1259,
								"name": "default.value"
							}
						},
						{
							"id": 3106,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3107,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1877,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1256,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1255,
								"name": "default.clone"
							}
						},
						{
							"id": 3114,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3115,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 3116,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1264,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1263,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 3085,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3086,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 3087,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1235,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1234,
								"name": "default.format"
							}
						},
						{
							"id": 3102,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3103,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 3104,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3105,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1252,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1251,
								"name": "default.isEqual"
							}
						},
						{
							"id": 3091,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3092,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 3093,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1241,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1240,
								"name": "default.normalize"
							}
						},
						{
							"id": 3088,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3089,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 3090,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1238,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1237,
								"name": "default.parse"
							}
						},
						{
							"id": 3094,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3095,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 3096,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3097,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1244,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1243,
								"name": "default.toJS"
							}
						},
						{
							"id": 3100,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3101,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1250,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1249,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3060
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3064,
								3065,
								3082,
								3079,
								3074,
								3075,
								3078,
								3077,
								3076,
								3063,
								3080,
								3081,
								3059
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3112,
								3098,
								3108,
								3066,
								3070,
								3110
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3106,
								3114,
								3085,
								3102,
								3091,
								3088,
								3094,
								3100
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/TextField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1207,
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3058
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/TextField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3117,
			"name": "fields/TimeField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3118,
					"name": "TimeField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Time Field.",
						"text": "String based: Native javascript Date does not have a nice way to describe a time-only object. Make sure any third party library of your choice like MomentJS handles this correctly.\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 3120,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3121,
									"name": "new TimeField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3122,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1809,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "FieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 3118,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1880,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1879,
								"name": "default.constructor"
							}
						},
						{
							"id": 3123,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1885,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 3124,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1886,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 3141,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3142,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3143,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1905,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 3138,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1110,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1902,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 3133,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1897,
								"name": "default.blank"
							}
						},
						{
							"id": 3134,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1898,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 3137,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1901,
								"name": "default.choices"
							}
						},
						{
							"id": 3136,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1900,
								"name": "default.helpText"
							}
						},
						{
							"id": 3135,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1899,
								"name": "default.label"
							}
						},
						{
							"id": 3139,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1903,
								"name": "default.readOnly"
							}
						},
						{
							"id": 3140,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1904,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 3119,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/TimeField.ts",
									"line": 12,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'TimeField'",
							"overwrites": {
								"type": "reference",
								"id": 1878,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 3171,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3172,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 976,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1935,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 3157,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3158,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1881,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1921,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 3167,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3168,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1931,
								"name": "default.isBound"
							}
						},
						{
							"id": 3125,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3126,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 980,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 3127,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3128,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1888,
								"name": "default.model"
							}
						},
						{
							"id": 3129,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3130,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 3131,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3132,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1893,
								"name": "default.name"
							}
						},
						{
							"id": 3169,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3170,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1933,
								"name": "default.value"
							}
						},
						{
							"id": 3165,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3166,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1877,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1930,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1929,
								"name": "default.clone"
							}
						},
						{
							"id": 3173,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3174,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 3175,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1938,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1937,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 3144,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3145,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 3146,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1909,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1908,
								"name": "default.format"
							}
						},
						{
							"id": 3161,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3162,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 3163,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3164,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1926,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1925,
								"name": "default.isEqual"
							}
						},
						{
							"id": 3150,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3151,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 3152,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1915,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1914,
								"name": "default.normalize"
							}
						},
						{
							"id": 3147,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3148,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 3149,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1912,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1911,
								"name": "default.parse"
							}
						},
						{
							"id": 3153,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3154,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 3155,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3156,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1918,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1917,
								"name": "default.toJS"
							}
						},
						{
							"id": 3159,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3160,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1924,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1923,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3120
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3123,
								3124,
								3141,
								3138,
								3133,
								3134,
								3137,
								3136,
								3135,
								3139,
								3140,
								3119
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3171,
								3157,
								3167,
								3125,
								3129,
								3169
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3165,
								3173,
								3144,
								3161,
								3150,
								3147,
								3153,
								3159
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/TimeField.ts",
							"line": 11,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1877,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "string"
								}
							],
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3118
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/TimeField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3176,
			"name": "fields/URLField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3177,
					"name": "URLField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 3179,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3180,
									"name": "new URLField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3181,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CharFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 3177,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1210,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1209,
								"name": "default.constructor"
							}
						},
						{
							"id": 3183,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1213,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 3184,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1214,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 3201,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3202,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3203,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1231,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 3198,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1110,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1228,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 3193,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1223,
								"name": "default.blank"
							}
						},
						{
							"id": 3194,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1224,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 3197,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1227,
								"name": "default.choices"
							}
						},
						{
							"id": 3196,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1226,
								"name": "default.helpText"
							}
						},
						{
							"id": 3195,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1225,
								"name": "default.label"
							}
						},
						{
							"id": 3182,
							"name": "maxLength",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 18,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1212,
								"name": "default.maxLength"
							}
						},
						{
							"id": 3199,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1229,
								"name": "default.readOnly"
							}
						},
						{
							"id": 3200,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1230,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 3178,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/URLField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'URLField'",
							"overwrites": {
								"type": "reference",
								"id": 1208,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 3231,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3232,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 976,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1261,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 3217,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3218,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1881,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1247,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 3227,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3228,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1257,
								"name": "default.isBound"
							}
						},
						{
							"id": 3185,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3186,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 980,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 3187,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3188,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1215,
								"name": "default.model"
							}
						},
						{
							"id": 3189,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3190,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 3191,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3192,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1219,
								"name": "default.name"
							}
						},
						{
							"id": 3229,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3230,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1259,
								"name": "default.value"
							}
						},
						{
							"id": 3225,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3226,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1877,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1256,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1255,
								"name": "default.clone"
							}
						},
						{
							"id": 3233,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3234,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 3235,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1264,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1263,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 3204,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3205,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 3206,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1235,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1234,
								"name": "default.format"
							}
						},
						{
							"id": 3221,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3222,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 3223,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3224,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1252,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1251,
								"name": "default.isEqual"
							}
						},
						{
							"id": 3210,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3211,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 3212,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1241,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1240,
								"name": "default.normalize"
							}
						},
						{
							"id": 3207,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3208,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 3209,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1238,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1237,
								"name": "default.parse"
							}
						},
						{
							"id": 3213,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3214,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 3215,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3216,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1244,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1243,
								"name": "default.toJS"
							}
						},
						{
							"id": 3219,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3220,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1250,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1249,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3179
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3183,
								3184,
								3201,
								3198,
								3193,
								3194,
								3197,
								3196,
								3195,
								3182,
								3199,
								3200,
								3178
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3231,
								3217,
								3227,
								3185,
								3189,
								3229
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3225,
								3233,
								3204,
								3221,
								3210,
								3207,
								3213,
								3219
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/URLField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1207,
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3177
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/URLField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3236,
			"name": "fields/UUIDField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3237,
					"name": "UUIDField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 3239,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3240,
									"name": "new UUIDField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3241,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CharFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 3237,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1210,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1209,
								"name": "default.constructor"
							}
						},
						{
							"id": 3243,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1213,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 3244,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1214,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 3261,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3262,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3263,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1231,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 3258,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1110,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1228,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 3253,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1223,
								"name": "default.blank"
							}
						},
						{
							"id": 3254,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1224,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 3257,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1227,
								"name": "default.choices"
							}
						},
						{
							"id": 3256,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1226,
								"name": "default.helpText"
							}
						},
						{
							"id": 3255,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1225,
								"name": "default.label"
							}
						},
						{
							"id": 3242,
							"name": "maxLength",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 18,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1212,
								"name": "default.maxLength"
							}
						},
						{
							"id": 3259,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1229,
								"name": "default.readOnly"
							}
						},
						{
							"id": 3260,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1230,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 3238,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/UUIDField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'UUIDField'",
							"overwrites": {
								"type": "reference",
								"id": 1208,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 3291,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3292,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 976,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1261,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 3277,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3278,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1881,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1247,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 3287,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3288,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1257,
								"name": "default.isBound"
							}
						},
						{
							"id": 3245,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3246,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 980,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 3247,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3248,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1215,
								"name": "default.model"
							}
						},
						{
							"id": 3249,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3250,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 3251,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3252,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1219,
								"name": "default.name"
							}
						},
						{
							"id": 3289,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3290,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1881,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1259,
								"name": "default.value"
							}
						},
						{
							"id": 3285,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3286,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1877,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1256,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1255,
								"name": "default.clone"
							}
						},
						{
							"id": 3293,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3294,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 3295,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 980,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1264,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1263,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 3264,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3265,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 3266,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1235,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1234,
								"name": "default.format"
							}
						},
						{
							"id": 3281,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3282,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 3283,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3284,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1252,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1251,
								"name": "default.isEqual"
							}
						},
						{
							"id": 3270,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3271,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 3272,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1241,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1240,
								"name": "default.normalize"
							}
						},
						{
							"id": 3267,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3268,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 3269,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1238,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1237,
								"name": "default.parse"
							}
						},
						{
							"id": 3273,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3274,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 3275,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3276,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1244,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1243,
								"name": "default.toJS"
							}
						},
						{
							"id": 3279,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3280,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1250,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1249,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3239
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3243,
								3244,
								3261,
								3258,
								3253,
								3254,
								3257,
								3256,
								3255,
								3242,
								3259,
								3260,
								3238
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3291,
								3277,
								3287,
								3245,
								3249,
								3289
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3285,
								3293,
								3264,
								3281,
								3270,
								3267,
								3273,
								3279
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/UUIDField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1207,
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3237
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/UUIDField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3296,
			"name": "typeUtil",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3297,
					"name": "Class",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Utility to type a generic class type, eg.",
						"text": "NOTE: If not dealing with generics just use `typeof <class>` instead\n\n```js\nclass Base<T> {\n  value?: T;\n}\nclass Concrete<T> extends Base<T> {}\nfunction factory<T>(a: Class<Base<T>>): Base<T> {\n  return new a();\n}\nfactory(Concrete);\n```\n"
					},
					"children": [
						{
							"id": 3321,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3322,
									"name": "new Class",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3323,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3320,
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Function.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.constructor"
							}
						},
						{
							"id": 3314,
							"name": "arguments",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 304,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.arguments"
							}
						},
						{
							"id": 3315,
							"name": "caller",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 305,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Function",
								"package": "typescript",
								"name": "Function"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.caller"
							}
						},
						{
							"id": 3313,
							"name": "length",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.length"
							}
						},
						{
							"id": 3316,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Returns the name of the function. Function names are read-only and can not be changed."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/node_modules/typescript/lib/lib.es2015.core.d.ts",
									"line": 97,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.name"
							}
						},
						{
							"id": 3312,
							"name": "prototype",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 300,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.prototype"
							}
						},
						{
							"id": 3317,
							"name": "[hasInstance]",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 3318,
									"name": "[hasInstance]",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Determines whether the given value inherits from this function if this function was used\nas a constructor function.",
										"text": "A constructor function can control which objects are recognized as its instances by\n'instanceof' by overriding this method.\n"
									},
									"parameters": [
										{
											"id": 3319,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Function.__@hasInstance@62295"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.__@hasInstance@62295"
							}
						},
						{
							"id": 3298,
							"name": "apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 3299,
									"name": "apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Calls the function, substituting the specified object for the this value of the function, and the specified array for the arguments of the function."
									},
									"parameters": [
										{
											"id": 3300,
											"name": "thisArg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The object to be used as the this object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3301,
											"name": "argArray",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"comment": {
												"shortText": "A set of arguments to be passed to the function.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Function.apply"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.apply"
							}
						},
						{
							"id": 3306,
							"name": "bind",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 3307,
									"name": "bind",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "For a given function, creates a bound function that has the same body as the original function.\nThe this object of the bound function is associated with the specified object, and has the specified initial parameters."
									},
									"parameters": [
										{
											"id": 3308,
											"name": "thisArg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "An object to which the this keyword can refer inside the new function."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3309,
											"name": "argArray",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isRest": true
											},
											"comment": {
												"shortText": "A list of arguments to be passed to the new function.\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Function.bind"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.bind"
							}
						},
						{
							"id": 3302,
							"name": "call",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 3303,
									"name": "call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Calls a method of an object, substituting another object for the current object."
									},
									"parameters": [
										{
											"id": 3304,
											"name": "thisArg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The object to be used as the current object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3305,
											"name": "argArray",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isRest": true
											},
											"comment": {
												"shortText": "A list of arguments to be passed to the method.\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Function.call"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.call"
							}
						},
						{
							"id": 3310,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 3311,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of a function."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Function.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3321
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3314,
								3315,
								3313,
								3316,
								3312
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3317,
								3298,
								3306,
								3302,
								3310
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/typeUtil.ts",
							"line": 17,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 3320,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Function",
							"package": "typescript",
							"name": "Function"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						3297
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/typeUtil.ts",
					"line": 17,
					"character": 0
				}
			]
		},
		{
			"id": 3324,
			"name": "useAsyncChoices",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3325,
					"name": "useAsyncChoices",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"originalName": "default",
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/useAsyncChoices.ts",
							"line": 93,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 3326,
							"name": "useAsyncChoices",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Hook that makes it easy to use an [AsyncChoices](doc:AsyncChoicesInterface) definition.",
								"text": "This hook does the following:\n\n1) Calls [useListProps](doc:AsyncChoicesInterface#method-useListProps) to get any dependencies for [list](doc:AsyncChoicesInterface#method-list)\n\n2) Calls [list](doc:AsyncChoicesInterface#method-list) and passes through the dependencies and a `query` object representing any query parameters for the async call\n\n3) Calls [useRetrieveProps](doc:AsyncChoicesInterface#method-useRetrieveProps) to get any dependencies for [retrieve](doc:AsyncChoicesInterface#method-retrieve)\n\n4) If there is a current `value` [retrieve](doc:AsyncChoicesInterface#method-retrieve) is called and is passed the dependencies returned above\n\n5) An object is returned with the available choices in `choices`, the result of 2 in `list` and result of 4 in `selected`\n",
								"tags": [
									{
										"tag": "extract-docs",
										"text": ""
									},
									{
										"tag": "menu-group",
										"text": "Async Choices\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 3327,
									"name": "ItemT",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 3328,
									"name": "ValueT",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 3329,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 3327,
												"name": "ItemT"
											},
											{
												"type": "reference",
												"id": 3328,
												"name": "ValueT"
											}
										],
										"name": "UseAsyncChoicesProps"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 3327,
										"name": "ItemT"
									},
									{
										"type": "reference",
										"id": 3328,
										"name": "ValueT"
									}
								],
								"name": "UseAsyncChoicesReturn"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						3325
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/useAsyncChoices.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3330,
			"name": "useViewModelCache",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3331,
					"name": "useViewModelCache",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"originalName": "default",
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/useViewModelCache.ts",
							"line": 108,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 3332,
							"name": "useViewModelCache",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Select some data out of the cache for use in a component. Whenever the cache data\nchanges the component will re-render with latest value.",
								"text": "See [ViewModelCache](doc:ViewModelCache) for more details on how to read data from the\ncache. The [Field notation](doc:ViewModelCache#Field_notation) documentation goes over\nthe possible formats for the fields argument.\n\nExample usage:\n\n```jsx\nfunction UserView({ id }) {\n    const record = useViewModelCache(User, cache => cache.get(id, ['firstName']));\n\n    return <div>Welcome {record.firstName}</div>;\n}\n```\n\nExtra arguments can be passed through as a third argument to the selector which makes\nit easier to create reusable selectors. We could rewrite the above like:\n\n```jsx\nconst selectUser = (cache, id, fieldNames) => cache.get(id, fieldNames);\nfunction UserView({ id }) {\n    const record = useViewModelCache(User, selectUser, [id, fieldNames]);\n\n    return <div>Welcome {record.firstName}</div>;\n}\n```\n\nSelectors can return anything:\n\n```jsx\nconst usersByGroup = cache => cache.getAll(['groupId', 'firstName', 'email']).reduce((acc, record) => {\n  acc[record.groupId] = acc[record.firstName] || [];\n  acc[record.groupId].push(record);\n  return acc;\n}, {})\nfunction GroupedUserView() {\n  const groupedUsers = useViewModelCache(User, usersByGroup);\n  return ...\n}\n```\n\nIn the preceding example the object returned from `useViewModelChange` will change each time `GroupUserView`\nrenders. This is because the selector returns a new object every time and internally `useViewModelChange`\ndoes a strict equality check to determine whether to return the new value or keep the old value. As an\noptimisation you can pass a third parameter that defines how to compare the previous and current value:\n\n```jsx\nimport isEqual from 'lodash/isEqual';\n\nfunction OptimisedGroupedUserView() {\n  // isEqual does a deep equality check so if the underlying cached values remain the same then the\n  // object returned here will be the same across multiple renders.\n  const groupedUsers = useViewModelCache(User, usersByGroup, [], isEqual);\n  return ...\n}\n```\n",
								"returns": "The data as returned by `selector`\n",
								"tags": [
									{
										"tag": "extract-docs",
										"text": ""
									},
									{
										"tag": "menu-group",
										"text": "Caching\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 3333,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 980,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "reference",
												"id": 3333,
												"name": "T"
											}
										],
										"name": "ViewModelConstructor"
									}
								},
								{
									"id": 3334,
									"name": "ResultType",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 3335,
									"name": "U",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									},
									"default": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 3336,
									"name": "viewModel",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The ViewModel to use the cache from"
									},
									"type": {
										"type": "reference",
										"id": 3333,
										"name": "T"
									}
								},
								{
									"id": 3337,
									"name": "selector",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A function that gets passed the cache and selects data from it. If your selector\nis slow consider using a library like [reselect](https://github.com/reduxjs/reselect) to create\nyour selector with. Note that `get`, `getAll` and `getList` on `ViewModelCache` will return the\nsame object across multiple calls if the underlying data has not changed."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 3333,
												"name": "T"
											},
											{
												"type": "reference",
												"id": 3334,
												"name": "ResultType"
											},
											{
												"type": "reference",
												"id": 3335,
												"name": "U"
											}
										],
										"name": "Selector"
									}
								},
								{
									"id": 3338,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Any extra arguments to pass through to the selector. These will be compared shallowly\nand any changes will re-run the selector."
									},
									"type": {
										"type": "reference",
										"id": 3335,
										"name": "U"
									},
									"defaultValue": "..."
								},
								{
									"id": 3339,
									"name": "isEquals",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Optionally control how equality is determined for an object. By default this is\na strict equality check. This is useful as an optimisation when you want the value returned from\na selector to be the same object when the selector re-runs.\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3340,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3341,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 3342,
															"name": "currentValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 3334,
																"name": "ResultType"
															}
														},
														{
															"id": 3343,
															"name": "previousValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"id": 3334,
																"name": "ResultType"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									},
									"defaultValue": "defaultEquality"
								}
							],
							"type": {
								"type": "reference",
								"id": 3334,
								"name": "ResultType"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						3331
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/useViewModelCache.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3344,
			"name": "util",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3345,
					"name": "freezeObject",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/util.ts",
							"line": 10,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 3346,
							"name": "freezeObject",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3347,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3348,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3349,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/util.ts",
											"line": 10,
											"character": 39
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 3350,
					"name": "isDev",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/util.ts",
							"line": 5,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 3351,
							"name": "isDev",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						3345,
						3350
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/util.ts",
					"line": 2,
					"character": 0
				}
			]
		},
		{
			"id": 1063,
			"name": "AsyncChoices",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "Default implementation for [AsyncChoicesInterface](doc:AsyncChoicesInterface)",
				"text": "All options can be customised via `options`.\n\nYou must provide `list` and `retrieve` - everything else can be optional with the following restrictions:\n\n* `getLabel` - this is optional if items returned by `list` and `retrieve` implement [NodeLabeled](doc:NodeLabeled) otherwise it must be provided\n* `getValue` - this is optional if items returned by `list` and `retrieve` implement [Identifiable](doc:Identifiable) otherwise it must be provided\n",
				"tags": [
					{
						"tag": "extract-docs",
						"text": ""
					},
					{
						"tag": "menu-group",
						"text": "Async Choices\n"
					}
				]
			},
			"children": [
				{
					"id": 1064,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
							"line": 179,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1065,
							"name": "new AsyncChoices",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 1066,
									"name": "ItemType",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 1067,
									"name": "ValueType",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 1068,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1143,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1066,
												"name": "ItemType"
											},
											{
												"type": "reference",
												"id": 1067,
												"name": "ValueType"
											}
										],
										"name": "AsyncChoicesOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1063,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1066,
										"name": "ItemType"
									},
									{
										"type": "reference",
										"id": 1067,
										"name": "ValueType"
									}
								],
								"name": "AsyncChoices"
							}
						}
					]
				},
				{
					"id": 1070,
					"name": "multiple",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "If true then multiple values can be selected. When this is true\nretrieve() will be passed and return an array rather than a single value."
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
							"line": 177,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1111,
						"name": "AsyncChoicesInterface.multiple"
					}
				},
				{
					"id": 1069,
					"name": "options",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
							"line": 176,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 1143,
						"typeArguments": [
							{
								"type": "reference",
								"id": 1066,
								"name": "ItemType"
							},
							{
								"type": "reference",
								"id": 1067,
								"name": "ValueType"
							}
						],
						"name": "AsyncChoicesOptions"
					}
				},
				{
					"id": 1084,
					"name": "getChoices",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
							"line": 198,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1085,
							"name": "getChoices",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generate the list of choices. This can return an array of single choices or grouped choices.",
								"text": "A grouped choice is a 2 element Array with a label and a list of choices.\n"
							},
							"parameters": [
								{
									"id": 1086,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1066,
											"name": "ItemType"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"id": 1102,
											"typeArguments": [
												{
													"type": "reference",
													"id": 1067,
													"name": "ValueType"
												}
											],
											"name": "Choice"
										},
										{
											"type": "reference",
											"id": 1108,
											"typeArguments": [
												{
													"type": "reference",
													"id": 1067,
													"name": "ValueType"
												}
											],
											"name": "ChoicesGrouped"
										}
									]
								}
							},
							"implementationOf": {
								"type": "reference",
								"id": 1126,
								"name": "AsyncChoicesInterface.getChoices"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 1125,
						"name": "AsyncChoicesInterface.getChoices"
					}
				},
				{
					"id": 1087,
					"name": "getLabel",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
							"line": 207,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1088,
							"name": "getLabel",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get a label for an item"
							},
							"parameters": [
								{
									"id": 1089,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1066,
										"name": "ItemType"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "React.ReactNode",
								"package": "@types/react",
								"name": "ReactNode"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1129,
								"name": "AsyncChoicesInterface.getLabel"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 1128,
						"name": "AsyncChoicesInterface.getLabel"
					}
				},
				{
					"id": 1090,
					"name": "getMissingLabel",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
							"line": 218,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1091,
							"name": "getMissingLabel",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return label to use when an item can't be found. This can be used by widgets to control\nwhat is rendered when an item for a value cannot be found (eg. when it's deleted or\nwhen it's loading). The exact details of how this is used depend on the widget."
							},
							"parameters": [
								{
									"id": 1092,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1067,
										"name": "ValueType"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "React.ReactNode",
								"package": "@types/react",
								"name": "ReactNode"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1132,
								"name": "AsyncChoicesInterface.getMissingLabel"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 1131,
						"name": "AsyncChoicesInterface.getMissingLabel"
					}
				},
				{
					"id": 1093,
					"name": "getValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
							"line": 224,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1094,
							"name": "getValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get the value to use for an item. The value should be unique and is what's used when a\nchoice is selected (eg. it's the value that would be saved to a database)."
							},
							"parameters": [
								{
									"id": 1095,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1066,
										"name": "ItemType"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1067,
								"name": "ValueType"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1135,
								"name": "AsyncChoicesInterface.getValue"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 1134,
						"name": "AsyncChoicesInterface.getValue"
					}
				},
				{
					"id": 1074,
					"name": "list",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
							"line": 186,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1075,
							"name": "list",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Function to resolve a list of choices based on the provided params.",
								"text": "What this function is passed depends on the implementation but when used with\n[useAsyncChoices](doc:useAsyncChoices) it will be passed `query` (the query object eg. to\nfilter results with), `paginator` (the current paginator if any) and `listOptions` (any\nadditional options passed on the `listOptions` prop to `useAsyncChoices`).\nOfficial presto widgets all use `useAsyncChoices` and so will use these parameters.\n"
							},
							"parameters": [
								{
									"id": 1076,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"qualifiedName": "Record",
										"package": "typescript",
										"name": "Record"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1066,
											"name": "ItemType"
										}
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1116,
								"name": "AsyncChoicesInterface.list"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 1115,
						"name": "AsyncChoicesInterface.list"
					}
				},
				{
					"id": 1080,
					"name": "retrieve",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
							"line": 192,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1081,
							"name": "retrieve",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Function to resolve specific values. This is used to know how to render the label for a value(s).",
								"text": "The first parameter is the value to retrieve (will be an array when `multiple` is true).\n\n`deps` is the value returned by `useRetrieveProps`.\n"
							},
							"parameters": [
								{
									"id": 1082,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 1067,
												"name": "ValueType"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1067,
													"name": "ValueType"
												}
											}
										]
									}
								},
								{
									"id": 1083,
									"name": "deps",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "conditional",
										"checkType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"id": 1067,
													"name": "ValueType"
												},
												{
													"type": "array",
													"elementType": {
														"type": "reference",
														"id": 1067,
														"name": "ValueType"
													}
												}
											]
										},
										"extendsType": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"id": 1067,
												"name": "ValueType"
											}
										},
										"trueType": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"id": 1066,
												"name": "ItemType"
											}
										},
										"falseType": {
											"type": "reference",
											"id": 1066,
											"name": "ItemType"
										}
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1122,
								"name": "AsyncChoicesInterface.retrieve"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 1121,
						"name": "AsyncChoicesInterface.retrieve"
					}
				},
				{
					"id": 1071,
					"name": "useListProps",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
							"line": 183,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1072,
							"name": "useListProps",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Hook that returns any extra props to pass through to `list` in components/hooks that\nconsume this (eg. [useAsyncChoices](doc:useAsyncChoices)). This is useful to\nstore state for things like pagination.",
								"text": "What this function is passed depends on the implementation but when used with\n[useAsyncChoices](doc:useAsyncChoices) it will be `query` (the query object eg. to\nfilter results with) and `listOptions` (any additional options passed on the `listOptions`\nprop to `useAsyncChoices`).\nOfficial presto widgets all use `useAsyncChoices` and so will use these parameters.\n"
							},
							"parameters": [
								{
									"id": 1073,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1113,
								"name": "AsyncChoicesInterface.useListProps"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 1112,
						"name": "AsyncChoicesInterface.useListProps"
					}
				},
				{
					"id": 1096,
					"name": "useResolveItems",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
							"line": 235,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1097,
							"name": "useResolveItems",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Resolve the specific instance of an item to use. By default this should just return `item`\nbut can be used to resolve a specific instance of a class from a cache for example."
							},
							"typeParameter": [
								{
									"id": 1098,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 1099,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1098,
										"name": "T"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1098,
								"name": "T"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1138,
								"name": "AsyncChoicesInterface.useResolveItems"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 1137,
						"name": "AsyncChoicesInterface.useResolveItems"
					}
				},
				{
					"id": 1077,
					"name": "useRetrieveProps",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
							"line": 189,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1078,
							"name": "useRetrieveProps",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Hook that returns props to pass through to `retrieve` in components/hooks that consume this (eg. [useAsyncChoices](doc:useAsyncChoices).\nThis is useful for things like hooking into an existing cache (eg. [useViewModelCache](doc:useViewModelCache)).\nThe value returned here is passed as the second parameter to `retrieve`. In addition the `existingValues` key is\npassed through to `useAsyncValue` as the list of items it can resolve existing values from.",
								"text": "What this function is passed depends on the implementation but when used with\n[useAsyncChoices](doc:useAsyncChoices) it will be passed `id` if there's a current value\nand it's not an array, `ids` if there's a current value and it is an array, `existingValues` which is\nthe values returned by `list` (may be null if `list` not yet called) and `retrieveOptions`\n(any additional options passed on the `retrieveOptions` prop to `useAsyncChoices`).\nOfficial presto widgets all use `useAsyncChoices` and so will use these parameters.\n"
							},
							"parameters": [
								{
									"id": 1079,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1119,
								"name": "AsyncChoicesInterface.useRetrieveProps"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 1118,
						"name": "AsyncChoicesInterface.useRetrieveProps"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1064
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1070,
						1069
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1084,
						1087,
						1090,
						1093,
						1074,
						1080,
						1071,
						1096,
						1077
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
					"line": 175,
					"character": 6
				}
			],
			"typeParameter": [
				{
					"id": 1100,
					"name": "ItemType",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				},
				{
					"id": 1101,
					"name": "ValueType",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"id": 1110,
					"typeArguments": [
						{
							"type": "reference",
							"id": 1066,
							"name": "ItemType"
						},
						{
							"type": "reference",
							"id": 1067,
							"name": "ValueType"
						}
					],
					"name": "AsyncChoicesInterface"
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"kind": 2,
			"children": [
				725,
				879,
				1038,
				1062,
				1147,
				1206,
				1266,
				1328,
				1387,
				1447,
				1506,
				1566,
				1628,
				1688,
				1748,
				1808,
				1943,
				2002,
				2063,
				2123,
				2183,
				2242,
				2303,
				2363,
				2428,
				2494,
				2553,
				2623,
				2683,
				2745,
				2997,
				3057,
				3117,
				3176,
				3236,
				3296,
				3324,
				3330,
				3344
			]
		},
		{
			"title": "Classes",
			"kind": 128,
			"children": [
				1063
			]
		}
	]
}