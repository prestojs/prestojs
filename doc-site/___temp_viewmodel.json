{
	"id": 1825,
	"name": "@prestojs/viewmodel",
	"kind": 1,
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 1826,
			"name": "ViewModelCache",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 4449,
					"name": "<internal>",
					"kind": 4,
					"kindString": "Namespace",
					"flags": {},
					"children": [
						{
							"id": 4450,
							"name": "RecordFieldNameCache",
							"kind": 128,
							"kindString": "Class",
							"flags": {},
							"comment": {
								"shortText": "Caches record instances based on the assigned fields"
							},
							"children": [
								{
									"id": 4451,
									"name": "constructor",
									"kind": 512,
									"kindString": "Constructor",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
											"line": 104,
											"character": 4
										}
									],
									"signatures": [
										{
											"id": 4452,
											"name": "new RecordFieldNameCache",
											"kind": 16384,
											"kindString": "Constructor signature",
											"flags": {},
											"typeParameter": [
												{
													"id": 4453,
													"name": "ViewModelClassType",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2078,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "reference",
																"id": 4453,
																"name": "ViewModelClassType"
															}
														],
														"name": "ViewModelConstructor"
													}
												}
											],
											"parameters": [
												{
													"id": 4454,
													"name": "viewModel",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 4453,
														"name": "ViewModelClassType"
													}
												},
												{
													"id": 4455,
													"name": "pk",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2128,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4453,
																"name": "ViewModelClassType"
															}
														],
														"name": "ExtractPkFieldParseableValueType"
													}
												},
												{
													"id": 4456,
													"name": "onAnyChange",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 4457,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 4458,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4450,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4453,
														"name": "ViewModelClassType"
													}
												],
												"name": "RecordFieldNameCache"
											}
										}
									]
								},
								{
									"id": 4459,
									"name": "cache",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "This stores the record instances by the field paths that are used to retrieve them"
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
											"line": 54,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2143,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4453,
														"name": "ViewModelClassType"
													}
												],
												"name": "ViewModelFieldPaths"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 2125,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4453,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"id": 4498,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 4453,
																				"name": "ViewModelClassType"
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														],
														"name": "PartialViewModel"
													}
												]
											}
										],
										"qualifiedName": "Map",
										"package": "typescript",
										"name": "Map"
									}
								},
								{
									"id": 4460,
									"name": "cacheListeners",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "This stores the current listeners by the field paths"
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
											"line": 61,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2143,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4453,
														"name": "ViewModelClassType"
													}
												],
												"name": "ViewModelFieldPaths"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 4530,
													"typeArguments": [
														{
															"type": "reference",
															"id": 2125,
															"typeArguments": [
																{
																	"type": "reference",
																	"id": 4453,
																	"name": "ViewModelClassType"
																},
																{
																	"type": "reference",
																	"id": 4498,
																	"typeArguments": [
																		{
																			"type": "typeOperator",
																			"operator": "keyof",
																			"target": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "literal",
																					"value": "fields"
																				},
																				"objectType": {
																					"type": "reference",
																					"id": 4453,
																					"name": "ViewModelClassType"
																				}
																			}
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		}
																	],
																	"qualifiedName": "Extract",
																	"package": "typescript",
																	"name": "Extract"
																}
															],
															"name": "PartialViewModel"
														}
													],
													"name": "ChangeListener"
												}
											}
										],
										"qualifiedName": "Map",
										"package": "typescript",
										"name": "Map"
									}
								},
								{
									"id": 4467,
									"name": "lastUpdatedKeys",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isPrivate": true
									},
									"comment": {
										"shortText": "Contains all keys in `cache` in descending order of last insert/update",
										"text": "This is used to choose the most recent record when a new record with a subset\nof the fields needs to be created. For example if there are 2 existing records\ncreated in this order:\n\n```\n{ id: 1, firstName: 'Jon', lastName: 'Doe', email: 'jon@doe.com' }\n{ id: 1, firstName: 'John', lastName: 'Doe' }\n```\n\nBut a record is requested for just 'firstName' we need to create a new record\nwith just that field. We could create it from either of the existing records\nbut we want to use the _last_ record inserted - so in this case it would be:\n\n```\n{ id: 1, firstName: 'John' }\n```\n"
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
											"line": 102,
											"character": 12
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 2143,
											"typeArguments": [
												{
													"type": "reference",
													"id": 4453,
													"name": "ViewModelClassType"
												}
											],
											"name": "ViewModelFieldPaths"
										}
									},
									"defaultValue": "[]"
								},
								{
									"id": 4464,
									"name": "onAnyChange",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
											"line": 81,
											"character": 4
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 4465,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 4466,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								},
								{
									"id": 4462,
									"name": "recordPk",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The PK this cache is for"
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
											"line": 79,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"id": 2128,
										"typeArguments": [
											{
												"type": "reference",
												"id": 4453,
												"name": "ViewModelClassType"
											}
										],
										"name": "ExtractPkFieldParseableValueType"
									}
								},
								{
									"id": 4488,
									"name": "relationListenerPaths",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isPrivate": true
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
											"line": 329,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2125,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4453,
														"name": "ViewModelClassType"
													},
													{
														"type": "reference",
														"id": 4498,
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "literal",
																		"value": "fields"
																	},
																	"objectType": {
																		"type": "reference",
																		"id": 4453,
																		"name": "ViewModelClassType"
																	}
																}
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"qualifiedName": "Extract",
														"package": "typescript",
														"name": "Extract"
													}
												],
												"name": "PartialViewModel"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2143,
													"typeArguments": [
														{
															"type": "reference",
															"id": 4453,
															"name": "ViewModelClassType"
														}
													],
													"name": "ViewModelFieldPaths"
												}
											}
										],
										"qualifiedName": "Map",
										"package": "typescript",
										"name": "Map"
									},
									"defaultValue": "..."
								},
								{
									"id": 4461,
									"name": "relationListenerUnsubscribe",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "When a record has relation fields a listener is added to listen for changes on the related\nrecords. When it receives notifications for those related records it can then in turn notify\nthe listeners on the original record.",
										"text": "This map stores these listeners.\n"
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
											"line": 72,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2143,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4453,
														"name": "ViewModelClassType"
													}
												],
												"name": "ViewModelFieldPaths"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 4501,
													"name": "ChangeListenerUnsubscribe"
												}
											}
										],
										"qualifiedName": "Map",
										"package": "typescript",
										"name": "Map"
									}
								},
								{
									"id": 4463,
									"name": "viewModel",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
											"line": 80,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"id": 4453,
										"name": "ViewModelClassType"
									}
								},
								{
									"id": 4472,
									"name": "add",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
											"line": 159,
											"character": 4
										}
									],
									"signatures": [
										{
											"id": 4473,
											"name": "add",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Add a record to the cache based on the fields that are set on it.",
												"text": "This will also update any cached entries for records that contain only\na subset of the fields set on `record`. Note that this does not update\na superset of fields, ie. updating fields (a,b) won't update a record\nthat contains (a,b,c)\n"
											},
											"parameters": [
												{
													"id": 4474,
													"name": "record",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2125,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4453,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"id": 4498,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 4453,
																				"name": "ViewModelClassType"
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														],
														"name": "PartialViewModel"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 4493,
									"name": "addListener",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
											"line": 401,
											"character": 4
										}
									],
									"signatures": [
										{
											"id": 4494,
											"name": "addListener",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Add a listener for any changes, additions or deletions for the specified field names"
											},
											"parameters": [
												{
													"id": 4495,
													"name": "fieldNames",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"shortText": "field names to listen to any changes for. See [Field notation](#Field_notation) for supported format."
													},
													"type": {
														"type": "reference",
														"id": 2010,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4453,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"id": 4521,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 4453,
																		"name": "ViewModelClassType"
																	}
																],
																"name": "ExtractRelatedFields"
															}
														],
														"name": "FieldPaths"
													}
												},
												{
													"id": 4496,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"shortText": "Function to call with any changes\n"
													},
													"type": {
														"type": "reference",
														"id": 4530,
														"typeArguments": [
															{
																"type": "reference",
																"id": 2125,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 4453,
																		"name": "ViewModelClassType"
																	},
																	{
																		"type": "reference",
																		"id": 4498,
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "fields"
																					},
																					"objectType": {
																						"type": "reference",
																						"id": 4453,
																						"name": "ViewModelClassType"
																					}
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	}
																],
																"name": "PartialViewModel"
															}
														],
														"name": "ChangeListener"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4501,
												"name": "ChangeListenerUnsubscribe"
											}
										}
									]
								},
								{
									"id": 4478,
									"name": "cleanupKey",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isPrivate": true
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
											"line": 261,
											"character": 12
										}
									],
									"signatures": [
										{
											"id": 4479,
											"name": "cleanupKey",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isPrivate": true
											},
											"comment": {
												"shortText": "Remove specified key from cache, cleanup any relation listeners and trigger\nlistener callbacks if required."
											},
											"parameters": [
												{
													"id": 4480,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2143,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4453,
																"name": "ViewModelClassType"
															}
														],
														"name": "ViewModelFieldPaths"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 4484,
									"name": "constructWithRelatedRecords",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isPrivate": true
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
											"line": 297,
											"character": 12
										}
									],
									"signatures": [
										{
											"id": 4485,
											"name": "constructWithRelatedRecords",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isPrivate": true
											},
											"comment": {
												"shortText": "Given a `baseRecord` with no related fields resolved (ie. we just have the id's, not the nested records) construct\na record with all the nested records attached if those records exist in the cache. If any requested record doesn't\nexist in the cache then this will return `null`."
											},
											"parameters": [
												{
													"id": 4486,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"shortText": "The key that contains the relations we need to resolve"
													},
													"type": {
														"type": "reference",
														"id": 2143,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4453,
																"name": "ViewModelClassType"
															}
														],
														"name": "ViewModelFieldPaths"
													}
												},
												{
													"id": 4487,
													"name": "baseRecord",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"shortText": "The record with the id's of the related records"
													},
													"type": {
														"type": "reference",
														"id": 2125,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4453,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"id": 4498,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 4453,
																				"name": "ViewModelClassType"
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														],
														"name": "PartialViewModel"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 2125,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4453,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"id": 4498,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 4453,
																				"name": "ViewModelClassType"
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														],
														"name": "PartialViewModel"
													}
												]
											}
										}
									]
								},
								{
									"id": 4481,
									"name": "delete",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
											"line": 271,
											"character": 4
										}
									],
									"signatures": [
										{
											"id": 4482,
											"name": "delete",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Delete a record for the specified field names.",
												"text": "Returns `true` if anything was deleted otherwise `false`\n"
											},
											"parameters": [
												{
													"id": 4483,
													"name": "fieldNames",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2010,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4453,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"id": 4521,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 4453,
																		"name": "ViewModelClassType"
																	}
																],
																"name": "ExtractRelatedFields"
															}
														],
														"name": "FieldPaths"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								},
								{
									"id": 4475,
									"name": "get",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
											"line": 193,
											"character": 4
										}
									],
									"signatures": [
										{
											"id": 4476,
											"name": "get",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Get a record for the specified key. If the record doesn't yet exist but can be created from\nanother record in the cache (ie. one with a superset of the fields set) then this will be done\nautomatically."
											},
											"parameters": [
												{
													"id": 4477,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2143,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4453,
																"name": "ViewModelClassType"
															}
														],
														"name": "ViewModelFieldPaths"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 2125,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4453,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"id": 4498,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 4453,
																				"name": "ViewModelClassType"
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														],
														"name": "PartialViewModel"
													}
												]
											}
										}
									]
								},
								{
									"id": 4468,
									"name": "setValueForKey",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isPrivate": true
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
											"line": 122,
											"character": 12
										}
									],
									"signatures": [
										{
											"id": 4469,
											"name": "setValueForKey",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Set a value for the specified `key`, then notify any listeners",
												"text": "`lastUpdatedKeys` is always updated even if the value being set is identical.\n"
											},
											"parameters": [
												{
													"id": 4470,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2143,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4453,
																"name": "ViewModelClassType"
															}
														],
														"name": "ViewModelFieldPaths"
													}
												},
												{
													"id": 4471,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2125,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 4453,
																		"name": "ViewModelClassType"
																	},
																	{
																		"type": "reference",
																		"id": 4498,
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "fields"
																					},
																					"objectType": {
																						"type": "reference",
																						"id": 4453,
																						"name": "ViewModelClassType"
																					}
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	}
																],
																"name": "PartialViewModel"
															}
														]
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 4489,
									"name": "setupRelationListeners",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isPrivate": true
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
											"line": 344,
											"character": 12
										}
									],
									"signatures": [
										{
											"id": 4490,
											"name": "setupRelationListeners",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isPrivate": true
											},
											"comment": {
												"shortText": "When a listener is added to a record for a set of fields we need to also listen\nto changes on the caches for any related records. This functions handles setting\nup those listeners."
											},
											"parameters": [
												{
													"id": 4491,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"shortText": "The key the listener was added to. The relations that need to be listened to are extracted from this."
													},
													"type": {
														"type": "reference",
														"id": 2143,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4453,
																"name": "ViewModelClassType"
															}
														],
														"name": "ViewModelFieldPaths"
													}
												},
												{
													"id": 4492,
													"name": "record",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"shortText": "The last record that the listener would have been notified about. When the listener is first\nadded this will be the current record in the cache. When the record changes this will be the new record that\nwas just added."
													},
													"type": {
														"type": "reference",
														"id": 2125,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4453,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"id": 4498,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 4453,
																				"name": "ViewModelClassType"
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														],
														"name": "PartialViewModel"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Constructors",
									"kind": 512,
									"children": [
										4451
									]
								},
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4459,
										4460,
										4467,
										4464,
										4462,
										4488,
										4461,
										4463
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										4472,
										4493,
										4478,
										4484,
										4481,
										4475,
										4468,
										4489
									]
								}
							],
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 50,
									"character": 6
								}
							],
							"typeParameter": [
								{
									"id": 4497,
									"name": "ViewModelClassType",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									}
								}
							]
						},
						{
							"id": 4527,
							"name": "AllChangesListener",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 22,
									"character": 5
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4528,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
											"line": 22,
											"character": 26
										}
									],
									"signatures": [
										{
											"id": 4529,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 4530,
							"name": "ChangeListener",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 19,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 4535,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4531,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
											"line": 19,
											"character": 25
										}
									],
									"signatures": [
										{
											"id": 4532,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 4533,
													"name": "previous",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"id": 4535,
																"name": "T"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												},
												{
													"id": 4534,
													"name": "next",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"id": 4535,
																"name": "T"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 4501,
							"name": "ChangeListenerUnsubscribe",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 21,
									"character": 5
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4502,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
											"line": 21,
											"character": 33
										}
									],
									"signatures": [
										{
											"id": 4503,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 4542,
							"name": "Exclude",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Exclude from T those types that are assignable to U"
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1566,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 4543,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								},
								{
									"id": 4544,
									"name": "U",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"type": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"id": 4543,
									"qualifiedName": "T",
									"package": "typescript",
									"name": "T"
								},
								"extendsType": {
									"type": "reference",
									"id": 4544,
									"qualifiedName": "U",
									"package": "typescript",
									"name": "U"
								},
								"trueType": {
									"type": "intrinsic",
									"name": "never"
								},
								"falseType": {
									"type": "reference",
									"id": 4543,
									"qualifiedName": "T",
									"package": "typescript",
									"name": "T"
								}
							}
						},
						{
							"id": 4498,
							"name": "Extract",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Extract from T those types that are assignable to U"
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1571,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 4499,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								},
								{
									"id": 4500,
									"name": "U",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"type": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"id": 4499,
									"qualifiedName": "T",
									"package": "typescript",
									"name": "T"
								},
								"extendsType": {
									"type": "reference",
									"id": 4500,
									"qualifiedName": "U",
									"package": "typescript",
									"name": "U"
								},
								"trueType": {
									"type": "reference",
									"id": 4499,
									"qualifiedName": "T",
									"package": "typescript",
									"name": "T"
								},
								"falseType": {
									"type": "intrinsic",
									"name": "never"
								}
							}
						},
						{
							"id": 4521,
							"name": "ExtractRelatedFields",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 22,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 4522,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									}
								}
							],
							"type": {
								"type": "mapped",
								"parameter": "P",
								"parameterType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "fields"
										},
										"objectType": {
											"type": "reference",
											"id": 4522,
											"name": "T"
										}
									}
								},
								"templateType": {
									"type": "conditional",
									"checkType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"name": "P"
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "fields"
											},
											"objectType": {
												"type": "reference",
												"id": 4522,
												"name": "T"
											}
										}
									},
									"extendsType": {
										"type": "reference",
										"id": 3867,
										"typeArguments": [
											{
												"type": "inferred",
												"name": "X"
											},
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "BaseRelatedViewModelField"
									},
									"trueType": {
										"type": "reference",
										"name": "X"
									},
									"falseType": {
										"type": "intrinsic",
										"name": "never"
									}
								},
								"nameType": {
									"type": "conditional",
									"checkType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"name": "P"
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "fields"
											},
											"objectType": {
												"type": "reference",
												"id": 4522,
												"name": "T"
											}
										}
									},
									"extendsType": {
										"type": "reference",
										"id": 3867,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "BaseRelatedViewModelField"
									},
									"trueType": {
										"type": "reference",
										"name": "P"
									},
									"falseType": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							}
						},
						{
							"id": 4515,
							"name": "ExtractRootFieldNames",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"comment": {
								"shortText": "Given a FieldPath return the root field name of each path, eg.\n['id', 'name', ['group', 'owner']]\nwould return ['id', 'name', 'group']"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 101,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 4516,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									}
								},
								{
									"id": 4517,
									"name": "FieldNames",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2007,
										"typeArguments": [
											{
												"type": "reference",
												"id": 4516,
												"name": "T"
											}
										],
										"name": "FieldPath"
									}
								}
							],
							"type": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"id": 4545,
									"typeArguments": [
										{
											"type": "reference",
											"id": 4516,
											"name": "T"
										},
										{
											"type": "reference",
											"id": 4517,
											"name": "FieldNames"
										}
									],
									"name": "_ExtractRootFieldNames"
								},
								"extendsType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "fields"
										},
										"objectType": {
											"type": "reference",
											"id": 4516,
											"name": "T"
										}
									}
								},
								"trueType": {
									"type": "reference",
									"id": 4545,
									"typeArguments": [
										{
											"type": "reference",
											"id": 4516,
											"name": "T"
										},
										{
											"type": "reference",
											"id": 4517,
											"name": "FieldNames"
										}
									],
									"name": "_ExtractRootFieldNames"
								},
								"falseType": {
									"type": "intrinsic",
									"name": "never"
								}
							}
						},
						{
							"id": 4523,
							"name": "FieldPathInner",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 30,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 4524,
									"name": "FieldNames",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 4525,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									}
								},
								{
									"id": 4526,
									"name": "R",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 4521,
										"typeArguments": [
											{
												"type": "reference",
												"id": 4525,
												"name": "T"
											}
										],
										"name": "ExtractRelatedFields"
									},
									"default": {
										"type": "reference",
										"id": 4521,
										"typeArguments": [
											{
												"type": "reference",
												"id": 4525,
												"name": "T"
											}
										],
										"name": "ExtractRelatedFields"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "rest",
												"elementType": {
													"type": "reference",
													"id": 4524,
													"name": "FieldNames"
												}
											},
											{
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": "fields"
													},
													"objectType": {
														"type": "reference",
														"id": 4525,
														"name": "T"
													}
												}
											}
										]
									},
									{
										"type": "tuple",
										"elements": [
											{
												"type": "rest",
												"elementType": {
													"type": "reference",
													"id": 4524,
													"name": "FieldNames"
												}
											},
											{
												"type": "rest",
												"elementType": {
													"type": "reference",
													"id": 4548,
													"typeArguments": [
														{
															"type": "mapped",
															"parameter": "K",
															"parameterType": {
																"type": "reference",
																"id": 4498,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "reference",
																			"id": 4526,
																			"name": "R"
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															},
															"templateType": {
																"type": "reference",
																"id": 4548,
																"typeArguments": [
																	{
																		"type": "mapped",
																		"parameter": "J",
																		"parameterType": {
																			"type": "reference",
																			"id": 4498,
																			"typeArguments": [
																				{
																					"type": "typeOperator",
																					"operator": "keyof",
																					"target": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "literal",
																							"value": "fields"
																						},
																						"objectType": {
																							"type": "indexedAccess",
																							"indexType": {
																								"type": "reference",
																								"name": "K"
																							},
																							"objectType": {
																								"type": "reference",
																								"id": 4526,
																								"name": "R"
																							}
																						}
																					}
																				},
																				{
																					"type": "intrinsic",
																					"name": "string"
																				}
																			],
																			"qualifiedName": "Extract",
																			"package": "typescript",
																			"name": "Extract"
																		},
																		"templateType": {
																			"type": "union",
																			"types": [
																				{
																					"type": "tuple",
																					"elements": [
																						{
																							"type": "reference",
																							"name": "K"
																						},
																						{
																							"type": "reference",
																							"name": "J"
																						}
																					]
																				},
																				{
																					"type": "conditional",
																					"checkType": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "reference",
																							"name": "J"
																						},
																						"objectType": {
																							"type": "indexedAccess",
																							"indexType": {
																								"type": "literal",
																								"value": "fields"
																							},
																							"objectType": {
																								"type": "indexedAccess",
																								"indexType": {
																									"type": "reference",
																									"name": "K"
																								},
																								"objectType": {
																									"type": "reference",
																									"id": 4526,
																									"name": "R"
																								}
																							}
																						}
																					},
																					"extendsType": {
																						"type": "reference",
																						"id": 3867,
																						"typeArguments": [
																							{
																								"type": "inferred",
																								"name": "X"
																							},
																							{
																								"type": "intrinsic",
																								"name": "any"
																							},
																							{
																								"type": "intrinsic",
																								"name": "any"
																							}
																						],
																						"name": "BaseRelatedViewModelField"
																					},
																					"trueType": {
																						"type": "reference",
																						"id": 4523,
																						"typeArguments": [
																							{
																								"type": "tuple",
																								"elements": [
																									{
																										"type": "reference",
																										"name": "K"
																									},
																									{
																										"type": "reference",
																										"name": "J"
																									}
																								]
																							},
																							{
																								"type": "reference",
																								"name": "X"
																							}
																						],
																						"name": "FieldPathInner"
																					},
																					"falseType": {
																						"type": "intrinsic",
																						"name": "never"
																					}
																				}
																			]
																		}
																	}
																],
																"name": "ValueOf"
															}
														}
													],
													"name": "ValueOf"
												}
											}
										]
									}
								]
							}
						},
						{
							"id": 4507,
							"name": "InstanceType",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Obtain the return type of a constructor function type"
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1601,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 4514,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 4511,
											"name": "__type",
											"kind": 512,
											"kindString": "Constructor",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1601,
													"character": 28
												}
											],
											"signatures": [
												{
													"id": 4512,
													"name": "__type",
													"kind": 16384,
													"kindString": "Constructor signature",
													"flags": {
														"isExternal": true,
														"isAbstract": true
													},
													"parameters": [
														{
															"id": 4513,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"id": 4514,
									"qualifiedName": "T",
									"package": "typescript",
									"name": "T"
								},
								"extendsType": {
									"type": "reflection",
									"declaration": {
										"id": 4508,
										"name": "__type",
										"kind": 512,
										"kindString": "Constructor",
										"flags": {
											"isExternal": true
										},
										"sources": [
											{
												"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
												"line": 1601,
												"character": 76
											}
										],
										"signatures": [
											{
												"id": 4509,
												"name": "__type",
												"kind": 16384,
												"kindString": "Constructor signature",
												"flags": {
													"isExternal": true,
													"isAbstract": true
												},
												"parameters": [
													{
														"id": 4510,
														"name": "args",
														"kind": 32768,
														"kindString": "Parameter",
														"flags": {
															"isExternal": true,
															"isRest": true
														},
														"type": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												],
												"type": {
													"type": "inferred",
													"name": "R"
												}
											}
										]
									}
								},
								"trueType": {
									"type": "reference",
									"qualifiedName": "R",
									"package": "typescript",
									"name": "R"
								},
								"falseType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						},
						{
							"id": 4536,
							"name": "MultiChangeListener",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 20,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 4541,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4537,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
											"line": 20,
											"character": 30
										}
									],
									"signatures": [
										{
											"id": 4538,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 4539,
													"name": "previous",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "union",
															"types": [
																{
																	"type": "reference",
																	"id": 4541,
																	"name": "T"
																},
																{
																	"type": "literal",
																	"value": null
																}
															]
														}
													}
												},
												{
													"id": 4540,
													"name": "next",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "union",
															"types": [
																{
																	"type": "reference",
																	"id": 4541,
																	"name": "T"
																},
																{
																	"type": "literal",
																	"value": null
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 4504,
							"name": "Omit",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Construct a type with the properties of T except for those in type K."
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1576,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 4505,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								},
								{
									"id": 4506,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 4518,
								"typeArguments": [
									{
										"type": "reference",
										"id": 4505,
										"qualifiedName": "T",
										"package": "typescript",
										"name": "T"
									},
									{
										"type": "reference",
										"id": 4542,
										"typeArguments": [
											{
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 4505,
													"qualifiedName": "T",
													"package": "typescript",
													"name": "T"
												}
											},
											{
												"type": "reference",
												"id": 4506,
												"qualifiedName": "K",
												"package": "typescript",
												"name": "K"
											}
										],
										"qualifiedName": "Exclude",
										"package": "typescript",
										"name": "Exclude"
									}
								],
								"qualifiedName": "Pick",
								"package": "typescript",
								"name": "Pick"
							}
						},
						{
							"id": 4518,
							"name": "Pick",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "From T, pick a set of properties whose keys are in the union K"
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1552,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 4519,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								},
								{
									"id": 4520,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"id": 4519,
											"qualifiedName": "T",
											"package": "typescript",
											"name": "T"
										}
									}
								}
							],
							"type": {
								"type": "mapped",
								"parameter": "P",
								"parameterType": {
									"type": "reference",
									"id": 4520,
									"qualifiedName": "K",
									"package": "typescript",
									"name": "K"
								},
								"templateType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"qualifiedName": "P",
										"package": "typescript",
										"name": "P"
									},
									"objectType": {
										"type": "reference",
										"id": 4519,
										"qualifiedName": "T",
										"package": "typescript",
										"name": "T"
									}
								}
							}
						},
						{
							"id": 4548,
							"name": "ValueOf",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 28,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 4549,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"id": 4549,
										"name": "T"
									}
								},
								"objectType": {
									"type": "reference",
									"id": 4549,
									"name": "T"
								}
							}
						},
						{
							"id": 4545,
							"name": "_ExtractRootFieldNames",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 73,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 4546,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									}
								},
								{
									"id": 4547,
									"name": "FieldNames",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2007,
										"typeArguments": [
											{
												"type": "reference",
												"id": 4546,
												"name": "T"
											}
										],
										"name": "FieldPath"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 4498,
								"typeArguments": [
									{
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"id": 4547,
											"name": "FieldNames"
										},
										"extendsType": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										"trueType": {
											"type": "conditional",
											"checkType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": 0
													},
													"objectType": {
														"type": "reference",
														"id": 4547,
														"name": "FieldNames"
													}
												},
												"objectType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": "fields"
													},
													"objectType": {
														"type": "reference",
														"id": 4546,
														"name": "T"
													}
												}
											},
											"extendsType": {
												"type": "reference",
												"id": 3867,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "inferred",
														"name": "SourceFieldNameT"
													}
												],
												"name": "BaseRelatedViewModelField"
											},
											"trueType": {
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"name": "SourceFieldNameT"
												},
												"extendsType": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "indexedAccess",
														"indexType": {
															"type": "literal",
															"value": "fields"
														},
														"objectType": {
															"type": "reference",
															"id": 4546,
															"name": "T"
														}
													}
												},
												"trueType": {
													"type": "union",
													"types": [
														{
															"type": "indexedAccess",
															"indexType": {
																"type": "literal",
																"value": 0
															},
															"objectType": {
																"type": "reference",
																"id": 4547,
																"name": "FieldNames"
															}
														},
														{
															"type": "reference",
															"name": "SourceFieldNameT"
														}
													]
												},
												"falseType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": 0
													},
													"objectType": {
														"type": "reference",
														"id": 4547,
														"name": "FieldNames"
													}
												}
											},
											"falseType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "literal",
													"value": 0
												},
												"objectType": {
													"type": "reference",
													"id": 4547,
													"name": "FieldNames"
												}
											}
										},
										"falseType": {
											"type": "reference",
											"id": 4547,
											"name": "FieldNames"
										}
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Extract",
								"package": "typescript",
								"name": "Extract"
							}
						}
					],
					"groups": [
						{
							"title": "Classes",
							"kind": 128,
							"children": [
								4450
							]
						},
						{
							"title": "Type aliases",
							"kind": 4194304,
							"children": [
								4527,
								4530,
								4501,
								4542,
								4498,
								4521,
								4515,
								4523,
								4507,
								4536,
								4504,
								4518,
								4548,
								4545
							]
						}
					]
				},
				{
					"id": 1827,
					"name": "ViewModelCache",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Cache for ViewModel instances based on the specified field names set.",
						"text": "The key to the cache is the primary key for the record and the field names\nset on it. For example if you have a record that accepts id, name and email\nyou could have a record cached for id, for name, for email or any\ncombination of the 3 fields. This is to handle the common case of fetching\npartial data from a backend.\n\nThe cache implementation will update any cache entries that are a subset\nof a new cache entry. eg. Caching a record with all the possible fields set\nwould result in all the existing partial field cache entries being updated\nto match the data on the full record for the fields it care about.\n\nUsage:\n\n```js\n// Assume User is a ViewModel already defined\n\n// Add a record\nUser.cache.add(new User({ id: 1, name: 'John' }));\n\n// Retrieve a record\nconst record = User.cache.get(1, ['id', 'name']);\n\n// To update a record just add it again\nUser.cache.add(new User({ id: 1, name: 'Johnny' }));\n\n// Cache is per unique set of fields but a superset will update a subset\nUser.cache.add(new User({ id: 1, name: 'Johnny Smith', email: 'johnny@test.com' }));\nUser.cache.get(1, ['id', 'name']);\n// { id: 1, name: 'Johnny Smith' }\nUser.cache.get(1, ['id', 'name', 'email'])\n// { id: 1, name: 'Johnny Smith', email: 'johnny@test.com' }\n\n// Delete a specific cache for a subset of fields\nUser.cache.delete(1, ['id', 'name']);\nUser.cache.get(1, ['id', 'name']);\n// null\nUser.cache.get(1, ['id', 'name', 'email'])\n// { id: 1, name: 'Johnny Smith', email: 'johnny@test.com' }\n\n// Or all fields\nUser.cache.delete(1);\nUser.cache.get(1, ['id', 'name', 'email'])\n// null\n\n// You can add multiple values at a time\nUser.cache.addList([johnny, sam]);\n\n// You can listen to changes\nUser.cache.addListener(2, ['id', 'name'], (previous, next) => console.log(previous, 'change to', next));\nUser.cache.add(new User({ id: 2, name: 'Bob' }));\n// null changed to User({ id: 2, name: 'Bob' })\nUser.cache.add(new User({ id: 2, name: 'Bobby' }));\n// User({ id: 2, name: 'Bob' }) changed to User({ id: 2, name: 'Bobby' })\nUser.cache.delete(2)\n// User({ id: 2, name: 'Bobby' }) changed to null\n\n// You can listen to multiple changes. If you use this and addList then you only get one\n// call for each change that occurs within addList\nUser.cache.addListenerList(\n // Ids to listen for changes to\n [3, 4],\n // Only get updates for cached records with these field names\n ['id', 'name'],\n (previous, next) => console.log(previous, 'change to', next)\n);\nUser.cache.addList([new User({ id: 3, name: 'Jay' }), new User({ id: 4, name: 'Bee' })]);\n// [null, null] changed to [new User({ id: 3, name: 'Jay' }), new User({ id: 4, name: 'Bee' })]\nUser.cache.addList([new User({ id: 3, name: 'Jayz' }), new User({ id: 4, name: 'Beeb' })]);\n// [new User({ id: 3, name: 'Jay' }), new User({ id: 4, name: 'Bee' })] changed to [new User({ id: 3, name: 'Jayz' }), new User({ id: 4, name: 'Beeb' })]\nUser.cache.delete(3)\n// [new User({ id: 3, name: 'Jayz' }), new User({ id: 4, name: 'Beeb' })] changed to [null, new User({ id: 4, name: 'Beeb' })]\n```\n\n## Field notation\n\nIf a model has a [RelatedViewModelField](doc:RelatedViewModelField) the data for a related field\ncan be retrieved using array notation:\n\n```js\n// Fetch the 'name' field and the related 'group' record and its 'label' field\n['name', ['group', 'label']]\n```\n\nTo fetch all fields from a relation you can just specify its name:\n\n```js\n['name', 'group']\n// This will be expanded to include all non-relation fields on the related ViewModel\n['name', ['group', 'label'], ['group', 'ownerId']]\n```\n\n**NOTE:** Using the shorthand for a relation won't include any nested relation\n\nAccessing deeply related records is supported:\n\n```js\n['name', ['group', 'owner', 'name']]\n```\n\nYou can combine the shorthand with array notation to get all fields and the specified deep relations:\n```js\n['name', 'group', ['group', 'owner', 'name']]\n// Equivalent to:\n['name', ['group', 'label'], ['group', 'owner', 'name']]\n```\n\n**NOTE:** When accessing a relation its `sourceFieldName` is always included regardless\nof whether you explicitly request it:\n\n```js\nUser.cache.get(1, ['name', 'group']);\n// {\n//   id: 1,\n//   name: 'Bob',\n//   groupId: 1,\n//   group: {\n//      id: 1,\n//      label: 'Staff',\n//   }\n// }\n```\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Caching\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 1850,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 699,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1851,
									"name": "new ViewModelCache",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {},
									"typeParameter": [
										{
											"id": 1852,
											"name": "ViewModelClassType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"id": 1852,
														"name": "ViewModelClassType"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"parameters": [
										{
											"id": 1853,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The `ViewModel` this class is for\n"
											},
											"type": {
												"type": "reference",
												"id": 1852,
												"name": "ViewModelClassType"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1827,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1852,
												"name": "ViewModelClassType"
											}
										],
										"name": "default"
									}
								}
							]
						},
						{
							"id": 1906,
							"name": "_lastAllRecords",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 970,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2143,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1852,
												"name": "ViewModelClassType"
											}
										],
										"name": "ViewModelFieldPaths"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 2125,
											"typeArguments": [
												{
													"type": "reference",
													"id": 1852,
													"name": "ViewModelClassType"
												},
												{
													"type": "reference",
													"id": 4498,
													"typeArguments": [
														{
															"type": "typeOperator",
															"operator": "keyof",
															"target": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "fields"
																},
																"objectType": {
																	"type": "reference",
																	"id": 1852,
																	"name": "ViewModelClassType"
																}
															}
														},
														{
															"type": "intrinsic",
															"name": "string"
														}
													],
													"qualifiedName": "Extract",
													"package": "typescript",
													"name": "Extract"
												}
											],
											"name": "PartialViewModel"
										}
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"defaultValue": "..."
						},
						{
							"id": 1939,
							"name": "allChangeListeners",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 1128,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 1940,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {},
										"signatures": [
											{
												"id": 1941,
												"name": "__type",
												"kind": 4096,
												"kindString": "Call signature",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "void"
												}
											}
										]
									}
								}
							},
							"defaultValue": "[]"
						},
						{
							"id": 1855,
							"name": "fieldNameCache",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 693,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 4450,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1852,
												"name": "ViewModelClassType"
											}
										],
										"name": "RecordFieldNameCache"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							}
						},
						{
							"id": 1854,
							"name": "viewModel",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 692,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 1852,
								"name": "ViewModelClassType"
							}
						},
						{
							"id": 1828,
							"name": "listenerBatcher",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 694,
									"character": 11
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1829,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1830,
											"name": "isActive",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "false"
										},
										{
											"id": 1831,
											"name": "pending",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "Map",
												"package": "typescript",
												"name": "Map"
											},
											"defaultValue": "..."
										},
										{
											"id": 1833,
											"name": "pendingAll",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"qualifiedName": "Set",
												"package": "typescript",
												"name": "Set"
											},
											"defaultValue": "..."
										},
										{
											"id": 1832,
											"name": "pendingNoBatch",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "Map",
												"package": "typescript",
												"name": "Map"
											},
											"defaultValue": "..."
										},
										{
											"id": 1844,
											"name": "batch",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
													"line": 530,
													"character": 4
												}
											],
											"signatures": [
												{
													"id": 1845,
													"name": "batch",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Start a batch. The passed function is called and any changes queued. Once function returns listeners\nwill be dispatched. The value returned from `run` will be returned.",
														"text": "If any error occurs in `run` then no listeners will be called.\n\nIf you nest batches then all listeners run at the end of the outer batch.\n"
													},
													"typeParameter": [
														{
															"id": 1846,
															"name": "T",
															"kind": 131072,
															"kindString": "Type parameter",
															"flags": {}
														}
													],
													"parameters": [
														{
															"id": 1847,
															"name": "run",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 1848,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"signatures": [
																		{
																			"id": 1849,
																			"name": "__type",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 1846,
																				"name": "T"
																			}
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"id": 1846,
														"name": "T"
													}
												}
											]
										},
										{
											"id": 1837,
											"name": "call",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
													"line": 504,
													"character": 4
												}
											],
											"signatures": [
												{
													"id": 1838,
													"name": "call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queue a call to a record/field specific listener",
														"text": "If `shouldBatch` is false then there's no guarantees about the listener only being called\nonce.\n"
													},
													"typeParameter": [
														{
															"id": 1839,
															"name": "T",
															"kind": 131072,
															"kindString": "Type parameter",
															"flags": {}
														}
													],
													"parameters": [
														{
															"id": 1840,
															"name": "listener",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 4530,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 1839,
																		"name": "T"
																	}
																],
																"name": "ChangeListener"
															}
														},
														{
															"id": 1841,
															"name": "before",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "reference",
																		"id": 1839,
																		"name": "T"
																	}
																]
															}
														},
														{
															"id": 1842,
															"name": "after",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "reference",
																		"id": 1839,
																		"name": "T"
																	}
																]
															}
														},
														{
															"id": 1843,
															"name": "shouldBatch",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															},
															"defaultValue": "true"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										},
										{
											"id": 1834,
											"name": "callAll",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
													"line": 491,
													"character": 4
												}
											],
											"signatures": [
												{
													"id": 1835,
													"name": "callAll",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queue a call to a non-record/field specific listeners"
													},
													"parameters": [
														{
															"id": 1836,
															"name": "listener",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 4527,
																"name": "AllChangesListener"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												1830,
												1831,
												1833,
												1832
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												1844,
												1837,
												1834
											]
										}
									]
								}
							},
							"defaultValue": "defaultListenerBatcher"
						},
						{
							"id": 1856,
							"name": "cache",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 704,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 1857,
									"name": "cache",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							]
						},
						{
							"id": 1867,
							"name": "cacheClass",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 750,
									"character": 16
								}
							],
							"getSignature": [
								{
									"id": 1868,
									"name": "cacheClass",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 1864,
							"name": "acquireFieldNameCache",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 736,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 1865,
									"name": "acquireFieldNameCache",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isPrivate": true
									},
									"comment": {
										"shortText": "Acquire the field name cache specific to a primary key"
									},
									"parameters": [
										{
											"id": 1866,
											"name": "pk",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The primary key to get the cache for\n"
											},
											"type": {
												"type": "reference",
												"id": 2128,
												"typeArguments": [
													{
														"type": "reference",
														"id": 1852,
														"name": "ViewModelClassType"
													}
												],
												"name": "ExtractPkFieldParseableValueType"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 4450,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1852,
												"name": "ViewModelClassType"
											}
										],
										"name": "RecordFieldNameCache"
									}
								}
							]
						},
						{
							"id": 1875,
							"name": "add",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 790,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1876,
									"name": "add",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add a record or records to the cache. Records are cached based on the fields that are\nset (ie. to retrieve the record you would call `get` with the `id` and array of field\nnames that were set on it).",
										"text": "If record A has a superset of fields of record B then when A is cached it\nwill update the cache for record B. The reverse isn't true so as to maintain consistency\nwithin a record.\n"
									},
									"typeParameter": [
										{
											"id": 1877,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"id": 4504,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4507,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 1852,
																		"name": "ViewModelClassType"
																	}
																],
																"qualifiedName": "InstanceType",
																"package": "typescript",
																"name": "InstanceType"
															},
															{
																"type": "reference",
																"id": 4498,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 1852,
																				"name": "ViewModelClassType"
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														],
														"qualifiedName": "Omit",
														"package": "typescript",
														"name": "Omit"
													},
													{
														"type": "reference",
														"id": 2044,
														"typeArguments": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "fields"
																},
																"objectType": {
																	"type": "reference",
																	"id": 1852,
																	"name": "ViewModelClassType"
																}
															},
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "pkFieldName"
																},
																"objectType": {
																	"type": "reference",
																	"id": 1852,
																	"name": "ViewModelClassType"
																}
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"id": 4515,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 1852,
																				"name": "ViewModelClassType"
																			},
																			{
																				"type": "reference",
																				"id": 4498,
																				"typeArguments": [
																					{
																						"type": "typeOperator",
																						"operator": "keyof",
																						"target": {
																							"type": "indexedAccess",
																							"indexType": {
																								"type": "literal",
																								"value": "fields"
																							},
																							"objectType": {
																								"type": "reference",
																								"id": 1852,
																								"name": "ViewModelClassType"
																							}
																						}
																					},
																					{
																						"type": "intrinsic",
																						"name": "string"
																					}
																				],
																				"qualifiedName": "Extract",
																				"package": "typescript",
																				"name": "Extract"
																			}
																		],
																		"name": "ExtractRootFieldNames"
																	},
																	{
																		"type": "conditional",
																		"checkType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "pkFieldName"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 1852,
																				"name": "ViewModelClassType"
																			}
																		},
																		"extendsType": {
																			"type": "intrinsic",
																			"name": "string"
																		},
																		"trueType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "intrinsic",
																				"name": "any"
																			},
																			"objectType": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		},
																		"falseType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "intrinsic",
																				"name": "number"
																			},
																			"objectType": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "literal",
																					"value": "pkFieldName"
																				},
																				"objectType": {
																					"type": "reference",
																					"id": 1852,
																					"name": "ViewModelClassType"
																				}
																			}
																		}
																	}
																]
															},
															{
																"type": "reference",
																"id": 1877,
																"name": "T"
															}
														],
														"name": "BaseViewModel"
													},
													{
														"type": "reference",
														"id": 2013,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4518,
																"typeArguments": [
																	{
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "literal",
																			"value": "fields"
																		},
																		"objectType": {
																			"type": "reference",
																			"id": 1852,
																			"name": "ViewModelClassType"
																		}
																	},
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "reference",
																				"id": 4515,
																				"typeArguments": [
																					{
																						"type": "reference",
																						"id": 1852,
																						"name": "ViewModelClassType"
																					},
																					{
																						"type": "reference",
																						"id": 4498,
																						"typeArguments": [
																							{
																								"type": "typeOperator",
																								"operator": "keyof",
																								"target": {
																									"type": "indexedAccess",
																									"indexType": {
																										"type": "literal",
																										"value": "fields"
																									},
																									"objectType": {
																										"type": "reference",
																										"id": 1852,
																										"name": "ViewModelClassType"
																									}
																								}
																							},
																							{
																								"type": "intrinsic",
																								"name": "string"
																							}
																						],
																						"qualifiedName": "Extract",
																						"package": "typescript",
																						"name": "Extract"
																					}
																				],
																				"name": "ExtractRootFieldNames"
																			},
																			{
																				"type": "conditional",
																				"checkType": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "pkFieldName"
																					},
																					"objectType": {
																						"type": "reference",
																						"id": 1852,
																						"name": "ViewModelClassType"
																					}
																				},
																				"extendsType": {
																					"type": "intrinsic",
																					"name": "string"
																				},
																				"trueType": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "intrinsic",
																						"name": "any"
																					},
																					"objectType": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				},
																				"falseType": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "intrinsic",
																						"name": "number"
																					},
																					"objectType": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "literal",
																							"value": "pkFieldName"
																						},
																						"objectType": {
																							"type": "reference",
																							"id": 1852,
																							"name": "ViewModelClassType"
																						}
																					}
																				}
																			}
																		]
																	}
																],
																"qualifiedName": "Pick",
																"package": "typescript",
																"name": "Pick"
															}
														],
														"name": "FieldDataMapping"
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 1878,
											"name": "recordOrData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The record instance to cache. If a plain object is passed then\nan instance of the view model will be created and returned. An array is also supported\nin which case each entry in the array will be converted to the view model if required\nand returned.\n"
											},
											"type": {
												"type": "reference",
												"id": 1877,
												"name": "T"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1877,
										"name": "T"
									}
								},
								{
									"id": 1879,
									"name": "add",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1880,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"id": 4504,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4507,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 1852,
																		"name": "ViewModelClassType"
																	}
																],
																"qualifiedName": "InstanceType",
																"package": "typescript",
																"name": "InstanceType"
															},
															{
																"type": "reference",
																"id": 4498,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 1852,
																				"name": "ViewModelClassType"
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														],
														"qualifiedName": "Omit",
														"package": "typescript",
														"name": "Omit"
													},
													{
														"type": "reference",
														"id": 2044,
														"typeArguments": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "fields"
																},
																"objectType": {
																	"type": "reference",
																	"id": 1852,
																	"name": "ViewModelClassType"
																}
															},
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "pkFieldName"
																},
																"objectType": {
																	"type": "reference",
																	"id": 1852,
																	"name": "ViewModelClassType"
																}
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"id": 4515,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 1852,
																				"name": "ViewModelClassType"
																			},
																			{
																				"type": "reference",
																				"id": 4498,
																				"typeArguments": [
																					{
																						"type": "typeOperator",
																						"operator": "keyof",
																						"target": {
																							"type": "indexedAccess",
																							"indexType": {
																								"type": "literal",
																								"value": "fields"
																							},
																							"objectType": {
																								"type": "reference",
																								"id": 1852,
																								"name": "ViewModelClassType"
																							}
																						}
																					},
																					{
																						"type": "intrinsic",
																						"name": "string"
																					}
																				],
																				"qualifiedName": "Extract",
																				"package": "typescript",
																				"name": "Extract"
																			}
																		],
																		"name": "ExtractRootFieldNames"
																	},
																	{
																		"type": "conditional",
																		"checkType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "pkFieldName"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 1852,
																				"name": "ViewModelClassType"
																			}
																		},
																		"extendsType": {
																			"type": "intrinsic",
																			"name": "string"
																		},
																		"trueType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "intrinsic",
																				"name": "any"
																			},
																			"objectType": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		},
																		"falseType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "intrinsic",
																				"name": "number"
																			},
																			"objectType": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "literal",
																					"value": "pkFieldName"
																				},
																				"objectType": {
																					"type": "reference",
																					"id": 1852,
																					"name": "ViewModelClassType"
																				}
																			}
																		}
																	}
																]
															},
															{
																"type": "reference",
																"id": 1880,
																"name": "T"
															}
														],
														"name": "BaseViewModel"
													},
													{
														"type": "reference",
														"id": 2013,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4518,
																"typeArguments": [
																	{
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "literal",
																			"value": "fields"
																		},
																		"objectType": {
																			"type": "reference",
																			"id": 1852,
																			"name": "ViewModelClassType"
																		}
																	},
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "reference",
																				"id": 4515,
																				"typeArguments": [
																					{
																						"type": "reference",
																						"id": 1852,
																						"name": "ViewModelClassType"
																					},
																					{
																						"type": "reference",
																						"id": 4498,
																						"typeArguments": [
																							{
																								"type": "typeOperator",
																								"operator": "keyof",
																								"target": {
																									"type": "indexedAccess",
																									"indexType": {
																										"type": "literal",
																										"value": "fields"
																									},
																									"objectType": {
																										"type": "reference",
																										"id": 1852,
																										"name": "ViewModelClassType"
																									}
																								}
																							},
																							{
																								"type": "intrinsic",
																								"name": "string"
																							}
																						],
																						"qualifiedName": "Extract",
																						"package": "typescript",
																						"name": "Extract"
																					}
																				],
																				"name": "ExtractRootFieldNames"
																			},
																			{
																				"type": "conditional",
																				"checkType": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "pkFieldName"
																					},
																					"objectType": {
																						"type": "reference",
																						"id": 1852,
																						"name": "ViewModelClassType"
																					}
																				},
																				"extendsType": {
																					"type": "intrinsic",
																					"name": "string"
																				},
																				"trueType": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "intrinsic",
																						"name": "any"
																					},
																					"objectType": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				},
																				"falseType": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "intrinsic",
																						"name": "number"
																					},
																					"objectType": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "literal",
																							"value": "pkFieldName"
																						},
																						"objectType": {
																							"type": "reference",
																							"id": 1852,
																							"name": "ViewModelClassType"
																						}
																					}
																				}
																			}
																		]
																	}
																],
																"qualifiedName": "Pick",
																"package": "typescript",
																"name": "Pick"
															}
														],
														"name": "FieldDataMapping"
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 1881,
											"name": "recordOrData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1880,
													"name": "T"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1880,
											"name": "T"
										}
									}
								},
								{
									"id": 1882,
									"name": "add",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1883,
											"name": "FieldNames",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 1884,
											"name": "recordOrData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2015,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4518,
														"typeArguments": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "fields"
																},
																"objectType": {
																	"type": "reference",
																	"id": 1852,
																	"name": "ViewModelClassType"
																}
															},
															{
																"type": "reference",
																"id": 1883,
																"name": "FieldNames"
															}
														],
														"qualifiedName": "Pick",
														"package": "typescript",
														"name": "Pick"
													}
												],
												"name": "FieldDataMappingRaw"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2125,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1852,
												"name": "ViewModelClassType"
											},
											{
												"type": "reference",
												"id": 1883,
												"name": "FieldNames"
											}
										],
										"name": "PartialViewModel"
									}
								},
								{
									"id": 1885,
									"name": "add",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1886,
											"name": "FieldNames",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 1887,
											"name": "recordOrData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2015,
													"typeArguments": [
														{
															"type": "reference",
															"id": 4518,
															"typeArguments": [
																{
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "literal",
																		"value": "fields"
																	},
																	"objectType": {
																		"type": "reference",
																		"id": 1852,
																		"name": "ViewModelClassType"
																	}
																},
																{
																	"type": "reference",
																	"id": 1886,
																	"name": "FieldNames"
																}
															],
															"qualifiedName": "Pick",
															"package": "typescript",
															"name": "Pick"
														}
													],
													"name": "FieldDataMappingRaw"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 2125,
											"typeArguments": [
												{
													"type": "reference",
													"id": 1852,
													"name": "ViewModelClassType"
												},
												{
													"type": "reference",
													"id": 1886,
													"name": "FieldNames"
												}
											],
											"name": "PartialViewModel"
										}
									}
								}
							]
						},
						{
							"id": 1888,
							"name": "addList",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 849,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1889,
									"name": "addList",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add a list of records. Use this in place of manually calling\nadd() on each record individually so that listeners only get\nnotified once of the change to the list rather than for\neach record in the list."
									},
									"typeParameter": [
										{
											"id": 1890,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"id": 4504,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4507,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 1852,
																		"name": "ViewModelClassType"
																	}
																],
																"qualifiedName": "InstanceType",
																"package": "typescript",
																"name": "InstanceType"
															},
															{
																"type": "reference",
																"id": 4498,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 1852,
																				"name": "ViewModelClassType"
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														],
														"qualifiedName": "Omit",
														"package": "typescript",
														"name": "Omit"
													},
													{
														"type": "reference",
														"id": 2044,
														"typeArguments": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "fields"
																},
																"objectType": {
																	"type": "reference",
																	"id": 1852,
																	"name": "ViewModelClassType"
																}
															},
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "pkFieldName"
																},
																"objectType": {
																	"type": "reference",
																	"id": 1852,
																	"name": "ViewModelClassType"
																}
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"id": 4515,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 1852,
																				"name": "ViewModelClassType"
																			},
																			{
																				"type": "reference",
																				"id": 4498,
																				"typeArguments": [
																					{
																						"type": "typeOperator",
																						"operator": "keyof",
																						"target": {
																							"type": "indexedAccess",
																							"indexType": {
																								"type": "literal",
																								"value": "fields"
																							},
																							"objectType": {
																								"type": "reference",
																								"id": 1852,
																								"name": "ViewModelClassType"
																							}
																						}
																					},
																					{
																						"type": "intrinsic",
																						"name": "string"
																					}
																				],
																				"qualifiedName": "Extract",
																				"package": "typescript",
																				"name": "Extract"
																			}
																		],
																		"name": "ExtractRootFieldNames"
																	},
																	{
																		"type": "conditional",
																		"checkType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "pkFieldName"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 1852,
																				"name": "ViewModelClassType"
																			}
																		},
																		"extendsType": {
																			"type": "intrinsic",
																			"name": "string"
																		},
																		"trueType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "intrinsic",
																				"name": "any"
																			},
																			"objectType": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		},
																		"falseType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "intrinsic",
																				"name": "number"
																			},
																			"objectType": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "literal",
																					"value": "pkFieldName"
																				},
																				"objectType": {
																					"type": "reference",
																					"id": 1852,
																					"name": "ViewModelClassType"
																				}
																			}
																		}
																	}
																]
															},
															{
																"type": "reference",
																"id": 1890,
																"name": "T"
															}
														],
														"name": "BaseViewModel"
													},
													{
														"type": "reference",
														"id": 2013,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4518,
																"typeArguments": [
																	{
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "literal",
																			"value": "fields"
																		},
																		"objectType": {
																			"type": "reference",
																			"id": 1852,
																			"name": "ViewModelClassType"
																		}
																	},
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "reference",
																				"id": 4515,
																				"typeArguments": [
																					{
																						"type": "reference",
																						"id": 1852,
																						"name": "ViewModelClassType"
																					},
																					{
																						"type": "reference",
																						"id": 4498,
																						"typeArguments": [
																							{
																								"type": "typeOperator",
																								"operator": "keyof",
																								"target": {
																									"type": "indexedAccess",
																									"indexType": {
																										"type": "literal",
																										"value": "fields"
																									},
																									"objectType": {
																										"type": "reference",
																										"id": 1852,
																										"name": "ViewModelClassType"
																									}
																								}
																							},
																							{
																								"type": "intrinsic",
																								"name": "string"
																							}
																						],
																						"qualifiedName": "Extract",
																						"package": "typescript",
																						"name": "Extract"
																					}
																				],
																				"name": "ExtractRootFieldNames"
																			},
																			{
																				"type": "conditional",
																				"checkType": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "pkFieldName"
																					},
																					"objectType": {
																						"type": "reference",
																						"id": 1852,
																						"name": "ViewModelClassType"
																					}
																				},
																				"extendsType": {
																					"type": "intrinsic",
																					"name": "string"
																				},
																				"trueType": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "intrinsic",
																						"name": "any"
																					},
																					"objectType": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				},
																				"falseType": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "intrinsic",
																						"name": "number"
																					},
																					"objectType": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "literal",
																							"value": "pkFieldName"
																						},
																						"objectType": {
																							"type": "reference",
																							"id": 1852,
																							"name": "ViewModelClassType"
																						}
																					}
																				}
																			}
																		]
																	}
																],
																"qualifiedName": "Pick",
																"package": "typescript",
																"name": "Pick"
															}
														],
														"name": "FieldDataMapping"
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 1891,
											"name": "recordsOrData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The records to add. Can either be an array of instances of the ViewModel\nor an array of data objects (or a mixture of both).\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1890,
													"name": "T"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1890,
											"name": "T"
										}
									}
								},
								{
									"id": 1892,
									"name": "addList",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1893,
											"name": "FieldNames",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 1894,
											"name": "recordsOrData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2015,
													"typeArguments": [
														{
															"type": "reference",
															"id": 4518,
															"typeArguments": [
																{
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "literal",
																		"value": "fields"
																	},
																	"objectType": {
																		"type": "reference",
																		"id": 1852,
																		"name": "ViewModelClassType"
																	}
																},
																{
																	"type": "reference",
																	"id": 1893,
																	"name": "FieldNames"
																}
															],
															"qualifiedName": "Pick",
															"package": "typescript",
															"name": "Pick"
														}
													],
													"name": "FieldDataMappingRaw"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 2125,
											"typeArguments": [
												{
													"type": "reference",
													"id": 1852,
													"name": "ViewModelClassType"
												},
												{
													"type": "reference",
													"id": 1893,
													"name": "FieldNames"
												}
											],
											"name": "PartialViewModel"
										}
									}
								}
							]
						},
						{
							"id": 1944,
							"name": "addListener",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 1140,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1945,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add a listener to any changes at all. The detail of the changes are not available.",
										"returns": "A function that removes the listener\n"
									},
									"parameters": [
										{
											"id": 1946,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "Function to that is called when any change occurs. The function is called with no parameters."
											},
											"type": {
												"type": "reference",
												"id": 4527,
												"name": "AllChangesListener"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 4501,
										"name": "ChangeListenerUnsubscribe"
									}
								},
								{
									"id": 1947,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add a listener for any changes, additions or deletions for the record(s) identified by\n`pkOrPks` for the field names `fieldNames`.",
										"returns": "A function that removes the listener\n"
									},
									"typeParameter": [
										{
											"id": 1948,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "tuple",
														"elements": [
															{
																"type": "reference",
																"id": 4498,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "reference",
																			"id": 4521,
																			"typeArguments": [
																				{
																					"type": "reference",
																					"id": 1852,
																					"name": "ViewModelClassType"
																				}
																			],
																			"name": "ExtractRelatedFields"
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															},
															{
																"type": "reference",
																"id": 4498,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "reference",
																					"id": 4498,
																					"typeArguments": [
																						{
																							"type": "typeOperator",
																							"operator": "keyof",
																							"target": {
																								"type": "reference",
																								"id": 4521,
																								"typeArguments": [
																									{
																										"type": "reference",
																										"id": 1852,
																										"name": "ViewModelClassType"
																									}
																								],
																								"name": "ExtractRelatedFields"
																							}
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"qualifiedName": "Extract",
																					"package": "typescript",
																					"name": "Extract"
																				},
																				"objectType": {
																					"type": "reference",
																					"id": 4521,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 1852,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														]
													},
													{
														"type": "reference",
														"id": 4523,
														"typeArguments": [
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "reference",
																		"id": 4498,
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "reference",
																					"id": 4521,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 1852,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	},
																	{
																		"type": "reference",
																		"id": 4498,
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "fields"
																					},
																					"objectType": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "reference",
																							"id": 4498,
																							"typeArguments": [
																								{
																									"type": "typeOperator",
																									"operator": "keyof",
																									"target": {
																										"type": "reference",
																										"id": 4521,
																										"typeArguments": [
																											{
																												"type": "reference",
																												"id": 1852,
																												"name": "ViewModelClassType"
																											}
																										],
																										"name": "ExtractRelatedFields"
																									}
																								},
																								{
																									"type": "intrinsic",
																									"name": "string"
																								}
																							],
																							"qualifiedName": "Extract",
																							"package": "typescript",
																							"name": "Extract"
																						},
																						"objectType": {
																							"type": "reference",
																							"id": 4521,
																							"typeArguments": [
																								{
																									"type": "reference",
																									"id": 1852,
																									"name": "ViewModelClassType"
																								}
																							],
																							"name": "ExtractRelatedFields"
																						}
																					}
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	}
																]
															},
															{
																"type": "reference",
																"id": 2078,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "ViewModelConstructor"
															},
															{
																"type": "reference",
																"id": 4521,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 2078,
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "ViewModelConstructor"
																	}
																],
																"name": "ExtractRelatedFields"
															}
														],
														"name": "FieldPathInner"
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 1949,
											"name": "pkOrPks",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "Primary key or array of multiple primary keys that identifies the record(s)\nto listen to changes/additions/deletions to"
											},
											"type": {
												"type": "reference",
												"id": 2128,
												"typeArguments": [
													{
														"type": "reference",
														"id": 1852,
														"name": "ViewModelClassType"
													}
												],
												"name": "ExtractPkFieldParseableValueType"
											}
										},
										{
											"id": 1950,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "Field names to listen to changes/additions/deletions to. See [Field notation](#Field_notation) for supported format."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1948,
													"name": "T"
												}
											}
										},
										{
											"id": 1951,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "Function to call with any changes"
											},
											"type": {
												"type": "reference",
												"id": 4530,
												"typeArguments": [
													{
														"type": "reference",
														"id": 2125,
														"typeArguments": [
															{
																"type": "reference",
																"id": 1852,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"id": 1948,
																"name": "T"
															}
														],
														"name": "PartialViewModel"
													}
												],
												"name": "ChangeListener"
											}
										},
										{
											"id": 1952,
											"name": "batch",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Whether or not to batch this call with other calls (defaults to true). You shouldn't need to change the default."
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 4501,
										"name": "ChangeListenerUnsubscribe"
									}
								},
								{
									"id": 1953,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1954,
											"name": "pkOrPks",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2128,
												"typeArguments": [
													{
														"type": "reference",
														"id": 1852,
														"name": "ViewModelClassType"
													}
												],
												"name": "ExtractPkFieldParseableValueType"
											}
										},
										{
											"id": 1955,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": "*"
											}
										},
										{
											"id": 1956,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4530,
												"typeArguments": [
													{
														"type": "reference",
														"id": 2125,
														"typeArguments": [
															{
																"type": "reference",
																"id": 1852,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"id": 4498,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 1852,
																				"name": "ViewModelClassType"
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														],
														"name": "PartialViewModel"
													}
												],
												"name": "ChangeListener"
											}
										},
										{
											"id": 1957,
											"name": "batch",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 4501,
										"name": "ChangeListenerUnsubscribe"
									}
								},
								{
									"id": 1958,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1959,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "tuple",
														"elements": [
															{
																"type": "reference",
																"id": 4498,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "reference",
																			"id": 4521,
																			"typeArguments": [
																				{
																					"type": "reference",
																					"id": 1852,
																					"name": "ViewModelClassType"
																				}
																			],
																			"name": "ExtractRelatedFields"
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															},
															{
																"type": "reference",
																"id": 4498,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "reference",
																					"id": 4498,
																					"typeArguments": [
																						{
																							"type": "typeOperator",
																							"operator": "keyof",
																							"target": {
																								"type": "reference",
																								"id": 4521,
																								"typeArguments": [
																									{
																										"type": "reference",
																										"id": 1852,
																										"name": "ViewModelClassType"
																									}
																								],
																								"name": "ExtractRelatedFields"
																							}
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"qualifiedName": "Extract",
																					"package": "typescript",
																					"name": "Extract"
																				},
																				"objectType": {
																					"type": "reference",
																					"id": 4521,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 1852,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														]
													},
													{
														"type": "reference",
														"id": 4523,
														"typeArguments": [
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "reference",
																		"id": 4498,
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "reference",
																					"id": 4521,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 1852,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	},
																	{
																		"type": "reference",
																		"id": 4498,
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "fields"
																					},
																					"objectType": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "reference",
																							"id": 4498,
																							"typeArguments": [
																								{
																									"type": "typeOperator",
																									"operator": "keyof",
																									"target": {
																										"type": "reference",
																										"id": 4521,
																										"typeArguments": [
																											{
																												"type": "reference",
																												"id": 1852,
																												"name": "ViewModelClassType"
																											}
																										],
																										"name": "ExtractRelatedFields"
																									}
																								},
																								{
																									"type": "intrinsic",
																									"name": "string"
																								}
																							],
																							"qualifiedName": "Extract",
																							"package": "typescript",
																							"name": "Extract"
																						},
																						"objectType": {
																							"type": "reference",
																							"id": 4521,
																							"typeArguments": [
																								{
																									"type": "reference",
																									"id": 1852,
																									"name": "ViewModelClassType"
																								}
																							],
																							"name": "ExtractRelatedFields"
																						}
																					}
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	}
																]
															},
															{
																"type": "reference",
																"id": 2078,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "ViewModelConstructor"
															},
															{
																"type": "reference",
																"id": 4521,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 2078,
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "ViewModelConstructor"
																	}
																],
																"name": "ExtractRelatedFields"
															}
														],
														"name": "FieldPathInner"
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 1960,
											"name": "pkOrPks",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2128,
													"typeArguments": [
														{
															"type": "reference",
															"id": 1852,
															"name": "ViewModelClassType"
														}
													],
													"name": "ExtractPkFieldParseableValueType"
												}
											}
										},
										{
											"id": 1961,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1959,
													"name": "T"
												}
											}
										},
										{
											"id": 1962,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4536,
												"typeArguments": [
													{
														"type": "reference",
														"id": 2125,
														"typeArguments": [
															{
																"type": "reference",
																"id": 1852,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"id": 1959,
																"name": "T"
															}
														],
														"name": "PartialViewModel"
													}
												],
												"name": "MultiChangeListener"
											}
										},
										{
											"id": 1963,
											"name": "batch",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 4501,
										"name": "ChangeListenerUnsubscribe"
									}
								},
								{
									"id": 1964,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1965,
											"name": "pkOrPksOrListener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2128,
													"typeArguments": [
														{
															"type": "reference",
															"id": 1852,
															"name": "ViewModelClassType"
														}
													],
													"name": "ExtractPkFieldParseableValueType"
												}
											}
										},
										{
											"id": 1966,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": "*"
											}
										},
										{
											"id": 1967,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4536,
												"typeArguments": [
													{
														"type": "reference",
														"id": 2125,
														"typeArguments": [
															{
																"type": "reference",
																"id": 1852,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"id": 4498,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 1852,
																				"name": "ViewModelClassType"
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														],
														"name": "PartialViewModel"
													}
												],
												"name": "MultiChangeListener"
											}
										},
										{
											"id": 1968,
											"name": "batch",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 4501,
										"name": "ChangeListenerUnsubscribe"
									}
								}
							]
						},
						{
							"id": 1969,
							"name": "addListenerList",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 1236,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1970,
									"name": "addListenerList",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1971,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "tuple",
														"elements": [
															{
																"type": "reference",
																"id": 4498,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "reference",
																			"id": 4521,
																			"typeArguments": [
																				{
																					"type": "reference",
																					"id": 1852,
																					"name": "ViewModelClassType"
																				}
																			],
																			"name": "ExtractRelatedFields"
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															},
															{
																"type": "reference",
																"id": 4498,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "reference",
																					"id": 4498,
																					"typeArguments": [
																						{
																							"type": "typeOperator",
																							"operator": "keyof",
																							"target": {
																								"type": "reference",
																								"id": 4521,
																								"typeArguments": [
																									{
																										"type": "reference",
																										"id": 1852,
																										"name": "ViewModelClassType"
																									}
																								],
																								"name": "ExtractRelatedFields"
																							}
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"qualifiedName": "Extract",
																					"package": "typescript",
																					"name": "Extract"
																				},
																				"objectType": {
																					"type": "reference",
																					"id": 4521,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 1852,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														]
													},
													{
														"type": "reference",
														"id": 4523,
														"typeArguments": [
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "reference",
																		"id": 4498,
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "reference",
																					"id": 4521,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 1852,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	},
																	{
																		"type": "reference",
																		"id": 4498,
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "fields"
																					},
																					"objectType": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "reference",
																							"id": 4498,
																							"typeArguments": [
																								{
																									"type": "typeOperator",
																									"operator": "keyof",
																									"target": {
																										"type": "reference",
																										"id": 4521,
																										"typeArguments": [
																											{
																												"type": "reference",
																												"id": 1852,
																												"name": "ViewModelClassType"
																											}
																										],
																										"name": "ExtractRelatedFields"
																									}
																								},
																								{
																									"type": "intrinsic",
																									"name": "string"
																								}
																							],
																							"qualifiedName": "Extract",
																							"package": "typescript",
																							"name": "Extract"
																						},
																						"objectType": {
																							"type": "reference",
																							"id": 4521,
																							"typeArguments": [
																								{
																									"type": "reference",
																									"id": 1852,
																									"name": "ViewModelClassType"
																								}
																							],
																							"name": "ExtractRelatedFields"
																						}
																					}
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	}
																]
															},
															{
																"type": "reference",
																"id": 2078,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "ViewModelConstructor"
															},
															{
																"type": "reference",
																"id": 4521,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 2078,
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "ViewModelConstructor"
																	}
																],
																"name": "ExtractRelatedFields"
															}
														],
														"name": "FieldPathInner"
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 1972,
											"name": "pks",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2128,
													"typeArguments": [
														{
															"type": "reference",
															"id": 1852,
															"name": "ViewModelClassType"
														}
													],
													"name": "ExtractPkFieldParseableValueType"
												}
											}
										},
										{
											"id": 1973,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1971,
													"name": "T"
												}
											}
										},
										{
											"id": 1974,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4536,
												"typeArguments": [
													{
														"type": "reference",
														"id": 2125,
														"typeArguments": [
															{
																"type": "reference",
																"id": 1852,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"id": 1971,
																"name": "T"
															}
														],
														"name": "PartialViewModel"
													}
												],
												"name": "MultiChangeListener"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 4501,
										"name": "ChangeListenerUnsubscribe"
									}
								},
								{
									"id": 1975,
									"name": "addListenerList",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1976,
											"name": "pks",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2128,
													"typeArguments": [
														{
															"type": "reference",
															"id": 1852,
															"name": "ViewModelClassType"
														}
													],
													"name": "ExtractPkFieldParseableValueType"
												}
											}
										},
										{
											"id": 1977,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": "*"
											}
										},
										{
											"id": 1978,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4536,
												"typeArguments": [
													{
														"type": "reference",
														"id": 2125,
														"typeArguments": [
															{
																"type": "reference",
																"id": 1852,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"id": 4498,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 1852,
																				"name": "ViewModelClassType"
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														],
														"name": "PartialViewModel"
													}
												],
												"name": "MultiChangeListener"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 4501,
										"name": "ChangeListenerUnsubscribe"
									}
								}
							]
						},
						{
							"id": 1869,
							"name": "batch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 772,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1870,
									"name": "batch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Batch changes made within provided function. This guarantees that any changes made\nwill result in a single call for each relevant listener.",
										"text": "```js\nUser.cache.addListener(listenerAll);\nUser.cache.addListener(1, ['id', 'name'], listener);\nUser.cache.addListenerList([1, 2], ['id', 'name'], listenerList);\nUser.cache.batch(() => {\n  // This value won't appear in changes at all as it's replaced 2 lines down\n  User.cache.add({ id: 1, name: 'Bob', groupId: 1 });\n  User.cache.add({ id: 2, name: 'Sam', groupId: null });\n  User.cache.add({ id: 1, name: 'Bobby', groupId: 1 });\n});\n// All listeners called once\n```"
									},
									"typeParameter": [
										{
											"id": 1871,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 1872,
											"name": "run",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1873,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1874,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 1871,
																"name": "T"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1871,
										"name": "T"
									}
								}
							]
						},
						{
							"id": 1935,
							"name": "delete",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 1112,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1936,
									"name": "delete",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Delete a record from the cache, optionally only for the specified `fieldNames`",
										"text": "If `fieldNames` is omitted then the cache for the record is cleared in it's entirety.\n",
										"returns": "true if anything was removed, false otherwise\n"
									},
									"parameters": [
										{
											"id": 1937,
											"name": "pk",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The primary key of the record to delete"
											},
											"type": {
												"type": "reference",
												"id": 2128,
												"typeArguments": [
													{
														"type": "reference",
														"id": 1852,
														"name": "ViewModelClassType"
													}
												],
												"name": "ExtractPkFieldParseableValueType"
											}
										},
										{
											"id": 1938,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Optionally only delete the entry with the specified field names. If\nthis is not set then all data for the record is removed. See [Field notation](#Field_notation) for supported format.\n"
											},
											"type": {
												"type": "reference",
												"id": 2010,
												"typeArguments": [
													{
														"type": "reference",
														"id": 1852,
														"name": "ViewModelClassType"
													},
													{
														"type": "reference",
														"id": 4521,
														"typeArguments": [
															{
																"type": "reference",
																"id": 1852,
																"name": "ViewModelClassType"
															}
														],
														"name": "ExtractRelatedFields"
													}
												],
												"name": "FieldPaths"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 1895,
							"name": "get",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 875,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1896,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get a record with the specified `fieldNames` set from the cache",
										"returns": "The cached record or null if none found\n"
									},
									"typeParameter": [
										{
											"id": 1897,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "tuple",
														"elements": [
															{
																"type": "reference",
																"id": 4498,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "reference",
																			"id": 4521,
																			"typeArguments": [
																				{
																					"type": "reference",
																					"id": 1852,
																					"name": "ViewModelClassType"
																				}
																			],
																			"name": "ExtractRelatedFields"
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															},
															{
																"type": "reference",
																"id": 4498,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "reference",
																					"id": 4498,
																					"typeArguments": [
																						{
																							"type": "typeOperator",
																							"operator": "keyof",
																							"target": {
																								"type": "reference",
																								"id": 4521,
																								"typeArguments": [
																									{
																										"type": "reference",
																										"id": 1852,
																										"name": "ViewModelClassType"
																									}
																								],
																								"name": "ExtractRelatedFields"
																							}
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"qualifiedName": "Extract",
																					"package": "typescript",
																					"name": "Extract"
																				},
																				"objectType": {
																					"type": "reference",
																					"id": 4521,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 1852,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														]
													},
													{
														"type": "reference",
														"id": 4523,
														"typeArguments": [
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "reference",
																		"id": 4498,
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "reference",
																					"id": 4521,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 1852,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	},
																	{
																		"type": "reference",
																		"id": 4498,
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "fields"
																					},
																					"objectType": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "reference",
																							"id": 4498,
																							"typeArguments": [
																								{
																									"type": "typeOperator",
																									"operator": "keyof",
																									"target": {
																										"type": "reference",
																										"id": 4521,
																										"typeArguments": [
																											{
																												"type": "reference",
																												"id": 1852,
																												"name": "ViewModelClassType"
																											}
																										],
																										"name": "ExtractRelatedFields"
																									}
																								},
																								{
																									"type": "intrinsic",
																									"name": "string"
																								}
																							],
																							"qualifiedName": "Extract",
																							"package": "typescript",
																							"name": "Extract"
																						},
																						"objectType": {
																							"type": "reference",
																							"id": 4521,
																							"typeArguments": [
																								{
																									"type": "reference",
																									"id": 1852,
																									"name": "ViewModelClassType"
																								}
																							],
																							"name": "ExtractRelatedFields"
																						}
																					}
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	}
																]
															},
															{
																"type": "reference",
																"id": 2078,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "ViewModelConstructor"
															},
															{
																"type": "reference",
																"id": 4521,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 2078,
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "ViewModelConstructor"
																	}
																],
																"name": "ExtractRelatedFields"
															}
														],
														"name": "FieldPathInner"
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 1898,
											"name": "pk",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "the primary key of the record to get"
											},
											"type": {
												"type": "reference",
												"id": 2128,
												"typeArguments": [
													{
														"type": "reference",
														"id": 1852,
														"name": "ViewModelClassType"
													}
												],
												"name": "ExtractPkFieldParseableValueType"
											}
										},
										{
											"id": 1899,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "the field names to use to look up the cache entry. Use '*' to indicate all fields.\nSee [Field notation](#Field_notation) for supported format.\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1897,
													"name": "T"
												}
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2125,
												"typeArguments": [
													{
														"type": "reference",
														"id": 1852,
														"name": "ViewModelClassType"
													},
													{
														"type": "reference",
														"id": 1897,
														"name": "T"
													}
												],
												"name": "PartialViewModel"
											}
										]
									}
								},
								{
									"id": 1900,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1901,
											"name": "pk",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2128,
												"typeArguments": [
													{
														"type": "reference",
														"id": 1852,
														"name": "ViewModelClassType"
													}
												],
												"name": "ExtractPkFieldParseableValueType"
											}
										},
										{
											"id": 1902,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": "*"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2125,
												"typeArguments": [
													{
														"type": "reference",
														"id": 1852,
														"name": "ViewModelClassType"
													},
													{
														"type": "reference",
														"id": 4498,
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "literal",
																		"value": "fields"
																	},
																	"objectType": {
																		"type": "reference",
																		"id": 1852,
																		"name": "ViewModelClassType"
																	}
																}
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"qualifiedName": "Extract",
														"package": "typescript",
														"name": "Extract"
													}
												],
												"name": "PartialViewModel"
											}
										]
									}
								},
								{
									"id": 1903,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the currently cached version of the specified version",
										"returns": "The cached record or null if none found\n"
									},
									"typeParameter": [
										{
											"id": 1904,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "tuple",
														"elements": [
															{
																"type": "reference",
																"id": 4498,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "reference",
																			"id": 4521,
																			"typeArguments": [
																				{
																					"type": "reference",
																					"id": 1852,
																					"name": "ViewModelClassType"
																				}
																			],
																			"name": "ExtractRelatedFields"
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															},
															{
																"type": "reference",
																"id": 4498,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "reference",
																					"id": 4498,
																					"typeArguments": [
																						{
																							"type": "typeOperator",
																							"operator": "keyof",
																							"target": {
																								"type": "reference",
																								"id": 4521,
																								"typeArguments": [
																									{
																										"type": "reference",
																										"id": 1852,
																										"name": "ViewModelClassType"
																									}
																								],
																								"name": "ExtractRelatedFields"
																							}
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"qualifiedName": "Extract",
																					"package": "typescript",
																					"name": "Extract"
																				},
																				"objectType": {
																					"type": "reference",
																					"id": 4521,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 1852,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														]
													},
													{
														"type": "reference",
														"id": 4523,
														"typeArguments": [
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "reference",
																		"id": 4498,
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "reference",
																					"id": 4521,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 1852,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	},
																	{
																		"type": "reference",
																		"id": 4498,
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "fields"
																					},
																					"objectType": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "reference",
																							"id": 4498,
																							"typeArguments": [
																								{
																									"type": "typeOperator",
																									"operator": "keyof",
																									"target": {
																										"type": "reference",
																										"id": 4521,
																										"typeArguments": [
																											{
																												"type": "reference",
																												"id": 1852,
																												"name": "ViewModelClassType"
																											}
																										],
																										"name": "ExtractRelatedFields"
																									}
																								},
																								{
																									"type": "intrinsic",
																									"name": "string"
																								}
																							],
																							"qualifiedName": "Extract",
																							"package": "typescript",
																							"name": "Extract"
																						},
																						"objectType": {
																							"type": "reference",
																							"id": 4521,
																							"typeArguments": [
																								{
																									"type": "reference",
																									"id": 1852,
																									"name": "ViewModelClassType"
																								}
																							],
																							"name": "ExtractRelatedFields"
																						}
																					}
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	}
																]
															},
															{
																"type": "reference",
																"id": 2078,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "ViewModelConstructor"
															},
															{
																"type": "reference",
																"id": 4521,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 2078,
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "ViewModelConstructor"
																	}
																],
																"name": "ExtractRelatedFields"
															}
														],
														"name": "FieldPathInner"
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 1905,
											"name": "record",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "a current instance of a ViewModel to get the latest cached version of\n"
											},
											"type": {
												"type": "reference",
												"id": 2125,
												"typeArguments": [
													{
														"type": "reference",
														"id": 1852,
														"name": "ViewModelClassType"
													},
													{
														"type": "reference",
														"id": 1904,
														"name": "T"
													}
												],
												"name": "PartialViewModel"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2125,
												"typeArguments": [
													{
														"type": "reference",
														"id": 1852,
														"name": "ViewModelClassType"
													},
													{
														"type": "reference",
														"id": 1904,
														"name": "T"
													}
												],
												"name": "PartialViewModel"
											}
										]
									}
								}
							]
						},
						{
							"id": 1907,
							"name": "getAll",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 984,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1908,
									"name": "getAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get all records in the cache for the specified field names. This acts like `getList` but returns\nall records not just records with specified primary keys.",
										"text": "This function guarantees to return the same array (ie. passes strict equality check) if the underlying\nrecords have not changed.\n"
									},
									"parameters": [
										{
											"id": 1909,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "List of field names to return records for. See [Field notation](#Field_notation) for supported format.\n"
											},
											"type": {
												"type": "literal",
												"value": "*"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 2125,
											"typeArguments": [
												{
													"type": "reference",
													"id": 1852,
													"name": "ViewModelClassType"
												},
												{
													"type": "reference",
													"id": 4498,
													"typeArguments": [
														{
															"type": "typeOperator",
															"operator": "keyof",
															"target": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "fields"
																},
																"objectType": {
																	"type": "reference",
																	"id": 1852,
																	"name": "ViewModelClassType"
																}
															}
														},
														{
															"type": "intrinsic",
															"name": "string"
														}
													],
													"qualifiedName": "Extract",
													"package": "typescript",
													"name": "Extract"
												}
											],
											"name": "PartialViewModel"
										}
									}
								},
								{
									"id": 1910,
									"name": "getAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1911,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "tuple",
														"elements": [
															{
																"type": "reference",
																"id": 4498,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "reference",
																			"id": 4521,
																			"typeArguments": [
																				{
																					"type": "reference",
																					"id": 1852,
																					"name": "ViewModelClassType"
																				}
																			],
																			"name": "ExtractRelatedFields"
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															},
															{
																"type": "reference",
																"id": 4498,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "reference",
																					"id": 4498,
																					"typeArguments": [
																						{
																							"type": "typeOperator",
																							"operator": "keyof",
																							"target": {
																								"type": "reference",
																								"id": 4521,
																								"typeArguments": [
																									{
																										"type": "reference",
																										"id": 1852,
																										"name": "ViewModelClassType"
																									}
																								],
																								"name": "ExtractRelatedFields"
																							}
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"qualifiedName": "Extract",
																					"package": "typescript",
																					"name": "Extract"
																				},
																				"objectType": {
																					"type": "reference",
																					"id": 4521,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 1852,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														]
													},
													{
														"type": "reference",
														"id": 4523,
														"typeArguments": [
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "reference",
																		"id": 4498,
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "reference",
																					"id": 4521,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 1852,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	},
																	{
																		"type": "reference",
																		"id": 4498,
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "fields"
																					},
																					"objectType": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "reference",
																							"id": 4498,
																							"typeArguments": [
																								{
																									"type": "typeOperator",
																									"operator": "keyof",
																									"target": {
																										"type": "reference",
																										"id": 4521,
																										"typeArguments": [
																											{
																												"type": "reference",
																												"id": 1852,
																												"name": "ViewModelClassType"
																											}
																										],
																										"name": "ExtractRelatedFields"
																									}
																								},
																								{
																									"type": "intrinsic",
																									"name": "string"
																								}
																							],
																							"qualifiedName": "Extract",
																							"package": "typescript",
																							"name": "Extract"
																						},
																						"objectType": {
																							"type": "reference",
																							"id": 4521,
																							"typeArguments": [
																								{
																									"type": "reference",
																									"id": 1852,
																									"name": "ViewModelClassType"
																								}
																							],
																							"name": "ExtractRelatedFields"
																						}
																					}
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	}
																]
															},
															{
																"type": "reference",
																"id": 2078,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "ViewModelConstructor"
															},
															{
																"type": "reference",
																"id": 4521,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 2078,
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "ViewModelConstructor"
																	}
																],
																"name": "ExtractRelatedFields"
															}
														],
														"name": "FieldPathInner"
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 1912,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1911,
													"name": "T"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 2125,
											"typeArguments": [
												{
													"type": "reference",
													"id": 1852,
													"name": "ViewModelClassType"
												},
												{
													"type": "reference",
													"id": 1911,
													"name": "T"
												}
											],
											"name": "PartialViewModel"
										}
									}
								}
							]
						},
						{
							"id": 1913,
							"name": "getList",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 1033,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1914,
									"name": "getList",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get a list of records with the specified `fieldNames` set from the cache",
										"text": "Any record that is not found will end up in the array as a null value. If this\nisn't desired you must filter them manually.\n",
										"returns": "an array of the cached records. Any records not found will be in the array as a null value if `removeNulls` is false otherwise they will be removed.\n"
									},
									"typeParameter": [
										{
											"id": 1915,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "tuple",
														"elements": [
															{
																"type": "reference",
																"id": 4498,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "reference",
																			"id": 4521,
																			"typeArguments": [
																				{
																					"type": "reference",
																					"id": 1852,
																					"name": "ViewModelClassType"
																				}
																			],
																			"name": "ExtractRelatedFields"
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															},
															{
																"type": "reference",
																"id": 4498,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "reference",
																					"id": 4498,
																					"typeArguments": [
																						{
																							"type": "typeOperator",
																							"operator": "keyof",
																							"target": {
																								"type": "reference",
																								"id": 4521,
																								"typeArguments": [
																									{
																										"type": "reference",
																										"id": 1852,
																										"name": "ViewModelClassType"
																									}
																								],
																								"name": "ExtractRelatedFields"
																							}
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"qualifiedName": "Extract",
																					"package": "typescript",
																					"name": "Extract"
																				},
																				"objectType": {
																					"type": "reference",
																					"id": 4521,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 1852,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														]
													},
													{
														"type": "reference",
														"id": 4523,
														"typeArguments": [
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "reference",
																		"id": 4498,
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "reference",
																					"id": 4521,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 1852,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	},
																	{
																		"type": "reference",
																		"id": 4498,
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "fields"
																					},
																					"objectType": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "reference",
																							"id": 4498,
																							"typeArguments": [
																								{
																									"type": "typeOperator",
																									"operator": "keyof",
																									"target": {
																										"type": "reference",
																										"id": 4521,
																										"typeArguments": [
																											{
																												"type": "reference",
																												"id": 1852,
																												"name": "ViewModelClassType"
																											}
																										],
																										"name": "ExtractRelatedFields"
																									}
																								},
																								{
																									"type": "intrinsic",
																									"name": "string"
																								}
																							],
																							"qualifiedName": "Extract",
																							"package": "typescript",
																							"name": "Extract"
																						},
																						"objectType": {
																							"type": "reference",
																							"id": 4521,
																							"typeArguments": [
																								{
																									"type": "reference",
																									"id": 1852,
																									"name": "ViewModelClassType"
																								}
																							],
																							"name": "ExtractRelatedFields"
																						}
																					}
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	}
																]
															},
															{
																"type": "reference",
																"id": 2078,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "ViewModelConstructor"
															},
															{
																"type": "reference",
																"id": 4521,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 2078,
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "ViewModelConstructor"
																	}
																],
																"name": "ExtractRelatedFields"
															}
														],
														"name": "FieldPathInner"
													}
												]
											}
										},
										{
											"id": 1916,
											"name": "RemoveNullsT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"default": {
												"type": "literal",
												"value": true
											}
										}
									],
									"parameters": [
										{
											"id": 1917,
											"name": "pks",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "An array of primary keys"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2128,
													"typeArguments": [
														{
															"type": "reference",
															"id": 1852,
															"name": "ViewModelClassType"
														}
													],
													"name": "ExtractPkFieldParseableValueType"
												}
											}
										},
										{
											"id": 1918,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "the field names to use to look up the cached entries. See [Field notation](#Field_notation) for supported format."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1915,
													"name": "T"
												}
											}
										},
										{
											"id": 1919,
											"name": "removeNulls",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "whether to remove entries that have no record in the cache. Defaults to true."
											},
											"type": {
												"type": "reference",
												"id": 1916,
												"name": "RemoveNullsT"
											}
										}
									],
									"type": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"id": 1916,
											"name": "RemoveNullsT"
										},
										"extendsType": {
											"type": "literal",
											"value": true
										},
										"trueType": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"id": 2125,
												"typeArguments": [
													{
														"type": "reference",
														"id": 1852,
														"name": "ViewModelClassType"
													},
													{
														"type": "reference",
														"id": 1915,
														"name": "T"
													}
												],
												"name": "PartialViewModel"
											}
										},
										"falseType": {
											"type": "array",
											"elementType": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 2125,
														"typeArguments": [
															{
																"type": "reference",
																"id": 1852,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"id": 1915,
																"name": "T"
															}
														],
														"name": "PartialViewModel"
													}
												]
											}
										}
									}
								},
								{
									"id": 1920,
									"name": "getList",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1921,
											"name": "RemoveNullsT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"default": {
												"type": "literal",
												"value": true
											}
										}
									],
									"parameters": [
										{
											"id": 1922,
											"name": "pks",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2128,
													"typeArguments": [
														{
															"type": "reference",
															"id": 1852,
															"name": "ViewModelClassType"
														}
													],
													"name": "ExtractPkFieldParseableValueType"
												}
											}
										},
										{
											"id": 1923,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": "*"
											}
										},
										{
											"id": 1924,
											"name": "removeNulls",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 1921,
												"name": "RemoveNullsT"
											}
										}
									],
									"type": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"id": 1921,
											"name": "RemoveNullsT"
										},
										"extendsType": {
											"type": "literal",
											"value": true
										},
										"trueType": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"id": 2125,
												"typeArguments": [
													{
														"type": "reference",
														"id": 1852,
														"name": "ViewModelClassType"
													},
													{
														"type": "reference",
														"id": 4498,
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "literal",
																		"value": "fields"
																	},
																	"objectType": {
																		"type": "reference",
																		"id": 1852,
																		"name": "ViewModelClassType"
																	}
																}
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"qualifiedName": "Extract",
														"package": "typescript",
														"name": "Extract"
													}
												],
												"name": "PartialViewModel"
											}
										},
										"falseType": {
											"type": "array",
											"elementType": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 2125,
														"typeArguments": [
															{
																"type": "reference",
																"id": 1852,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"id": 4498,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 1852,
																				"name": "ViewModelClassType"
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														],
														"name": "PartialViewModel"
													}
												]
											}
										}
									}
								},
								{
									"id": 1925,
									"name": "getList",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get list of cached records from an existing list of records",
										"returns": "an array of the cached records. Any records not found will be in the array as a null value if `removeNulls` is false otherwise they will be removed.\n"
									},
									"typeParameter": [
										{
											"id": 1926,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"id": 2044,
														"typeArguments": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "fields"
																},
																"objectType": {
																	"type": "reference",
																	"id": 1852,
																	"name": "ViewModelClassType"
																}
															},
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "pkFieldName"
																},
																"objectType": {
																	"type": "reference",
																	"id": 1852,
																	"name": "ViewModelClassType"
																}
															},
															{
																"type": "reference",
																"id": 4498,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 1852,
																				"name": "ViewModelClassType"
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															},
															{
																"type": "reference",
																"id": 1926,
																"name": "T"
															}
														],
														"name": "BaseViewModel"
													},
													{
														"type": "reference",
														"id": 2013,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4518,
																"typeArguments": [
																	{
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "literal",
																			"value": "fields"
																		},
																		"objectType": {
																			"type": "reference",
																			"id": 1852,
																			"name": "ViewModelClassType"
																		}
																	},
																	{
																		"type": "reference",
																		"id": 4498,
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "fields"
																					},
																					"objectType": {
																						"type": "reference",
																						"id": 1852,
																						"name": "ViewModelClassType"
																					}
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	}
																],
																"qualifiedName": "Pick",
																"package": "typescript",
																"name": "Pick"
															}
														],
														"name": "FieldDataMapping"
													}
												]
											}
										},
										{
											"id": 1927,
											"name": "RemoveNullsT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"default": {
												"type": "literal",
												"value": true
											}
										}
									],
									"parameters": [
										{
											"id": 1928,
											"name": "records",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "List of existing ViewModel records to get latest cache version for"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1926,
													"name": "T"
												}
											}
										},
										{
											"id": 1929,
											"name": "removeNulls",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "whether to remove entries that have no record in the cache. Defaults to true."
											},
											"type": {
												"type": "reference",
												"id": 1927,
												"name": "RemoveNullsT"
											}
										}
									],
									"type": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"id": 1927,
											"name": "RemoveNullsT"
										},
										"extendsType": {
											"type": "literal",
											"value": true
										},
										"trueType": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"id": 1926,
												"name": "T"
											}
										},
										"falseType": {
											"type": "array",
											"elementType": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 1926,
														"name": "T"
													}
												]
											}
										}
									}
								},
								{
									"id": 1930,
									"name": "getList",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1931,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "tuple",
														"elements": [
															{
																"type": "reference",
																"id": 4498,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "reference",
																			"id": 4521,
																			"typeArguments": [
																				{
																					"type": "reference",
																					"id": 1852,
																					"name": "ViewModelClassType"
																				}
																			],
																			"name": "ExtractRelatedFields"
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															},
															{
																"type": "reference",
																"id": 4498,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "reference",
																					"id": 4498,
																					"typeArguments": [
																						{
																							"type": "typeOperator",
																							"operator": "keyof",
																							"target": {
																								"type": "reference",
																								"id": 4521,
																								"typeArguments": [
																									{
																										"type": "reference",
																										"id": 1852,
																										"name": "ViewModelClassType"
																									}
																								],
																								"name": "ExtractRelatedFields"
																							}
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"qualifiedName": "Extract",
																					"package": "typescript",
																					"name": "Extract"
																				},
																				"objectType": {
																					"type": "reference",
																					"id": 4521,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 1852,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														]
													},
													{
														"type": "reference",
														"id": 4523,
														"typeArguments": [
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "reference",
																		"id": 4498,
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "reference",
																					"id": 4521,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 1852,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	},
																	{
																		"type": "reference",
																		"id": 4498,
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "fields"
																					},
																					"objectType": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "reference",
																							"id": 4498,
																							"typeArguments": [
																								{
																									"type": "typeOperator",
																									"operator": "keyof",
																									"target": {
																										"type": "reference",
																										"id": 4521,
																										"typeArguments": [
																											{
																												"type": "reference",
																												"id": 1852,
																												"name": "ViewModelClassType"
																											}
																										],
																										"name": "ExtractRelatedFields"
																									}
																								},
																								{
																									"type": "intrinsic",
																									"name": "string"
																								}
																							],
																							"qualifiedName": "Extract",
																							"package": "typescript",
																							"name": "Extract"
																						},
																						"objectType": {
																							"type": "reference",
																							"id": 4521,
																							"typeArguments": [
																								{
																									"type": "reference",
																									"id": 1852,
																									"name": "ViewModelClassType"
																								}
																							],
																							"name": "ExtractRelatedFields"
																						}
																					}
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	}
																]
															},
															{
																"type": "reference",
																"id": 2078,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "ViewModelConstructor"
															},
															{
																"type": "reference",
																"id": 4521,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 2078,
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "ViewModelConstructor"
																	}
																],
																"name": "ExtractRelatedFields"
															}
														],
														"name": "FieldPathInner"
													}
												]
											}
										},
										{
											"id": 1932,
											"name": "RemoveNullsT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"default": {
												"type": "literal",
												"value": true
											}
										}
									],
									"parameters": [
										{
											"id": 1933,
											"name": "records",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2125,
													"typeArguments": [
														{
															"type": "reference",
															"id": 1852,
															"name": "ViewModelClassType"
														},
														{
															"type": "reference",
															"id": 1931,
															"name": "T"
														}
													],
													"name": "PartialViewModel"
												}
											}
										},
										{
											"id": 1934,
											"name": "removeNulls",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 1932,
												"name": "RemoveNullsT"
											}
										}
									],
									"type": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"id": 1932,
											"name": "RemoveNullsT"
										},
										"extendsType": {
											"type": "literal",
											"value": true
										},
										"trueType": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"id": 2125,
												"typeArguments": [
													{
														"type": "reference",
														"id": 1852,
														"name": "ViewModelClassType"
													},
													{
														"type": "reference",
														"id": 1931,
														"name": "T"
													}
												],
												"name": "PartialViewModel"
											}
										},
										"falseType": {
											"type": "array",
											"elementType": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 2125,
														"typeArguments": [
															{
																"type": "reference",
																"id": 1852,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"id": 1931,
																"name": "T"
															}
														],
														"name": "PartialViewModel"
													}
												]
											}
										}
									}
								}
							]
						},
						{
							"id": 1861,
							"name": "getPkCacheKey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 720,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 1862,
									"name": "getPkCacheKey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the cache key to use into for the primary key. Handles compound keys."
									},
									"parameters": [
										{
											"id": 1863,
											"name": "pk",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2128,
												"typeArguments": [
													{
														"type": "reference",
														"id": 1852,
														"name": "ViewModelClassType"
													}
												],
												"name": "ExtractPkFieldParseableValueType"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 1858,
							"name": "isInstanceOfModel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 713,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 1859,
									"name": "isInstanceOfModel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Checks if value `a` is an instance of the ViewModel this cache is for"
									},
									"parameters": [
										{
											"id": 1860,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "a",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"id": 2125,
											"typeArguments": [
												{
													"type": "reference",
													"id": 1852,
													"name": "ViewModelClassType"
												},
												{
													"type": "reference",
													"id": 4498,
													"typeArguments": [
														{
															"type": "typeOperator",
															"operator": "keyof",
															"target": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "fields"
																},
																"objectType": {
																	"type": "reference",
																	"id": 1852,
																	"name": "ViewModelClassType"
																}
															}
														},
														{
															"type": "intrinsic",
															"name": "string"
														}
													],
													"qualifiedName": "Extract",
													"package": "typescript",
													"name": "Extract"
												}
											],
											"name": "PartialViewModel"
										}
									}
								}
							]
						},
						{
							"id": 1942,
							"name": "onAnyChange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 1130,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 1943,
									"name": "onAnyChange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1850
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1906,
								1939,
								1855,
								1854,
								1828
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								1856,
								1867
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1864,
								1875,
								1888,
								1944,
								1969,
								1869,
								1935,
								1895,
								1907,
								1913,
								1861,
								1858,
								1942
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
							"line": 691,
							"character": 21
						}
					],
					"typeParameter": [
						{
							"id": 1979,
							"name": "ViewModelClassType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2078,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ViewModelConstructor"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"kind": 4,
					"children": [
						4449
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1827
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1980,
			"name": "ViewModelFactory",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 4550,
					"name": "<internal>",
					"kind": 4,
					"kindString": "Namespace",
					"flags": {},
					"children": [
						{
							"id": 4574,
							"name": "CallSite",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 4589,
									"name": "getColumnNumber",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4590,
											"name": "getColumnNumber",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Current column number [if this function was defined in a script]"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									]
								},
								{
									"id": 4591,
									"name": "getEvalOrigin",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4592,
											"name": "getEvalOrigin",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "A call site object representing the location where eval was called\n[if this function was created using a call to eval]"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									]
								},
								{
									"id": 4585,
									"name": "getFileName",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4586,
											"name": "getFileName",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Name of the script [if this function was defined in a script]"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									]
								},
								{
									"id": 4579,
									"name": "getFunction",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4580,
											"name": "getFunction",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Current function"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reference",
														"qualifiedName": "Function",
														"package": "typescript",
														"name": "Function"
													}
												]
											}
										}
									]
								},
								{
									"id": 4581,
									"name": "getFunctionName",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4582,
											"name": "getFunctionName",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Name of the current function, typically its name property.\nIf a name property is not available an attempt will be made to try\nto infer a name from the function's context."
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									]
								},
								{
									"id": 4587,
									"name": "getLineNumber",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4588,
											"name": "getLineNumber",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Current line number [if this function was defined in a script]"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									]
								},
								{
									"id": 4583,
									"name": "getMethodName",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4584,
											"name": "getMethodName",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Name of the property [of \"this\" or one of its prototypes] that holds\nthe current function"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									]
								},
								{
									"id": 4575,
									"name": "getThis",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4576,
											"name": "getThis",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Value of \"this\""
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									]
								},
								{
									"id": 4577,
									"name": "getTypeName",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4578,
											"name": "getTypeName",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Type of \"this\" as a string.\nThis is the name of the function stored in the constructor field of\n\"this\", if available.  Otherwise the object's [[Class]] internal\nproperty."
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									]
								},
								{
									"id": 4599,
									"name": "isConstructor",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4600,
											"name": "isConstructor",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Is this a constructor call?"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								},
								{
									"id": 4595,
									"name": "isEval",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4596,
											"name": "isEval",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Does this call take place in code defined by a call to eval?"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								},
								{
									"id": 4597,
									"name": "isNative",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4598,
											"name": "isNative",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Is this call in native V8 code?"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								},
								{
									"id": 4593,
									"name": "isToplevel",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4594,
											"name": "isToplevel",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Is this a toplevel invocation, that is, is \"this\" the global object?"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										4589,
										4591,
										4585,
										4579,
										4581,
										4587,
										4583,
										4575,
										4577,
										4599,
										4595,
										4597,
										4593
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/node/globals.d.ts",
									"line": 471,
									"character": 14
								}
							]
						},
						{
							"id": 4555,
							"name": "Error",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 4557,
									"name": "message",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1023,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4556,
									"name": "name",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1022,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4558,
									"name": "stack",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1024,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4557,
										4556,
										4558
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1021,
									"character": 10
								}
							]
						},
						{
							"id": 4569,
							"name": "ViewModelOptions",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "expand-properties",
										"text": "\n"
									}
								]
							},
							"children": [
								{
									"id": 4570,
									"name": "baseClass",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Optional base class to extend. This must extend [BaseViewModel](doc:BaseViewModel).",
										"text": "When calling `augment` this is set the augmented class.\n",
										"tags": [
											{
												"tag": "type-name",
												"text": "Class\n"
											}
										]
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
											"line": 197,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									}
								},
								{
									"id": 4571,
									"name": "pkFieldName",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "Primary key name(s) to use. There should be field(s) with the corresponding name in the\nprovided `fields`.",
										"text": "Only `pkFieldName` or `getImplicitPkField` should be provided. If neither are provided then\na field called `id` will be used and created if not provided in `fields`.\n",
										"tags": [
											{
												"tag": "type-name",
												"text": "string|string[]\n"
											}
										]
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
											"line": 207,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"id": 4573,
										"name": "PkFieldNameT"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4570,
										4571
									]
								}
							],
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 186,
									"character": 10
								}
							],
							"typeParameter": [
								{
									"id": 4572,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2001,
										"name": "FieldsMapping"
									}
								},
								{
									"id": 4573,
									"name": "PkFieldNameT",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 2017,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4572,
														"name": "T"
													}
												],
												"name": "ExtractFieldNames"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2017,
													"typeArguments": [
														{
															"type": "reference",
															"id": 4572,
															"name": "T"
														}
													],
													"name": "ExtractFieldNames"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 4563,
							"name": "AugmentFields",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 212,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 4564,
									"name": "OriginalFields",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2001,
										"name": "FieldsMapping"
									}
								},
								{
									"id": 4565,
									"name": "AugmentedFields",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2005,
										"typeArguments": [
											{
												"type": "reference",
												"id": 4564,
												"name": "OriginalFields"
											}
										],
										"name": "FieldsMappingOrNull"
									}
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 4504,
										"typeArguments": [
											{
												"type": "reference",
												"id": 4564,
												"name": "OriginalFields"
											},
											{
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 4565,
													"name": "AugmentedFields"
												}
											}
										],
										"qualifiedName": "Omit",
										"package": "typescript",
										"name": "Omit"
									},
									{
										"type": "reference",
										"id": 4504,
										"typeArguments": [
											{
												"type": "reference",
												"id": 4565,
												"name": "AugmentedFields"
											},
											{
												"type": "reference",
												"id": 4606,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4565,
														"name": "AugmentedFields"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												],
												"name": "KeysOfType"
											}
										],
										"qualifiedName": "Omit",
										"package": "typescript",
										"name": "Omit"
									}
								]
							}
						},
						{
							"id": 4559,
							"name": "ExtractPkFieldTypes",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 131,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 4560,
									"name": "FieldMappingType",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2001,
										"name": "FieldsMapping"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 2017,
										"typeArguments": [
											{
												"type": "reference",
												"id": 4560,
												"name": "FieldMappingType"
											}
										],
										"name": "ExtractFieldNames"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 2017,
											"typeArguments": [
												{
													"type": "reference",
													"id": 4560,
													"name": "FieldMappingType"
												}
											],
											"name": "ExtractFieldNames"
										}
									}
								]
							}
						},
						{
							"id": 4566,
							"name": "ExtractPkFields",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 218,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 4567,
									"name": "FieldMappingType",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2001,
										"name": "FieldsMapping"
									}
								},
								{
									"id": 4568,
									"name": "PkFieldType",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 4559,
										"typeArguments": [
											{
												"type": "reference",
												"id": 4567,
												"name": "FieldMappingType"
											}
										],
										"name": "ExtractPkFieldTypes"
									}
								}
							],
							"type": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"id": 4568,
									"name": "PkFieldType"
								},
								"extendsType": {
									"type": "intrinsic",
									"name": "string"
								},
								"trueType": {
									"type": "reference",
									"id": 4551,
									"typeArguments": [
										{
											"type": "reference",
											"id": 4568,
											"name": "PkFieldType"
										},
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"id": 4568,
												"name": "PkFieldType"
											},
											"objectType": {
												"type": "reference",
												"id": 4567,
												"name": "FieldMappingType"
											}
										}
									],
									"qualifiedName": "Record",
									"package": "typescript",
									"name": "Record"
								},
								"falseType": {
									"type": "mapped",
									"parameter": "K",
									"parameterType": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"id": 4567,
											"name": "FieldMappingType"
										}
									},
									"templateType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"name": "K"
										},
										"objectType": {
											"type": "reference",
											"id": 4567,
											"name": "FieldMappingType"
										}
									},
									"nameType": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"name": "K"
										},
										"extendsType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "intrinsic",
												"name": "number"
											},
											"objectType": {
												"type": "reference",
												"id": 4568,
												"name": "PkFieldType"
											}
										},
										"trueType": {
											"type": "reference",
											"name": "K"
										},
										"falseType": {
											"type": "intrinsic",
											"name": "never"
										}
									}
								}
							}
						},
						{
							"id": 4606,
							"name": "KeysOfType",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 210,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 4607,
									"name": "O",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 4608,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"type": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "mapped",
									"parameter": "P",
									"parameterType": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"id": 4607,
											"name": "O"
										}
									},
									"templateType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"name": "P"
										},
										"objectType": {
											"type": "reference",
											"id": 4607,
											"name": "O"
										}
									},
									"nameType": {
										"type": "conditional",
										"checkType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"name": "P"
											},
											"objectType": {
												"type": "reference",
												"id": 4607,
												"name": "O"
											}
										},
										"extendsType": {
											"type": "reference",
											"id": 4608,
											"name": "T"
										},
										"trueType": {
											"type": "reference",
											"name": "P"
										},
										"falseType": {
											"type": "intrinsic",
											"name": "never"
										}
									}
								}
							}
						},
						{
							"id": 4601,
							"name": "Partial",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Make all properties in T optional"
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1531,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 4602,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"type": {
								"type": "mapped",
								"parameter": "P",
								"parameterType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"id": 4602,
										"qualifiedName": "T",
										"package": "typescript",
										"name": "T"
									}
								},
								"templateType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"qualifiedName": "P",
										"package": "typescript",
										"name": "P"
									},
									"objectType": {
										"type": "reference",
										"id": 4602,
										"qualifiedName": "T",
										"package": "typescript",
										"name": "T"
									}
								},
								"optionalModifier": "+"
							}
						},
						{
							"id": 4551,
							"name": "Record",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Construct a type with a set of properties K of type T"
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1559,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 4552,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								},
								{
									"id": 4553,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"type": {
								"type": "mapped",
								"parameter": "P",
								"parameterType": {
									"type": "reference",
									"id": 4552,
									"qualifiedName": "K",
									"package": "typescript",
									"name": "K"
								},
								"templateType": {
									"type": "reference",
									"id": 4553,
									"qualifiedName": "T",
									"package": "typescript",
									"name": "T"
								}
							}
						},
						{
							"id": 4603,
							"name": "ViewModelInterfaceInputData",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 229,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 4604,
									"name": "FieldMappingType",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2001,
										"name": "FieldsMapping"
									}
								},
								{
									"id": 4605,
									"name": "PkFieldType",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 4559,
										"typeArguments": [
											{
												"type": "reference",
												"id": 4604,
												"name": "FieldMappingType"
											}
										],
										"name": "ExtractPkFieldTypes"
									}
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 2015,
										"typeArguments": [
											{
												"type": "reference",
												"id": 4604,
												"name": "FieldMappingType"
											}
										],
										"name": "FieldDataMappingRaw"
									},
									{
										"type": "mapped",
										"parameter": "K",
										"parameterType": {
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"id": 4566,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4604,
														"name": "FieldMappingType"
													},
													{
														"type": "reference",
														"id": 4605,
														"name": "PkFieldType"
													}
												],
												"name": "ExtractPkFields"
											}
										},
										"templateType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "__parsableValueType"
											},
											"objectType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"name": "K"
												},
												"objectType": {
													"type": "reference",
													"id": 4566,
													"typeArguments": [
														{
															"type": "reference",
															"id": 4604,
															"name": "FieldMappingType"
														},
														{
															"type": "reference",
															"id": 4605,
															"name": "PkFieldType"
														}
													],
													"name": "ExtractPkFields"
												}
											}
										}
									}
								]
							}
						},
						{
							"id": 4561,
							"name": "ViewModelPkFieldType",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 135,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 4562,
									"name": "FieldMappingType",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2001,
										"name": "FieldsMapping"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 4498,
										"typeArguments": [
											{
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 4562,
													"name": "FieldMappingType"
												}
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"qualifiedName": "Extract",
										"package": "typescript",
										"name": "Extract"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 4498,
											"typeArguments": [
												{
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "reference",
														"id": 4562,
														"name": "FieldMappingType"
													}
												},
												{
													"type": "intrinsic",
													"name": "string"
												}
											],
											"qualifiedName": "Extract",
											"package": "typescript",
											"name": "Extract"
										}
									}
								]
							}
						},
						{
							"id": 4554,
							"name": "Error",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1033,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "ErrorConstructor",
								"package": "typescript",
								"name": "ErrorConstructor"
							},
							"extendedBy": [
								{
									"type": "reference",
									"id": 2021,
									"name": "MissingFieldsError"
								},
								{
									"type": "reference",
									"id": 2105,
									"name": "InvalidFieldError"
								},
								{
									"type": "reference",
									"id": 3843,
									"name": "UnresolvedRelatedViewModelFieldError"
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"kind": 256,
							"children": [
								4574,
								4555,
								4569
							]
						},
						{
							"title": "Type aliases",
							"kind": 4194304,
							"children": [
								4563,
								4559,
								4566,
								4606,
								4601,
								4551,
								4603,
								4561
							]
						},
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								4554
							]
						}
					]
				},
				{
					"id": 2044,
					"name": "BaseViewModel",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The base class all ViewModel classes will extend.",
						"text": "If you use the [baseClass](doc:viewModelFactory##method-viewmodel) option the class passed must extend\n`BaseViewModel`.\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": "\n"
							}
						]
					},
					"children": [
						{
							"id": 2045,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 502,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2046,
									"name": "new BaseViewModel",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2047,
											"name": "FieldMappingType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2001,
												"name": "FieldsMapping"
											}
										},
										{
											"id": 2048,
											"name": "PkFieldType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 4498,
															"typeArguments": [
																{
																	"type": "typeOperator",
																	"operator": "keyof",
																	"target": {
																		"type": "reference",
																		"id": 2047,
																		"name": "FieldMappingType"
																	}
																},
																{
																	"type": "intrinsic",
																	"name": "string"
																}
															],
															"qualifiedName": "Extract",
															"package": "typescript",
															"name": "Extract"
														}
													}
												]
											}
										},
										{
											"id": 2049,
											"name": "AssignedFieldNames",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "reference",
												"id": 4498,
												"typeArguments": [
													{
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"id": 2047,
															"name": "FieldMappingType"
														}
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"qualifiedName": "Extract",
												"package": "typescript",
												"name": "Extract"
											}
										}
									],
									"parameters": [
										{
											"id": 2050,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "mapped",
												"parameter": "K",
												"parameterType": {
													"type": "intrinsic",
													"name": "string"
												},
												"templateType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": "__parsableValueType"
													},
													"objectType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"name": "K"
														},
														"objectType": {
															"type": "reference",
															"id": 2047,
															"name": "FieldMappingType"
														}
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2044,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2047,
												"name": "FieldMappingType"
											},
											{
												"type": "reference",
												"id": 2048,
												"name": "PkFieldType"
											},
											{
												"type": "reference",
												"id": 2049,
												"name": "AssignedFieldNames"
											}
										],
										"name": "BaseViewModel"
									}
								}
							]
						},
						{
							"id": 2062,
							"name": "__recordBoundFields",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 440,
									"character": 12
								}
							],
							"type": {
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "intrinsic",
									"name": "string"
								},
								"templateType": {
									"type": "reference",
									"id": 2920,
									"typeArguments": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "__fieldValueType"
											},
											"objectType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"name": "K"
												},
												"objectType": {
													"type": "reference",
													"id": 2047,
													"name": "FieldMappingType"
												}
											}
										},
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "__parsableValueType"
											},
											"objectType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"name": "K"
												},
												"objectType": {
													"type": "reference",
													"id": 2047,
													"name": "FieldMappingType"
												}
											}
										},
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "__fieldValueType"
											},
											"objectType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"name": "K"
												},
												"objectType": {
													"type": "reference",
													"id": 2047,
													"name": "FieldMappingType"
												}
											}
										}
									],
									"name": "RecordBoundField"
								},
								"readonlyModifier": "+"
							}
						},
						{
							"id": 2068,
							"name": "_assignedFieldPaths",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "The `ViewModelFieldPaths` instance for this record. This is a unique instance based on the actual\nassigned fields and can be compared to other instances to determine if the same fields are set."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 668,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 2143,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2047,
												"name": "FieldMappingType"
											},
											{
												"type": "reference",
												"id": 2048,
												"name": "PkFieldType"
											}
										],
										"name": "ViewModelConstructor"
									}
								],
								"name": "ViewModelFieldPaths"
							}
						},
						{
							"id": 2066,
							"name": "_assignedFields",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "List of field names with data available on this instance.",
								"tags": [
									{
										"tag": "type-name",
										"text": "string[]\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 652,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 2067,
							"name": "_assignedFieldsDeep",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "Deep field names set on this record. If no relations are set this is the same as `_assignedFields`.",
								"text": "A deep field is a field that is a relation to another model and is represented as an array, eg.\n`['group', 'name']` would be the the `name` field on the `group` relation.\n",
								"tags": [
									{
										"tag": "type-name",
										"text": "string[]\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 662,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 2007,
									"typeArguments": [
										{
											"type": "reference",
											"id": 2078,
											"typeArguments": [
												{
													"type": "reference",
													"id": 2047,
													"name": "FieldMappingType"
												},
												{
													"type": "reference",
													"id": 2048,
													"name": "PkFieldType"
												}
											],
											"name": "ViewModelConstructor"
										},
										{
											"type": "reference",
											"id": 4521,
											"typeArguments": [
												{
													"type": "reference",
													"id": 2078,
													"typeArguments": [
														{
															"type": "reference",
															"id": 2047,
															"name": "FieldMappingType"
														},
														{
															"type": "reference",
															"id": 2048,
															"name": "PkFieldType"
														}
													],
													"name": "ViewModelConstructor"
												}
											],
											"name": "ExtractRelatedFields"
										}
									],
									"name": "FieldPath"
								}
							}
						},
						{
							"id": 2065,
							"name": "_data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "The assigned data for this record. You usually don't need to access this directly; values\nfor a field can be retrieved from the record directly using the field name",
								"tags": [
									{
										"tag": "type-name",
										"text": "Object\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 643,
									"character": 13
								}
							],
							"type": {
								"type": "mapped",
								"parameter": "k",
								"parameterType": {
									"type": "intrinsic",
									"name": "string"
								},
								"templateType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "__fieldValueType"
									},
									"objectType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"name": "k"
										},
										"objectType": {
											"type": "reference",
											"id": 2047,
											"name": "FieldMappingType"
										}
									}
								}
							}
						},
						{
							"id": 2063,
							"name": "_f",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 465,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2064,
									"name": "_f",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get fields bound to this record instance. Each field behaves the same as accessing it via ViewModel.fields but\nhas a `value` property that contains the value for that field on this record.",
										"text": "This is useful when you need to know both the field on the ViewModel and the value on a record (eg. when formatting\na value from a record\n\n```js\nconst user = new User({ name: 'Jon Snow' });\nuser.name\n// Jon Snow\nuser._f.name\n// CharField({ name: 'name', label: 'Label' });\nuser._f.name.value\n// Jon Snow\n```\n",
										"tags": [
											{
												"tag": "type-name",
												"text": "{[fieldName: string]: Field}\n"
											}
										]
									},
									"type": {
										"type": "mapped",
										"parameter": "K",
										"parameterType": {
											"type": "intrinsic",
											"name": "string"
										},
										"templateType": {
											"type": "reference",
											"id": 2920,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": "__fieldValueType"
													},
													"objectType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"name": "K"
														},
														"objectType": {
															"type": "reference",
															"id": 2047,
															"name": "FieldMappingType"
														}
													}
												},
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": "__parsableValueType"
													},
													"objectType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"name": "K"
														},
														"objectType": {
															"type": "reference",
															"id": 2047,
															"name": "FieldMappingType"
														}
													}
												},
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": "__fieldValueType"
													},
													"objectType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"name": "K"
														},
														"objectType": {
															"type": "reference",
															"id": 2047,
															"name": "FieldMappingType"
														}
													}
												}
											],
											"name": "RecordBoundField"
										},
										"readonlyModifier": "+"
									}
								}
							]
						},
						{
							"id": 2069,
							"name": "_key",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 678,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2070,
									"name": "_key",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the primary key value(s) for this instance. This is to conform to the\n[Identifiable](doc:Identifiable) interface.",
										"tags": [
											{
												"tag": "type-name",
												"text": "PkFieldType\n"
											}
										]
									},
									"type": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"id": 2048,
											"name": "PkFieldType"
										},
										"extendsType": {
											"type": "intrinsic",
											"name": "string"
										},
										"trueType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "__fieldValueType"
											},
											"objectType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"name": "PkFieldType"
												},
												"objectType": {
													"type": "reference",
													"id": 2047,
													"name": "FieldMappingType"
												}
											}
										},
										"falseType": {
											"type": "mapped",
											"parameter": "K",
											"parameterType": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											},
											"templateType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "literal",
													"value": "__fieldValueType"
												},
												"objectType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"name": "K"
													},
													"objectType": {
														"type": "reference",
														"id": 2047,
														"name": "FieldMappingType"
													}
												}
											},
											"nameType": {
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"name": "K"
												},
												"extendsType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "intrinsic",
														"name": "number"
													},
													"objectType": {
														"type": "reference",
														"id": 2048,
														"name": "PkFieldType"
													}
												},
												"trueType": {
													"type": "reference",
													"name": "K"
												},
												"falseType": {
													"type": "intrinsic",
													"name": "never"
												}
											}
										}
									}
								}
							]
						},
						{
							"id": 2051,
							"name": "_model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 295,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2052,
									"name": "_model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the actual ViewModel class for this instance"
									},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2047,
												"name": "FieldMappingType"
											},
											{
												"type": "reference",
												"id": 2048,
												"name": "PkFieldType"
											}
										],
										"name": "ViewModelConstructor"
									}
								}
							]
						},
						{
							"id": 2058,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 344,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2059,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Clone this record, optionally with only a subset of the fields"
									},
									"typeParameter": [
										{
											"id": 2060,
											"name": "CloneFieldNames",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 2061,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 2007,
															"typeArguments": [
																{
																	"type": "reference",
																	"id": 2078,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"id": 2047,
																			"name": "FieldMappingType"
																		},
																		{
																			"type": "reference",
																			"id": 2048,
																			"name": "PkFieldType"
																		}
																	],
																	"name": "ViewModelConstructor"
																},
																{
																	"type": "reference",
																	"id": 4521,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"id": 2078,
																			"typeArguments": [
																				{
																					"type": "reference",
																					"id": 2047,
																					"name": "FieldMappingType"
																				},
																				{
																					"type": "reference",
																					"id": 2048,
																					"name": "PkFieldType"
																				}
																			],
																			"name": "ViewModelConstructor"
																		}
																	],
																	"name": "ExtractRelatedFields"
																}
															],
															"name": "FieldPath"
														}
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 2060,
															"name": "CloneFieldNames"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2074,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2047,
												"name": "FieldMappingType"
											},
											{
												"type": "reference",
												"id": 2048,
												"name": "PkFieldType"
											},
											{
												"type": "reference",
												"id": 2060,
												"name": "CloneFieldNames"
											}
										],
										"name": "ViewModelInterface"
									}
								}
							]
						},
						{
							"id": 2055,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 322,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2056,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Compares two records to see if they are equivalent.",
										"text": "- If the ViewModel is different then the records are always considered different\n- If the records were initialised with a different set of fields then they are\n  considered different even if the common fields are the same and other fields are\n  all null\n"
									},
									"parameters": [
										{
											"id": 2057,
											"name": "record",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 2074,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"name": "ViewModelInterface"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 2053,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 302,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2054,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the data for this record as a plain object"
									},
									"type": {
										"type": "mapped",
										"parameter": "K",
										"parameterType": {
											"type": "intrinsic",
											"name": "string"
										},
										"templateType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "__fieldValueType"
											},
											"objectType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"name": "K"
												},
												"objectType": {
													"type": "reference",
													"id": 2047,
													"name": "FieldMappingType"
												}
											}
										},
										"readonlyModifier": "+"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2045
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2062,
								2068,
								2066,
								2067,
								2065
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2063,
								2069,
								2051
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2058,
								2055,
								2053
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 287,
							"character": 13
						}
					],
					"typeParameter": [
						{
							"id": 2071,
							"name": "FieldMappingType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2001,
								"name": "FieldsMapping"
							}
						},
						{
							"id": 2072,
							"name": "PkFieldType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 4559,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2047,
										"name": "FieldMappingType"
									}
								],
								"name": "ExtractPkFieldTypes"
							}
						},
						{
							"id": 2073,
							"name": "AssignedFieldNames",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2017,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2047,
										"name": "FieldMappingType"
									}
								],
								"name": "ExtractFieldNames"
							},
							"default": {
								"type": "reference",
								"id": 2017,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2047,
										"name": "FieldMappingType"
									}
								],
								"name": "ExtractFieldNames"
							}
						}
					]
				},
				{
					"id": 2105,
					"name": "InvalidFieldError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Thrown when attempting to access a field that does not exist on a ViewModel"
					},
					"children": [
						{
							"id": 2115,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2116,
									"name": "new InvalidFieldError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2117,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2105,
										"name": "InvalidFieldError"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Error.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.constructor"
							}
						},
						{
							"id": 2119,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1023,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.message"
							}
						},
						{
							"id": 2118,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1022,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.name"
							}
						},
						{
							"id": 2120,
							"name": "stack",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1024,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.stack"
							}
						},
						{
							"id": 2114,
							"name": "stackTraceLimit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/globals.d.ts",
									"line": 117,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.stackTraceLimit"
							}
						},
						{
							"id": 2106,
							"name": "captureStackTrace",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 2107,
									"name": "captureStackTrace",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Create .stack property on a target object"
									},
									"parameters": [
										{
											"id": 2108,
											"name": "targetObject",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 2109,
											"name": "constructorOpt",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Function",
												"package": "typescript",
												"name": "Function"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Error.captureStackTrace"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.captureStackTrace"
							}
						},
						{
							"id": 2110,
							"name": "prepareStackTrace",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/globals.d.ts",
									"line": 115,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2111,
									"name": "prepareStackTrace",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Optional override for formatting stack traces",
										"tags": [
											{
												"tag": "see",
												"text": "https://github.com/v8/v8/wiki/Stack%20Trace%20API#customizing-stack-traces\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2112,
											"name": "err",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 4554,
												"qualifiedName": "Error",
												"package": "typescript",
												"name": "Error"
											}
										},
										{
											"id": 2113,
											"name": "stackTraces",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 4574,
													"qualifiedName": "NodeJS.CallSite",
													"package": "@types/node",
													"name": "CallSite"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Error.prepareStackTrace"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.prepareStackTrace"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2115
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2119,
								2118,
								2120,
								2114
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2106,
								2110
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 1064,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 4554,
							"qualifiedName": "Error",
							"package": "typescript",
							"name": "Error"
						}
					]
				},
				{
					"id": 2021,
					"name": "MissingFieldsError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Thrown when cloning a record and requested fields cannot be found",
						"text": "Gives details on missing fields and will indicate if related records are missing entirely vs\njust some fields\n"
					},
					"children": [
						{
							"id": 2031,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 249,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2032,
									"name": "new MissingFieldsError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2033,
											"name": "record",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2074,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										},
										{
											"id": 2034,
											"name": "assignedFields",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 2035,
											"name": "requestedFieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2007,
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "any"
														},
														{
															"type": "intrinsic",
															"name": "any"
														}
													],
													"name": "FieldPath"
												}
											}
										},
										{
											"id": 2036,
											"name": "missingFieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 2037,
											"name": "missingRelations",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "tuple",
													"elements": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2021,
										"name": "MissingFieldsError"
									},
									"overwrites": {
										"type": "reference",
										"name": "Error.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Error.constructor"
							}
						},
						{
							"id": 2040,
							"name": "assignedFields",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 248,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 2042,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1023,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.message"
							}
						},
						{
							"id": 2038,
							"name": "missingFieldNames",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 246,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 2039,
							"name": "missingRelations",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 247,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "tuple",
									"elements": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							}
						},
						{
							"id": 2041,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1022,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.name"
							}
						},
						{
							"id": 2043,
							"name": "stack",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1024,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.stack"
							}
						},
						{
							"id": 2030,
							"name": "stackTraceLimit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/globals.d.ts",
									"line": 117,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.stackTraceLimit"
							}
						},
						{
							"id": 2022,
							"name": "captureStackTrace",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 2023,
									"name": "captureStackTrace",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Create .stack property on a target object"
									},
									"parameters": [
										{
											"id": 2024,
											"name": "targetObject",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 2025,
											"name": "constructorOpt",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Function",
												"package": "typescript",
												"name": "Function"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Error.captureStackTrace"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.captureStackTrace"
							}
						},
						{
							"id": 2026,
							"name": "prepareStackTrace",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/globals.d.ts",
									"line": 115,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2027,
									"name": "prepareStackTrace",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Optional override for formatting stack traces",
										"tags": [
											{
												"tag": "see",
												"text": "https://github.com/v8/v8/wiki/Stack%20Trace%20API#customizing-stack-traces\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2028,
											"name": "err",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 4554,
												"qualifiedName": "Error",
												"package": "typescript",
												"name": "Error"
											}
										},
										{
											"id": 2029,
											"name": "stackTraces",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 4574,
													"qualifiedName": "NodeJS.CallSite",
													"package": "@types/node",
													"name": "CallSite"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Error.prepareStackTrace"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.prepareStackTrace"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2031
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2040,
								2042,
								2038,
								2039,
								2041,
								2043,
								2030
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2022,
								2026
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 245,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 4554,
							"qualifiedName": "Error",
							"package": "typescript",
							"name": "Error"
						}
					]
				},
				{
					"id": 2078,
					"name": "ViewModelConstructor",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "type-name",
								"text": "ViewModel Class\n"
							}
						]
					},
					"children": [
						{
							"id": 2099,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2100,
									"name": "new ViewModelConstructor",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2101,
											"name": "D",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4603,
												"typeArguments": [
													{
														"type": "reference",
														"id": 2097,
														"name": "FieldMappingType"
													},
													{
														"type": "reference",
														"id": 2098,
														"name": "PkFieldType"
													}
												],
												"name": "ViewModelInterfaceInputData"
											}
										}
									],
									"parameters": [
										{
											"id": 2102,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2101,
												"name": "D"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2074,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2097,
												"name": "FieldMappingType"
											},
											{
												"type": "reference",
												"id": 2098,
												"name": "PkFieldType"
											},
											{
												"type": "reference",
												"id": 4498,
												"typeArguments": [
													{
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"id": 2101,
															"name": "D"
														}
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"qualifiedName": "Extract",
												"package": "typescript",
												"name": "Extract"
											}
										],
										"name": "ViewModelInterface"
									}
								},
								{
									"id": 2103,
									"name": "new ViewModelConstructor",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2104,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4603,
												"typeArguments": [
													{
														"type": "reference",
														"id": 2097,
														"name": "FieldMappingType"
													},
													{
														"type": "reference",
														"id": 2098,
														"name": "PkFieldType"
													}
												],
												"name": "ViewModelInterfaceInputData"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2074,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2097,
												"name": "FieldMappingType"
											},
											{
												"type": "reference",
												"id": 2098,
												"name": "PkFieldType"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 4498,
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "reference",
																	"id": 4566,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"id": 2097,
																			"name": "FieldMappingType"
																		},
																		{
																			"type": "reference",
																			"id": 2098,
																			"name": "PkFieldType"
																		}
																	],
																	"name": "ExtractPkFields"
																}
															},
															{
																"type": "reference",
																"id": 4498,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "reference",
																			"id": 2097,
																			"name": "FieldMappingType"
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														],
														"qualifiedName": "Extract",
														"package": "typescript",
														"name": "Extract"
													},
													{
														"type": "reference",
														"id": 4498,
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "reference",
																	"id": 2097,
																	"name": "FieldMappingType"
																}
															},
															{
																"type": "reference",
																"id": 4498,
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "reference",
																			"id": 2097,
																			"name": "FieldMappingType"
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														],
														"qualifiedName": "Extract",
														"package": "typescript",
														"name": "Extract"
													}
												]
											}
										],
										"name": "ViewModelInterface"
									}
								}
							]
						},
						{
							"id": 2085,
							"name": "allFieldNames",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "Shortcut to get all field names including primary keys"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 830,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 4498,
									"typeArguments": [
										{
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"id": 2097,
												"name": "FieldMappingType"
											}
										},
										{
											"type": "intrinsic",
											"name": "string"
										}
									],
									"qualifiedName": "Extract",
									"package": "typescript",
									"name": "Extract"
								}
							}
						},
						{
							"id": 2090,
							"name": "cache",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The cache instance for this ViewModel. A default instance of [ViewModelCache](doc:ViewModelCache)\nis created when first accessed or you can explicitly assign a cache:",
								"text": "```js\nclass User extends viewModelFactory(fields) {\n    static cache = new MyCustomCache(User);\n}\n```\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 871,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 1827,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "default"
							}
						},
						{
							"id": 2084,
							"name": "fieldNames",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "Shortcut to get the names of all fields excluding primary keys.",
								"text": "If you want all fields including primary key use `allFieldNames`\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 825,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 4498,
									"typeArguments": [
										{
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"id": 2097,
												"name": "FieldMappingType"
											}
										},
										{
											"type": "intrinsic",
											"name": "string"
										}
									],
									"qualifiedName": "Extract",
									"package": "typescript",
									"name": "Extract"
								}
							}
						},
						{
							"id": 2079,
							"name": "fields",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "The bound fields for this ViewModel. These will match the `fields` passed in to `ViewModel` with the\nfollowing differences:\n- If a primary key is created for you this will exist here\n- All fields are bound to the created class. This means you can access the `ViewModel` class from the field on\n  the `model` property, eg. `User.fields.email.model === User` will be true.\n- All fields have the `name` property set to match the key in `fields`\n- All fields have `label` filled out if not explicitly set (eg. if name was `emailAddress` label will be created\n  as `Email Address`)",
								"text": "See also [getField](doc:viewModelFactory#method-getField) for getting a nested field using array notation.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 779,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 2097,
								"name": "FieldMappingType"
							}
						},
						{
							"id": 2080,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "The singular label for this ViewModel. This should be set by extending the created class.",
								"text": "```js\nclass User extends viewModelFactory(fields) {\n    static label = 'User';\n}\n```\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 790,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2081,
							"name": "labelPlural",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "The label used to describe an indeterminate number of this ViewModel. This should be set by extending the created class.",
								"text": "```js\nclass User extends viewModelFactory(fields) {\n    static labelPlural = 'Users';\n}\n```\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 801,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2082,
							"name": "pkFieldName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "Name of the primary key field for this ViewModel (or fields for compound keys)",
								"text": "If `options.pkFieldName` is not specified a field will be created from `options.getImplicitPk`\nif provided otherwise a default field with name 'id' will be created.\n",
								"tags": [
									{
										"tag": "type-name",
										"text": "string\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 811,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 2098,
								"name": "PkFieldType"
							}
						},
						{
							"id": 2083,
							"name": "pkFieldNames",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "Shortcut to get pkFieldName as an array always, even for non-compound keys",
								"tags": [
									{
										"tag": "type-name",
										"text": "string[]\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 818,
									"character": 13
								}
							],
							"type": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"id": 2098,
									"name": "PkFieldType"
								},
								"extendsType": {
									"type": "intrinsic",
									"name": "string"
								},
								"trueType": {
									"type": "tuple",
									"elements": [
										{
											"type": "reference",
											"name": "PkFieldType"
										}
									]
								},
								"falseType": {
									"type": "reference",
									"id": 2098,
									"name": "PkFieldType"
								}
							}
						},
						{
							"id": 2086,
							"name": "relationFieldNames",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "Shortcut to get the names of all relation fields",
								"tags": [
									{
										"tag": "type-name",
										"text": "string[]\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 837,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 4498,
									"typeArguments": [
										{
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"id": 4521,
												"typeArguments": [
													{
														"type": "reference",
														"id": 2078,
														"typeArguments": [
															{
																"type": "reference",
																"id": 2097,
																"name": "FieldMappingType"
															},
															{
																"type": "reference",
																"id": 2098,
																"name": "PkFieldType"
															}
														],
														"name": "ViewModelConstructor"
													}
												],
												"name": "ExtractRelatedFields"
											}
										},
										{
											"type": "intrinsic",
											"name": "string"
										}
									],
									"qualifiedName": "Extract",
									"package": "typescript",
									"name": "Extract"
								}
							}
						},
						{
							"id": 2091,
							"name": "augment",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 2092,
									"name": "augment",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create a new class that extends this class with the additional specified fields. To remove a\nfield that exists on the base class set it's value to null.",
										"text": "```js\nclass Base extends viewModelFactory({\n  id: new NumberField({\n    label: 'Id',\n  }),\n  firstName: new CharField({\n    label: 'First Name',\n  }),\n  lastName: new CharField({\n    label: 'Last Name',\n  }),\n  email: new EmailField({\n    label: 'Email',\n  }),\n}) {\n  static label = 'User';\n  static labelPlural = 'Users';\n}\n\nclass User extends BaseUser.augment({\n  region: new IntegerField({\n    label: 'region',\n    required: true,\n    helpText: 'Region Coding of the user',\n    choices: [\n      [1, 'Oceania'],\n      [2, 'Asia'],\n      [3, 'Africa'],\n      [4, 'America'],\n      [5, 'Europe'],\n      [6, 'Antarctica'],\n      [7, 'Atlantis'],\n    ],\n  }),\n  photo: new ImageField({\n    helpText: 'Will be cropped to 400x400',\n  }),\n}) {\n}\n\n// true\nUser instanceof BaseUser\n// true\nUser.label === 'User'\n\n// ['firstName, 'lastName', 'email', 'region', 'photo]\nUser.fieldNames\n```\n",
										"returns": "A new ViewModel class with fields modified according to `newFields`.\n"
									},
									"typeParameter": [
										{
											"id": 2093,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2005,
												"typeArguments": [
													{
														"type": "reference",
														"id": 2097,
														"name": "FieldMappingType"
													}
												],
												"name": "FieldsMappingOrNull"
											}
										},
										{
											"id": 2094,
											"name": "AugmentPkFieldType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "union",
															"types": [
																{
																	"type": "reference",
																	"id": 4498,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"id": 4542,
																			"typeArguments": [
																				{
																					"type": "typeOperator",
																					"operator": "keyof",
																					"target": {
																						"type": "reference",
																						"id": 2097,
																						"name": "FieldMappingType"
																					}
																				},
																				{
																					"type": "typeOperator",
																					"operator": "keyof",
																					"target": {
																						"type": "reference",
																						"id": 2093,
																						"name": "T"
																					}
																				}
																			],
																			"qualifiedName": "Exclude",
																			"package": "typescript",
																			"name": "Exclude"
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		}
																	],
																	"qualifiedName": "Extract",
																	"package": "typescript",
																	"name": "Extract"
																},
																{
																	"type": "reference",
																	"id": 4498,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"id": 4542,
																			"typeArguments": [
																				{
																					"type": "typeOperator",
																					"operator": "keyof",
																					"target": {
																						"type": "reference",
																						"id": 2093,
																						"name": "T"
																					}
																				},
																				{
																					"type": "typeOperator",
																					"operator": "keyof",
																					"target": {
																						"type": "mapped",
																						"parameter": "P",
																						"parameterType": {
																							"type": "union",
																							"types": [
																								{
																									"type": "intrinsic",
																									"name": "string"
																								},
																								{
																									"type": "intrinsic",
																									"name": "number"
																								},
																								{
																									"type": "intrinsic",
																									"name": "symbol"
																								}
																							]
																						},
																						"templateType": {
																							"type": "indexedAccess",
																							"indexType": {
																								"type": "reference",
																								"name": "P"
																							},
																							"objectType": {
																								"type": "reference",
																								"id": 2093,
																								"name": "T"
																							}
																						},
																						"nameType": {
																							"type": "conditional",
																							"checkType": {
																								"type": "indexedAccess",
																								"indexType": {
																									"type": "reference",
																									"name": "P"
																								},
																								"objectType": {
																									"type": "reference",
																									"id": 2093,
																									"name": "T"
																								}
																							},
																							"extendsType": {
																								"type": "union",
																								"types": [
																									{
																										"type": "intrinsic",
																										"name": "undefined"
																									},
																									{
																										"type": "literal",
																										"value": null
																									}
																								]
																							},
																							"trueType": {
																								"type": "reference",
																								"name": "P"
																							},
																							"falseType": {
																								"type": "intrinsic",
																								"name": "never"
																							}
																						}
																					}
																				}
																			],
																			"qualifiedName": "Exclude",
																			"package": "typescript",
																			"name": "Exclude"
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		}
																	],
																	"qualifiedName": "Extract",
																	"package": "typescript",
																	"name": "Extract"
																}
															]
														}
													}
												]
											},
											"default": {
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"id": 2098,
													"name": "PkFieldType"
												},
												"extendsType": {
													"type": "intrinsic",
													"name": "string"
												},
												"trueType": {
													"type": "conditional",
													"checkType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"name": "PkFieldType"
														},
														"objectType": {
															"type": "reference",
															"id": 2093,
															"name": "T"
														}
													},
													"extendsType": {
														"type": "reference",
														"id": 2974,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "default"
													},
													"trueType": {
														"type": "reference",
														"name": "PkFieldType"
													},
													"falseType": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												"falseType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 2095,
											"name": "newFields",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "Map of field name to a `Field` instance (to add the field) or `null` (to remove the field)"
											},
											"type": {
												"type": "reference",
												"id": 2093,
												"name": "T"
											}
										},
										{
											"id": 2096,
											"name": "newOptions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Provide optional overrides for the options that the original class was created with"
											},
											"type": {
												"type": "reference",
												"id": 4601,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4569,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4563,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 2097,
																		"name": "FieldMappingType"
																	},
																	{
																		"type": "reference",
																		"id": 2093,
																		"name": "T"
																	}
																],
																"name": "AugmentFields"
															},
															{
																"type": "reference",
																"id": 2094,
																"name": "AugmentPkFieldType"
															}
														],
														"name": "ViewModelOptions"
													}
												],
												"qualifiedName": "Partial",
												"package": "typescript",
												"name": "Partial"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "reference",
												"id": 4563,
												"typeArguments": [
													{
														"type": "reference",
														"id": 2097,
														"name": "FieldMappingType"
													},
													{
														"type": "reference",
														"id": 2093,
														"name": "T"
													}
												],
												"name": "AugmentFields"
											},
											{
												"type": "reference",
												"id": 2094,
												"name": "AugmentPkFieldType"
											}
										],
										"name": "ViewModelConstructor"
									}
								}
							]
						},
						{
							"id": 2087,
							"name": "getField",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 2088,
									"name": "getField",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get a field from this model or a related model",
										"text": "Accepts either a string for a field on this record or array notation for traversing [RelatedViewModelField](doc:RelatedViewModelField)\nfields:\n\n```jsx\nSubscription.getField(['user', 'group', 'owner'])\n```"
									},
									"parameters": [
										{
											"id": 2089,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "Either a string or an array of strings where the last element is the final field name to return\nand each other element is a [RelatedViewModelField](doc:RelatedViewModelField) on a ViewModel.\n"
											},
											"type": {
												"type": "reference",
												"id": 2007,
												"typeArguments": [
													{
														"type": "reference",
														"id": 2078,
														"typeArguments": [
															{
																"type": "reference",
																"id": 2097,
																"name": "FieldMappingType"
															},
															{
																"type": "reference",
																"id": 2098,
																"name": "PkFieldType"
															}
														],
														"name": "ViewModelConstructor"
													},
													{
														"type": "reference",
														"id": 4521,
														"typeArguments": [
															{
																"type": "reference",
																"id": 2078,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 2097,
																		"name": "FieldMappingType"
																	},
																	{
																		"type": "reference",
																		"id": 2098,
																		"name": "PkFieldType"
																	}
																],
																"name": "ViewModelConstructor"
															}
														],
														"name": "ExtractRelatedFields"
													}
												],
												"name": "FieldPath"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2974,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "default"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2099
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2085,
								2090,
								2084,
								2079,
								2080,
								2081,
								2082,
								2083,
								2086
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2091,
								2087
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 724,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 2097,
							"name": "FieldMappingType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2001,
								"name": "FieldsMapping"
							}
						},
						{
							"id": 2098,
							"name": "PkFieldType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 4561,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2097,
										"name": "FieldMappingType"
									}
								],
								"name": "ViewModelPkFieldType"
							}
						}
					]
				},
				{
					"id": 1996,
					"name": "CompoundPrimaryKey",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 11,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1997,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 11,
									"character": 33
								}
							],
							"indexSignature": {
								"id": 1998,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 1999,
										"name": "fieldName",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"id": 1995,
									"name": "SinglePrimaryKey"
								}
							}
						}
					}
				},
				{
					"id": 2017,
					"name": "ExtractFieldNames",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "type-name",
								"text": "string\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 119,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 2018,
							"name": "FieldMappingType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2001,
								"name": "FieldsMapping"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 4498,
						"typeArguments": [
							{
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"id": 2018,
									"name": "FieldMappingType"
								}
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"qualifiedName": "Extract",
						"package": "typescript",
						"name": "Extract"
					}
				},
				{
					"id": 2128,
					"name": "ExtractPkFieldParseableValueType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Extracts the parseable type for primary key on a ViewModel"
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 1409,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 2129,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2078,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ViewModelConstructor"
							}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "literal",
								"value": "pkFieldName"
							},
							"objectType": {
								"type": "reference",
								"id": 2129,
								"name": "T"
							}
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "string"
						},
						"trueType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "literal",
								"value": "__parsableValueType"
							},
							"objectType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "pkFieldName"
									},
									"objectType": {
										"type": "reference",
										"id": 2129,
										"name": "T"
									}
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "fields"
									},
									"objectType": {
										"type": "reference",
										"id": 2129,
										"name": "T"
									}
								}
							}
						},
						"falseType": {
							"type": "mapped",
							"parameter": "K",
							"parameterType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "pkFieldNames"
								},
								"objectType": {
									"type": "reference",
									"id": 2129,
									"name": "T"
								}
							},
							"templateType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "__parsableValueType"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"name": "K"
									},
									"objectType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "fields"
										},
										"objectType": {
											"type": "reference",
											"id": 2129,
											"name": "T"
										}
									}
								}
							}
						}
					}
				},
				{
					"id": 2019,
					"name": "ExtractStarFieldNames",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Extract fields when specified using '*'. Currently this is all fields but could change to be\nnon-relation fields only"
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 128,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 2020,
							"name": "FieldMappingType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2001,
								"name": "FieldsMapping"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 2017,
						"typeArguments": [
							{
								"type": "reference",
								"id": 2020,
								"name": "FieldMappingType"
							}
						],
						"name": "ExtractFieldNames"
					}
				},
				{
					"id": 2013,
					"name": "FieldDataMapping",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 108,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 2014,
							"name": "FieldMappingType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2001,
								"name": "FieldsMapping"
							}
						}
					],
					"type": {
						"type": "mapped",
						"parameter": "K",
						"parameterType": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"id": 2014,
								"name": "FieldMappingType"
							}
						},
						"templateType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "literal",
								"value": "__fieldValueType"
							},
							"objectType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"name": "K"
								},
								"objectType": {
									"type": "reference",
									"id": 2014,
									"name": "FieldMappingType"
								}
							}
						},
						"readonlyModifier": "+"
					}
				},
				{
					"id": 2015,
					"name": "FieldDataMappingRaw",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 112,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 2016,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2001,
								"name": "FieldsMapping"
							}
						}
					],
					"type": {
						"type": "mapped",
						"parameter": "K",
						"parameterType": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"id": 2016,
								"name": "T"
							}
						},
						"templateType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "literal",
								"value": "__parsableValueType"
							},
							"objectType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"name": "K"
								},
								"objectType": {
									"type": "reference",
									"id": 2016,
									"name": "T"
								}
							}
						},
						"optionalModifier": "+"
					}
				},
				{
					"id": 2007,
					"name": "FieldPath",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 49,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 2008,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2078,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ViewModelConstructor"
							}
						},
						{
							"id": 2009,
							"name": "R",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 4521,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2008,
										"name": "T"
									}
								],
								"name": "ExtractRelatedFields"
							},
							"default": {
								"type": "reference",
								"id": 4521,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2008,
										"name": "T"
									}
								],
								"name": "ExtractRelatedFields"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 4498,
								"typeArguments": [
									{
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "fields"
											},
											"objectType": {
												"type": "reference",
												"id": 2008,
												"name": "T"
											}
										}
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Extract",
								"package": "typescript",
								"name": "Extract"
							},
							{
								"type": "reference",
								"id": 4548,
								"typeArguments": [
									{
										"type": "mapped",
										"parameter": "K",
										"parameterType": {
											"type": "reference",
											"id": 4498,
											"typeArguments": [
												{
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "reference",
														"id": 2009,
														"name": "R"
													}
												},
												{
													"type": "intrinsic",
													"name": "string"
												}
											],
											"qualifiedName": "Extract",
											"package": "typescript",
											"name": "Extract"
										},
										"templateType": {
											"type": "reference",
											"id": 4548,
											"typeArguments": [
												{
													"type": "mapped",
													"parameter": "J",
													"parameterType": {
														"type": "reference",
														"id": 4498,
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "literal",
																		"value": "fields"
																	},
																	"objectType": {
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "reference",
																			"name": "K"
																		},
																		"objectType": {
																			"type": "reference",
																			"id": 2009,
																			"name": "R"
																		}
																	}
																}
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"qualifiedName": "Extract",
														"package": "typescript",
														"name": "Extract"
													},
													"templateType": {
														"type": "union",
														"types": [
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "reference",
																		"name": "K"
																	},
																	{
																		"type": "reference",
																		"name": "J"
																	}
																]
															},
															{
																"type": "conditional",
																"checkType": {
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "reference",
																		"name": "J"
																	},
																	"objectType": {
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "literal",
																			"value": "fields"
																		},
																		"objectType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "reference",
																				"name": "K"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 2009,
																				"name": "R"
																			}
																		}
																	}
																},
																"extendsType": {
																	"type": "reference",
																	"id": 3867,
																	"typeArguments": [
																		{
																			"type": "inferred",
																			"name": "X"
																		},
																		{
																			"type": "intrinsic",
																			"name": "any"
																		},
																		{
																			"type": "intrinsic",
																			"name": "any"
																		}
																	],
																	"name": "BaseRelatedViewModelField"
																},
																"trueType": {
																	"type": "reference",
																	"id": 4523,
																	"typeArguments": [
																		{
																			"type": "tuple",
																			"elements": [
																				{
																					"type": "reference",
																					"name": "K"
																				},
																				{
																					"type": "reference",
																					"name": "J"
																				}
																			]
																		},
																		{
																			"type": "reference",
																			"name": "X"
																		}
																	],
																	"name": "FieldPathInner"
																},
																"falseType": {
																	"type": "intrinsic",
																	"name": "never"
																}
															}
														]
													}
												}
											],
											"name": "ValueOf"
										}
									}
								],
								"name": "ValueOf"
							}
						]
					}
				},
				{
					"id": 2010,
					"name": "FieldPaths",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "type-name",
								"text": "'*'|[string|string[]][]\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 68,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 2011,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2078,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ViewModelConstructor"
							}
						},
						{
							"id": 2012,
							"name": "R",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 4521,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2011,
										"name": "T"
									}
								],
								"name": "ExtractRelatedFields"
							},
							"default": {
								"type": "reference",
								"id": 4521,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2011,
										"name": "T"
									}
								],
								"name": "ExtractRelatedFields"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "*"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 2007,
									"typeArguments": [
										{
											"type": "reference",
											"id": 2011,
											"name": "T"
										},
										{
											"type": "reference",
											"id": 2012,
											"name": "R"
										}
									],
									"name": "FieldPath"
								}
							}
						]
					}
				},
				{
					"id": 2001,
					"name": "FieldsMapping",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 14,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2002,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 14,
									"character": 28
								}
							],
							"indexSignature": {
								"id": 2003,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 2004,
										"name": "fieldName",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"id": 2974,
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "any"
										}
									],
									"name": "Field"
								}
							}
						}
					}
				},
				{
					"id": 2005,
					"name": "FieldsMappingOrNull",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 16,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 2006,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2001,
								"name": "FieldsMapping"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 4551,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 2974,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Field"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							},
							{
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"id": 2006,
										"name": "T"
									}
								},
								"templateType": {
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": null
										},
										{
											"type": "reference",
											"id": 2974,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "any"
												}
											],
											"name": "Field"
										}
									]
								},
								"optionalModifier": "+"
							}
						]
					}
				},
				{
					"id": 2125,
					"name": "PartialViewModel",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Type to describe a ViewModel instance with only some fields set",
						"text": "Usage:\n\n```ts\nconst Person = viewModelFactory({\n  name: new Field<string>(),\n  age: new Field<number>(),\n});\ntype AgeOnly = PartialViewModel<typeof Person, 'age'>;\n```\n"
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 1395,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 2126,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2078,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ViewModelConstructor"
							}
						},
						{
							"id": 2127,
							"name": "FieldNames",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2007,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2126,
										"name": "T"
									}
								],
								"name": "FieldPath"
							},
							"default": {
								"type": "reference",
								"id": 2017,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "fields"
										},
										"objectType": {
											"type": "reference",
											"id": 2126,
											"name": "T"
										}
									}
								],
								"name": "ExtractFieldNames"
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"id": 4504,
								"typeArguments": [
									{
										"type": "reference",
										"id": 4507,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2126,
												"name": "T"
											}
										],
										"qualifiedName": "InstanceType",
										"package": "typescript",
										"name": "InstanceType"
									},
									{
										"type": "reference",
										"id": 2017,
										"typeArguments": [
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "literal",
													"value": "fields"
												},
												"objectType": {
													"type": "reference",
													"id": 2126,
													"name": "T"
												}
											}
										],
										"name": "ExtractFieldNames"
									}
								],
								"qualifiedName": "Omit",
								"package": "typescript",
								"name": "Omit"
							},
							{
								"type": "reference",
								"id": 2074,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "fields"
										},
										"objectType": {
											"type": "reference",
											"id": 2126,
											"name": "T"
										}
									},
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "pkFieldName"
										},
										"objectType": {
											"type": "reference",
											"id": 2126,
											"name": "T"
										}
									},
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 4515,
												"typeArguments": [
													{
														"type": "reference",
														"id": 2126,
														"name": "T"
													},
													{
														"type": "reference",
														"id": 2127,
														"name": "FieldNames"
													}
												],
												"name": "ExtractRootFieldNames"
											},
											{
												"type": "conditional",
												"checkType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": "pkFieldName"
													},
													"objectType": {
														"type": "reference",
														"id": 2126,
														"name": "T"
													}
												},
												"extendsType": {
													"type": "intrinsic",
													"name": "string"
												},
												"trueType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": "pkFieldName"
													},
													"objectType": {
														"type": "reference",
														"id": 2126,
														"name": "T"
													}
												},
												"falseType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "intrinsic",
														"name": "number"
													},
													"objectType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "literal",
															"value": "pkFieldName"
														},
														"objectType": {
															"type": "reference",
															"id": 2126,
															"name": "T"
														}
													}
												}
											}
										]
									}
								],
								"name": "ViewModelInterface"
							}
						]
					}
				},
				{
					"id": 2000,
					"name": "PrimaryKey",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 12,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 1995,
								"name": "SinglePrimaryKey"
							},
							{
								"type": "reference",
								"id": 1996,
								"name": "CompoundPrimaryKey"
							}
						]
					}
				},
				{
					"id": 1995,
					"name": "SinglePrimaryKey",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 10,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 2074,
					"name": "ViewModelInterface",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 698,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 2075,
							"name": "FieldMappingType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2001,
								"name": "FieldsMapping"
							}
						},
						{
							"id": 2076,
							"name": "PkFieldType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 4559,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2075,
										"name": "FieldMappingType"
									}
								],
								"name": "ExtractPkFieldTypes"
							}
						},
						{
							"id": 2077,
							"name": "AssignedFieldNames",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2017,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2075,
										"name": "FieldMappingType"
									}
								],
								"name": "ExtractFieldNames"
							},
							"default": {
								"type": "reference",
								"id": 2017,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2075,
										"name": "FieldMappingType"
									}
								],
								"name": "ExtractFieldNames"
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"id": 2044,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2075,
										"name": "FieldMappingType"
									},
									{
										"type": "reference",
										"id": 2076,
										"name": "PkFieldType"
									},
									{
										"type": "reference",
										"id": 2077,
										"name": "AssignedFieldNames"
									}
								],
								"name": "BaseViewModel"
							},
							{
								"type": "reference",
								"id": 2013,
								"typeArguments": [
									{
										"type": "reference",
										"id": 4518,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2075,
												"name": "FieldMappingType"
											},
											{
												"type": "reference",
												"id": 2077,
												"name": "AssignedFieldNames"
											}
										],
										"qualifiedName": "Pick",
										"package": "typescript",
										"name": "Pick"
									}
								],
								"name": "FieldDataMapping"
							}
						]
					}
				},
				{
					"id": 2121,
					"name": "ViewModelValues",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Type to describe values of an instance of ViewModel",
						"text": "Usage:\n\n```ts\nconst Person = viewModelFactory({\n  name: new Field<string>(),\n  age: new Field<number>(),\n});\ntype PersonValues = ViewModelValues<typeof Person>;\n```\n"
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 1372,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 2122,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2078,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ViewModelConstructor"
							}
						},
						{
							"id": 2123,
							"name": "FieldNames",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "fields"
									},
									"objectType": {
										"type": "reference",
										"id": 2122,
										"name": "T"
									}
								}
							},
							"default": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "fields"
									},
									"objectType": {
										"type": "reference",
										"id": 2122,
										"name": "T"
									}
								}
							}
						},
						{
							"id": 2124,
							"name": "OptionalFieldNames",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "fields"
									},
									"objectType": {
										"type": "reference",
										"id": 2122,
										"name": "T"
									}
								}
							},
							"default": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "fields"
									},
									"objectType": {
										"type": "reference",
										"id": 2122,
										"name": "T"
									}
								}
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "reference",
									"id": 4498,
									"typeArguments": [
										{
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "indexedAccess",
												"indexType": {
													"type": "literal",
													"value": "fields"
												},
												"objectType": {
													"type": "reference",
													"id": 2122,
													"name": "T"
												}
											}
										},
										{
											"type": "reference",
											"id": 2123,
											"name": "FieldNames"
										}
									],
									"qualifiedName": "Extract",
									"package": "typescript",
									"name": "Extract"
								},
								"templateType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "__fieldValueType"
									},
									"objectType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"name": "K"
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "fields"
											},
											"objectType": {
												"type": "reference",
												"id": 2122,
												"name": "T"
											}
										}
									}
								}
							},
							{
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "reference",
									"id": 4498,
									"typeArguments": [
										{
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "indexedAccess",
												"indexType": {
													"type": "literal",
													"value": "fields"
												},
												"objectType": {
													"type": "reference",
													"id": 2122,
													"name": "T"
												}
											}
										},
										{
											"type": "reference",
											"id": 2124,
											"name": "OptionalFieldNames"
										}
									],
									"qualifiedName": "Extract",
									"package": "typescript",
									"name": "Extract"
								},
								"templateType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "__fieldValueType"
									},
									"objectType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"name": "K"
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "fields"
											},
											"objectType": {
												"type": "reference",
												"id": 2122,
												"name": "T"
											}
										}
									}
								},
								"optionalModifier": "+"
							}
						]
					}
				},
				{
					"id": 1981,
					"name": "flattenFieldPath",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 165,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1982,
							"name": "flattenFieldPath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Flatten a nested path to a single level with dot notation",
								"text": "eg.\n```\nflattenFieldPath([\n  'id',\n  ['user', ['group', 'id']],\n  ['user', 'groupId'],\n  ['user', 'id'],\n  'userId'\n])\n// ['id', 'user.group.id', 'user.groupId', 'user.id', 'userId']\n```\n"
							},
							"typeParameter": [
								{
									"id": 1983,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "reference",
												"id": 1983,
												"name": "T"
											}
										],
										"name": "ViewModelConstructor"
									}
								},
								{
									"id": 1984,
									"name": "R",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 4521,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1983,
												"name": "T"
											}
										],
										"name": "ExtractRelatedFields"
									},
									"default": {
										"type": "reference",
										"id": 4521,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1983,
												"name": "T"
											}
										],
										"name": "ExtractRelatedFields"
									}
								}
							],
							"parameters": [
								{
									"id": 1985,
									"name": "fieldPath",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 2007,
												"typeArguments": [
													{
														"type": "reference",
														"id": 1983,
														"name": "T"
													},
													{
														"type": "reference",
														"id": 1984,
														"name": "R"
													}
												],
												"name": "FieldPath"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2007,
													"typeArguments": [
														{
															"type": "reference",
															"id": 1983,
															"name": "T"
														},
														{
															"type": "reference",
															"id": 1984,
															"name": "R"
														}
													],
													"name": "FieldPath"
												}
											}
										]
									}
								},
								{
									"id": 1986,
									"name": "separator",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "'.'"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					]
				},
				{
					"id": 1991,
					"name": "isViewModelClass",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 717,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1992,
							"name": "isViewModelClass",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if a class is a ViewModel"
							},
							"typeParameter": [
								{
									"id": 1993,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "reference",
												"id": 1993,
												"name": "T"
											}
										],
										"name": "ViewModelConstructor"
									}
								}
							],
							"parameters": [
								{
									"id": 1994,
									"name": "view",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "view",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 1993,
									"name": "T"
								}
							}
						}
					]
				},
				{
					"id": 1987,
					"name": "isViewModelInstance",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 708,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1988,
							"name": "isViewModelInstance",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if an object is ViewModel"
							},
							"typeParameter": [
								{
									"id": 1989,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"id": 2044,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"id": 1989,
														"name": "T"
													}
												],
												"name": "BaseViewModel"
											},
											{
												"type": "reference",
												"id": 2013,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4518,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"qualifiedName": "Pick",
														"package": "typescript",
														"name": "Pick"
													}
												],
												"name": "FieldDataMapping"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 1990,
									"name": "view",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "view",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 1989,
									"name": "T"
								}
							}
						}
					]
				},
				{
					"id": 2130,
					"name": "viewModelFactory",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"originalName": "default",
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 1109,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 2131,
							"name": "viewModelFactory",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a ViewModel class with the specified fields.",
								"text": "```js\nconst fields = {\n    userId: new IntegerField({ label: 'User ID' })\n    firstName: new CharField({ label: 'First Name' }),\n    // label is optional; will be generated as 'Last name'\n    lastName: new CharField(),\n};\n// Options are all optional and can be omitted entirely\nconst options = {\n    // Only one of pkFieldName or getImplicitPkField can be defined.\n    // If neither are provided a default field called 'id' will be created.\n    pkFieldName: 'userId',\n    // Multiple names can be specified for compound keys\n    pkFieldName: ['organisationId', 'departmentId']\n    // You can also specify a function to create the primary key\n    getImplicitPkField(model, fields) {\n         if ('EntityId' in fields) {\n             return ['EntityId', fields.EntityId];\n         }\n         // Generate a name base on model, eg. `userId`\n         const name = model.name[0].toLowerCase() + model.name.slice(1);\n         return [`${name}Id`, new NumberField()];\n     },\n     // Optionally can specify a baseClass for this model. When using `augment`\n     // this is automatically set to the class being augmented.\n     baseClass: BaseViewModel,\n};\nclass User extends viewModelFactory(fields, options) {\n    // Optional; default cache is usually sufficient\n    static cache = new MyCustomCache();\n\n    // Used to describe a single user\n    static label = 'User';\n    // User to describe an indeterminate number of users\n    static labelPlural = 'Users';\n}\n```\n"
							},
							"typeParameter": [
								{
									"id": 2132,
									"name": "FieldMappingType",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2001,
										"name": "FieldsMapping"
									}
								},
								{
									"id": 2133,
									"name": "PkFieldNameT",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 4498,
													"typeArguments": [
														{
															"type": "typeOperator",
															"operator": "keyof",
															"target": {
																"type": "reference",
																"id": 2132,
																"name": "FieldMappingType"
															}
														},
														{
															"type": "intrinsic",
															"name": "string"
														}
													],
													"qualifiedName": "Extract",
													"package": "typescript",
													"name": "Extract"
												}
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 2134,
									"name": "fields",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A map of field name to an instance of `Field`\n"
									},
									"type": {
										"type": "reference",
										"id": 2132,
										"name": "FieldMappingType"
									}
								},
								{
									"id": 2135,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 4569,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2132,
												"name": "FieldMappingType"
											},
											{
												"type": "reference",
												"id": 2133,
												"name": "PkFieldNameT"
											}
										],
										"name": "ViewModelOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2078,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2132,
										"name": "FieldMappingType"
									},
									{
										"type": "reference",
										"id": 2133,
										"name": "PkFieldNameT"
									}
								],
								"name": "ViewModelConstructor"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"kind": 4,
					"children": [
						4550
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2044,
						2105,
						2021
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2078
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						1996,
						2017,
						2128,
						2019,
						2013,
						2015,
						2007,
						2010,
						2001,
						2005,
						2125,
						2000,
						1995,
						2074,
						2121
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1981,
						1991,
						1987,
						2130
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2136,
			"name": "fieldUtils",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2143,
					"name": "ViewModelFieldPaths",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Stores the field paths for a model in a standardised form for use in caching.",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Utils\n"
							}
						]
					},
					"children": [
						{
							"id": 2144,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fieldUtils.ts",
									"line": 70,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2145,
									"name": "new ViewModelFieldPaths",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2146,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"id": 2146,
														"name": "T"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"parameters": [
										{
											"id": 2147,
											"name": "modelClass",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2146,
												"name": "T"
											}
										},
										{
											"id": 2148,
											"name": "flattenedPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2143,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2146,
												"name": "T"
											}
										],
										"name": "ViewModelFieldPaths"
									}
								}
							]
						},
						{
							"id": 2151,
							"name": "fieldPaths",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The expanded paths - any nested fields are represented as an array"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fieldUtils.ts",
									"line": 56,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 2007,
									"typeArguments": [
										{
											"type": "reference",
											"id": 2146,
											"name": "T"
										},
										{
											"type": "reference",
											"id": 4521,
											"typeArguments": [
												{
													"type": "reference",
													"id": 2146,
													"name": "T"
												}
											],
											"name": "ExtractRelatedFields"
										}
									],
									"name": "FieldPath"
								}
							}
						},
						{
							"id": 2150,
							"name": "flattenedPath",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The flattened path - any nested fields are joined with '.'"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fieldUtils.ts",
									"line": 52,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 2154,
							"name": "key",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "A key representation of this field path that can be used as a cache key"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fieldUtils.ts",
									"line": 68,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2149,
							"name": "modelClass",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fieldUtils.ts",
									"line": 48,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2146,
								"name": "T"
							}
						},
						{
							"id": 2152,
							"name": "nonRelationFieldNames",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Names of fields that aren't relations"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fieldUtils.ts",
									"line": 60,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 2153,
							"name": "relations",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Map of relation field name to the paths for that relation"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fieldUtils.ts",
									"line": 64,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 4551,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 2007,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "any"
												},
												{
													"type": "reference",
													"id": 4521,
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "any"
														}
													],
													"name": "ExtractRelatedFields"
												}
											],
											"name": "FieldPath"
										}
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 2155,
							"name": "isSubset",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fieldUtils.ts",
									"line": 101,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2156,
									"name": "isSubset",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Is the specified `paths` a subset of this?"
									},
									"parameters": [
										{
											"id": 2157,
											"name": "paths",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2143,
												"typeArguments": [
													{
														"type": "reference",
														"id": 2146,
														"name": "T"
													}
												],
												"name": "ViewModelFieldPaths"
											}
										},
										{
											"id": 2158,
											"name": "ignoreNested",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "false"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2144
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2151,
								2150,
								2154,
								2149,
								2152,
								2153
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2155
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fieldUtils.ts",
							"line": 47,
							"character": 13
						}
					],
					"typeParameter": [
						{
							"id": 2159,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2078,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ViewModelConstructor"
							}
						}
					]
				},
				{
					"id": 2142,
					"name": "CACHE_KEY_FIELD_SEPARATOR",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fieldUtils.ts",
							"line": 39,
							"character": 13
						}
					],
					"type": {
						"type": "literal",
						"value": "⁞"
					},
					"defaultValue": "'⁞'"
				},
				{
					"id": 2137,
					"name": "normalizeFields",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fieldUtils.ts",
							"line": 235,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 2138,
							"name": "normalizeFields",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Takes an array of field paths for a model class and returns a normalized version in the form of `ViewModelFieldPaths`.",
								"text": "Note that `ViewModelFieldPaths` can be compared with normal equality operators - they are cached internally so a single\ninstance exists for each unique `fieldNames`\n\nNormalization means:\n* Id fields are always included\n* Expands a related field to include all it's subfields\n* If a related field is referenced ensures the related field sourceFieldName is included\n* Sorts field names consistently\n",
								"tags": [
									{
										"tag": "extract-docs",
										"text": ""
									},
									{
										"tag": "menu-group",
										"text": "Utils\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 2139,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "reference",
												"id": 2139,
												"name": "T"
											}
										],
										"name": "ViewModelConstructor"
									}
								}
							],
							"parameters": [
								{
									"id": 2140,
									"name": "modelClass",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The ViewModel class the fields are from"
									},
									"type": {
										"type": "reference",
										"id": 2139,
										"name": "T"
									}
								},
								{
									"id": 2141,
									"name": "fieldNames",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The array of field paths to normalize\n"
									},
									"type": {
										"type": "reference",
										"id": 2010,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2139,
												"name": "T"
											},
											{
												"type": "reference",
												"id": 4521,
												"typeArguments": [
													{
														"type": "reference",
														"id": 2139,
														"name": "T"
													}
												],
												"name": "ExtractRelatedFields"
											}
										],
										"name": "FieldPaths"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2143,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2139,
										"name": "T"
									}
								],
								"name": "ViewModelFieldPaths"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2143
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						2142
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						2137
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fieldUtils.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2160,
			"name": "fields/AsyncChoices",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 4609,
					"name": "<internal>",
					"kind": 4,
					"kindString": "Namespace",
					"flags": {},
					"children": [
						{
							"id": 4880,
							"name": "Component",
							"kind": 128,
							"kindString": "Class",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 4882,
									"name": "constructor",
									"kind": 512,
									"kindString": "Constructor",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 488,
											"character": 8
										}
									],
									"signatures": [
										{
											"id": 4883,
											"name": "new Component",
											"kind": 16384,
											"kindString": "Constructor signature",
											"flags": {
												"isExternal": true
											},
											"typeParameter": [
												{
													"id": 4885,
													"name": "P",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {
														"isExternal": true
													},
													"default": {
														"type": "reflection",
														"declaration": {
															"id": 4884,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															}
														}
													}
												},
												{
													"id": 4887,
													"name": "S",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {
														"isExternal": true
													},
													"default": {
														"type": "reflection",
														"declaration": {
															"id": 4886,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															}
														}
													}
												},
												{
													"id": 4888,
													"name": "SS",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {
														"isExternal": true
													},
													"default": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"parameters": [
												{
													"id": 4889,
													"name": "props",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5052,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4885,
																"qualifiedName": "React.Component.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4880,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4885,
														"qualifiedName": "React.Component.P",
														"package": "@types/react",
														"name": "P"
													},
													{
														"type": "reference",
														"id": 4887,
														"qualifiedName": "React.Component.S",
														"package": "@types/react",
														"name": "S"
													},
													{
														"type": "reference",
														"id": 4888,
														"qualifiedName": "React.Component.SS",
														"package": "@types/react",
														"name": "SS"
													}
												],
												"qualifiedName": "React.Component",
												"package": "@types/react",
												"name": "Component"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ComponentLifecycle<P, S, SS>.constructor"
											}
										},
										{
											"id": 4890,
											"name": "new Component",
											"kind": 16384,
											"kindString": "Constructor signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"tags": [
													{
														"tag": "deprecated",
														"text": ""
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/docs/legacy-context.html\n"
													}
												]
											},
											"typeParameter": [
												{
													"id": 4892,
													"name": "P",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {
														"isExternal": true
													},
													"default": {
														"type": "reflection",
														"declaration": {
															"id": 4891,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															}
														}
													}
												},
												{
													"id": 4894,
													"name": "S",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {
														"isExternal": true
													},
													"default": {
														"type": "reflection",
														"declaration": {
															"id": 4893,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															}
														}
													}
												},
												{
													"id": 4895,
													"name": "SS",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {
														"isExternal": true
													},
													"default": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"parameters": [
												{
													"id": 4896,
													"name": "props",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 4885,
														"qualifiedName": "React.Component.P",
														"package": "@types/react",
														"name": "P"
													}
												},
												{
													"id": 4897,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4880,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4885,
														"qualifiedName": "React.Component.P",
														"package": "@types/react",
														"name": "P"
													},
													{
														"type": "reference",
														"id": 4887,
														"qualifiedName": "React.Component.S",
														"package": "@types/react",
														"name": "S"
													},
													{
														"type": "reference",
														"id": 4888,
														"qualifiedName": "React.Component.SS",
														"package": "@types/react",
														"name": "SS"
													}
												],
												"qualifiedName": "React.Component",
												"package": "@types/react",
												"name": "Component"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ComponentLifecycle<P, S, SS>.constructor"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle<P, S, SS>.constructor"
									}
								},
								{
									"id": 4898,
									"name": "context",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "If using the new style context, re-declare this in your class to be the\n`React.ContextType` of your `static contextType`.\nShould be used with type annotation or static contextType.",
										"text": "```ts\nstatic contextType = MyContext\n// For TS pre-3.7:\ncontext!: React.ContextType<typeof MyContext>\n// For TS 3.7 and above:\ndeclare context: React.ContextType<typeof MyContext>\n```\n",
										"tags": [
											{
												"tag": "see",
												"text": "https://reactjs.org/docs/context.html\n"
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 486,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 4917,
									"name": "props",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 511,
											"character": 17
										}
									],
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"id": 5052,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4885,
														"qualifiedName": "React.Component.P",
														"package": "@types/react",
														"name": "P"
													}
												],
												"qualifiedName": "Readonly",
												"package": "typescript",
												"name": "Readonly"
											},
											{
												"type": "reference",
												"id": 5052,
												"typeArguments": [
													{
														"type": "reflection",
														"declaration": {
															"id": 4918,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"children": [
																{
																	"id": 4919,
																	"name": "children",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isExternal": true,
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "node_modules/@types/react/index.d.ts",
																			"line": 511,
																			"character": 49
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 4610,
																		"qualifiedName": "React.ReactNode",
																		"package": "@types/react",
																		"name": "ReactNode"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		4919
																	]
																}
															]
														}
													}
												],
												"qualifiedName": "Readonly",
												"package": "typescript",
												"name": "Readonly"
											}
										]
									}
								},
								{
									"id": 4921,
									"name": "refs",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"tags": [
											{
												"tag": "deprecated",
												"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 517,
											"character": 8
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 4922,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"indexSignature": {
												"id": 4923,
												"name": "__index",
												"kind": 8192,
												"kindString": "Index signature",
												"flags": {
													"isExternal": true
												},
												"parameters": [
													{
														"id": 4924,
														"name": "key",
														"kind": 32768,
														"flags": {
															"isExternal": true
														},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "reference",
													"id": 5057,
													"qualifiedName": "React.ReactInstance",
													"package": "@types/react",
													"name": "ReactInstance"
												}
											}
										}
									}
								},
								{
									"id": 4920,
									"name": "state",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 512,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"id": 5052,
										"typeArguments": [
											{
												"type": "reference",
												"id": 4887,
												"qualifiedName": "React.Component.S",
												"package": "@types/react",
												"name": "S"
											}
										],
										"qualifiedName": "Readonly",
										"package": "typescript",
										"name": "Readonly"
									}
								},
								{
									"id": 4881,
									"name": "contextType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isStatic": true,
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "If set, `this.context` will be set at runtime to the current value of the given Context.",
										"text": "Usage:\n\n```ts\ntype MyContext = number\nconst Ctx = React.createContext<MyContext>(0)\n\nclass Foo extends React.Component {\n  static contextType = Ctx\n  context!: React.ContextType<typeof Ctx>\n  render () {\n    return <>My context's value: {this.context}</>;\n  }\n}\n```\n",
										"tags": [
											{
												"tag": "see",
												"text": "https://reactjs.org/docs/context.html#classcontexttype\n"
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 468,
											"character": 15
										}
									],
									"type": {
										"type": "reference",
										"id": 5047,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"qualifiedName": "React.Context",
										"package": "@types/react",
										"name": "Context"
									}
								},
								{
									"id": 4949,
									"name": "UNSAFE_componentWillMount",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 4950,
											"name": "UNSAFE_componentWillMount",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
												"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use componentDidMount or the constructor instead"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 5025,
												"name": "ComponentLifecycle.UNSAFE_componentWillMount"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 5024,
										"name": "ComponentLifecycle.UNSAFE_componentWillMount"
									}
								},
								{
									"id": 4955,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 4956,
											"name": "UNSAFE_componentWillReceiveProps",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
												"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use static getDerivedStateFromProps instead"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"parameters": [
												{
													"id": 4957,
													"name": "nextProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5052,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4885,
																"qualifiedName": "React.Component.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 4958,
													"name": "nextContext",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 5031,
												"name": "ComponentLifecycle.UNSAFE_componentWillReceiveProps"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 5030,
										"name": "ComponentLifecycle.UNSAFE_componentWillReceiveProps"
									}
								},
								{
									"id": 4964,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 4965,
											"name": "UNSAFE_componentWillUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
												"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use getSnapshotBeforeUpdate instead"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"parameters": [
												{
													"id": 4966,
													"name": "nextProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5052,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4885,
																"qualifiedName": "React.Component.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 4967,
													"name": "nextState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5052,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4887,
																"qualifiedName": "React.Component.S",
																"package": "@types/react",
																"name": "S"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 4968,
													"name": "nextContext",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 5040,
												"name": "ComponentLifecycle.UNSAFE_componentWillUpdate"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 5039,
										"name": "ComponentLifecycle.UNSAFE_componentWillUpdate"
									}
								},
								{
									"id": 4934,
									"name": "componentDidCatch",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 4935,
											"name": "componentDidCatch",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
											},
											"parameters": [
												{
													"id": 4936,
													"name": "error",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 4554,
														"qualifiedName": "Error",
														"package": "typescript",
														"name": "Error"
													}
												},
												{
													"id": 4937,
													"name": "errorInfo",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5058,
														"qualifiedName": "React.ErrorInfo",
														"package": "@types/react",
														"name": "ErrorInfo"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 5010,
												"name": "ComponentLifecycle.componentDidCatch"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 5009,
										"name": "ComponentLifecycle.componentDidCatch"
									}
								},
								{
									"id": 4925,
									"name": "componentDidMount",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 4926,
											"name": "componentDidMount",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 5001,
												"name": "ComponentLifecycle.componentDidMount"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 5000,
										"name": "ComponentLifecycle.componentDidMount"
									}
								},
								{
									"id": 4942,
									"name": "componentDidUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 4943,
											"name": "componentDidUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately after updating occurs. Not called for the initial render.",
												"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
											},
											"parameters": [
												{
													"id": 4944,
													"name": "prevProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5052,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4885,
																"qualifiedName": "React.Component.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 4945,
													"name": "prevState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5052,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4887,
																"qualifiedName": "React.Component.S",
																"package": "@types/react",
																"name": "S"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 4946,
													"name": "snapshot",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 4888,
														"qualifiedName": "React.Component.SS",
														"package": "@types/react",
														"name": "SS"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 5018,
												"name": "ComponentLifecycle.componentDidUpdate"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 5017,
										"name": "ComponentLifecycle.componentDidUpdate"
									}
								},
								{
									"id": 4947,
									"name": "componentWillMount",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 4948,
											"name": "componentWillMount",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
												"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 5023,
												"name": "ComponentLifecycle.componentWillMount"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 5022,
										"name": "ComponentLifecycle.componentWillMount"
									}
								},
								{
									"id": 4951,
									"name": "componentWillReceiveProps",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 4952,
											"name": "componentWillReceiveProps",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
												"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"parameters": [
												{
													"id": 4953,
													"name": "nextProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5052,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4885,
																"qualifiedName": "React.Component.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 4954,
													"name": "nextContext",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 5027,
												"name": "ComponentLifecycle.componentWillReceiveProps"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 5026,
										"name": "ComponentLifecycle.componentWillReceiveProps"
									}
								},
								{
									"id": 4932,
									"name": "componentWillUnmount",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 4933,
											"name": "componentWillUnmount",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 5008,
												"name": "ComponentLifecycle.componentWillUnmount"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 5007,
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								},
								{
									"id": 4959,
									"name": "componentWillUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 4960,
											"name": "componentWillUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
												"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"parameters": [
												{
													"id": 4961,
													"name": "nextProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5052,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4885,
																"qualifiedName": "React.Component.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 4962,
													"name": "nextState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5052,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4887,
																"qualifiedName": "React.Component.S",
																"package": "@types/react",
																"name": "S"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 4963,
													"name": "nextContext",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 5035,
												"name": "ComponentLifecycle.componentWillUpdate"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 5034,
										"name": "ComponentLifecycle.componentWillUpdate"
									}
								},
								{
									"id": 4910,
									"name": "forceUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 503,
											"character": 8
										}
									],
									"signatures": [
										{
											"id": 4911,
											"name": "forceUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 4912,
													"name": "callback",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 4913,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"signatures": [
																{
																	"id": 4914,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 4938,
									"name": "getSnapshotBeforeUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 4939,
											"name": "getSnapshotBeforeUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
												"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
											},
											"parameters": [
												{
													"id": 4940,
													"name": "prevProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5052,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4885,
																"qualifiedName": "React.Component.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 4941,
													"name": "prevState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5052,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4887,
																"qualifiedName": "React.Component.S",
																"package": "@types/react",
																"name": "S"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 4888,
														"qualifiedName": "React.Component.SS",
														"package": "@types/react",
														"name": "SS"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 5014,
												"name": "ComponentLifecycle.getSnapshotBeforeUpdate"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 5013,
										"name": "ComponentLifecycle.getSnapshotBeforeUpdate"
									}
								},
								{
									"id": 4915,
									"name": "render",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 504,
											"character": 8
										}
									],
									"signatures": [
										{
											"id": 4916,
											"name": "render",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 4610,
												"qualifiedName": "React.ReactNode",
												"package": "@types/react",
												"name": "ReactNode"
											}
										}
									]
								},
								{
									"id": 4899,
									"name": "setState",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 498,
											"character": 8
										}
									],
									"signatures": [
										{
											"id": 4900,
											"name": "setState",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"typeParameter": [
												{
													"id": 4901,
													"name": "K",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "intrinsic",
																"name": "symbol"
															}
														]
													}
												}
											],
											"parameters": [
												{
													"id": 4902,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 4887,
																"qualifiedName": "React.Component.S",
																"package": "@types/react",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 4903,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExternal": true
																	},
																	"signatures": [
																		{
																			"id": 4904,
																			"name": "__type",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {
																				"isExternal": true
																			},
																			"parameters": [
																				{
																					"id": 4905,
																					"name": "prevState",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {
																						"isExternal": true
																					},
																					"type": {
																						"type": "reference",
																						"id": 5052,
																						"typeArguments": [
																							{
																								"type": "reference",
																								"id": 4887,
																								"qualifiedName": "React.Component.S",
																								"package": "@types/react",
																								"name": "S"
																							}
																						],
																						"qualifiedName": "Readonly",
																						"package": "typescript",
																						"name": "Readonly"
																					}
																				},
																				{
																					"id": 4906,
																					"name": "props",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {
																						"isExternal": true
																					},
																					"type": {
																						"type": "reference",
																						"id": 5052,
																						"typeArguments": [
																							{
																								"type": "reference",
																								"id": 4885,
																								"qualifiedName": "React.Component.P",
																								"package": "@types/react",
																								"name": "P"
																							}
																						],
																						"qualifiedName": "Readonly",
																						"package": "typescript",
																						"name": "Readonly"
																					}
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": null
																					},
																					{
																						"type": "reference",
																						"id": 4887,
																						"qualifiedName": "React.Component.S",
																						"package": "@types/react",
																						"name": "S"
																					},
																					{
																						"type": "reference",
																						"id": 4518,
																						"typeArguments": [
																							{
																								"type": "reference",
																								"id": 4887,
																								"qualifiedName": "React.Component.S",
																								"package": "@types/react",
																								"name": "S"
																							},
																							{
																								"type": "reference",
																								"id": 4901,
																								"qualifiedName": "K",
																								"package": "@types/react",
																								"name": "K"
																							}
																						],
																						"qualifiedName": "Pick",
																						"package": "typescript",
																						"name": "Pick"
																					}
																				]
																			}
																		}
																	]
																}
															},
															{
																"type": "reference",
																"id": 4518,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 4887,
																		"qualifiedName": "React.Component.S",
																		"package": "@types/react",
																		"name": "S"
																	},
																	{
																		"type": "reference",
																		"id": 4901,
																		"qualifiedName": "K",
																		"package": "@types/react",
																		"name": "K"
																	}
																],
																"qualifiedName": "Pick",
																"package": "typescript",
																"name": "Pick"
															}
														]
													}
												},
												{
													"id": 4907,
													"name": "callback",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 4908,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"signatures": [
																{
																	"id": 4909,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 4927,
									"name": "shouldComponentUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 4928,
											"name": "shouldComponentUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
												"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
											},
											"parameters": [
												{
													"id": 4929,
													"name": "nextProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5052,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4885,
																"qualifiedName": "React.Component.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 4930,
													"name": "nextState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5052,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4887,
																"qualifiedName": "React.Component.S",
																"package": "@types/react",
																"name": "S"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 4931,
													"name": "nextContext",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 5003,
												"name": "ComponentLifecycle.shouldComponentUpdate"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 5002,
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"groups": [
								{
									"title": "Constructors",
									"kind": 512,
									"children": [
										4882
									]
								},
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4898,
										4917,
										4921,
										4920,
										4881
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										4949,
										4955,
										4964,
										4934,
										4925,
										4942,
										4947,
										4951,
										4932,
										4959,
										4910,
										4938,
										4915,
										4899,
										4927
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 446,
									"character": 10
								}
							],
							"typeParameter": [
								{
									"id": 4970,
									"name": "P",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "reflection",
										"declaration": {
											"id": 4969,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/react/index.d.ts",
													"line": 445,
													"character": 28
												}
											]
										}
									}
								},
								{
									"id": 4972,
									"name": "S",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "reflection",
										"declaration": {
											"id": 4971,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/react/index.d.ts",
													"line": 445,
													"character": 36
												}
											]
										}
									}
								},
								{
									"id": 4973,
									"name": "SS",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"id": 4999,
									"typeArguments": [
										{
											"type": "reference",
											"id": 4885,
											"qualifiedName": "React.Component.P",
											"package": "@types/react",
											"name": "P"
										},
										{
											"type": "reference",
											"id": 4887,
											"qualifiedName": "React.Component.S",
											"package": "@types/react",
											"name": "S"
										},
										{
											"type": "reference",
											"id": 4888,
											"qualifiedName": "React.Component.SS",
											"package": "@types/react",
											"name": "SS"
										}
									],
									"qualifiedName": "React.ComponentLifecycle",
									"package": "@types/react",
									"name": "ComponentLifecycle"
								}
							]
						},
						{
							"id": 4999,
							"name": "ComponentLifecycle",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 5024,
									"name": "UNSAFE_componentWillMount",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 5025,
											"name": "UNSAFE_componentWillMount",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
												"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use componentDidMount or the constructor instead"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 5077,
												"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 5076,
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								},
								{
									"id": 5030,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 5031,
											"name": "UNSAFE_componentWillReceiveProps",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
												"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use static getDerivedStateFromProps instead"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"parameters": [
												{
													"id": 5032,
													"name": "nextProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5052,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5044,
																"qualifiedName": "React.ComponentLifecycle.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 5033,
													"name": "nextContext",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 5083,
												"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 5082,
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								},
								{
									"id": 5039,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 5040,
											"name": "UNSAFE_componentWillUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
												"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use getSnapshotBeforeUpdate instead"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"parameters": [
												{
													"id": 5041,
													"name": "nextProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5052,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5044,
																"qualifiedName": "React.ComponentLifecycle.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 5042,
													"name": "nextState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5052,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5045,
																"qualifiedName": "React.ComponentLifecycle.S",
																"package": "@types/react",
																"name": "S"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 5043,
													"name": "nextContext",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 5092,
												"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 5091,
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								},
								{
									"id": 5009,
									"name": "componentDidCatch",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 5010,
											"name": "componentDidCatch",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
											},
											"parameters": [
												{
													"id": 5011,
													"name": "error",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 4554,
														"qualifiedName": "Error",
														"package": "typescript",
														"name": "Error"
													}
												},
												{
													"id": 5012,
													"name": "errorInfo",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5058,
														"qualifiedName": "React.ErrorInfo",
														"package": "@types/react",
														"name": "ErrorInfo"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 5000,
									"name": "componentDidMount",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 5001,
											"name": "componentDidMount",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 5017,
									"name": "componentDidUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 5018,
											"name": "componentDidUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately after updating occurs. Not called for the initial render.",
												"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
											},
											"parameters": [
												{
													"id": 5019,
													"name": "prevProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5052,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5044,
																"qualifiedName": "React.ComponentLifecycle.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 5020,
													"name": "prevState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5052,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5045,
																"qualifiedName": "React.ComponentLifecycle.S",
																"package": "@types/react",
																"name": "S"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 5021,
													"name": "snapshot",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 5046,
														"qualifiedName": "React.ComponentLifecycle.SS",
														"package": "@types/react",
														"name": "SS"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 5066,
												"name": "NewLifecycle.componentDidUpdate"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 5065,
										"name": "NewLifecycle.componentDidUpdate"
									}
								},
								{
									"id": 5022,
									"name": "componentWillMount",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 5023,
											"name": "componentWillMount",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
												"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 5075,
												"name": "DeprecatedLifecycle.componentWillMount"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 5074,
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								},
								{
									"id": 5026,
									"name": "componentWillReceiveProps",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 5027,
											"name": "componentWillReceiveProps",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
												"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"parameters": [
												{
													"id": 5028,
													"name": "nextProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5052,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5044,
																"qualifiedName": "React.ComponentLifecycle.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 5029,
													"name": "nextContext",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 5079,
												"name": "DeprecatedLifecycle.componentWillReceiveProps"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 5078,
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								},
								{
									"id": 5007,
									"name": "componentWillUnmount",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 5008,
											"name": "componentWillUnmount",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 5034,
									"name": "componentWillUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 5035,
											"name": "componentWillUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
												"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"parameters": [
												{
													"id": 5036,
													"name": "nextProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5052,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5044,
																"qualifiedName": "React.ComponentLifecycle.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 5037,
													"name": "nextState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5052,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5045,
																"qualifiedName": "React.ComponentLifecycle.S",
																"package": "@types/react",
																"name": "S"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 5038,
													"name": "nextContext",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 5087,
												"name": "DeprecatedLifecycle.componentWillUpdate"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 5086,
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								},
								{
									"id": 5013,
									"name": "getSnapshotBeforeUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 5014,
											"name": "getSnapshotBeforeUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
												"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
											},
											"parameters": [
												{
													"id": 5015,
													"name": "prevProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5052,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5044,
																"qualifiedName": "React.ComponentLifecycle.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 5016,
													"name": "prevState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5052,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5045,
																"qualifiedName": "React.ComponentLifecycle.S",
																"package": "@types/react",
																"name": "S"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 5046,
														"qualifiedName": "React.ComponentLifecycle.SS",
														"package": "@types/react",
														"name": "SS"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 5062,
												"name": "NewLifecycle.getSnapshotBeforeUpdate"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 5061,
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								},
								{
									"id": 5002,
									"name": "shouldComponentUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 5003,
											"name": "shouldComponentUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
												"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
											},
											"parameters": [
												{
													"id": 5004,
													"name": "nextProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5052,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5044,
																"qualifiedName": "React.ComponentLifecycle.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 5005,
													"name": "nextState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5052,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5045,
																"qualifiedName": "React.ComponentLifecycle.S",
																"package": "@types/react",
																"name": "S"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 5006,
													"name": "nextContext",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										5024,
										5030,
										5039,
										5009,
										5000,
										5017,
										5022,
										5026,
										5007,
										5034,
										5013,
										5002
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 616,
									"character": 14
								}
							],
							"typeParameter": [
								{
									"id": 5044,
									"name": "P",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								},
								{
									"id": 5045,
									"name": "S",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								},
								{
									"id": 5046,
									"name": "SS",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"id": 5060,
									"typeArguments": [
										{
											"type": "reference",
											"id": 5044,
											"qualifiedName": "React.ComponentLifecycle.P",
											"package": "@types/react",
											"name": "P"
										},
										{
											"type": "reference",
											"id": 5045,
											"qualifiedName": "React.ComponentLifecycle.S",
											"package": "@types/react",
											"name": "S"
										},
										{
											"type": "reference",
											"id": 5046,
											"qualifiedName": "React.ComponentLifecycle.SS",
											"package": "@types/react",
											"name": "SS"
										}
									],
									"qualifiedName": "React.NewLifecycle",
									"package": "@types/react",
									"name": "NewLifecycle"
								},
								{
									"type": "reference",
									"id": 5073,
									"typeArguments": [
										{
											"type": "reference",
											"id": 5044,
											"qualifiedName": "React.ComponentLifecycle.P",
											"package": "@types/react",
											"name": "P"
										},
										{
											"type": "reference",
											"id": 5045,
											"qualifiedName": "React.ComponentLifecycle.S",
											"package": "@types/react",
											"name": "S"
										}
									],
									"qualifiedName": "React.DeprecatedLifecycle",
									"package": "@types/react",
									"name": "DeprecatedLifecycle"
								}
							],
							"extendedBy": [
								{
									"type": "reference",
									"id": 4880,
									"name": "Component"
								}
							]
						},
						{
							"id": 4974,
							"name": "ConcatArray",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 4975,
									"name": "length",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1263,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 4976,
									"name": "join",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4977,
											"name": "join",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 4978,
													"name": "separator",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								},
								{
									"id": 4979,
									"name": "slice",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4980,
											"name": "slice",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 4981,
													"name": "start",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 4982,
													"name": "end",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 4983,
													"qualifiedName": "ConcatArray.T",
													"package": "typescript",
													"name": "T"
												}
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4975
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										4976,
										4979
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1262,
									"character": 10
								}
							],
							"typeParameter": [
								{
									"id": 4983,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"indexSignature": {
								"id": 4984,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {
									"isExternal": true
								},
								"parameters": [
									{
										"id": 4985,
										"name": "n",
										"kind": 32768,
										"flags": {
											"isExternal": true
										},
										"type": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								],
								"type": {
									"type": "reference",
									"id": 4983,
									"qualifiedName": "ConcatArray.T",
									"package": "typescript",
									"name": "T"
								}
							}
						},
						{
							"id": 5126,
							"name": "ConsumerProps",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 5130,
									"name": "unstable_observedBits",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 345,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 5127,
									"name": "children",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 344,
											"character": 8
										}
									],
									"signatures": [
										{
											"id": 5128,
											"name": "children",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 5129,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5131,
														"qualifiedName": "React.ConsumerProps.T",
														"package": "@types/react",
														"name": "T"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4610,
												"qualifiedName": "React.ReactNode",
												"package": "@types/react",
												"name": "ReactNode"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5130
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										5127
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 343,
									"character": 14
								}
							],
							"typeParameter": [
								{
									"id": 5131,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							]
						},
						{
							"id": 5047,
							"name": "Context",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 5049,
									"name": "Consumer",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 382,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"id": 5108,
										"typeArguments": [
											{
												"type": "reference",
												"id": 5051,
												"qualifiedName": "React.Context.T",
												"package": "@types/react",
												"name": "T"
											}
										],
										"qualifiedName": "React.Consumer",
										"package": "@types/react",
										"name": "Consumer"
									}
								},
								{
									"id": 5048,
									"name": "Provider",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 381,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"id": 5106,
										"typeArguments": [
											{
												"type": "reference",
												"id": 5051,
												"qualifiedName": "React.Context.T",
												"package": "@types/react",
												"name": "T"
											}
										],
										"qualifiedName": "React.Provider",
										"package": "@types/react",
										"name": "Provider"
									}
								},
								{
									"id": 5050,
									"name": "displayName",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 383,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5049,
										5048,
										5050
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 380,
									"character": 14
								}
							],
							"typeParameter": [
								{
									"id": 5051,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							]
						},
						{
							"id": 5073,
							"name": "DeprecatedLifecycle",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 5076,
									"name": "UNSAFE_componentWillMount",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 5077,
											"name": "UNSAFE_componentWillMount",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
												"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use componentDidMount or the constructor instead"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 5082,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 5083,
											"name": "UNSAFE_componentWillReceiveProps",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
												"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use static getDerivedStateFromProps instead"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"parameters": [
												{
													"id": 5084,
													"name": "nextProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5052,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5096,
																"qualifiedName": "React.DeprecatedLifecycle.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 5085,
													"name": "nextContext",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 5091,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 5092,
											"name": "UNSAFE_componentWillUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
												"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use getSnapshotBeforeUpdate instead"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"parameters": [
												{
													"id": 5093,
													"name": "nextProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5052,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5096,
																"qualifiedName": "React.DeprecatedLifecycle.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 5094,
													"name": "nextState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5052,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5097,
																"qualifiedName": "React.DeprecatedLifecycle.S",
																"package": "@types/react",
																"name": "S"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 5095,
													"name": "nextContext",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 5074,
									"name": "componentWillMount",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 5075,
											"name": "componentWillMount",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
												"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 5078,
									"name": "componentWillReceiveProps",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 5079,
											"name": "componentWillReceiveProps",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
												"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"parameters": [
												{
													"id": 5080,
													"name": "nextProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5052,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5096,
																"qualifiedName": "React.DeprecatedLifecycle.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 5081,
													"name": "nextContext",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 5086,
									"name": "componentWillUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 5087,
											"name": "componentWillUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
												"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
												"tags": [
													{
														"tag": "deprecated",
														"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
													},
													{
														"tag": "see",
														"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
													}
												]
											},
											"parameters": [
												{
													"id": 5088,
													"name": "nextProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5052,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5096,
																"qualifiedName": "React.DeprecatedLifecycle.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 5089,
													"name": "nextState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5052,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5097,
																"qualifiedName": "React.DeprecatedLifecycle.S",
																"package": "@types/react",
																"name": "S"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 5090,
													"name": "nextContext",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										5076,
										5082,
										5091,
										5074,
										5078,
										5086
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 686,
									"character": 14
								}
							],
							"typeParameter": [
								{
									"id": 5096,
									"name": "P",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								},
								{
									"id": 5097,
									"name": "S",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"extendedBy": [
								{
									"type": "reference",
									"id": 4999,
									"name": "ComponentLifecycle"
								}
							]
						},
						{
							"id": 5058,
							"name": "ErrorInfo",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 5059,
									"name": "componentStack",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Captures which component contained the exception, and its ancestors."
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 2897,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5059
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 2893,
									"character": 14
								}
							]
						},
						{
							"id": 5120,
							"name": "ExoticComponent",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 5121,
									"name": "$$typeof",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 363,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "symbol"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5121
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 358,
									"character": 14
								}
							],
							"typeParameter": [
								{
									"id": 5123,
									"name": "P",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "reflection",
										"declaration": {
											"id": 5122,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/react/index.d.ts",
													"line": 358,
													"character": 34
												}
											]
										}
									}
								}
							],
							"signatures": [
								{
									"id": 5124,
									"name": "ExoticComponent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "**NOTE**: Exotic components are not callable."
									},
									"parameters": [
										{
											"id": 5125,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 5123,
												"qualifiedName": "React.ExoticComponent.P",
												"package": "@types/react",
												"name": "P"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 4619,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"id": 4859,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"qualifiedName": "React.JSXElementConstructor",
																"package": "@types/react",
																"name": "JSXElementConstructor"
															}
														]
													}
												],
												"qualifiedName": "React.ReactElement",
												"package": "@types/react",
												"name": "ReactElement"
											}
										]
									}
								}
							],
							"extendedBy": [
								{
									"type": "reference",
									"id": 5110,
									"name": "ProviderExoticComponent"
								}
							]
						},
						{
							"id": 4867,
							"name": "IterableIterator",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 4868,
									"name": "[iterator]",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4869,
											"name": "[iterator]",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 4867,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4879,
														"qualifiedName": "IterableIterator.T",
														"package": "typescript",
														"name": "T"
													}
												],
												"qualifiedName": "IterableIterator",
												"package": "typescript",
												"name": "IterableIterator"
											}
										}
									]
								},
								{
									"id": 4870,
									"name": "next",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4871,
											"name": "next",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 4872,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isRest": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "tuple"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	}
																]
															}
														]
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 5054,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4879,
														"qualifiedName": "IterableIterator.T",
														"package": "typescript",
														"name": "T"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "IteratorResult",
												"package": "typescript",
												"name": "IteratorResult"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4988,
												"name": "Iterator.next"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4987,
										"name": "Iterator.next"
									}
								},
								{
									"id": 4873,
									"name": "return",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 4874,
											"name": "return",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 4875,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 5054,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4879,
														"qualifiedName": "IterableIterator.T",
														"package": "typescript",
														"name": "T"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "IteratorResult",
												"package": "typescript",
												"name": "IteratorResult"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4991,
												"name": "Iterator.return"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4990,
										"name": "Iterator.return"
									}
								},
								{
									"id": 4876,
									"name": "throw",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 4877,
											"name": "throw",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 4878,
													"name": "e",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 5054,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4879,
														"qualifiedName": "IterableIterator.T",
														"package": "typescript",
														"name": "T"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "IteratorResult",
												"package": "typescript",
												"name": "IteratorResult"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 4994,
												"name": "Iterator.throw"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 4993,
										"name": "Iterator.throw"
									}
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										4868,
										4870,
										4873,
										4876
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
									"line": 54,
									"character": 10
								}
							],
							"typeParameter": [
								{
									"id": 4879,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"id": 4986,
									"typeArguments": [
										{
											"type": "reference",
											"id": 4879,
											"qualifiedName": "IterableIterator.T",
											"package": "typescript",
											"name": "T"
										}
									],
									"qualifiedName": "Iterator",
									"package": "typescript",
									"name": "Iterator"
								}
							]
						},
						{
							"id": 4986,
							"name": "Iterator",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 4987,
									"name": "next",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4988,
											"name": "next",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 4989,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isRest": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "tuple"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "reference",
																		"id": 4998,
																		"qualifiedName": "Iterator.TNext",
																		"package": "typescript",
																		"name": "TNext"
																	}
																]
															}
														]
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 5054,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4996,
														"qualifiedName": "Iterator.T",
														"package": "typescript",
														"name": "T"
													},
													{
														"type": "reference",
														"id": 4997,
														"qualifiedName": "Iterator.TReturn",
														"package": "typescript",
														"name": "TReturn"
													}
												],
												"qualifiedName": "IteratorResult",
												"package": "typescript",
												"name": "IteratorResult"
											}
										}
									]
								},
								{
									"id": 4990,
									"name": "return",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 4991,
											"name": "return",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 4992,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 4997,
														"qualifiedName": "Iterator.TReturn",
														"package": "typescript",
														"name": "TReturn"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 5054,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4996,
														"qualifiedName": "Iterator.T",
														"package": "typescript",
														"name": "T"
													},
													{
														"type": "reference",
														"id": 4997,
														"qualifiedName": "Iterator.TReturn",
														"package": "typescript",
														"name": "TReturn"
													}
												],
												"qualifiedName": "IteratorResult",
												"package": "typescript",
												"name": "IteratorResult"
											}
										}
									]
								},
								{
									"id": 4993,
									"name": "throw",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 4994,
											"name": "throw",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 4995,
													"name": "e",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 5054,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4996,
														"qualifiedName": "Iterator.T",
														"package": "typescript",
														"name": "T"
													},
													{
														"type": "reference",
														"id": 4997,
														"qualifiedName": "Iterator.TReturn",
														"package": "typescript",
														"name": "TReturn"
													}
												],
												"qualifiedName": "IteratorResult",
												"package": "typescript",
												"name": "IteratorResult"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										4987,
										4990,
										4993
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
									"line": 43,
									"character": 10
								}
							],
							"typeParameter": [
								{
									"id": 4996,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								},
								{
									"id": 4997,
									"name": "TReturn",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 4998,
									"name": "TNext",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "intrinsic",
										"name": "undefined"
									}
								}
							],
							"extendedBy": [
								{
									"type": "reference",
									"id": 4867,
									"name": "IterableIterator"
								}
							]
						},
						{
							"id": 5102,
							"name": "IteratorReturnResult",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 5103,
									"name": "done",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
											"line": 37,
											"character": 4
										}
									],
									"type": {
										"type": "literal",
										"value": true
									}
								},
								{
									"id": 5104,
									"name": "value",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
											"line": 38,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"id": 5105,
										"qualifiedName": "IteratorReturnResult.TReturn",
										"package": "typescript",
										"name": "TReturn"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5103,
										5104
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
									"line": 36,
									"character": 10
								}
							],
							"typeParameter": [
								{
									"id": 5105,
									"name": "TReturn",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							]
						},
						{
							"id": 5098,
							"name": "IteratorYieldResult",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 5099,
									"name": "done",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
											"line": 32,
											"character": 4
										}
									],
									"type": {
										"type": "literal",
										"value": false
									}
								},
								{
									"id": 5100,
									"name": "value",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
											"line": 33,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"id": 5101,
										"qualifiedName": "IteratorYieldResult.TYield",
										"package": "typescript",
										"name": "TYield"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5099,
										5100
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
									"line": 31,
									"character": 10
								}
							],
							"typeParameter": [
								{
									"id": 5101,
									"name": "TYield",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							]
						},
						{
							"id": 5060,
							"name": "NewLifecycle",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 5065,
									"name": "componentDidUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 5066,
											"name": "componentDidUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Called immediately after updating occurs. Not called for the initial render.",
												"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
											},
											"parameters": [
												{
													"id": 5067,
													"name": "prevProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5052,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5070,
																"qualifiedName": "React.NewLifecycle.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 5068,
													"name": "prevState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5052,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5071,
																"qualifiedName": "React.NewLifecycle.S",
																"package": "@types/react",
																"name": "S"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 5069,
													"name": "snapshot",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 5072,
														"qualifiedName": "React.NewLifecycle.SS",
														"package": "@types/react",
														"name": "SS"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 5061,
									"name": "getSnapshotBeforeUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"signatures": [
										{
											"id": 5062,
											"name": "getSnapshotBeforeUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
												"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
											},
											"parameters": [
												{
													"id": 5063,
													"name": "prevProps",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5052,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5070,
																"qualifiedName": "React.NewLifecycle.P",
																"package": "@types/react",
																"name": "P"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												},
												{
													"id": 5064,
													"name": "prevState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5052,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5071,
																"qualifiedName": "React.NewLifecycle.S",
																"package": "@types/react",
																"name": "S"
															}
														],
														"qualifiedName": "Readonly",
														"package": "typescript",
														"name": "Readonly"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 5072,
														"qualifiedName": "React.NewLifecycle.SS",
														"package": "@types/react",
														"name": "SS"
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										5065,
										5061
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 668,
									"character": 14
								}
							],
							"typeParameter": [
								{
									"id": 5070,
									"name": "P",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								},
								{
									"id": 5071,
									"name": "S",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								},
								{
									"id": 5072,
									"name": "SS",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"extendedBy": [
								{
									"type": "reference",
									"id": 4999,
									"name": "ComponentLifecycle"
								}
							]
						},
						{
							"id": 5110,
							"name": "ProviderExoticComponent",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 5112,
									"name": "$$typeof",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 363,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "symbol"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 5121,
										"name": "ExoticComponent.$$typeof"
									}
								},
								{
									"id": 5111,
									"name": "propTypes",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 371,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"id": 5132,
										"typeArguments": [
											{
												"type": "reference",
												"id": 5113,
												"qualifiedName": "React.ProviderExoticComponent.P",
												"package": "@types/react",
												"name": "P"
											}
										],
										"qualifiedName": "React.WeakValidationMap",
										"package": "@types/react",
										"name": "WeakValidationMap"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5112,
										5111
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 370,
									"character": 14
								}
							],
							"typeParameter": [
								{
									"id": 5113,
									"name": "P",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"signatures": [
								{
									"id": 5114,
									"name": "ProviderExoticComponent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "**NOTE**: Exotic components are not callable."
									},
									"parameters": [
										{
											"id": 5115,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 5113,
												"qualifiedName": "React.ProviderExoticComponent.P",
												"package": "@types/react",
												"name": "P"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 4619,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"id": 4859,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"qualifiedName": "React.JSXElementConstructor",
																"package": "@types/react",
																"name": "JSXElementConstructor"
															}
														]
													}
												],
												"qualifiedName": "React.ReactElement",
												"package": "@types/react",
												"name": "ReactElement"
											}
										]
									}
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"id": 5120,
									"typeArguments": [
										{
											"type": "reference",
											"id": 5113,
											"qualifiedName": "React.ProviderExoticComponent.P",
											"package": "@types/react",
											"name": "P"
										}
									],
									"qualifiedName": "React.ExoticComponent",
									"package": "@types/react",
									"name": "ExoticComponent"
								}
							]
						},
						{
							"id": 5116,
							"name": "ProviderProps",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 5118,
									"name": "children",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 340,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"id": 4610,
										"qualifiedName": "React.ReactNode",
										"package": "@types/react",
										"name": "ReactNode"
									}
								},
								{
									"id": 5117,
									"name": "value",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 339,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"id": 5119,
										"qualifiedName": "React.ProviderProps.T",
										"package": "@types/react",
										"name": "T"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5118,
										5117
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 338,
									"character": 14
								}
							],
							"typeParameter": [
								{
									"id": 5119,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							]
						},
						{
							"id": 4619,
							"name": "ReactElement",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 4622,
									"name": "key",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 151,
											"character": 8
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 4858,
												"qualifiedName": "React.Key",
												"package": "@types/react",
												"name": "Key"
											}
										]
									}
								},
								{
									"id": 4621,
									"name": "props",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 150,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"id": 4623,
										"qualifiedName": "React.ReactElement.P",
										"package": "@types/react",
										"name": "P"
									}
								},
								{
									"id": 4620,
									"name": "type",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 149,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"id": 4624,
										"qualifiedName": "React.ReactElement.T",
										"package": "@types/react",
										"name": "T"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4622,
										4621,
										4620
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 148,
									"character": 14
								}
							],
							"typeParameter": [
								{
									"id": 4623,
									"name": "P",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 4624,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 4859,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "React.JSXElementConstructor",
												"package": "@types/react",
												"name": "JSXElementConstructor"
											}
										]
									},
									"default": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 4859,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "React.JSXElementConstructor",
												"package": "@types/react",
												"name": "JSXElementConstructor"
											}
										]
									}
								}
							],
							"extendedBy": [
								{
									"type": "reference",
									"id": 4614,
									"name": "ReactPortal"
								}
							]
						},
						{
							"id": 4626,
							"name": "ReactNodeArray",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 4627,
									"name": "length",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Gets or sets the length of the array. This is a number one higher than the highest index in the array."
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1273,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.length"
									}
								},
								{
									"id": 4846,
									"name": "[iterator]",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4847,
											"name": "[iterator]",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Iterator"
											},
											"type": {
												"type": "reference",
												"id": 4867,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4610,
														"qualifiedName": "React.ReactNode",
														"package": "@types/react",
														"name": "ReactNode"
													}
												],
												"qualifiedName": "IterableIterator",
												"package": "typescript",
												"name": "IterableIterator"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.__@iterator@62360"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.__@iterator@62360"
									}
								},
								{
									"id": 4848,
									"name": "[unscopables]",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4849,
											"name": "[unscopables]",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Returns an object whose properties have the value 'true'\nwhen they will be absent when used in a 'with' statement."
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 4850,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 4851,
															"name": "copyWithin",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
																	"line": 100,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														},
														{
															"id": 4852,
															"name": "entries",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
																	"line": 101,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														},
														{
															"id": 4853,
															"name": "fill",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
																	"line": 102,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														},
														{
															"id": 4854,
															"name": "find",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
																	"line": 103,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														},
														{
															"id": 4855,
															"name": "findIndex",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
																	"line": 104,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														},
														{
															"id": 4856,
															"name": "keys",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
																	"line": 105,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														},
														{
															"id": 4857,
															"name": "values",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
																	"line": 106,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																4851,
																4852,
																4853,
																4854,
																4855,
																4856,
																4857
															]
														}
													]
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.__@unscopables@62384"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.__@unscopables@62384"
									}
								},
								{
									"id": 4637,
									"name": "concat",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4638,
											"name": "concat",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Combines two or more arrays.\nThis method returns a new array without modifying any existing arrays."
											},
											"parameters": [
												{
													"id": 4639,
													"name": "items",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isRest": true
													},
													"comment": {
														"shortText": "Additional arrays and/or items to add to the end of the array.\n"
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 4974,
															"typeArguments": [
																{
																	"type": "reference",
																	"id": 4610,
																	"qualifiedName": "React.ReactNode",
																	"package": "@types/react",
																	"name": "ReactNode"
																}
															],
															"qualifiedName": "ConcatArray",
															"package": "typescript",
															"name": "ConcatArray"
														}
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 4610,
													"qualifiedName": "React.ReactNode",
													"package": "@types/react",
													"name": "ReactNode"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.concat"
											}
										},
										{
											"id": 4640,
											"name": "concat",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Combines two or more arrays.\nThis method returns a new array without modifying any existing arrays."
											},
											"parameters": [
												{
													"id": 4641,
													"name": "items",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isRest": true
													},
													"comment": {
														"shortText": "Additional arrays and/or items to add to the end of the array.\n"
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "union",
															"types": [
																{
																	"type": "reference",
																	"id": 4610,
																	"qualifiedName": "React.ReactNode",
																	"package": "@types/react",
																	"name": "ReactNode"
																},
																{
																	"type": "reference",
																	"id": 4974,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"id": 4610,
																			"qualifiedName": "React.ReactNode",
																			"package": "@types/react",
																			"name": "ReactNode"
																		}
																	],
																	"qualifiedName": "ConcatArray",
																	"package": "typescript",
																	"name": "ConcatArray"
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 4610,
													"qualifiedName": "React.ReactNode",
													"package": "@types/react",
													"name": "ReactNode"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.concat"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.concat"
									}
								},
								{
									"id": 4831,
									"name": "copyWithin",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4832,
											"name": "copyWithin",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Returns the this object after copying a section of the array identified by start and end\nto the same array starting at position target"
											},
											"parameters": [
												{
													"id": 4833,
													"name": "target",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"shortText": "If target is negative, it is treated as length+target where length is the\nlength of the array."
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 4834,
													"name": "start",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"shortText": "If start is negative, it is treated as length+start. If end is negative, it\nis treated as length+end."
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 4835,
													"name": "end",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "If not specified, length of the this object is used as its default value.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4626,
												"qualifiedName": "React.ReactNodeArray",
												"package": "@types/react",
												"name": "ReactNodeArray"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.copyWithin"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.copyWithin"
									}
								},
								{
									"id": 4836,
									"name": "entries",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4837,
											"name": "entries",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Returns an iterable of key, value pairs for every entry in the array"
											},
											"type": {
												"type": "reference",
												"id": 4867,
												"typeArguments": [
													{
														"type": "tuple",
														"elements": [
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "reference",
																"id": 4610,
																"qualifiedName": "React.ReactNode",
																"package": "@types/react",
																"name": "ReactNode"
															}
														]
													}
												],
												"qualifiedName": "IterableIterator",
												"package": "typescript",
												"name": "IterableIterator"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.entries"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.entries"
									}
								},
								{
									"id": 4679,
									"name": "every",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4680,
											"name": "every",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Determines whether all the members of an array satisfy the specified test."
											},
											"typeParameter": [
												{
													"id": 4681,
													"name": "S",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 4610,
														"qualifiedName": "React.ReactNode",
														"package": "@types/react",
														"name": "ReactNode"
													}
												}
											],
											"parameters": [
												{
													"id": 4682,
													"name": "predicate",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"shortText": "A function that accepts up to three arguments. The every method calls\nthe predicate function for each element in the array until the predicate returns a value\nwhich is coercible to the Boolean value false, or until the end of the array."
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 4683,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"signatures": [
																{
																	"id": 4684,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExternal": true
																	},
																	"parameters": [
																		{
																			"id": 4685,
																			"name": "value",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"id": 4610,
																				"qualifiedName": "React.ReactNode",
																				"package": "@types/react",
																				"name": "ReactNode"
																			}
																		},
																		{
																			"id": 4686,
																			"name": "index",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 4687,
																			"name": "array",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"id": 4610,
																					"qualifiedName": "React.ReactNode",
																					"package": "@types/react",
																					"name": "ReactNode"
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "predicate",
																		"name": "value",
																		"asserts": false,
																		"targetType": {
																			"type": "reference",
																			"id": 4681,
																			"qualifiedName": "S",
																			"package": "typescript",
																			"name": "S"
																		}
																	}
																}
															]
														}
													}
												},
												{
													"id": 4688,
													"name": "thisArg",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "An object to which the this keyword can refer in the predicate function.\nIf thisArg is omitted, undefined is used as the this value.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "predicate",
												"name": "this",
												"asserts": false,
												"targetType": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"id": 4681,
														"qualifiedName": "S",
														"package": "typescript",
														"name": "S"
													}
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.every"
											}
										},
										{
											"id": 4689,
											"name": "every",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Determines whether all the members of an array satisfy the specified test."
											},
											"parameters": [
												{
													"id": 4690,
													"name": "predicate",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"shortText": "A function that accepts up to three arguments. The every method calls\nthe predicate function for each element in the array until the predicate returns a value\nwhich is coercible to the Boolean value false, or until the end of the array."
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 4691,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"signatures": [
																{
																	"id": 4692,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExternal": true
																	},
																	"parameters": [
																		{
																			"id": 4693,
																			"name": "value",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"id": 4610,
																				"qualifiedName": "React.ReactNode",
																				"package": "@types/react",
																				"name": "ReactNode"
																			}
																		},
																		{
																			"id": 4694,
																			"name": "index",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 4695,
																			"name": "array",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"id": 4610,
																					"qualifiedName": "React.ReactNode",
																					"package": "@types/react",
																					"name": "ReactNode"
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																}
															]
														}
													}
												},
												{
													"id": 4696,
													"name": "thisArg",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "An object to which the this keyword can refer in the predicate function.\nIf thisArg is omitted, undefined is used as the this value.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.every"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.every"
									}
								},
								{
									"id": 4826,
									"name": "fill",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4827,
											"name": "fill",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Changes all array elements from `start` to `end` index to a static `value` and returns the modified array"
											},
											"parameters": [
												{
													"id": 4828,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"shortText": "value to fill array section with"
													},
													"type": {
														"type": "reference",
														"id": 4610,
														"qualifiedName": "React.ReactNode",
														"package": "@types/react",
														"name": "ReactNode"
													}
												},
												{
													"id": 4829,
													"name": "start",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "index to start filling the array at. If start is negative, it is treated as\nlength+start where length is the length of the array."
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 4830,
													"name": "end",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "index to stop filling the array at. If end is negative, it is treated as\nlength+end.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4626,
												"qualifiedName": "React.ReactNodeArray",
												"package": "@types/react",
												"name": "ReactNodeArray"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.fill"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.fill"
									}
								},
								{
									"id": 4725,
									"name": "filter",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4726,
											"name": "filter",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Returns the elements of an array that meet the condition specified in a callback function."
											},
											"typeParameter": [
												{
													"id": 4727,
													"name": "S",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 4610,
														"qualifiedName": "React.ReactNode",
														"package": "@types/react",
														"name": "ReactNode"
													}
												}
											],
											"parameters": [
												{
													"id": 4728,
													"name": "predicate",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"shortText": "A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array."
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 4729,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"signatures": [
																{
																	"id": 4730,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExternal": true
																	},
																	"parameters": [
																		{
																			"id": 4731,
																			"name": "value",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"id": 4610,
																				"qualifiedName": "React.ReactNode",
																				"package": "@types/react",
																				"name": "ReactNode"
																			}
																		},
																		{
																			"id": 4732,
																			"name": "index",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 4733,
																			"name": "array",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"id": 4610,
																					"qualifiedName": "React.ReactNode",
																					"package": "@types/react",
																					"name": "ReactNode"
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "predicate",
																		"name": "value",
																		"asserts": false,
																		"targetType": {
																			"type": "reference",
																			"id": 4727,
																			"qualifiedName": "S",
																			"package": "typescript",
																			"name": "S"
																		}
																	}
																}
															]
														}
													}
												},
												{
													"id": 4734,
													"name": "thisArg",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 4727,
													"qualifiedName": "S",
													"package": "typescript",
													"name": "S"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.filter"
											}
										},
										{
											"id": 4735,
											"name": "filter",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Returns the elements of an array that meet the condition specified in a callback function."
											},
											"parameters": [
												{
													"id": 4736,
													"name": "predicate",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"shortText": "A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array."
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 4737,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"signatures": [
																{
																	"id": 4738,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExternal": true
																	},
																	"parameters": [
																		{
																			"id": 4739,
																			"name": "value",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"id": 4610,
																				"qualifiedName": "React.ReactNode",
																				"package": "@types/react",
																				"name": "ReactNode"
																			}
																		},
																		{
																			"id": 4740,
																			"name": "index",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 4741,
																			"name": "array",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"id": 4610,
																					"qualifiedName": "React.ReactNode",
																					"package": "@types/react",
																					"name": "ReactNode"
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																}
															]
														}
													}
												},
												{
													"id": 4742,
													"name": "thisArg",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 4610,
													"qualifiedName": "React.ReactNode",
													"package": "@types/react",
													"name": "ReactNode"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.filter"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.filter"
									}
								},
								{
									"id": 4799,
									"name": "find",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4800,
											"name": "find",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Returns the value of the first element in the array where predicate is true, and undefined\notherwise."
											},
											"typeParameter": [
												{
													"id": 4801,
													"name": "S",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 4610,
														"qualifiedName": "React.ReactNode",
														"package": "@types/react",
														"name": "ReactNode"
													}
												}
											],
											"parameters": [
												{
													"id": 4802,
													"name": "predicate",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"shortText": "find calls predicate once for each element of the array, in ascending\norder, until it finds one where predicate returns true. If such an element is found, find\nimmediately returns that element value. Otherwise, find returns undefined."
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 4803,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"signatures": [
																{
																	"id": 4804,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExternal": true
																	},
																	"parameters": [
																		{
																			"id": 4805,
																			"name": "value",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"id": 4610,
																				"qualifiedName": "React.ReactNode",
																				"package": "@types/react",
																				"name": "ReactNode"
																			}
																		},
																		{
																			"id": 4806,
																			"name": "index",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 4807,
																			"name": "obj",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"id": 4610,
																					"qualifiedName": "React.ReactNode",
																					"package": "@types/react",
																					"name": "ReactNode"
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "predicate",
																		"name": "value",
																		"asserts": false,
																		"targetType": {
																			"type": "reference",
																			"id": 4801,
																			"qualifiedName": "S",
																			"package": "typescript",
																			"name": "S"
																		}
																	}
																}
															]
														}
													}
												},
												{
													"id": 4808,
													"name": "thisArg",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "If provided, it will be used as the this value for each invocation of\npredicate. If it is not provided, undefined is used instead.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reference",
														"id": 4801,
														"qualifiedName": "S",
														"package": "typescript",
														"name": "S"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.find"
											}
										},
										{
											"id": 4809,
											"name": "find",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 4810,
													"name": "predicate",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 4811,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"signatures": [
																{
																	"id": 4812,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExternal": true
																	},
																	"parameters": [
																		{
																			"id": 4813,
																			"name": "value",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"id": 4610,
																				"qualifiedName": "React.ReactNode",
																				"package": "@types/react",
																				"name": "ReactNode"
																			}
																		},
																		{
																			"id": 4814,
																			"name": "index",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 4815,
																			"name": "obj",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"id": 4610,
																					"qualifiedName": "React.ReactNode",
																					"package": "@types/react",
																					"name": "ReactNode"
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																}
															]
														}
													}
												},
												{
													"id": 4816,
													"name": "thisArg",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4610,
												"qualifiedName": "React.ReactNode",
												"package": "@types/react",
												"name": "ReactNode"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.find"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.find"
									}
								},
								{
									"id": 4817,
									"name": "findIndex",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4818,
											"name": "findIndex",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Returns the index of the first element in the array where predicate is true, and -1\notherwise."
											},
											"parameters": [
												{
													"id": 4819,
													"name": "predicate",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"shortText": "find calls predicate once for each element of the array, in ascending\norder, until it finds one where predicate returns true. If such an element is found,\nfindIndex immediately returns that element index. Otherwise, findIndex returns -1."
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 4820,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"signatures": [
																{
																	"id": 4821,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExternal": true
																	},
																	"parameters": [
																		{
																			"id": 4822,
																			"name": "value",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"id": 4610,
																				"qualifiedName": "React.ReactNode",
																				"package": "@types/react",
																				"name": "ReactNode"
																			}
																		},
																		{
																			"id": 4823,
																			"name": "index",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 4824,
																			"name": "obj",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"id": 4610,
																					"qualifiedName": "React.ReactNode",
																					"package": "@types/react",
																					"name": "ReactNode"
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																}
															]
														}
													}
												},
												{
													"id": 4825,
													"name": "thisArg",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "If provided, it will be used as the this value for each invocation of\npredicate. If it is not provided, undefined is used instead.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.findIndex"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.findIndex"
									}
								},
								{
									"id": 4706,
									"name": "forEach",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4707,
											"name": "forEach",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Performs the specified action for each element in an array."
											},
											"parameters": [
												{
													"id": 4708,
													"name": "callbackfn",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"shortText": "A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array."
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 4709,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"signatures": [
																{
																	"id": 4710,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExternal": true
																	},
																	"parameters": [
																		{
																			"id": 4711,
																			"name": "value",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"id": 4610,
																				"qualifiedName": "React.ReactNode",
																				"package": "@types/react",
																				"name": "ReactNode"
																			}
																		},
																		{
																			"id": 4712,
																			"name": "index",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 4713,
																			"name": "array",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"id": 4610,
																					"qualifiedName": "React.ReactNode",
																					"package": "@types/react",
																					"name": "ReactNode"
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												},
												{
													"id": 4714,
													"name": "thisArg",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.forEach"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.forEach"
									}
								},
								{
									"id": 4842,
									"name": "includes",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4843,
											"name": "includes",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Determines whether an array includes a certain element, returning true or false as appropriate."
											},
											"parameters": [
												{
													"id": 4844,
													"name": "searchElement",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"shortText": "The element to search for."
													},
													"type": {
														"type": "reference",
														"id": 4610,
														"qualifiedName": "React.ReactNode",
														"package": "@types/react",
														"name": "ReactNode"
													}
												},
												{
													"id": 4845,
													"name": "fromIndex",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "The position in this array at which to begin searching for searchElement.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.includes"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.includes"
									}
								},
								{
									"id": 4671,
									"name": "indexOf",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4672,
											"name": "indexOf",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Returns the index of the first occurrence of a value in an array, or -1 if it is not present."
											},
											"parameters": [
												{
													"id": 4673,
													"name": "searchElement",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"shortText": "The value to locate in the array."
													},
													"type": {
														"type": "reference",
														"id": 4610,
														"qualifiedName": "React.ReactNode",
														"package": "@types/react",
														"name": "ReactNode"
													}
												},
												{
													"id": 4674,
													"name": "fromIndex",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.indexOf"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.indexOf"
									}
								},
								{
									"id": 4642,
									"name": "join",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4643,
											"name": "join",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Adds all the elements of an array into a string, separated by the specified separator string."
											},
											"parameters": [
												{
													"id": 4644,
													"name": "separator",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "A string used to separate one element of the array from the next in the resulting string. If omitted, the array elements are separated with a comma.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.join"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.join"
									}
								},
								{
									"id": 4838,
									"name": "keys",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4839,
											"name": "keys",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Returns an iterable of keys in the array"
											},
											"type": {
												"type": "reference",
												"id": 4867,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"qualifiedName": "IterableIterator",
												"package": "typescript",
												"name": "IterableIterator"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.keys"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.keys"
									}
								},
								{
									"id": 4675,
									"name": "lastIndexOf",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4676,
											"name": "lastIndexOf",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Returns the index of the last occurrence of a specified value in an array, or -1 if it is not present."
											},
											"parameters": [
												{
													"id": 4677,
													"name": "searchElement",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"shortText": "The value to locate in the array."
													},
													"type": {
														"type": "reference",
														"id": 4610,
														"qualifiedName": "React.ReactNode",
														"package": "@types/react",
														"name": "ReactNode"
													}
												},
												{
													"id": 4678,
													"name": "fromIndex",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "The array index at which to begin searching backward. If fromIndex is omitted, the search starts at the last index in the array.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.lastIndexOf"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.lastIndexOf"
									}
								},
								{
									"id": 4715,
									"name": "map",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4716,
											"name": "map",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Calls a defined callback function on each element of an array, and returns an array that contains the results."
											},
											"typeParameter": [
												{
													"id": 4717,
													"name": "U",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {
														"isExternal": true
													}
												}
											],
											"parameters": [
												{
													"id": 4718,
													"name": "callbackfn",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"shortText": "A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array."
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 4719,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"signatures": [
																{
																	"id": 4720,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExternal": true
																	},
																	"parameters": [
																		{
																			"id": 4721,
																			"name": "value",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"id": 4610,
																				"qualifiedName": "React.ReactNode",
																				"package": "@types/react",
																				"name": "ReactNode"
																			}
																		},
																		{
																			"id": 4722,
																			"name": "index",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 4723,
																			"name": "array",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"id": 4610,
																					"qualifiedName": "React.ReactNode",
																					"package": "@types/react",
																					"name": "ReactNode"
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 4717,
																		"qualifiedName": "U",
																		"package": "typescript",
																		"name": "U"
																	}
																}
															]
														}
													}
												},
												{
													"id": 4724,
													"name": "thisArg",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 4717,
													"qualifiedName": "U",
													"package": "typescript",
													"name": "U"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.map"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.map"
									}
								},
								{
									"id": 4632,
									"name": "pop",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4633,
											"name": "pop",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Removes the last element from an array and returns it.\nIf the array is empty, undefined is returned and the array is not modified."
											},
											"type": {
												"type": "reference",
												"id": 4610,
												"qualifiedName": "React.ReactNode",
												"package": "@types/react",
												"name": "ReactNode"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.pop"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.pop"
									}
								},
								{
									"id": 4634,
									"name": "push",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4635,
											"name": "push",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Appends new elements to the end of an array, and returns the new length of the array."
											},
											"parameters": [
												{
													"id": 4636,
													"name": "items",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isRest": true
													},
													"comment": {
														"shortText": "New elements to add to the array.\n"
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 4610,
															"qualifiedName": "React.ReactNode",
															"package": "@types/react",
															"name": "ReactNode"
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.push"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.push"
									}
								},
								{
									"id": 4743,
									"name": "reduce",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4744,
											"name": "reduce",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."
											},
											"parameters": [
												{
													"id": 4745,
													"name": "callbackfn",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"shortText": "A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array."
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 4746,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"signatures": [
																{
																	"id": 4747,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExternal": true
																	},
																	"parameters": [
																		{
																			"id": 4748,
																			"name": "previousValue",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"id": 4610,
																				"qualifiedName": "React.ReactNode",
																				"package": "@types/react",
																				"name": "ReactNode"
																			}
																		},
																		{
																			"id": 4749,
																			"name": "currentValue",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"id": 4610,
																				"qualifiedName": "React.ReactNode",
																				"package": "@types/react",
																				"name": "ReactNode"
																			}
																		},
																		{
																			"id": 4750,
																			"name": "currentIndex",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 4751,
																			"name": "array",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"id": 4610,
																					"qualifiedName": "React.ReactNode",
																					"package": "@types/react",
																					"name": "ReactNode"
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 4610,
																		"qualifiedName": "React.ReactNode",
																		"package": "@types/react",
																		"name": "ReactNode"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4610,
												"qualifiedName": "React.ReactNode",
												"package": "@types/react",
												"name": "ReactNode"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.reduce"
											}
										},
										{
											"id": 4752,
											"name": "reduce",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 4753,
													"name": "callbackfn",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 4754,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"signatures": [
																{
																	"id": 4755,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExternal": true
																	},
																	"parameters": [
																		{
																			"id": 4756,
																			"name": "previousValue",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"id": 4610,
																				"qualifiedName": "React.ReactNode",
																				"package": "@types/react",
																				"name": "ReactNode"
																			}
																		},
																		{
																			"id": 4757,
																			"name": "currentValue",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"id": 4610,
																				"qualifiedName": "React.ReactNode",
																				"package": "@types/react",
																				"name": "ReactNode"
																			}
																		},
																		{
																			"id": 4758,
																			"name": "currentIndex",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 4759,
																			"name": "array",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"id": 4610,
																					"qualifiedName": "React.ReactNode",
																					"package": "@types/react",
																					"name": "ReactNode"
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 4610,
																		"qualifiedName": "React.ReactNode",
																		"package": "@types/react",
																		"name": "ReactNode"
																	}
																}
															]
														}
													}
												},
												{
													"id": 4760,
													"name": "initialValue",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 4610,
														"qualifiedName": "React.ReactNode",
														"package": "@types/react",
														"name": "ReactNode"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4610,
												"qualifiedName": "React.ReactNode",
												"package": "@types/react",
												"name": "ReactNode"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.reduce"
											}
										},
										{
											"id": 4761,
											"name": "reduce",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."
											},
											"typeParameter": [
												{
													"id": 4762,
													"name": "U",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {
														"isExternal": true
													}
												}
											],
											"parameters": [
												{
													"id": 4763,
													"name": "callbackfn",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"shortText": "A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array."
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 4764,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"signatures": [
																{
																	"id": 4765,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExternal": true
																	},
																	"parameters": [
																		{
																			"id": 4766,
																			"name": "previousValue",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"id": 4762,
																				"qualifiedName": "U",
																				"package": "typescript",
																				"name": "U"
																			}
																		},
																		{
																			"id": 4767,
																			"name": "currentValue",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"id": 4610,
																				"qualifiedName": "React.ReactNode",
																				"package": "@types/react",
																				"name": "ReactNode"
																			}
																		},
																		{
																			"id": 4768,
																			"name": "currentIndex",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 4769,
																			"name": "array",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"id": 4610,
																					"qualifiedName": "React.ReactNode",
																					"package": "@types/react",
																					"name": "ReactNode"
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 4762,
																		"qualifiedName": "U",
																		"package": "typescript",
																		"name": "U"
																	}
																}
															]
														}
													}
												},
												{
													"id": 4770,
													"name": "initialValue",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"shortText": "If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n"
													},
													"type": {
														"type": "reference",
														"id": 4762,
														"qualifiedName": "U",
														"package": "typescript",
														"name": "U"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4762,
												"qualifiedName": "U",
												"package": "typescript",
												"name": "U"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.reduce"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.reduce"
									}
								},
								{
									"id": 4771,
									"name": "reduceRight",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4772,
											"name": "reduceRight",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."
											},
											"parameters": [
												{
													"id": 4773,
													"name": "callbackfn",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"shortText": "A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array."
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 4774,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"signatures": [
																{
																	"id": 4775,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExternal": true
																	},
																	"parameters": [
																		{
																			"id": 4776,
																			"name": "previousValue",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"id": 4610,
																				"qualifiedName": "React.ReactNode",
																				"package": "@types/react",
																				"name": "ReactNode"
																			}
																		},
																		{
																			"id": 4777,
																			"name": "currentValue",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"id": 4610,
																				"qualifiedName": "React.ReactNode",
																				"package": "@types/react",
																				"name": "ReactNode"
																			}
																		},
																		{
																			"id": 4778,
																			"name": "currentIndex",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 4779,
																			"name": "array",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"id": 4610,
																					"qualifiedName": "React.ReactNode",
																					"package": "@types/react",
																					"name": "ReactNode"
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 4610,
																		"qualifiedName": "React.ReactNode",
																		"package": "@types/react",
																		"name": "ReactNode"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4610,
												"qualifiedName": "React.ReactNode",
												"package": "@types/react",
												"name": "ReactNode"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.reduceRight"
											}
										},
										{
											"id": 4780,
											"name": "reduceRight",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 4781,
													"name": "callbackfn",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 4782,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"signatures": [
																{
																	"id": 4783,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExternal": true
																	},
																	"parameters": [
																		{
																			"id": 4784,
																			"name": "previousValue",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"id": 4610,
																				"qualifiedName": "React.ReactNode",
																				"package": "@types/react",
																				"name": "ReactNode"
																			}
																		},
																		{
																			"id": 4785,
																			"name": "currentValue",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"id": 4610,
																				"qualifiedName": "React.ReactNode",
																				"package": "@types/react",
																				"name": "ReactNode"
																			}
																		},
																		{
																			"id": 4786,
																			"name": "currentIndex",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 4787,
																			"name": "array",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"id": 4610,
																					"qualifiedName": "React.ReactNode",
																					"package": "@types/react",
																					"name": "ReactNode"
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 4610,
																		"qualifiedName": "React.ReactNode",
																		"package": "@types/react",
																		"name": "ReactNode"
																	}
																}
															]
														}
													}
												},
												{
													"id": 4788,
													"name": "initialValue",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 4610,
														"qualifiedName": "React.ReactNode",
														"package": "@types/react",
														"name": "ReactNode"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4610,
												"qualifiedName": "React.ReactNode",
												"package": "@types/react",
												"name": "ReactNode"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.reduceRight"
											}
										},
										{
											"id": 4789,
											"name": "reduceRight",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."
											},
											"typeParameter": [
												{
													"id": 4790,
													"name": "U",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {
														"isExternal": true
													}
												}
											],
											"parameters": [
												{
													"id": 4791,
													"name": "callbackfn",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"shortText": "A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array."
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 4792,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"signatures": [
																{
																	"id": 4793,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExternal": true
																	},
																	"parameters": [
																		{
																			"id": 4794,
																			"name": "previousValue",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"id": 4790,
																				"qualifiedName": "U",
																				"package": "typescript",
																				"name": "U"
																			}
																		},
																		{
																			"id": 4795,
																			"name": "currentValue",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"id": 4610,
																				"qualifiedName": "React.ReactNode",
																				"package": "@types/react",
																				"name": "ReactNode"
																			}
																		},
																		{
																			"id": 4796,
																			"name": "currentIndex",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 4797,
																			"name": "array",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"id": 4610,
																					"qualifiedName": "React.ReactNode",
																					"package": "@types/react",
																					"name": "ReactNode"
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 4790,
																		"qualifiedName": "U",
																		"package": "typescript",
																		"name": "U"
																	}
																}
															]
														}
													}
												},
												{
													"id": 4798,
													"name": "initialValue",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"shortText": "If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n"
													},
													"type": {
														"type": "reference",
														"id": 4790,
														"qualifiedName": "U",
														"package": "typescript",
														"name": "U"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4790,
												"qualifiedName": "U",
												"package": "typescript",
												"name": "U"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.reduceRight"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.reduceRight"
									}
								},
								{
									"id": 4645,
									"name": "reverse",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4646,
											"name": "reverse",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Reverses the elements in an array in place.\nThis method mutates the array and returns a reference to the same array."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 4610,
													"qualifiedName": "React.ReactNode",
													"package": "@types/react",
													"name": "ReactNode"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.reverse"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.reverse"
									}
								},
								{
									"id": 4647,
									"name": "shift",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4648,
											"name": "shift",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Removes the first element from an array and returns it.\nIf the array is empty, undefined is returned and the array is not modified."
											},
											"type": {
												"type": "reference",
												"id": 4610,
												"qualifiedName": "React.ReactNode",
												"package": "@types/react",
												"name": "ReactNode"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.shift"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.shift"
									}
								},
								{
									"id": 4649,
									"name": "slice",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4650,
											"name": "slice",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Returns a copy of a section of an array.\nFor both start and end, a negative index can be used to indicate an offset from the end of the array.\nFor example, -2 refers to the second to last element of the array."
											},
											"parameters": [
												{
													"id": 4651,
													"name": "start",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "The beginning index of the specified portion of the array.\nIf start is undefined, then the slice begins at index 0."
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 4652,
													"name": "end",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "The end index of the specified portion of the array. This is exclusive of the element at the index 'end'.\nIf end is undefined, then the slice extends to the end of the array.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 4610,
													"qualifiedName": "React.ReactNode",
													"package": "@types/react",
													"name": "ReactNode"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.slice"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.slice"
									}
								},
								{
									"id": 4697,
									"name": "some",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4698,
											"name": "some",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Determines whether the specified callback function returns true for any element of an array."
											},
											"parameters": [
												{
													"id": 4699,
													"name": "predicate",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"shortText": "A function that accepts up to three arguments. The some method calls\nthe predicate function for each element in the array until the predicate returns a value\nwhich is coercible to the Boolean value true, or until the end of the array."
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 4700,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"signatures": [
																{
																	"id": 4701,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExternal": true
																	},
																	"parameters": [
																		{
																			"id": 4702,
																			"name": "value",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"id": 4610,
																				"qualifiedName": "React.ReactNode",
																				"package": "@types/react",
																				"name": "ReactNode"
																			}
																		},
																		{
																			"id": 4703,
																			"name": "index",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 4704,
																			"name": "array",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"id": 4610,
																					"qualifiedName": "React.ReactNode",
																					"package": "@types/react",
																					"name": "ReactNode"
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																}
															]
														}
													}
												},
												{
													"id": 4705,
													"name": "thisArg",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "An object to which the this keyword can refer in the predicate function.\nIf thisArg is omitted, undefined is used as the this value.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.some"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.some"
									}
								},
								{
									"id": 4653,
									"name": "sort",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4654,
											"name": "sort",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Sorts an array in place.\nThis method mutates the array and returns a reference to the same array."
											},
											"parameters": [
												{
													"id": 4655,
													"name": "compareFn",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Function used to determine the order of the elements. It is expected to return\na negative value if the first argument is less than the second argument, zero if they're equal, and a positive\nvalue otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\n```ts\n[11,2,22,1].sort((a, b) => a - b)\n```\n"
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 4656,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"signatures": [
																{
																	"id": 4657,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExternal": true
																	},
																	"parameters": [
																		{
																			"id": 4658,
																			"name": "a",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"id": 4610,
																				"qualifiedName": "React.ReactNode",
																				"package": "@types/react",
																				"name": "ReactNode"
																			}
																		},
																		{
																			"id": 4659,
																			"name": "b",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"id": 4610,
																				"qualifiedName": "React.ReactNode",
																				"package": "@types/react",
																				"name": "ReactNode"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 4626,
												"qualifiedName": "React.ReactNodeArray",
												"package": "@types/react",
												"name": "ReactNodeArray"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.sort"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.sort"
									}
								},
								{
									"id": 4660,
									"name": "splice",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4661,
											"name": "splice",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.",
												"returns": "An array containing the elements that were deleted.\n"
											},
											"parameters": [
												{
													"id": 4662,
													"name": "start",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"shortText": "The zero-based location in the array from which to start removing elements."
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 4663,
													"name": "deleteCount",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "The number of elements to remove."
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 4610,
													"qualifiedName": "React.ReactNode",
													"package": "@types/react",
													"name": "ReactNode"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.splice"
											}
										},
										{
											"id": 4664,
											"name": "splice",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.",
												"returns": "An array containing the elements that were deleted.\n"
											},
											"parameters": [
												{
													"id": 4665,
													"name": "start",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"shortText": "The zero-based location in the array from which to start removing elements."
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 4666,
													"name": "deleteCount",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"shortText": "The number of elements to remove."
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 4667,
													"name": "items",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isRest": true
													},
													"comment": {
														"shortText": "Elements to insert into the array in place of the deleted elements."
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 4610,
															"qualifiedName": "React.ReactNode",
															"package": "@types/react",
															"name": "ReactNode"
														}
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 4610,
													"qualifiedName": "React.ReactNode",
													"package": "@types/react",
													"name": "ReactNode"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.splice"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.splice"
									}
								},
								{
									"id": 4630,
									"name": "toLocaleString",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4631,
											"name": "toLocaleString",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Returns a string representation of an array. The elements are converted to string using their toLocaleString methods."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.toLocaleString"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.toLocaleString"
									}
								},
								{
									"id": 4628,
									"name": "toString",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4629,
											"name": "toString",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Returns a string representation of an array."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.toString"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.toString"
									}
								},
								{
									"id": 4668,
									"name": "unshift",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4669,
											"name": "unshift",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Inserts new elements at the start of an array, and returns the new length of the array."
											},
											"parameters": [
												{
													"id": 4670,
													"name": "items",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isRest": true
													},
													"comment": {
														"shortText": "Elements to insert at the start of the array.\n"
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 4610,
															"qualifiedName": "React.ReactNode",
															"package": "@types/react",
															"name": "ReactNode"
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.unshift"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.unshift"
									}
								},
								{
									"id": 4840,
									"name": "values",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 4841,
											"name": "values",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Returns an iterable of values in the array"
											},
											"type": {
												"type": "reference",
												"id": 4867,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4610,
														"qualifiedName": "React.ReactNode",
														"package": "@types/react",
														"name": "ReactNode"
													}
												],
												"qualifiedName": "IterableIterator",
												"package": "typescript",
												"name": "IterableIterator"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Array.values"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Array.values"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4627
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										4846,
										4848,
										4637,
										4831,
										4836,
										4679,
										4826,
										4725,
										4799,
										4817,
										4706,
										4842,
										4671,
										4642,
										4838,
										4675,
										4715,
										4632,
										4634,
										4743,
										4771,
										4645,
										4647,
										4649,
										4697,
										4653,
										4660,
										4630,
										4628,
										4668,
										4840
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 239,
									"character": 14
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "reference",
											"id": 4610,
											"qualifiedName": "React.ReactNode",
											"package": "@types/react",
											"name": "ReactNode"
										}
									],
									"qualifiedName": "Array",
									"package": "typescript",
									"name": "Array"
								}
							]
						},
						{
							"id": 4614,
							"name": "ReactPortal",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 4616,
									"name": "children",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 195,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"id": 4610,
										"qualifiedName": "React.ReactNode",
										"package": "@types/react",
										"name": "ReactNode"
									}
								},
								{
									"id": 4615,
									"name": "key",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 194,
											"character": 8
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 4858,
												"qualifiedName": "React.Key",
												"package": "@types/react",
												"name": "Key"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 4622,
										"name": "ReactElement.key"
									}
								},
								{
									"id": 4618,
									"name": "props",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 150,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4621,
										"name": "ReactElement.props"
									}
								},
								{
									"id": 4617,
									"name": "type",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 149,
											"character": 8
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 4859,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "React.JSXElementConstructor",
												"package": "@types/react",
												"name": "JSXElementConstructor"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 4620,
										"name": "ReactElement.type"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										4616,
										4615,
										4618,
										4617
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 193,
									"character": 14
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"id": 4619,
									"qualifiedName": "React.ReactElement",
									"package": "@types/react",
									"name": "ReactElement"
								}
							]
						},
						{
							"id": 5136,
							"name": "Validator",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 5137,
									"name": "[nominalTypeHack]",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/prop-types/index.d.ts",
											"line": 42,
											"character": 4
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 5138,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"children": [
												{
													"id": 5139,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/prop-types/index.d.ts",
															"line": 43,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"id": 5140,
														"qualifiedName": "Validator.T",
														"package": "@types/prop-types",
														"name": "T"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														5139
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5137
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/prop-types/index.d.ts",
									"line": 40,
									"character": 17
								}
							],
							"typeParameter": [
								{
									"id": 5140,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"signatures": [
								{
									"id": 5141,
									"name": "Validator",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 5142,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 5143,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"indexSignature": {
														"id": 5144,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {
															"isExternal": true
														},
														"parameters": [
															{
																"id": 5145,
																"name": "key",
																"kind": 32768,
																"flags": {
																	"isExternal": true
																},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											}
										},
										{
											"id": 5146,
											"name": "propName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5147,
											"name": "componentName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5148,
											"name": "location",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5149,
											"name": "propFullName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 4554,
												"qualifiedName": "Error",
												"package": "typescript",
												"name": "Error"
											}
										]
									}
								}
							]
						},
						{
							"id": 5108,
							"name": "Consumer",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 379,
									"character": 9
								}
							],
							"typeParameter": [
								{
									"id": 5109,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 5120,
								"typeArguments": [
									{
										"type": "reference",
										"id": 5126,
										"typeArguments": [
											{
												"type": "reference",
												"id": 5109,
												"qualifiedName": "T",
												"package": "@types/react",
												"name": "T"
											}
										],
										"qualifiedName": "React.ConsumerProps",
										"package": "@types/react",
										"name": "ConsumerProps"
									}
								],
								"qualifiedName": "React.ExoticComponent",
								"package": "@types/react",
								"name": "ExoticComponent"
							}
						},
						{
							"id": 5054,
							"name": "IteratorResult",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
									"line": 41,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 5055,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								},
								{
									"id": 5056,
									"name": "TReturn",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 5098,
										"typeArguments": [
											{
												"type": "reference",
												"id": 5055,
												"qualifiedName": "T",
												"package": "typescript",
												"name": "T"
											}
										],
										"qualifiedName": "IteratorYieldResult",
										"package": "typescript",
										"name": "IteratorYieldResult"
									},
									{
										"type": "reference",
										"id": 5102,
										"typeArguments": [
											{
												"type": "reference",
												"id": 5056,
												"qualifiedName": "TReturn",
												"package": "typescript",
												"name": "TReturn"
											}
										],
										"qualifiedName": "IteratorReturnResult",
										"package": "typescript",
										"name": "IteratorReturnResult"
									}
								]
							}
						},
						{
							"id": 4859,
							"name": "JSXElementConstructor",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 83,
									"character": 9
								}
							],
							"typeParameter": [
								{
									"id": 4866,
									"name": "P",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 4860,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/react/index.d.ts",
													"line": 84,
													"character": 11
												}
											],
											"signatures": [
												{
													"id": 4861,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 4862,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 4866,
																"qualifiedName": "P",
																"package": "@types/react",
																"name": "P"
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"id": 4619,
																"qualifiedName": "React.ReactElement",
																"package": "@types/react",
																"name": "ReactElement"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												}
											]
										}
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 4863,
											"name": "__type",
											"kind": 512,
											"kindString": "Constructor",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/react/index.d.ts",
													"line": 85,
													"character": 11
												}
											],
											"signatures": [
												{
													"id": 4864,
													"name": "__type",
													"kind": 16384,
													"kindString": "Constructor signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 4865,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 4866,
																"qualifiedName": "P",
																"package": "@types/react",
																"name": "P"
															}
														}
													],
													"type": {
														"type": "reference",
														"id": 4880,
														"typeArguments": [
															{
																"type": "reference",
																"id": 4866,
																"qualifiedName": "P",
																"package": "@types/react",
																"name": "P"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"qualifiedName": "React.Component",
														"package": "@types/react",
														"name": "Component"
													}
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 4858,
							"name": "Key",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 132,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 5106,
							"name": "Provider",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 378,
									"character": 9
								}
							],
							"typeParameter": [
								{
									"id": 5107,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 5110,
								"typeArguments": [
									{
										"type": "reference",
										"id": 5116,
										"typeArguments": [
											{
												"type": "reference",
												"id": 5107,
												"qualifiedName": "T",
												"package": "@types/react",
												"name": "T"
											}
										],
										"qualifiedName": "React.ProviderProps",
										"package": "@types/react",
										"name": "ProviderProps"
									}
								],
								"qualifiedName": "React.ProviderExoticComponent",
								"package": "@types/react",
								"name": "ProviderExoticComponent"
							}
						},
						{
							"id": 4611,
							"name": "ReactChild",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 237,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 4619,
										"qualifiedName": "React.ReactElement",
										"package": "@types/react",
										"name": "ReactElement"
									},
									{
										"type": "reference",
										"id": 4625,
										"qualifiedName": "React.ReactText",
										"package": "@types/react",
										"name": "ReactText"
									}
								]
							}
						},
						{
							"id": 4612,
							"name": "ReactFragment",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 240,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 4613,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/react/index.d.ts",
													"line": 240,
													"character": 25
												}
											]
										}
									},
									{
										"type": "reference",
										"id": 4626,
										"qualifiedName": "React.ReactNodeArray",
										"package": "@types/react",
										"name": "ReactNodeArray"
									}
								]
							}
						},
						{
							"id": 5057,
							"name": "ReactInstance",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 441,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 4880,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"qualifiedName": "React.Component",
										"package": "@types/react",
										"name": "Component"
									},
									{
										"type": "reference",
										"qualifiedName": "Element",
										"package": "typescript",
										"name": "Element"
									}
								]
							}
						},
						{
							"id": 4610,
							"name": "ReactNode",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 241,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 4611,
										"qualifiedName": "React.ReactChild",
										"package": "@types/react",
										"name": "ReactChild"
									},
									{
										"type": "reference",
										"id": 4612,
										"qualifiedName": "React.ReactFragment",
										"package": "@types/react",
										"name": "ReactFragment"
									},
									{
										"type": "reference",
										"id": 4614,
										"qualifiedName": "React.ReactPortal",
										"package": "@types/react",
										"name": "ReactPortal"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 4625,
							"name": "ReactText",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 236,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 5052,
							"name": "Readonly",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Make all properties in T readonly"
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1545,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 5053,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"type": {
								"type": "mapped",
								"parameter": "P",
								"parameterType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"id": 5053,
										"qualifiedName": "T",
										"package": "typescript",
										"name": "T"
									}
								},
								"templateType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"qualifiedName": "P",
										"package": "typescript",
										"name": "P"
									},
									"objectType": {
										"type": "reference",
										"id": 5053,
										"qualifiedName": "T",
										"package": "typescript",
										"name": "T"
									}
								},
								"readonlyModifier": "+"
							}
						},
						{
							"id": 5134,
							"name": "Validator",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 2816,
									"character": 9
								}
							],
							"typeParameter": [
								{
									"id": 5135,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 5136,
								"typeArguments": [
									{
										"type": "reference",
										"id": 5135,
										"qualifiedName": "T",
										"package": "@types/react",
										"name": "T"
									}
								],
								"qualifiedName": "Validator",
								"package": "@types/prop-types",
								"name": "PropTypes.Validator"
							}
						},
						{
							"id": 5132,
							"name": "WeakValidationMap",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 2822,
									"character": 9
								}
							],
							"typeParameter": [
								{
									"id": 5133,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"type": {
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"id": 5133,
										"qualifiedName": "T",
										"package": "@types/react",
										"name": "T"
									}
								},
								"templateType": {
									"type": "conditional",
									"checkType": {
										"type": "literal",
										"value": null
									},
									"extendsType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"qualifiedName": "K",
											"package": "@types/react",
											"name": "K"
										},
										"objectType": {
											"type": "reference",
											"id": 5133,
											"qualifiedName": "T",
											"package": "@types/react",
											"name": "T"
										}
									},
									"trueType": {
										"type": "reference",
										"id": 5134,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"qualifiedName": "K",
															"package": "@types/react",
															"name": "K"
														},
														"objectType": {
															"type": "reference",
															"id": 5133,
															"qualifiedName": "T",
															"package": "@types/react",
															"name": "T"
														}
													},
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										],
										"qualifiedName": "React.Validator",
										"package": "@types/react",
										"name": "Validator"
									},
									"falseType": {
										"type": "conditional",
										"checkType": {
											"type": "intrinsic",
											"name": "undefined"
										},
										"extendsType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"qualifiedName": "K",
												"package": "@types/react",
												"name": "K"
											},
											"objectType": {
												"type": "reference",
												"id": 5133,
												"qualifiedName": "T",
												"package": "@types/react",
												"name": "T"
											}
										},
										"trueType": {
											"type": "reference",
											"id": 5134,
											"typeArguments": [
												{
													"type": "union",
													"types": [
														{
															"type": "indexedAccess",
															"indexType": {
																"type": "reference",
																"qualifiedName": "K",
																"package": "@types/react",
																"name": "K"
															},
															"objectType": {
																"type": "reference",
																"id": 5133,
																"qualifiedName": "T",
																"package": "@types/react",
																"name": "T"
															}
														},
														{
															"type": "literal",
															"value": null
														},
														{
															"type": "intrinsic",
															"name": "undefined"
														}
													]
												}
											],
											"qualifiedName": "React.Validator",
											"package": "@types/react",
											"name": "Validator"
										},
										"falseType": {
											"type": "reference",
											"id": 5134,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"qualifiedName": "K",
														"package": "@types/react",
														"name": "K"
													},
													"objectType": {
														"type": "reference",
														"id": 5133,
														"qualifiedName": "T",
														"package": "@types/react",
														"name": "T"
													}
												}
											],
											"qualifiedName": "React.Validator",
											"package": "@types/react",
											"name": "Validator"
										}
									}
								},
								"optionalModifier": "+"
							}
						}
					],
					"groups": [
						{
							"title": "Classes",
							"kind": 128,
							"children": [
								4880
							]
						},
						{
							"title": "Interfaces",
							"kind": 256,
							"children": [
								4999,
								4974,
								5126,
								5047,
								5073,
								5058,
								5120,
								4867,
								4986,
								5102,
								5098,
								5060,
								5110,
								5116,
								4619,
								4626,
								4614,
								5136
							]
						},
						{
							"title": "Type aliases",
							"kind": 4194304,
							"children": [
								5108,
								5054,
								4859,
								4858,
								5106,
								4611,
								4612,
								5057,
								4610,
								4625,
								5052,
								5134,
								5132
							]
						}
					]
				},
				{
					"id": 2205,
					"name": "AsyncChoices",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Default implementation for [AsyncChoicesInterface](doc:AsyncChoicesInterface)",
						"text": "All options can be customised via `options`.\n\nYou must provide `list` and `retrieve` - everything else can be optional with the following restrictions:\n\n* `getLabel` - this is optional if items returned by `list` and `retrieve` implement [NodeLabeled](doc:NodeLabeled) otherwise it must be provided\n* `getValue` - this is optional if items returned by `list` and `retrieve` implement [Identifiable](doc:Identifiable) otherwise it must be provided\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Async Choices\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 2206,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
									"line": 179,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2207,
									"name": "new AsyncChoices",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2208,
											"name": "ItemType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										},
										{
											"id": 2209,
											"name": "ValueType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 2210,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2202,
												"typeArguments": [
													{
														"type": "reference",
														"id": 2208,
														"name": "ItemType"
													},
													{
														"type": "reference",
														"id": 2209,
														"name": "ValueType"
													}
												],
												"name": "AsyncChoicesOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2205,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2208,
												"name": "ItemType"
											},
											{
												"type": "reference",
												"id": 2209,
												"name": "ValueType"
											}
										],
										"name": "AsyncChoices"
									}
								}
							]
						},
						{
							"id": 2212,
							"name": "multiple",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "If true then multiple values can be selected. When this is true\nretrieve() will be passed and return an array rather than a single value."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
									"line": 177,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2170,
								"name": "AsyncChoicesInterface.multiple"
							}
						},
						{
							"id": 2211,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
									"line": 176,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2202,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2208,
										"name": "ItemType"
									},
									{
										"type": "reference",
										"id": 2209,
										"name": "ValueType"
									}
								],
								"name": "AsyncChoicesOptions"
							}
						},
						{
							"id": 2226,
							"name": "getChoices",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
									"line": 198,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2227,
									"name": "getChoices",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Generate the list of choices. This can return an array of single choices or grouped choices.",
										"text": "A grouped choice is a 2 element Array with a label and a list of choices.\n",
										"returns": "Either an array of single choices or grouped choices.\n"
									},
									"parameters": [
										{
											"id": 2228,
											"name": "items",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2208,
													"name": "ItemType"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"id": 2161,
													"typeArguments": [
														{
															"type": "reference",
															"id": 2209,
															"name": "ValueType"
														}
													],
													"name": "Choice"
												},
												{
													"type": "reference",
													"id": 2167,
													"typeArguments": [
														{
															"type": "reference",
															"id": 2209,
															"name": "ValueType"
														}
													],
													"name": "ChoicesGrouped"
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"id": 2185,
										"name": "AsyncChoicesInterface.getChoices"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 2184,
								"name": "AsyncChoicesInterface.getChoices"
							}
						},
						{
							"id": 2229,
							"name": "getLabel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
									"line": 207,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2230,
									"name": "getLabel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get a label for an item"
									},
									"parameters": [
										{
											"id": 2231,
											"name": "item",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2208,
												"name": "ItemType"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 4610,
										"qualifiedName": "React.ReactNode",
										"package": "@types/react",
										"name": "ReactNode"
									},
									"implementationOf": {
										"type": "reference",
										"id": 2188,
										"name": "AsyncChoicesInterface.getLabel"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 2187,
								"name": "AsyncChoicesInterface.getLabel"
							}
						},
						{
							"id": 2232,
							"name": "getMissingLabel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
									"line": 218,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2233,
									"name": "getMissingLabel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return label to use when an item can't be found. This can be used by widgets to control\nwhat is rendered when an item for a value cannot be found (eg. when it's deleted or\nwhen it's loading). The exact details of how this is used depend on the widget."
									},
									"parameters": [
										{
											"id": 2234,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2209,
												"name": "ValueType"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 4610,
										"qualifiedName": "React.ReactNode",
										"package": "@types/react",
										"name": "ReactNode"
									},
									"implementationOf": {
										"type": "reference",
										"id": 2191,
										"name": "AsyncChoicesInterface.getMissingLabel"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 2190,
								"name": "AsyncChoicesInterface.getMissingLabel"
							}
						},
						{
							"id": 2235,
							"name": "getValue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
									"line": 224,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2236,
									"name": "getValue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the value to use for an item. The value should be unique and is what's used when a\nchoice is selected (eg. it's the value that would be saved to a database)."
									},
									"parameters": [
										{
											"id": 2237,
											"name": "item",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2208,
												"name": "ItemType"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2209,
										"name": "ValueType"
									},
									"implementationOf": {
										"type": "reference",
										"id": 2194,
										"name": "AsyncChoicesInterface.getValue"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 2193,
								"name": "AsyncChoicesInterface.getValue"
							}
						},
						{
							"id": 2216,
							"name": "list",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
									"line": 186,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2217,
									"name": "list",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Function to resolve a list of choices based on the provided params.",
										"text": "What this function is passed depends on the implementation but when used with\n[useAsyncChoices](doc:useAsyncChoices) it will be passed `query` (the query object eg. to\nfilter results with), `paginator` (the current paginator if any) and `listOptions` (any\nadditional options passed on the `listOptions` prop to `useAsyncChoices`).\nOfficial presto widgets all use `useAsyncChoices` and so will use these parameters.\n"
									},
									"parameters": [
										{
											"id": 2218,
											"name": "params",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4551,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2208,
													"name": "ItemType"
												}
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									},
									"implementationOf": {
										"type": "reference",
										"id": 2175,
										"name": "AsyncChoicesInterface.list"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 2174,
								"name": "AsyncChoicesInterface.list"
							}
						},
						{
							"id": 2222,
							"name": "retrieve",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
									"line": 192,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2223,
									"name": "retrieve",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Function to resolve specific values. This is used to know how to render the label for a value(s).",
										"text": "The first parameter is the value to retrieve (will be an array when `multiple` is true).\n\n`deps` is the value returned by `useRetrieveProps`.\n"
									},
									"parameters": [
										{
											"id": 2224,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 2209,
														"name": "ValueType"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 2209,
															"name": "ValueType"
														}
													}
												]
											}
										},
										{
											"id": 2225,
											"name": "deps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "conditional",
												"checkType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"id": 2209,
															"name": "ValueType"
														},
														{
															"type": "array",
															"elementType": {
																"type": "reference",
																"id": 2209,
																"name": "ValueType"
															}
														}
													]
												},
												"extendsType": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"id": 2209,
														"name": "ValueType"
													}
												},
												"trueType": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"id": 2208,
														"name": "ItemType"
													}
												},
												"falseType": {
													"type": "reference",
													"id": 2208,
													"name": "ItemType"
												}
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									},
									"implementationOf": {
										"type": "reference",
										"id": 2181,
										"name": "AsyncChoicesInterface.retrieve"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 2180,
								"name": "AsyncChoicesInterface.retrieve"
							}
						},
						{
							"id": 2213,
							"name": "useListProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
									"line": 183,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2214,
									"name": "useListProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Hook that returns any extra props to pass through to `list` in components/hooks that\nconsume this (eg. [useAsyncChoices](doc:useAsyncChoices)). This is useful to\nstore state for things like pagination.",
										"text": "What this function is passed depends on the implementation but when used with\n[useAsyncChoices](doc:useAsyncChoices) it will be `query` (the query object eg. to\nfilter results with) and `listOptions` (any additional options passed on the `listOptions`\nprop to `useAsyncChoices`).\nOfficial presto widgets all use `useAsyncChoices` and so will use these parameters.\n"
									},
									"parameters": [
										{
											"id": 2215,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"implementationOf": {
										"type": "reference",
										"id": 2172,
										"name": "AsyncChoicesInterface.useListProps"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 2171,
								"name": "AsyncChoicesInterface.useListProps"
							}
						},
						{
							"id": 2238,
							"name": "useResolveItems",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
									"line": 235,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2239,
									"name": "useResolveItems",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Resolve the specific instance of an item to use. By default this should just return `item`\nbut can be used to resolve a specific instance of a class from a cache for example."
									},
									"typeParameter": [
										{
											"id": 2240,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 2241,
											"name": "items",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2240,
												"name": "T"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2240,
										"name": "T"
									},
									"implementationOf": {
										"type": "reference",
										"id": 2197,
										"name": "AsyncChoicesInterface.useResolveItems"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 2196,
								"name": "AsyncChoicesInterface.useResolveItems"
							}
						},
						{
							"id": 2219,
							"name": "useRetrieveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
									"line": 189,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2220,
									"name": "useRetrieveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Hook that returns props to pass through to `retrieve` in components/hooks that consume this (eg. [useAsyncChoices](doc:useAsyncChoices).\nThis is useful for things like hooking into an existing cache (eg. [useViewModelCache](doc:useViewModelCache)).\nThe value returned here is passed as the second parameter to `retrieve`. In addition the `existingValues` key is\npassed through to `useAsyncValue` as the list of items it can resolve existing values from.",
										"text": "What this function is passed depends on the implementation but when used with\n[useAsyncChoices](doc:useAsyncChoices) it will be passed `id` if there's a current value\nand it's not an array, `ids` if there's a current value and it is an array, `existingValues` which is\nthe values returned by `list` (may be null if `list` not yet called) and `retrieveOptions`\n(any additional options passed on the `retrieveOptions` prop to `useAsyncChoices`).\nOfficial presto widgets all use `useAsyncChoices` and so will use these parameters.\n"
									},
									"parameters": [
										{
											"id": 2221,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"implementationOf": {
										"type": "reference",
										"id": 2178,
										"name": "AsyncChoicesInterface.useRetrieveProps"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 2177,
								"name": "AsyncChoicesInterface.useRetrieveProps"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2206
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2212,
								2211
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2226,
								2229,
								2232,
								2235,
								2216,
								2222,
								2213,
								2238,
								2219
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
							"line": 175,
							"character": 6
						}
					],
					"typeParameter": [
						{
							"id": 2242,
							"name": "ItemType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 2243,
							"name": "ValueType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 2169,
							"typeArguments": [
								{
									"type": "reference",
									"id": 2208,
									"name": "ItemType"
								},
								{
									"type": "reference",
									"id": 2209,
									"name": "ValueType"
								}
							],
							"name": "AsyncChoicesInterface"
						}
					]
				},
				{
					"id": 2169,
					"name": "AsyncChoicesInterface",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Interface for asynchronous choices.",
						"text": "A choice is a `value` that identifies the item (eg. an id) and a `label` that\ndescribes the item and is shown to users (eg. the name).\n\nWhen `multiple` is true multiple values can be selected.\n\nTo define async choices two things are required:\n\n1) A function to resolve existing value(s). This is used when viewing existing\n   value(s) and need label(s) to show (eg. when displaying a choice on a detail\n   view or rendering the value selected on a select widget).\n2) A function to list & filter the available  choices. This is used when selecting\n   a value (eg. the options shown in a select widget).\n\nBoth of these functions may need to store state (eg. pagination for a listing)\nor access things from context (eg. read values from a cache). This can be done\nvia two hooks - `useListProps` and `useRetrieveProps`. This functions should be\ncalled from a component or hook that deals with async choices when calling\n`list` and `retrieve` respectively. The return value from the hook is passed to\nthe corresponding function.\n\nFor a default implementation see [AsyncChoices](doc:AsyncChoices)\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Async Choices\n"
							}
						]
					},
					"children": [
						{
							"id": 2170,
							"name": "multiple",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "If true then multiple values can be selected. When this is true\nretrieve() will be passed and return an array rather than a single value."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
									"line": 49,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2184,
							"name": "getChoices",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 2185,
									"name": "getChoices",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Generate the list of choices. This can return an array of single choices or grouped choices.",
										"text": "A grouped choice is a 2 element Array with a label and a list of choices.\n",
										"returns": "Either an array of single choices or grouped choices.\n"
									},
									"parameters": [
										{
											"id": 2186,
											"name": "items",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2200,
													"name": "ItemType"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"id": 2161,
													"typeArguments": [
														{
															"type": "reference",
															"id": 2201,
															"name": "ValueType"
														}
													],
													"name": "Choice"
												},
												{
													"type": "reference",
													"id": 2167,
													"typeArguments": [
														{
															"type": "reference",
															"id": 2201,
															"name": "ValueType"
														}
													],
													"name": "ChoicesGrouped"
												}
											]
										}
									}
								}
							]
						},
						{
							"id": 2187,
							"name": "getLabel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 2188,
									"name": "getLabel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get a label for an item"
									},
									"parameters": [
										{
											"id": 2189,
											"name": "item",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2200,
												"name": "ItemType"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 4610,
										"qualifiedName": "React.ReactNode",
										"package": "@types/react",
										"name": "ReactNode"
									}
								}
							]
						},
						{
							"id": 2190,
							"name": "getMissingLabel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 2191,
									"name": "getMissingLabel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return label to use when an item can't be found. This can be used by widgets to control\nwhat is rendered when an item for a value cannot be found (eg. when it's deleted or\nwhen it's loading). The exact details of how this is used depend on the widget."
									},
									"parameters": [
										{
											"id": 2192,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2201,
												"name": "ValueType"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 4610,
										"qualifiedName": "React.ReactNode",
										"package": "@types/react",
										"name": "ReactNode"
									}
								}
							]
						},
						{
							"id": 2193,
							"name": "getValue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 2194,
									"name": "getValue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the value to use for an item. The value should be unique and is what's used when a\nchoice is selected (eg. it's the value that would be saved to a database)."
									},
									"parameters": [
										{
											"id": 2195,
											"name": "item",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2200,
												"name": "ItemType"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2201,
										"name": "ValueType"
									}
								}
							]
						},
						{
							"id": 2174,
							"name": "list",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 2175,
									"name": "list",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Function to resolve a list of choices based on the provided params.",
										"text": "What this function is passed depends on the implementation but when used with\n[useAsyncChoices](doc:useAsyncChoices) it will be passed `query` (the query object eg. to\nfilter results with), `paginator` (the current paginator if any) and `listOptions` (any\nadditional options passed on the `listOptions` prop to `useAsyncChoices`).\nOfficial presto widgets all use `useAsyncChoices` and so will use these parameters.\n"
									},
									"parameters": [
										{
											"id": 2176,
											"name": "params",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4551,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2200,
													"name": "ItemType"
												}
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2180,
							"name": "retrieve",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 2181,
									"name": "retrieve",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Function to resolve specific values. This is used to know how to render the label for a value(s).",
										"text": "The first parameter is the value to retrieve (will be an array when `multiple` is true).\n\n`deps` is the value returned by `useRetrieveProps`.\n"
									},
									"parameters": [
										{
											"id": 2182,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 2201,
														"name": "ValueType"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 2201,
															"name": "ValueType"
														}
													}
												]
											}
										},
										{
											"id": 2183,
											"name": "deps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "conditional",
												"checkType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"id": 2201,
															"name": "ValueType"
														},
														{
															"type": "array",
															"elementType": {
																"type": "reference",
																"id": 2201,
																"name": "ValueType"
															}
														}
													]
												},
												"extendsType": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"id": 2201,
														"name": "ValueType"
													}
												},
												"trueType": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"id": 2200,
														"name": "ItemType"
													}
												},
												"falseType": {
													"type": "reference",
													"id": 2200,
													"name": "ItemType"
												}
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2171,
							"name": "useListProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 2172,
									"name": "useListProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Hook that returns any extra props to pass through to `list` in components/hooks that\nconsume this (eg. [useAsyncChoices](doc:useAsyncChoices)). This is useful to\nstore state for things like pagination.",
										"text": "What this function is passed depends on the implementation but when used with\n[useAsyncChoices](doc:useAsyncChoices) it will be `query` (the query object eg. to\nfilter results with) and `listOptions` (any additional options passed on the `listOptions`\nprop to `useAsyncChoices`).\nOfficial presto widgets all use `useAsyncChoices` and so will use these parameters.\n"
									},
									"parameters": [
										{
											"id": 2173,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 2196,
							"name": "useResolveItems",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 2197,
									"name": "useResolveItems",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Resolve the specific instance of an item to use. By default this should just return `item`\nbut can be used to resolve a specific instance of a class from a cache for example."
									},
									"typeParameter": [
										{
											"id": 2198,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 2199,
											"name": "item",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2198,
												"name": "T"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2198,
										"name": "T"
									}
								}
							]
						},
						{
							"id": 2177,
							"name": "useRetrieveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 2178,
									"name": "useRetrieveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Hook that returns props to pass through to `retrieve` in components/hooks that consume this (eg. [useAsyncChoices](doc:useAsyncChoices).\nThis is useful for things like hooking into an existing cache (eg. [useViewModelCache](doc:useViewModelCache)).\nThe value returned here is passed as the second parameter to `retrieve`. In addition the `existingValues` key is\npassed through to `useAsyncValue` as the list of items it can resolve existing values from.",
										"text": "What this function is passed depends on the implementation but when used with\n[useAsyncChoices](doc:useAsyncChoices) it will be passed `id` if there's a current value\nand it's not an array, `ids` if there's a current value and it is an array, `existingValues` which is\nthe values returned by `list` (may be null if `list` not yet called) and `retrieveOptions`\n(any additional options passed on the `retrieveOptions` prop to `useAsyncChoices`).\nOfficial presto widgets all use `useAsyncChoices` and so will use these parameters.\n"
									},
									"parameters": [
										{
											"id": 2179,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2170
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2184,
								2187,
								2190,
								2193,
								2174,
								2180,
								2171,
								2196,
								2177
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
							"line": 44,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 2200,
							"name": "ItemType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 2201,
							"name": "ValueType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"id": 2205,
							"name": "AsyncChoices"
						}
					]
				},
				{
					"id": 2161,
					"name": "Choice",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "A single choice"
					},
					"children": [
						{
							"id": 2163,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
									"line": 8,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 4610,
								"qualifiedName": "React.ReactNode",
								"package": "@types/react",
								"name": "ReactNode"
							}
						},
						{
							"id": 2162,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
									"line": 7,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2164,
								"name": "T"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2163,
								2162
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
							"line": 6,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 2164,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"indexSignature": {
						"id": 2165,
						"name": "__index",
						"kind": 8192,
						"kindString": "Index signature",
						"flags": {},
						"parameters": [
							{
								"id": 2166,
								"name": "x",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "any"
						}
					}
				},
				{
					"id": 2202,
					"name": "AsyncChoicesOptions",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "expand-properties",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
							"line": 137,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 2203,
							"name": "ItemType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 2204,
							"name": "ValueType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"id": 4504,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2169,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2203,
												"name": "ItemType"
											},
											{
												"type": "reference",
												"id": 2204,
												"name": "ValueType"
											}
										],
										"name": "AsyncChoicesInterface"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "getChoices"
											},
											{
												"type": "literal",
												"value": "useListProps"
											},
											{
												"type": "literal",
												"value": "useRetrieveProps"
											},
											{
												"type": "literal",
												"value": "getMissingLabel"
											},
											{
												"type": "literal",
												"value": "getLabel"
											},
											{
												"type": "literal",
												"value": "getValue"
											},
											{
												"type": "literal",
												"value": "useResolveItems"
											},
											{
												"type": "literal",
												"value": "multiple"
											}
										]
									}
								],
								"qualifiedName": "Omit",
								"package": "typescript",
								"name": "Omit"
							},
							{
								"type": "reference",
								"id": 4601,
								"typeArguments": [
									{
										"type": "reference",
										"id": 4518,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2169,
												"typeArguments": [
													{
														"type": "reference",
														"id": 2203,
														"name": "ItemType"
													},
													{
														"type": "reference",
														"id": 2204,
														"name": "ValueType"
													}
												],
												"name": "AsyncChoicesInterface"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "getChoices"
													},
													{
														"type": "literal",
														"value": "useListProps"
													},
													{
														"type": "literal",
														"value": "useRetrieveProps"
													},
													{
														"type": "literal",
														"value": "getMissingLabel"
													},
													{
														"type": "literal",
														"value": "getLabel"
													},
													{
														"type": "literal",
														"value": "getValue"
													},
													{
														"type": "literal",
														"value": "useResolveItems"
													},
													{
														"type": "literal",
														"value": "multiple"
													}
												]
											}
										],
										"qualifiedName": "Pick",
										"package": "typescript",
										"name": "Pick"
									}
								],
								"qualifiedName": "Partial",
								"package": "typescript",
								"name": "Partial"
							}
						]
					}
				},
				{
					"id": 2167,
					"name": "ChoicesGrouped",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Grouped choices - a label for the grouping and an array of choices for that label"
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
							"line": 14,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 2168,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 2161,
									"typeArguments": [
										{
											"type": "reference",
											"id": 2168,
											"name": "T"
										}
									],
									"name": "Choice"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"kind": 4,
					"children": [
						4609
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2205
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2169,
						2161
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						2202,
						2167
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2244,
			"name": "fields/BooleanField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2245,
					"name": "BooleanField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Field for Boolean type values. Null count as False for this field.",
						"text": "Follows standard javascript Truthy and Falsy definition.\n\nSee also: [NullableBooleanField](doc:NullableBooleanField).\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 2247,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2248,
									"name": "new BooleanField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2249,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2906,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "FieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2245,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3595,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3594,
								"name": "default.constructor"
							}
						},
						{
							"id": 2253,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3600,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2254,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3601,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2271,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2272,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2273,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "boolean"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3618,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2268,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2169,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3615,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2263,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3610,
								"name": "default.blank"
							}
						},
						{
							"id": 2264,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3611,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2267,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3614,
								"name": "default.choices"
							}
						},
						{
							"id": 2266,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3613,
								"name": "default.helpText"
							}
						},
						{
							"id": 2265,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3612,
								"name": "default.label"
							}
						},
						{
							"id": 2269,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3616,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2270,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3617,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2246,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/BooleanField.ts",
									"line": 14,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'BooleanField'",
							"overwrites": {
								"type": "reference",
								"id": 3593,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2298,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2299,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2074,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NullableBooleanField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3645,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2284,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2285,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2978,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NullableBooleanField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3631,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2294,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2295,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NullableBooleanField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3641,
								"name": "default.isBound"
							}
						},
						{
							"id": 2255,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2256,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NullableBooleanField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2257,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2258,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NullableBooleanField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3602,
								"name": "default.model"
							}
						},
						{
							"id": 2259,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2260,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NullableBooleanField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2261,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2262,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NullableBooleanField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3606,
								"name": "default.name"
							}
						},
						{
							"id": 2296,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2297,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NullableBooleanField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3643,
								"name": "default.value"
							}
						},
						{
							"id": 2292,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2293,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2974,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3640,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3639,
								"name": "default.clone"
							}
						},
						{
							"id": 2300,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2301,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2302,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3648,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3647,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2274,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2275,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2276,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3622,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3621,
								"name": "default.format"
							}
						},
						{
							"id": 2288,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2289,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2290,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 2291,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3636,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3635,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2277,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2278,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2279,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3625,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3624,
								"name": "default.normalize"
							}
						},
						{
							"id": 2250,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/BooleanField.ts",
									"line": 15,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2251,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2252,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"overwrites": {
										"type": "reference",
										"id": 3598,
										"name": "default.parse"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3597,
								"name": "default.parse"
							}
						},
						{
							"id": 2280,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2281,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2282,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2283,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3628,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3627,
								"name": "default.toJS"
							}
						},
						{
							"id": 2286,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2287,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3634,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3633,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2247
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2253,
								2254,
								2271,
								2268,
								2263,
								2264,
								2267,
								2266,
								2265,
								2269,
								2270,
								2246
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2298,
								2284,
								2294,
								2255,
								2259,
								2296
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2292,
								2300,
								2274,
								2288,
								2277,
								2250,
								2280,
								2286
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/BooleanField.ts",
							"line": 13,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3592,
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2245
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/BooleanField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2303,
			"name": "fields/CharField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 5151,
					"name": "<internal>",
					"kind": 4,
					"kindString": "Namespace",
					"flags": {},
					"children": [
						{
							"id": 5152,
							"name": "CharFieldProps",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "expand-properties",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 6,
									"character": 5
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 2906,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "FieldProps"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 5153,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 5154,
													"name": "maxLength",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
															"line": 6,
															"character": 45
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														5154
													]
												}
											],
											"sources": [
												{
													"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
													"line": 6,
													"character": 43
												}
											]
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Type aliases",
							"kind": 4194304,
							"children": [
								5152
							]
						}
					]
				},
				{
					"id": 2304,
					"name": "CharField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Base class for string fields",
						"text": "Other char fields (EmailField, URLField...) will extend this.\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 2306,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 20,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2307,
									"name": "new CharField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2308,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5152,
												"name": "CharFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2304,
										"name": "default"
									},
									"overwrites": {
										"type": "reference",
										"id": 2977,
										"name": "default.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 2976,
								"name": "default.constructor"
							}
						},
						{
							"id": 2310,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2982,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2311,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2983,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2328,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2329,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2330,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3002,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2325,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2169,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2999,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2320,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2994,
								"name": "default.blank"
							}
						},
						{
							"id": 2321,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2995,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2324,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2998,
								"name": "default.choices"
							}
						},
						{
							"id": 2323,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2997,
								"name": "default.helpText"
							}
						},
						{
							"id": 2322,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2996,
								"name": "default.label"
							}
						},
						{
							"id": 2309,
							"name": "maxLength",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 18,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2326,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3000,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2327,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3001,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2305,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 17,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'CharField'",
							"overwrites": {
								"type": "reference",
								"id": 2975,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2358,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2359,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2074,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3032,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2344,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2345,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2978,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3018,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2354,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2355,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3028,
								"name": "default.isBound"
							}
						},
						{
							"id": 2312,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2313,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2314,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2315,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2985,
								"name": "default.model"
							}
						},
						{
							"id": 2316,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2317,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2318,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2319,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2990,
								"name": "default.name"
							}
						},
						{
							"id": 2356,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2357,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3030,
								"name": "default.value"
							}
						},
						{
							"id": 2352,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2353,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2974,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3027,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3026,
								"name": "default.clone"
							}
						},
						{
							"id": 2360,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2361,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2362,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3035,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3034,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2331,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2332,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2333,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3006,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3005,
								"name": "default.format"
							}
						},
						{
							"id": 2348,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2349,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2350,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2351,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3023,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3022,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2337,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2338,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2339,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3012,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3011,
								"name": "default.normalize"
							}
						},
						{
							"id": 2334,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2335,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2336,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3009,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3008,
								"name": "default.parse"
							}
						},
						{
							"id": 2340,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2341,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2342,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2343,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3015,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3014,
								"name": "default.toJS"
							}
						},
						{
							"id": 2346,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2347,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3021,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3020,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2306
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2310,
								2311,
								2328,
								2325,
								2320,
								2321,
								2324,
								2323,
								2322,
								2309,
								2326,
								2327,
								2305
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2358,
								2344,
								2354,
								2312,
								2316,
								2356
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2352,
								2360,
								2331,
								2348,
								2337,
								2334,
								2340,
								2346
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
							"line": 16,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2974,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "string"
								}
							],
							"name": "default"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 2786,
							"name": "DurationField"
						},
						{
							"type": "reference",
							"id": 2846,
							"name": "EmailField"
						},
						{
							"type": "reference",
							"id": 3221,
							"name": "IPAddressField"
						},
						{
							"type": "reference",
							"id": 3465,
							"name": "JsonField"
						},
						{
							"type": "reference",
							"id": 3721,
							"name": "PasswordField"
						},
						{
							"type": "reference",
							"id": 4095,
							"name": "SlugField"
						},
						{
							"type": "reference",
							"id": 4155,
							"name": "TextField"
						},
						{
							"type": "reference",
							"id": 4274,
							"name": "URLField"
						},
						{
							"type": "reference",
							"id": 4334,
							"name": "UUIDField"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"kind": 4,
					"children": [
						5151
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2304
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2363,
			"name": "fields/CurrencyField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 5155,
					"name": "<internal>",
					"kind": 4,
					"kindString": "Namespace",
					"flags": {},
					"children": [
						{
							"id": 5156,
							"name": "DecimalFieldProps",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "expand-properties",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalField.ts",
									"line": 6,
									"character": 5
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 3651,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "NumberFieldProps"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 5157,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 5158,
													"name": "decimalPlaces",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalField.ts",
															"line": 7,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														5158
													]
												}
											],
											"sources": [
												{
													"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalField.ts",
													"line": 6,
													"character": 52
												}
											]
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Type aliases",
							"kind": 4194304,
							"children": [
								5156
							]
						}
					]
				},
				{
					"id": 2364,
					"name": "CurrencyField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Currency Field to store currency values.",
						"text": "Extends DecimalField for precision, TODO - should store additional info on currency types (eg, USD, JPY).\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 2366,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2367,
									"name": "new CurrencyField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2368,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5156,
												"name": "DecimalFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2364,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2667,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2666,
								"name": "default.constructor"
							}
						},
						{
							"id": 2375,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2675,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2376,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2676,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2393,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2394,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2395,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2693,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2390,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2169,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2690,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2385,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2685,
								"name": "default.blank"
							}
						},
						{
							"id": 2386,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2686,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2389,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2689,
								"name": "default.choices"
							}
						},
						{
							"id": 2369,
							"name": "decimalPlaces",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalField.ts",
									"line": 24,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2669,
								"name": "default.decimalPlaces"
							}
						},
						{
							"id": 2388,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2688,
								"name": "default.helpText"
							}
						},
						{
							"id": 2387,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2687,
								"name": "default.label"
							}
						},
						{
							"id": 2374,
							"name": "maxValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
									"line": 25,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2674,
								"name": "default.maxValue"
							}
						},
						{
							"id": 2373,
							"name": "minValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
									"line": 24,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2673,
								"name": "default.minValue"
							}
						},
						{
							"id": 2391,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2691,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2392,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2692,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2365,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CurrencyField.ts",
									"line": 12,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'CurrencyField'",
							"overwrites": {
								"type": "reference",
								"id": 2665,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2420,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2421,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2074,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DecimalField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2720,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2406,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2407,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2978,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DecimalField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2706,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2416,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2417,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DecimalField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2716,
								"name": "default.isBound"
							}
						},
						{
							"id": 2377,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2378,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DecimalField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2379,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2380,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DecimalField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2677,
								"name": "default.model"
							}
						},
						{
							"id": 2381,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2382,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DecimalField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2383,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2384,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DecimalField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2681,
								"name": "default.name"
							}
						},
						{
							"id": 2418,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2419,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DecimalField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2718,
								"name": "default.value"
							}
						},
						{
							"id": 2414,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2415,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2974,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2715,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2714,
								"name": "default.clone"
							}
						},
						{
							"id": 2422,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2423,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2424,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2723,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2722,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2396,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2397,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2398,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2697,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2696,
								"name": "default.format"
							}
						},
						{
							"id": 2410,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2411,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2412,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2413,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2711,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2710,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2399,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2400,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2401,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2700,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2699,
								"name": "default.normalize"
							}
						},
						{
							"id": 2370,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalField.ts",
									"line": 41,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2371,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2372,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2671,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2670,
								"name": "default.parse"
							}
						},
						{
							"id": 2402,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2403,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2404,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2405,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2703,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2702,
								"name": "default.toJS"
							}
						},
						{
							"id": 2408,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2409,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2709,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2708,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2366
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2375,
								2376,
								2393,
								2390,
								2385,
								2386,
								2389,
								2369,
								2388,
								2387,
								2374,
								2373,
								2391,
								2392,
								2365
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2420,
								2406,
								2416,
								2377,
								2381,
								2418
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2414,
								2422,
								2396,
								2410,
								2399,
								2370,
								2402,
								2408
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/CurrencyField.ts",
							"line": 11,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2664,
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"kind": 4,
					"children": [
						5155
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2364
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/CurrencyField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2425,
			"name": "fields/DateField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2426,
					"name": "DateField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"originalName": "default",
					"children": [
						{
							"id": 2428,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2429,
									"name": "new DateField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2430,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2906,
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "Date",
														"package": "typescript",
														"name": "Date"
													},
													{
														"type": "reference",
														"qualifiedName": "Date",
														"package": "typescript",
														"name": "Date"
													}
												],
												"name": "FieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2426,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2977,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2976,
								"name": "default.constructor"
							}
						},
						{
							"id": 2437,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Date",
								"package": "typescript",
								"name": "Date"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2982,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2438,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2983,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2455,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2456,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2457,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"qualifiedName": "Date",
																"package": "typescript",
																"name": "Date"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"qualifiedName": "Date",
																				"package": "typescript",
																				"name": "Date"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3002,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2452,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2169,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2999,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2447,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2994,
								"name": "default.blank"
							}
						},
						{
							"id": 2448,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2995,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2451,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2998,
								"name": "default.choices"
							}
						},
						{
							"id": 2450,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2997,
								"name": "default.helpText"
							}
						},
						{
							"id": 2449,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2996,
								"name": "default.label"
							}
						},
						{
							"id": 2453,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3000,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2454,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3001,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2427,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateField.ts",
									"line": 17,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DateField'",
							"overwrites": {
								"type": "reference",
								"id": 2975,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2479,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2480,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2074,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3032,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2465,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2466,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2978,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3018,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2475,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2476,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3028,
								"name": "default.isBound"
							}
						},
						{
							"id": 2439,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2440,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2441,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2442,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2985,
								"name": "default.model"
							}
						},
						{
							"id": 2443,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2444,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2445,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2446,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2990,
								"name": "default.name"
							}
						},
						{
							"id": 2477,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2478,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3030,
								"name": "default.value"
							}
						},
						{
							"id": 2473,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2474,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2974,
										"typeArguments": [
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3027,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3026,
								"name": "default.clone"
							}
						},
						{
							"id": 2481,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2482,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2483,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3035,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3034,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2458,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2459,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2460,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3006,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3005,
								"name": "default.format"
							}
						},
						{
							"id": 2469,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2470,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2471,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										},
										{
											"id": 2472,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3023,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3022,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2434,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateField.ts",
									"line": 25,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2435,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2436,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"qualifiedName": "Date",
														"package": "typescript",
														"name": "Date"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 3012,
										"name": "default.normalize"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3011,
								"name": "default.normalize"
							}
						},
						{
							"id": 2431,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateField.ts",
									"line": 18,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2432,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2433,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 3009,
										"name": "default.parse"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3008,
								"name": "default.parse"
							}
						},
						{
							"id": 2461,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2462,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2463,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2464,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3015,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3014,
								"name": "default.toJS"
							}
						},
						{
							"id": 2467,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2468,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3021,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3020,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2428
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2437,
								2438,
								2455,
								2452,
								2447,
								2448,
								2451,
								2450,
								2449,
								2453,
								2454,
								2427
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2479,
								2465,
								2475,
								2439,
								2443,
								2477
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2473,
								2481,
								2458,
								2469,
								2434,
								2431,
								2461,
								2467
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateField.ts",
							"line": 16,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2974,
							"typeArguments": [
								{
									"type": "reference",
									"qualifiedName": "Date",
									"package": "typescript",
									"name": "Date"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "reference",
											"qualifiedName": "Date",
											"package": "typescript",
											"name": "Date"
										}
									]
								}
							],
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2426
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2484,
			"name": "fields/DateRangeField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 5160,
					"name": "<internal>",
					"kind": 4,
					"kindString": "Namespace",
					"flags": {},
					"children": [
						{
							"id": 5161,
							"name": "RangeFieldProps",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
									"line": 3,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 5164,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 2906,
										"typeArguments": [
											{
												"type": "reference",
												"id": 5164,
												"name": "T"
											}
										],
										"name": "FieldProps"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 5162,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 5163,
													"name": "separator",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
															"line": 4,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														5163
													]
												}
											],
											"sources": [
												{
													"fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
													"line": 3,
													"character": 42
												}
											]
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Type aliases",
							"kind": 4194304,
							"children": [
								5161
							]
						}
					]
				},
				{
					"id": 2485,
					"name": "DateRangeField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 2487,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2488,
									"name": "new DateRangeField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2489,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5161,
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "Date",
														"package": "typescript",
														"name": "Date"
													}
												],
												"name": "RangeFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2485,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3784,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3783,
								"name": "default.constructor"
							}
						},
						{
							"id": 2491,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Date",
								"package": "typescript",
								"name": "Date"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3788,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2492,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Date",
								"package": "typescript",
								"name": "Date"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3789,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2509,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2510,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2511,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"qualifiedName": "Date",
																"package": "typescript",
																"name": "Date"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"qualifiedName": "Date",
																				"package": "typescript",
																				"name": "Date"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3806,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2506,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2169,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3803,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2501,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3798,
								"name": "default.blank"
							}
						},
						{
							"id": 2502,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3799,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2505,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3802,
								"name": "default.choices"
							}
						},
						{
							"id": 2504,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3801,
								"name": "default.helpText"
							}
						},
						{
							"id": 2503,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3800,
								"name": "default.label"
							}
						},
						{
							"id": 2507,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3804,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2490,
							"name": "separator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
									"line": 17,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3787,
								"name": "default.separator"
							}
						},
						{
							"id": 2508,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3805,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2486,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateRangeField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DateRangeField'",
							"overwrites": {
								"type": "reference",
								"id": 3782,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2539,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2540,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2074,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3836,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2525,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2526,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2978,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3822,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2535,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2536,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3832,
								"name": "default.isBound"
							}
						},
						{
							"id": 2493,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2494,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2495,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2496,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3790,
								"name": "default.model"
							}
						},
						{
							"id": 2497,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2498,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2499,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2500,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3794,
								"name": "default.name"
							}
						},
						{
							"id": 2537,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2538,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3834,
								"name": "default.value"
							}
						},
						{
							"id": 2533,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2534,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2974,
										"typeArguments": [
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3831,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3830,
								"name": "default.clone"
							}
						},
						{
							"id": 2541,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2542,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2543,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3839,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3838,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2512,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2513,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2514,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3810,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3809,
								"name": "default.format"
							}
						},
						{
							"id": 2529,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2530,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2531,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										},
										{
											"id": 2532,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3827,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3826,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2518,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2519,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2520,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3816,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3815,
								"name": "default.normalize"
							}
						},
						{
							"id": 2515,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2516,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2517,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"qualifiedName": "Date",
														"package": "typescript",
														"name": "Date"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3813,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3812,
								"name": "default.parse"
							}
						},
						{
							"id": 2521,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2522,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2523,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2524,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3819,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3818,
								"name": "default.toJS"
							}
						},
						{
							"id": 2527,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2528,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3825,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3824,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2487
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2491,
								2492,
								2509,
								2506,
								2501,
								2502,
								2505,
								2504,
								2503,
								2507,
								2490,
								2508,
								2486
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2539,
								2525,
								2535,
								2493,
								2497,
								2537
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2533,
								2541,
								2512,
								2529,
								2518,
								2515,
								2521,
								2527
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateRangeField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3781,
							"typeArguments": [
								{
									"type": "reference",
									"qualifiedName": "Date",
									"package": "typescript",
									"name": "Date"
								}
							],
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"kind": 4,
					"children": [
						5160
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2485
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateRangeField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2544,
			"name": "fields/DateTimeField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2545,
					"name": "DateTimeField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"originalName": "default",
					"children": [
						{
							"id": 2547,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2548,
									"name": "new DateTimeField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2549,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2906,
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "Date",
														"package": "typescript",
														"name": "Date"
													},
													{
														"type": "reference",
														"qualifiedName": "Date",
														"package": "typescript",
														"name": "Date"
													}
												],
												"name": "FieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2545,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2977,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2976,
								"name": "default.constructor"
							}
						},
						{
							"id": 2556,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Date",
								"package": "typescript",
								"name": "Date"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2982,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2557,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2983,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2574,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2575,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2576,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"qualifiedName": "Date",
																"package": "typescript",
																"name": "Date"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"qualifiedName": "Date",
																				"package": "typescript",
																				"name": "Date"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3002,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2571,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2169,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2999,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2566,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2994,
								"name": "default.blank"
							}
						},
						{
							"id": 2567,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2995,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2570,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2998,
								"name": "default.choices"
							}
						},
						{
							"id": 2569,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2997,
								"name": "default.helpText"
							}
						},
						{
							"id": 2568,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2996,
								"name": "default.label"
							}
						},
						{
							"id": 2572,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3000,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2573,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3001,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2546,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateTimeField.ts",
									"line": 15,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DateTimeField'",
							"overwrites": {
								"type": "reference",
								"id": 2975,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2598,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2599,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2074,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3032,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2584,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2585,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2978,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3018,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2594,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2595,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3028,
								"name": "default.isBound"
							}
						},
						{
							"id": 2558,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2559,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2560,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2561,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2985,
								"name": "default.model"
							}
						},
						{
							"id": 2562,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2563,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2564,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2565,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2990,
								"name": "default.name"
							}
						},
						{
							"id": 2596,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2597,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3030,
								"name": "default.value"
							}
						},
						{
							"id": 2592,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2593,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2974,
										"typeArguments": [
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3027,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3026,
								"name": "default.clone"
							}
						},
						{
							"id": 2600,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2601,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2602,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3035,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3034,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2577,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2578,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2579,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3006,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3005,
								"name": "default.format"
							}
						},
						{
							"id": 2588,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2589,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2590,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										},
										{
											"id": 2591,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3023,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3022,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2553,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateTimeField.ts",
									"line": 22,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2554,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2555,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"qualifiedName": "Date",
														"package": "typescript",
														"name": "Date"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 3012,
										"name": "default.normalize"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3011,
								"name": "default.normalize"
							}
						},
						{
							"id": 2550,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateTimeField.ts",
									"line": 16,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2551,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2552,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 3009,
										"name": "default.parse"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3008,
								"name": "default.parse"
							}
						},
						{
							"id": 2580,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2581,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2582,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2583,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3015,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3014,
								"name": "default.toJS"
							}
						},
						{
							"id": 2586,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2587,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3021,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3020,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2547
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2556,
								2557,
								2574,
								2571,
								2566,
								2567,
								2570,
								2569,
								2568,
								2572,
								2573,
								2546
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2598,
								2584,
								2594,
								2558,
								2562,
								2596
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2592,
								2600,
								2577,
								2588,
								2553,
								2550,
								2580,
								2586
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateTimeField.ts",
							"line": 14,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2974,
							"typeArguments": [
								{
									"type": "reference",
									"qualifiedName": "Date",
									"package": "typescript",
									"name": "Date"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "reference",
											"qualifiedName": "Date",
											"package": "typescript",
											"name": "Date"
										}
									]
								}
							],
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2545
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateTimeField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2603,
			"name": "fields/DateTimeRangeField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2604,
					"name": "DateTimeRangeField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 2606,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2607,
									"name": "new DateTimeRangeField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2608,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5161,
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "Date",
														"package": "typescript",
														"name": "Date"
													}
												],
												"name": "RangeFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2604,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3784,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3783,
								"name": "default.constructor"
							}
						},
						{
							"id": 2610,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Date",
								"package": "typescript",
								"name": "Date"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3788,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2611,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Date",
								"package": "typescript",
								"name": "Date"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3789,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2628,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2629,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2630,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"qualifiedName": "Date",
																"package": "typescript",
																"name": "Date"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"qualifiedName": "Date",
																				"package": "typescript",
																				"name": "Date"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3806,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2625,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2169,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3803,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2620,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3798,
								"name": "default.blank"
							}
						},
						{
							"id": 2621,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3799,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2624,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3802,
								"name": "default.choices"
							}
						},
						{
							"id": 2623,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3801,
								"name": "default.helpText"
							}
						},
						{
							"id": 2622,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3800,
								"name": "default.label"
							}
						},
						{
							"id": 2626,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3804,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2609,
							"name": "separator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
									"line": 17,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3787,
								"name": "default.separator"
							}
						},
						{
							"id": 2627,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3805,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2605,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateTimeRangeField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DateTimeRangeField'",
							"overwrites": {
								"type": "reference",
								"id": 3782,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2658,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2659,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2074,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3836,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2644,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2645,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2978,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3822,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2654,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2655,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3832,
								"name": "default.isBound"
							}
						},
						{
							"id": 2612,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2613,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2614,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2615,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3790,
								"name": "default.model"
							}
						},
						{
							"id": 2616,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2617,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2618,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2619,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3794,
								"name": "default.name"
							}
						},
						{
							"id": 2656,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2657,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3834,
								"name": "default.value"
							}
						},
						{
							"id": 2652,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2653,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2974,
										"typeArguments": [
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3831,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3830,
								"name": "default.clone"
							}
						},
						{
							"id": 2660,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2661,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2662,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3839,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3838,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2631,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2632,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2633,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3810,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3809,
								"name": "default.format"
							}
						},
						{
							"id": 2648,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2649,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2650,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										},
										{
											"id": 2651,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3827,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3826,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2637,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2638,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2639,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3816,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3815,
								"name": "default.normalize"
							}
						},
						{
							"id": 2634,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2635,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2636,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"qualifiedName": "Date",
														"package": "typescript",
														"name": "Date"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3813,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3812,
								"name": "default.parse"
							}
						},
						{
							"id": 2640,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2641,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2642,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2643,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3819,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3818,
								"name": "default.toJS"
							}
						},
						{
							"id": 2646,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2647,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3825,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3824,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2606
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2610,
								2611,
								2628,
								2625,
								2620,
								2621,
								2624,
								2623,
								2622,
								2626,
								2609,
								2627,
								2605
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2658,
								2644,
								2654,
								2612,
								2616,
								2656
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2652,
								2660,
								2631,
								2648,
								2637,
								2634,
								2640,
								2646
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateTimeRangeField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3781,
							"typeArguments": [
								{
									"type": "reference",
									"qualifiedName": "Date",
									"package": "typescript",
									"name": "Date"
								}
							],
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2604
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateTimeRangeField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2663,
			"name": "fields/DecimalField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2664,
					"name": "DecimalField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Decimal Field. Stores decimal value as a string.",
						"text": "To support decimal operations consider a custom implementation that uses a decimal library eg. decimal.js\n\nAlso used by CurrencyField.\n\nSee also: [FloatField](doc:FloatField)\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 2666,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalField.ts",
									"line": 26,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2667,
									"name": "new DecimalField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2668,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5156,
												"name": "DecimalFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2664,
										"name": "default"
									},
									"overwrites": {
										"type": "reference",
										"id": 3659,
										"name": "default.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3658,
								"name": "default.constructor"
							}
						},
						{
							"id": 2675,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3665,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2676,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3666,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2693,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2694,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2695,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3683,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2690,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2169,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3680,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2685,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3675,
								"name": "default.blank"
							}
						},
						{
							"id": 2686,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3676,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2689,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3679,
								"name": "default.choices"
							}
						},
						{
							"id": 2669,
							"name": "decimalPlaces",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalField.ts",
									"line": 24,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2688,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3678,
								"name": "default.helpText"
							}
						},
						{
							"id": 2687,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3677,
								"name": "default.label"
							}
						},
						{
							"id": 2674,
							"name": "maxValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
									"line": 25,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3664,
								"name": "default.maxValue"
							}
						},
						{
							"id": 2673,
							"name": "minValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
									"line": 24,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3663,
								"name": "default.minValue"
							}
						},
						{
							"id": 2691,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3681,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2692,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3682,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2665,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalField.ts",
									"line": 23,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DecimalField'",
							"overwrites": {
								"type": "reference",
								"id": 3657,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2720,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2721,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2074,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3713,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2706,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2707,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2978,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3699,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2716,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2717,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3709,
								"name": "default.isBound"
							}
						},
						{
							"id": 2677,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2678,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2679,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2680,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3667,
								"name": "default.model"
							}
						},
						{
							"id": 2681,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2682,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2683,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2684,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3671,
								"name": "default.name"
							}
						},
						{
							"id": 2718,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2719,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3711,
								"name": "default.value"
							}
						},
						{
							"id": 2714,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2715,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2974,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3708,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3707,
								"name": "default.clone"
							}
						},
						{
							"id": 2722,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2723,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2724,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3716,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3715,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2696,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2697,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2698,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3687,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3686,
								"name": "default.format"
							}
						},
						{
							"id": 2710,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2711,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2712,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2713,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3704,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3703,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2699,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2700,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2701,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3693,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3692,
								"name": "default.normalize"
							}
						},
						{
							"id": 2670,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalField.ts",
									"line": 41,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2671,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2672,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 3690,
										"name": "default.parse"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3689,
								"name": "default.parse"
							}
						},
						{
							"id": 2702,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2703,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2704,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2705,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3696,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3695,
								"name": "default.toJS"
							}
						},
						{
							"id": 2708,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2709,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3702,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3701,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2666
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2675,
								2676,
								2693,
								2690,
								2685,
								2686,
								2689,
								2669,
								2688,
								2687,
								2674,
								2673,
								2691,
								2692,
								2665
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2720,
								2706,
								2716,
								2677,
								2681,
								2718
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2714,
								2722,
								2696,
								2710,
								2699,
								2670,
								2702,
								2708
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalField.ts",
							"line": 22,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3656,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "string"
								}
							],
							"name": "default"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 2364,
							"name": "CurrencyField"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2664
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2725,
			"name": "fields/DecimalRangeField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2726,
					"name": "DecimalRangeField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 2728,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2729,
									"name": "new DecimalRangeField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2730,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5161,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "RangeFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2726,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3784,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3783,
								"name": "default.constructor"
							}
						},
						{
							"id": 2732,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3788,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2733,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3789,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2750,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2751,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2752,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3806,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2747,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2169,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3803,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2742,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3798,
								"name": "default.blank"
							}
						},
						{
							"id": 2743,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3799,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2746,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3802,
								"name": "default.choices"
							}
						},
						{
							"id": 2745,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3801,
								"name": "default.helpText"
							}
						},
						{
							"id": 2744,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3800,
								"name": "default.label"
							}
						},
						{
							"id": 2748,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3804,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2731,
							"name": "separator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
									"line": 17,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3787,
								"name": "default.separator"
							}
						},
						{
							"id": 2749,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3805,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2727,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalRangeField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DecimalRangeField'",
							"overwrites": {
								"type": "reference",
								"id": 3782,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2780,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2781,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2074,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3836,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2766,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2767,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2978,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3822,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2776,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2777,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3832,
								"name": "default.isBound"
							}
						},
						{
							"id": 2734,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2735,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2736,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2737,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3790,
								"name": "default.model"
							}
						},
						{
							"id": 2738,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2739,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2740,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2741,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3794,
								"name": "default.name"
							}
						},
						{
							"id": 2778,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2779,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3834,
								"name": "default.value"
							}
						},
						{
							"id": 2774,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2775,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2974,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3831,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3830,
								"name": "default.clone"
							}
						},
						{
							"id": 2782,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2783,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2784,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3839,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3838,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2753,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2754,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2755,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3810,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3809,
								"name": "default.format"
							}
						},
						{
							"id": 2770,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2771,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2772,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2773,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3827,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3826,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2759,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2760,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2761,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3816,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3815,
								"name": "default.normalize"
							}
						},
						{
							"id": 2756,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2757,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2758,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3813,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3812,
								"name": "default.parse"
							}
						},
						{
							"id": 2762,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2763,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2764,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2765,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3819,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3818,
								"name": "default.toJS"
							}
						},
						{
							"id": 2768,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2769,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3825,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3824,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2728
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2732,
								2733,
								2750,
								2747,
								2742,
								2743,
								2746,
								2745,
								2744,
								2748,
								2731,
								2749,
								2727
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2780,
								2766,
								2776,
								2734,
								2738,
								2778
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2774,
								2782,
								2753,
								2770,
								2759,
								2756,
								2762,
								2768
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalRangeField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3781,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "string"
								}
							],
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2726
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalRangeField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2785,
			"name": "fields/DurationField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2786,
					"name": "DurationField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Duration Field - represents a duration with two components: hour, minute such as 10h5m.",
						"text": "Duration longer than 23h59m is not currently supported.\n\nBackend of choice need to be capable of storing a duration in a similar manner.\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 2788,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2789,
									"name": "new DurationField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2790,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5152,
												"name": "CharFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2786,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2307,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2306,
								"name": "default.constructor"
							}
						},
						{
							"id": 2792,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2310,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2793,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2311,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2810,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2811,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2812,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2328,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2807,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2169,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2325,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2802,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2320,
								"name": "default.blank"
							}
						},
						{
							"id": 2803,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2321,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2806,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2324,
								"name": "default.choices"
							}
						},
						{
							"id": 2805,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2323,
								"name": "default.helpText"
							}
						},
						{
							"id": 2804,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2322,
								"name": "default.label"
							}
						},
						{
							"id": 2791,
							"name": "maxLength",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 18,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2309,
								"name": "default.maxLength"
							}
						},
						{
							"id": 2808,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2326,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2809,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2327,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2787,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DurationField.ts",
									"line": 14,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DurationField'",
							"overwrites": {
								"type": "reference",
								"id": 2305,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2840,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2841,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2074,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2358,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2826,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2827,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2978,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2344,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2836,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2837,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2354,
								"name": "default.isBound"
							}
						},
						{
							"id": 2794,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2795,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2796,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2797,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2312,
								"name": "default.model"
							}
						},
						{
							"id": 2798,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2799,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2800,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2801,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2316,
								"name": "default.name"
							}
						},
						{
							"id": 2838,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2839,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2356,
								"name": "default.value"
							}
						},
						{
							"id": 2834,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2835,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2974,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2353,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2352,
								"name": "default.clone"
							}
						},
						{
							"id": 2842,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2843,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2844,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2361,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2360,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2813,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2814,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2815,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2332,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2331,
								"name": "default.format"
							}
						},
						{
							"id": 2830,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2831,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2832,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2833,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2349,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2348,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2819,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2820,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2821,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2338,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2337,
								"name": "default.normalize"
							}
						},
						{
							"id": 2816,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2817,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2818,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2335,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2334,
								"name": "default.parse"
							}
						},
						{
							"id": 2822,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2823,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2824,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2825,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2341,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2340,
								"name": "default.toJS"
							}
						},
						{
							"id": 2828,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2829,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2347,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2346,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2788
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2792,
								2793,
								2810,
								2807,
								2802,
								2803,
								2806,
								2805,
								2804,
								2791,
								2808,
								2809,
								2787
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2840,
								2826,
								2836,
								2794,
								2798,
								2838
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2834,
								2842,
								2813,
								2830,
								2819,
								2816,
								2822,
								2828
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/DurationField.ts",
							"line": 13,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2304,
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2786
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/DurationField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2845,
			"name": "fields/EmailField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2846,
					"name": "EmailField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 2848,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2849,
									"name": "new EmailField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2850,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5152,
												"name": "CharFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2846,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2307,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2306,
								"name": "default.constructor"
							}
						},
						{
							"id": 2852,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2310,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2853,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2311,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2870,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2871,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2872,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2328,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2867,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2169,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2325,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2862,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2320,
								"name": "default.blank"
							}
						},
						{
							"id": 2863,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2321,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2866,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2324,
								"name": "default.choices"
							}
						},
						{
							"id": 2865,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2323,
								"name": "default.helpText"
							}
						},
						{
							"id": 2864,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2322,
								"name": "default.label"
							}
						},
						{
							"id": 2851,
							"name": "maxLength",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 18,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2309,
								"name": "default.maxLength"
							}
						},
						{
							"id": 2868,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2326,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2869,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2327,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2847,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/EmailField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'EmailField'",
							"overwrites": {
								"type": "reference",
								"id": 2305,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2900,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2901,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2074,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2358,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2886,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2887,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2978,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2344,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2896,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2897,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2354,
								"name": "default.isBound"
							}
						},
						{
							"id": 2854,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2855,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2856,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2857,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2312,
								"name": "default.model"
							}
						},
						{
							"id": 2858,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2859,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2860,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2861,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2316,
								"name": "default.name"
							}
						},
						{
							"id": 2898,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2899,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2356,
								"name": "default.value"
							}
						},
						{
							"id": 2894,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2895,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2974,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2353,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2352,
								"name": "default.clone"
							}
						},
						{
							"id": 2902,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2903,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2904,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2361,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2360,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2873,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2874,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2875,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2332,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2331,
								"name": "default.format"
							}
						},
						{
							"id": 2890,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2891,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2892,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2893,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2349,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2348,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2879,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2880,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2881,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2338,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2337,
								"name": "default.normalize"
							}
						},
						{
							"id": 2876,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2877,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2878,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2335,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2334,
								"name": "default.parse"
							}
						},
						{
							"id": 2882,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2883,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2884,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2885,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2341,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2340,
								"name": "default.toJS"
							}
						},
						{
							"id": 2888,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2889,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2347,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2346,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2848
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2852,
								2853,
								2870,
								2867,
								2862,
								2863,
								2866,
								2865,
								2864,
								2851,
								2868,
								2869,
								2847
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2900,
								2886,
								2896,
								2854,
								2858,
								2898
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2894,
								2902,
								2873,
								2890,
								2879,
								2876,
								2882,
								2888
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/EmailField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2304,
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2846
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/EmailField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2905,
			"name": "fields/Field",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2974,
					"name": "Field",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Base Field",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields"
							},
							{
								"tag": "template",
								"text": "The type of the value for this field.",
								"param": "ValueType"
							},
							{
								"tag": "template",
								"text": "The type this field knows how to parse into the ValueType",
								"param": "ParsableType"
							},
							{
								"tag": "template",
								"text": "The type of a single value for this field. This is only different from `ValueType` if `ValueType` is eg. an array type\n",
								"param": "SingleType"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 2976,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 175,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2977,
									"name": "new Field",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2978,
											"name": "ValueT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										},
										{
											"id": 2979,
											"name": "ParsableValueT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											},
											"default": {
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											}
										},
										{
											"id": 2980,
											"name": "SingleValueT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											}
										}
									],
									"parameters": [
										{
											"id": 2981,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2906,
												"typeArguments": [
													{
														"type": "reference",
														"id": 2978,
														"name": "ValueT"
													},
													{
														"type": "reference",
														"id": 2980,
														"name": "SingleValueT"
													}
												],
												"name": "FieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2974,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"id": 2979,
												"name": "ParsableValueT"
											},
											{
												"type": "reference",
												"id": 2980,
												"name": "SingleValueT"
											}
										],
										"name": "default"
									}
								}
							]
						},
						{
							"id": 2982,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2978,
								"name": "ValueT"
							}
						},
						{
							"id": 2983,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2979,
								"name": "ParsableValueT"
							}
						},
						{
							"id": 3002,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 2978,
										"name": "ValueT"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3003,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3004,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2978,
																"name": "ValueT"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"id": 2978,
																				"name": "ValueT"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 2984,
							"name": "_model",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 86,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 2078,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ViewModelConstructor"
							}
						},
						{
							"id": 2989,
							"name": "_name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 103,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2999,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2169,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"id": 2980,
										"name": "SingleValueT"
									}
								],
								"name": "AsyncChoicesInterface"
							}
						},
						{
							"id": 2994,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2995,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2998,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2980,
										"name": "SingleValueT"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							}
						},
						{
							"id": 2997,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2996,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3000,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3001,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2975,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 129,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"defaultValue": "null"
						},
						{
							"id": 3032,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3033,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2074,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									}
								}
							]
						},
						{
							"id": 3018,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3019,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2978,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									}
								}
							]
						},
						{
							"id": 3028,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3029,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 2985,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2986,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									}
								}
							],
							"setSignature": [
								{
									"id": 2987,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2988,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 2990,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2991,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"setSignature": [
								{
									"id": 2992,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2993,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 3030,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3031,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											}
										]
									}
								}
							]
						},
						{
							"id": 3026,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3027,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2974,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											}
										],
										"name": "default"
									}
								}
							]
						},
						{
							"id": 3034,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3035,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 3036,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 3005,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3006,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 3007,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 3022,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3023,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 3024,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											}
										},
										{
											"id": 3025,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 3011,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3012,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 3013,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 2979,
												"name": "ParsableValueT"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											}
										]
									}
								}
							]
						},
						{
							"id": 3008,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3009,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 3010,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 2979,
														"name": "ParsableValueT"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											}
										]
									}
								}
							]
						},
						{
							"id": 3014,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3015,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 3016,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3017,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 3020,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3021,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2976
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2982,
								2983,
								3002,
								2984,
								2989,
								2999,
								2994,
								2995,
								2998,
								2997,
								2996,
								3000,
								3001,
								2975
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3032,
								3018,
								3028,
								2985,
								2990,
								3030
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3026,
								3034,
								3005,
								3022,
								3011,
								3008,
								3014,
								3020
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
							"line": 75,
							"character": 21
						}
					],
					"typeParameter": [
						{
							"id": 3037,
							"name": "ValueT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 3038,
							"name": "ParsableValueT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"default": {
								"type": "reference",
								"id": 2978,
								"name": "ValueT"
							}
						},
						{
							"id": 3039,
							"name": "SingleValueT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "reference",
								"id": 2978,
								"name": "ValueT"
							}
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 2304,
							"name": "CharField"
						},
						{
							"type": "reference",
							"id": 2426,
							"name": "DateField"
						},
						{
							"type": "reference",
							"id": 2545,
							"name": "DateTimeField"
						},
						{
							"type": "reference",
							"id": 2920,
							"name": "RecordBoundField"
						},
						{
							"type": "reference",
							"id": 3041,
							"name": "FileField"
						},
						{
							"type": "reference",
							"id": 3526,
							"name": "ListField"
						},
						{
							"type": "reference",
							"id": 3592,
							"name": "NullableBooleanField"
						},
						{
							"type": "reference",
							"id": 3656,
							"name": "NumberField"
						},
						{
							"type": "reference",
							"id": 3781,
							"name": "RangeField"
						},
						{
							"type": "reference",
							"id": 3867,
							"name": "BaseRelatedViewModelField"
						},
						{
							"type": "reference",
							"id": 4215,
							"name": "TimeField"
						}
					]
				},
				{
					"id": 2906,
					"name": "FieldProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "expand-properties",
								"text": "\n"
							}
						]
					},
					"children": [
						{
							"id": 2915,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Asynchronous choices for this field.",
								"text": "Only one of `asyncChoices` and `choices` should be passed.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 48,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2169,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"id": 2919,
										"name": "SingleValueT"
									}
								],
								"name": "AsyncChoicesInterface"
							}
						},
						{
							"id": 2907,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Is this field allowed to be assigned a blank (null, undefined, \"\") value?",
								"text": "Defaults to false\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 13,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2908,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Frontend values are often stored as strings even if they are not stored like that\nin a backend (eg. database). Depending on your backend implementation it may expect\nempty values to be represented as `null` rather than an empty string. Setting\n`blankAsNull` to `true` indicates that empty strings should be converted to `null`\nwhen being sent to the backend."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 21,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2914,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Choices for this field. Should be a mapping of value to the label for the choice."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 42,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2919,
												"name": "SingleValueT"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"qualifiedName": "Map",
										"package": "typescript",
										"name": "Map"
									},
									{
										"type": "array",
										"elementType": {
											"type": "tuple",
											"elements": [
												{
													"type": "reference",
													"id": 2919,
													"name": "SingleValueT"
												},
												{
													"type": "intrinsic",
													"name": "string"
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 2911,
							"name": "defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Default value for this field. This can either be a function that returns a value or the value directly."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 33,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 2918,
										"name": "ValueT"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2912,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2913,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2918,
																"name": "ValueT"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"id": 2918,
																				"name": "ValueT"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 2910,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Optional help text for this field that might be shown on a form"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 29,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2909,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Label for this field. If not specified will be generated from the name."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 25,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2916,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "True if field should be considered read only (eg. excluded from forms)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 52,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2917,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "True if field should be considered write only (eg. excluded from detail views)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 56,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2915,
								2907,
								2908,
								2914,
								2911,
								2910,
								2909,
								2916,
								2917
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
							"line": 7,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 2918,
							"name": "ValueT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 2919,
							"name": "SingleValueT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "reference",
								"id": 2918,
								"name": "ValueT"
							}
						}
					]
				},
				{
					"id": 2920,
					"name": "RecordBoundField",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2924,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2971,
								"name": "ValueT"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2982,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2925,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2972,
								"name": "ParsableType"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2983,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2942,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 2971,
										"name": "ValueT"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2943,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2944,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2971,
																"name": "ValueT"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"id": 2971,
																				"name": "ValueT"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3002,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2939,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2169,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"id": 2973,
										"name": "SingleValueT"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2999,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2934,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2994,
								"name": "default.blank"
							}
						},
						{
							"id": 2935,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2995,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2923,
							"name": "boundRecord",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 375,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 2074,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "ViewModelInterface"
							},
							"overwrites": {
								"type": "reference",
								"id": 3032,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2938,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2973,
										"name": "SingleValueT"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2998,
								"name": "default.choices"
							}
						},
						{
							"id": 2937,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2997,
								"name": "default.helpText"
							}
						},
						{
							"id": 2922,
							"name": "isBound",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 374,
									"character": 13
								}
							],
							"type": {
								"type": "literal",
								"value": true
							},
							"overwrites": {
								"type": "reference",
								"id": 3028,
								"name": "default.isBound"
							}
						},
						{
							"id": 2936,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2996,
								"name": "default.label"
							}
						},
						{
							"id": 2940,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3000,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2921,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 373,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 2971,
								"name": "ValueT"
							},
							"overwrites": {
								"type": "reference",
								"id": 3030,
								"name": "default.value"
							}
						},
						{
							"id": 2941,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3001,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2958,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2959,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2978,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3018,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2926,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2927,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2928,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2929,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2985,
								"name": "default.model"
							}
						},
						{
							"id": 2930,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2931,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2932,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2933,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2990,
								"name": "default.name"
							}
						},
						{
							"id": 2966,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2967,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2974,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2971,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"id": 2971,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"id": 2971,
												"name": "ValueT"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3027,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3026,
								"name": "default.clone"
							}
						},
						{
							"id": 2968,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2969,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2970,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3035,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3034,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2945,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2946,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2947,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 2971,
												"name": "ValueT"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3006,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3005,
								"name": "default.format"
							}
						},
						{
							"id": 2962,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2963,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2964,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2971,
												"name": "ValueT"
											}
										},
										{
											"id": 2965,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2971,
												"name": "ValueT"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3023,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3022,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2951,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2952,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2953,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 2972,
												"name": "ParsableType"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2971,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3012,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3011,
								"name": "default.normalize"
							}
						},
						{
							"id": 2948,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2949,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2950,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 2972,
														"name": "ParsableType"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2971,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3009,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3008,
								"name": "default.parse"
							}
						},
						{
							"id": 2954,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2955,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2956,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 2971,
												"name": "ValueT"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2957,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3015,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3014,
								"name": "default.toJS"
							}
						},
						{
							"id": 2960,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2961,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3021,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3020,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2924,
								2925,
								2942,
								2939,
								2934,
								2935,
								2923,
								2938,
								2937,
								2922,
								2936,
								2940,
								2921,
								2941
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2958,
								2926,
								2930
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2966,
								2968,
								2945,
								2962,
								2951,
								2948,
								2954,
								2960
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
							"line": 371,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 2971,
							"name": "ValueT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 2972,
							"name": "ParsableType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"default": {
								"type": "reference",
								"id": 2971,
								"name": "ValueT"
							}
						},
						{
							"id": 2973,
							"name": "SingleValueT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "reference",
								"id": 2971,
								"name": "ValueT"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2974,
							"typeArguments": [
								{
									"type": "reference",
									"id": 2971,
									"name": "ValueT"
								},
								{
									"type": "reference",
									"id": 2972,
									"name": "ParsableType"
								},
								{
									"type": "reference",
									"id": 2973,
									"name": "SingleValueT"
								}
							],
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2974
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2906,
						2920
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3040,
			"name": "fields/FileField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 5172,
					"name": "<internal>",
					"kind": 4,
					"kindString": "Namespace",
					"flags": {},
					"children": [
						{
							"id": 5276,
							"name": "AbortSignal",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "A signal object that allows you to communicate with a DOM request (such as a Fetch) and abort it if required via an AbortController object."
							},
							"children": [
								{
									"id": 5277,
									"name": "aborted",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isReadonly": true
									},
									"comment": {
										"shortText": "Returns true if this AbortSignal's AbortController has signaled to abort, and false otherwise."
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1885,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 5278,
									"name": "onabort",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1886,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 5279,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 5280,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 5281,
																	"name": "ev",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"qualifiedName": "Event",
																		"package": "typescript",
																		"name": "Event"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 5282,
									"name": "addEventListener",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5283,
											"name": "addEventListener",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"typeParameter": [
												{
													"id": 5284,
													"name": "K",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "literal",
														"value": "abort"
													}
												}
											],
											"parameters": [
												{
													"id": 5285,
													"name": "type",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5284,
														"qualifiedName": "K",
														"package": "typescript",
														"name": "K"
													}
												},
												{
													"id": 5286,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 5287,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"signatures": [
																{
																	"id": 5288,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExternal": true
																	},
																	"parameters": [
																		{
																			"id": 5289,
																			"name": "ev",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "reference",
																					"id": 5284,
																					"qualifiedName": "K",
																					"package": "typescript",
																					"name": "K"
																				},
																				"objectType": {
																					"type": "reference",
																					"id": 5346,
																					"qualifiedName": "AbortSignalEventMap",
																					"package": "typescript",
																					"name": "AbortSignalEventMap"
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															]
														}
													}
												},
												{
													"id": 5290,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "boolean"
															},
															{
																"type": "reference",
																"id": 5338,
																"qualifiedName": "AddEventListenerOptions",
																"package": "typescript",
																"name": "AddEventListenerOptions"
															}
														]
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"overwrites": {
												"type": "reference",
												"name": "EventTarget.addEventListener"
											}
										},
										{
											"id": 5291,
											"name": "addEventListener",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 5292,
													"name": "type",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 5293,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5343,
														"qualifiedName": "EventListenerOrEventListenerObject",
														"package": "typescript",
														"name": "EventListenerOrEventListenerObject"
													}
												},
												{
													"id": 5294,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "boolean"
															},
															{
																"type": "reference",
																"id": 5338,
																"qualifiedName": "AddEventListenerOptions",
																"package": "typescript",
																"name": "AddEventListenerOptions"
															}
														]
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"overwrites": {
												"type": "reference",
												"name": "EventTarget.addEventListener"
											}
										}
									],
									"overwrites": {
										"type": "reference",
										"name": "EventTarget.addEventListener"
									}
								},
								{
									"id": 5308,
									"name": "dispatchEvent",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5309,
											"name": "dispatchEvent",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Dispatches a synthetic event event to target and returns true if either event's cancelable attribute value is false or its preventDefault() method was not invoked, and false otherwise."
											},
											"parameters": [
												{
													"id": 5310,
													"name": "event",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"qualifiedName": "Event",
														"package": "typescript",
														"name": "Event"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "EventTarget.dispatchEvent"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "EventTarget.dispatchEvent"
									}
								},
								{
									"id": 5295,
									"name": "removeEventListener",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5296,
											"name": "removeEventListener",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"typeParameter": [
												{
													"id": 5297,
													"name": "K",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "literal",
														"value": "abort"
													}
												}
											],
											"parameters": [
												{
													"id": 5298,
													"name": "type",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5297,
														"qualifiedName": "K",
														"package": "typescript",
														"name": "K"
													}
												},
												{
													"id": 5299,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 5300,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"signatures": [
																{
																	"id": 5301,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExternal": true
																	},
																	"parameters": [
																		{
																			"id": 5302,
																			"name": "ev",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "reference",
																					"id": 5297,
																					"qualifiedName": "K",
																					"package": "typescript",
																					"name": "K"
																				},
																				"objectType": {
																					"type": "reference",
																					"id": 5346,
																					"qualifiedName": "AbortSignalEventMap",
																					"package": "typescript",
																					"name": "AbortSignalEventMap"
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															]
														}
													}
												},
												{
													"id": 5303,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "boolean"
															},
															{
																"type": "reference",
																"id": 5344,
																"qualifiedName": "EventListenerOptions",
																"package": "typescript",
																"name": "EventListenerOptions"
															}
														]
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"overwrites": {
												"type": "reference",
												"name": "EventTarget.removeEventListener"
											}
										},
										{
											"id": 5304,
											"name": "removeEventListener",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 5305,
													"name": "type",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 5306,
													"name": "listener",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5343,
														"qualifiedName": "EventListenerOrEventListenerObject",
														"package": "typescript",
														"name": "EventListenerOrEventListenerObject"
													}
												},
												{
													"id": 5307,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "boolean"
															},
															{
																"type": "reference",
																"id": 5344,
																"qualifiedName": "EventListenerOptions",
																"package": "typescript",
																"name": "EventListenerOptions"
															}
														]
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"overwrites": {
												"type": "reference",
												"name": "EventTarget.removeEventListener"
											}
										}
									],
									"overwrites": {
										"type": "reference",
										"name": "EventTarget.removeEventListener"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5277,
										5278
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										5282,
										5308,
										5295
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 1883,
									"character": 10
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"qualifiedName": "EventTarget",
									"package": "typescript",
									"name": "EventTarget"
								}
							]
						},
						{
							"id": 5346,
							"name": "AbortSignalEventMap",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 5347,
									"name": "abort",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1879,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Event",
										"package": "typescript",
										"name": "Event"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5347
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 1878,
									"character": 10
								}
							]
						},
						{
							"id": 5338,
							"name": "AddEventListenerOptions",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 5342,
									"name": "capture",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 457,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 5345,
										"name": "EventListenerOptions.capture"
									}
								},
								{
									"id": 5339,
									"name": "once",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 26,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 5340,
									"name": "passive",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 27,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 5341,
									"name": "signal",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 28,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"id": 5273,
										"qualifiedName": "AbortSignal",
										"package": "typescript",
										"name": "AbortSignal"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5342,
										5339,
										5340,
										5341
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 25,
									"character": 10
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"id": 5344,
									"qualifiedName": "EventListenerOptions",
									"package": "typescript",
									"name": "EventListenerOptions"
								}
							]
						},
						{
							"id": 5196,
							"name": "Blob",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "A file-like object of immutable, raw data. Blobs represent data that isn't necessarily in a JavaScript-native format. The File interface is based on Blob, inheriting blob functionality and expanding it to support files on the user's system."
							},
							"children": [
								{
									"id": 5197,
									"name": "size",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 2378,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 5198,
									"name": "type",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 2379,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5199,
									"name": "arrayBuffer",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5200,
											"name": "arrayBuffer",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "ArrayBuffer",
														"package": "typescript",
														"name": "ArrayBuffer"
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										}
									]
								},
								{
									"id": 5201,
									"name": "slice",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5202,
											"name": "slice",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 5203,
													"name": "start",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 5204,
													"name": "end",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 5205,
													"name": "contentType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 5193,
												"qualifiedName": "Blob",
												"package": "typescript",
												"name": "Blob"
											}
										}
									]
								},
								{
									"id": 5206,
									"name": "stream",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5207,
											"name": "stream",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 5210,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "ReadableStream",
												"package": "typescript",
												"name": "ReadableStream"
											}
										}
									]
								},
								{
									"id": 5208,
									"name": "text",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5209,
											"name": "text",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5197,
										5198
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										5199,
										5201,
										5206,
										5208
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 2377,
									"character": 10
								}
							]
						},
						{
							"id": 5344,
							"name": "EventListenerOptions",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 5345,
									"name": "capture",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 457,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5345
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 456,
									"character": 10
								}
							],
							"extendedBy": [
								{
									"type": "reference",
									"id": 5338,
									"name": "AddEventListenerOptions"
								}
							]
						},
						{
							"id": 5176,
							"name": "File",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Provides information about files and allows JavaScript in a web page to access their content."
							},
							"children": [
								{
									"id": 5177,
									"name": "lastModified",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5009,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 5178,
									"name": "name",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5010,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5180,
									"name": "size",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 2378,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Blob.size"
									}
								},
								{
									"id": 5181,
									"name": "type",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 2379,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Blob.type"
									}
								},
								{
									"id": 5179,
									"name": "webkitRelativePath",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5011,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5182,
									"name": "arrayBuffer",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5183,
											"name": "arrayBuffer",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "ArrayBuffer",
														"package": "typescript",
														"name": "ArrayBuffer"
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Blob.arrayBuffer"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Blob.arrayBuffer"
									}
								},
								{
									"id": 5184,
									"name": "slice",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5185,
											"name": "slice",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 5186,
													"name": "start",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 5187,
													"name": "end",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 5188,
													"name": "contentType",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 5193,
												"qualifiedName": "Blob",
												"package": "typescript",
												"name": "Blob"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Blob.slice"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Blob.slice"
									}
								},
								{
									"id": 5189,
									"name": "stream",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5190,
											"name": "stream",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 5210,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "ReadableStream",
												"package": "typescript",
												"name": "ReadableStream"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Blob.stream"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Blob.stream"
									}
								},
								{
									"id": 5191,
									"name": "text",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5192,
											"name": "text",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Blob.text"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Blob.text"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5177,
										5178,
										5180,
										5181,
										5179
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										5182,
										5184,
										5189,
										5191
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 5008,
									"character": 10
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"id": 5193,
									"qualifiedName": "Blob",
									"package": "typescript",
									"name": "Blob"
								}
							]
						},
						{
							"id": 5213,
							"name": "ReadableStream",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "This Streams API interface represents a readable stream of byte data. The Fetch API offers a concrete instance of a ReadableStream through the body property of a Response object."
							},
							"children": [
								{
									"id": 5214,
									"name": "locked",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 11000,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 5215,
									"name": "cancel",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5216,
											"name": "cancel",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 5217,
													"name": "reason",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										}
									]
								},
								{
									"id": 5218,
									"name": "getReader",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5219,
											"name": "getReader",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 5232,
												"typeArguments": [
													{
														"type": "reference",
														"id": 5231,
														"qualifiedName": "ReadableStream.R",
														"package": "typescript",
														"name": "R"
													}
												],
												"qualifiedName": "ReadableStreamDefaultReader",
												"package": "typescript",
												"name": "ReadableStreamDefaultReader"
											}
										}
									]
								},
								{
									"id": 5220,
									"name": "pipeThrough",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5221,
											"name": "pipeThrough",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"typeParameter": [
												{
													"id": 5222,
													"name": "T",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {
														"isExternal": true
													}
												}
											],
											"parameters": [
												{
													"id": 5223,
													"name": "transform",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5245,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5222,
																"qualifiedName": "T",
																"package": "typescript",
																"name": "T"
															},
															{
																"type": "reference",
																"id": 5231,
																"qualifiedName": "ReadableStream.R",
																"package": "typescript",
																"name": "R"
															}
														],
														"qualifiedName": "ReadableWritablePair",
														"package": "typescript",
														"name": "ReadableWritablePair"
													}
												},
												{
													"id": 5224,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 5250,
														"qualifiedName": "StreamPipeOptions",
														"package": "typescript",
														"name": "StreamPipeOptions"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 5210,
												"typeArguments": [
													{
														"type": "reference",
														"id": 5222,
														"qualifiedName": "T",
														"package": "typescript",
														"name": "T"
													}
												],
												"qualifiedName": "ReadableStream",
												"package": "typescript",
												"name": "ReadableStream"
											}
										}
									]
								},
								{
									"id": 5225,
									"name": "pipeTo",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5226,
											"name": "pipeTo",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 5227,
													"name": "destination",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 5255,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5231,
																"qualifiedName": "ReadableStream.R",
																"package": "typescript",
																"name": "R"
															}
														],
														"qualifiedName": "WritableStream",
														"package": "typescript",
														"name": "WritableStream"
													}
												},
												{
													"id": 5228,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 5250,
														"qualifiedName": "StreamPipeOptions",
														"package": "typescript",
														"name": "StreamPipeOptions"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										}
									]
								},
								{
									"id": 5229,
									"name": "tee",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5230,
											"name": "tee",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "reference",
														"id": 5210,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5231,
																"qualifiedName": "ReadableStream.R",
																"package": "typescript",
																"name": "R"
															}
														],
														"qualifiedName": "ReadableStream",
														"package": "typescript",
														"name": "ReadableStream"
													},
													{
														"type": "reference",
														"id": 5210,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5231,
																"qualifiedName": "ReadableStream.R",
																"package": "typescript",
																"name": "R"
															}
														],
														"qualifiedName": "ReadableStream",
														"package": "typescript",
														"name": "ReadableStream"
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5214
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										5215,
										5218,
										5220,
										5225,
										5229
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 10999,
									"character": 10
								}
							],
							"typeParameter": [
								{
									"id": 5231,
									"name": "R",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 5335,
							"name": "ReadableStreamDefaultReadDoneResult",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 5336,
									"name": "done",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1441,
											"character": 4
										}
									],
									"type": {
										"type": "literal",
										"value": true
									}
								},
								{
									"id": 5337,
									"name": "value",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1442,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "undefined"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5336,
										5337
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 1440,
									"character": 10
								}
							]
						},
						{
							"id": 5331,
							"name": "ReadableStreamDefaultReadValueResult",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 5332,
									"name": "done",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1446,
											"character": 4
										}
									],
									"type": {
										"type": "literal",
										"value": false
									}
								},
								{
									"id": 5333,
									"name": "value",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1447,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"id": 5334,
										"qualifiedName": "ReadableStreamDefaultReadValueResult.T",
										"package": "typescript",
										"name": "T"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5332,
										5333
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 1445,
									"character": 10
								}
							],
							"typeParameter": [
								{
									"id": 5334,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							]
						},
						{
							"id": 5235,
							"name": "ReadableStreamDefaultReader",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 5240,
									"name": "closed",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 11036,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 5269,
										"name": "ReadableStreamGenericReader.closed"
									}
								},
								{
									"id": 5241,
									"name": "cancel",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5242,
											"name": "cancel",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 5243,
													"name": "reason",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											},
											"inheritedFrom": {
												"type": "reference",
												"id": 5271,
												"name": "ReadableStreamGenericReader.cancel"
											}
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"id": 5270,
										"name": "ReadableStreamGenericReader.cancel"
									}
								},
								{
									"id": 5236,
									"name": "read",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5237,
											"name": "read",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 5311,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5244,
																"qualifiedName": "ReadableStreamDefaultReader.R",
																"package": "typescript",
																"name": "R"
															}
														],
														"qualifiedName": "ReadableStreamDefaultReadResult",
														"package": "typescript",
														"name": "ReadableStreamDefaultReadResult"
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										}
									]
								},
								{
									"id": 5238,
									"name": "releaseLock",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5239,
											"name": "releaseLock",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5240
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										5241,
										5236,
										5238
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 11025,
									"character": 10
								}
							],
							"typeParameter": [
								{
									"id": 5244,
									"name": "R",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"id": 5268,
									"qualifiedName": "ReadableStreamGenericReader",
									"package": "typescript",
									"name": "ReadableStreamGenericReader"
								}
							]
						},
						{
							"id": 5268,
							"name": "ReadableStreamGenericReader",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 5269,
									"name": "closed",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 11036,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								},
								{
									"id": 5270,
									"name": "cancel",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5271,
											"name": "cancel",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 5272,
													"name": "reason",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5269
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										5270
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 11035,
									"character": 10
								}
							],
							"extendedBy": [
								{
									"type": "reference",
									"id": 5235,
									"name": "ReadableStreamDefaultReader"
								}
							]
						},
						{
							"id": 5245,
							"name": "ReadableWritablePair",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 5246,
									"name": "readable",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1451,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"id": 5210,
										"typeArguments": [
											{
												"type": "reference",
												"id": 5248,
												"qualifiedName": "ReadableWritablePair.R",
												"package": "typescript",
												"name": "R"
											}
										],
										"qualifiedName": "ReadableStream",
										"package": "typescript",
										"name": "ReadableStream"
									}
								},
								{
									"id": 5247,
									"name": "writable",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Provides a convenient, chainable way of piping this readable stream through a transform stream (or any other { writable, readable } pair). It simply pipes the stream into the writable side of the supplied pair, and returns the readable side for further use.",
										"text": "Piping a stream will lock it for the duration of the pipe, preventing any other consumer from acquiring a reader.\n"
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1457,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"id": 5255,
										"typeArguments": [
											{
												"type": "reference",
												"id": 5249,
												"qualifiedName": "ReadableWritablePair.W",
												"package": "typescript",
												"name": "W"
											}
										],
										"qualifiedName": "WritableStream",
										"package": "typescript",
										"name": "WritableStream"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5246,
										5247
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 1450,
									"character": 10
								}
							],
							"typeParameter": [
								{
									"id": 5248,
									"name": "R",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 5249,
									"name": "W",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 5250,
							"name": "StreamPipeOptions",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 5251,
									"name": "preventAbort",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1627,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 5252,
									"name": "preventCancel",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1628,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 5253,
									"name": "preventClose",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "Pipes this readable stream to a given writable stream destination. The way in which the piping process behaves under various error conditions can be customized with a number of passed options. It returns a promise that fulfills when the piping process completes successfully, or rejects if any errors were encountered.",
										"text": "Piping a stream will lock it for the duration of the pipe, preventing any other consumer from acquiring a reader.\n\nErrors and closures of the source and destination streams propagate as follows:\n\nAn error in this source readable stream will abort destination, unless preventAbort is truthy. The returned promise will be rejected with the source's error, or with any error that occurs during aborting the destination.\n\nAn error in destination will cancel this source readable stream, unless preventCancel is truthy. The returned promise will be rejected with the destination's error, or with any error that occurs during canceling the source.\n\nWhen this source readable stream closes, destination will be closed, unless preventClose is truthy. The returned promise will be fulfilled once this process completes, unless an error is encountered while closing the destination, in which case it will be rejected with that error.\n\nIf destination starts out closed or closing, this source readable stream will be canceled, unless preventCancel is true. The returned promise will be rejected with an error indicating piping to a closed stream failed, or with any error that occurs during canceling the source.\n\nThe signal option can be set to an AbortSignal to allow aborting an ongoing pipe operation via the corresponding AbortController. In this case, this source readable stream will be canceled, and destination aborted, unless the respective options preventCancel or preventAbort are set.\n"
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1646,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 5254,
									"name": "signal",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1647,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"id": 5273,
										"qualifiedName": "AbortSignal",
										"package": "typescript",
										"name": "AbortSignal"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5251,
										5252,
										5253,
										5254
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 1626,
									"character": 10
								}
							]
						},
						{
							"id": 5258,
							"name": "WritableStream",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "This Streams API interface provides a standard abstraction for writing streaming data to a destination, known as a sink. This object comes with built-in backpressure and queuing."
							},
							"children": [
								{
									"id": 5259,
									"name": "locked",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 16357,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 5260,
									"name": "abort",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5261,
											"name": "abort",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 5262,
													"name": "reason",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										}
									]
								},
								{
									"id": 5263,
									"name": "close",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5264,
											"name": "close",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										}
									]
								},
								{
									"id": 5265,
									"name": "getWriter",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5266,
											"name": "getWriter",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 5313,
												"typeArguments": [
													{
														"type": "reference",
														"id": 5267,
														"qualifiedName": "WritableStream.W",
														"package": "typescript",
														"name": "W"
													}
												],
												"qualifiedName": "WritableStreamDefaultWriter",
												"package": "typescript",
												"name": "WritableStreamDefaultWriter"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5259
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										5260,
										5263,
										5265
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16356,
									"character": 10
								}
							],
							"typeParameter": [
								{
									"id": 5267,
									"name": "W",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 5316,
							"name": "WritableStreamDefaultWriter",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "This Streams API interface is the object returned by WritableStream.getWriter() and once created locks the < writer to the WritableStream ensuring that no other streams can write to the underlying sink."
							},
							"children": [
								{
									"id": 5317,
									"name": "closed",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 16380,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								},
								{
									"id": 5318,
									"name": "desiredSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 16381,
											"character": 13
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 5319,
									"name": "ready",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 16382,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								},
								{
									"id": 5320,
									"name": "abort",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5321,
											"name": "abort",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 5322,
													"name": "reason",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										}
									]
								},
								{
									"id": 5323,
									"name": "close",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5324,
											"name": "close",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										}
									]
								},
								{
									"id": 5325,
									"name": "releaseLock",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5326,
											"name": "releaseLock",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 5327,
									"name": "write",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"signatures": [
										{
											"id": 5328,
											"name": "write",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 5329,
													"name": "chunk",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 5330,
														"qualifiedName": "WritableStreamDefaultWriter.W",
														"package": "typescript",
														"name": "W"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5317,
										5318,
										5319
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										5320,
										5323,
										5325,
										5327
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16379,
									"character": 10
								}
							],
							"typeParameter": [
								{
									"id": 5330,
									"name": "W",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 5343,
							"name": "EventListenerOrEventListenerObject",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 17604,
									"character": 5
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"qualifiedName": "EventListener",
										"package": "typescript",
										"name": "EventListener"
									},
									{
										"type": "reference",
										"qualifiedName": "EventListenerObject",
										"package": "typescript",
										"name": "EventListenerObject"
									}
								]
							}
						},
						{
							"id": 5311,
							"name": "ReadableStreamDefaultReadResult",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 17636,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 5312,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 5331,
										"typeArguments": [
											{
												"type": "reference",
												"id": 5312,
												"qualifiedName": "T",
												"package": "typescript",
												"name": "T"
											}
										],
										"qualifiedName": "ReadableStreamDefaultReadValueResult",
										"package": "typescript",
										"name": "ReadableStreamDefaultReadValueResult"
									},
									{
										"type": "reference",
										"id": 5335,
										"qualifiedName": "ReadableStreamDefaultReadDoneResult",
										"package": "typescript",
										"name": "ReadableStreamDefaultReadDoneResult"
									}
								]
							}
						},
						{
							"id": 5273,
							"name": "AbortSignal",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 1893,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5274,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExternal": true
									},
									"children": [
										{
											"id": 5275,
											"name": "prototype",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
													"line": 1894,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 5273,
												"qualifiedName": "AbortSignal",
												"package": "typescript",
												"name": "AbortSignal"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												5275
											]
										}
									]
								}
							}
						},
						{
							"id": 5193,
							"name": "Blob",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 2386,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5194,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExternal": true
									},
									"children": [
										{
											"id": 5195,
											"name": "prototype",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
													"line": 2387,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 5193,
												"qualifiedName": "Blob",
												"package": "typescript",
												"name": "Blob"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												5195
											]
										}
									]
								}
							},
							"extendedBy": [
								{
									"type": "reference",
									"id": 5176,
									"name": "File"
								}
							]
						},
						{
							"id": 5173,
							"name": "File",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 5014,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5174,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExternal": true
									},
									"children": [
										{
											"id": 5175,
											"name": "prototype",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
													"line": 5015,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 5173,
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												5175
											]
										}
									]
								}
							}
						},
						{
							"id": 5210,
							"name": "ReadableStream",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 11008,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5211,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExternal": true
									},
									"children": [
										{
											"id": 5212,
											"name": "prototype",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
													"line": 11009,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 5210,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "ReadableStream",
												"package": "typescript",
												"name": "ReadableStream"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												5212
											]
										}
									]
								}
							}
						},
						{
							"id": 5232,
							"name": "ReadableStreamDefaultReader",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 11030,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5233,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExternal": true
									},
									"children": [
										{
											"id": 5234,
											"name": "prototype",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
													"line": 11031,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 5232,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "ReadableStreamDefaultReader",
												"package": "typescript",
												"name": "ReadableStreamDefaultReader"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												5234
											]
										}
									]
								}
							}
						},
						{
							"id": 5255,
							"name": "WritableStream",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16363,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5256,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExternal": true
									},
									"children": [
										{
											"id": 5257,
											"name": "prototype",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
													"line": 16364,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 5255,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "WritableStream",
												"package": "typescript",
												"name": "WritableStream"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												5257
											]
										}
									]
								}
							}
						},
						{
							"id": 5313,
							"name": "WritableStreamDefaultWriter",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 16389,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5314,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExternal": true
									},
									"children": [
										{
											"id": 5315,
											"name": "prototype",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
													"line": 16390,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 5313,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "WritableStreamDefaultWriter",
												"package": "typescript",
												"name": "WritableStreamDefaultWriter"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												5315
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"kind": 256,
							"children": [
								5276,
								5346,
								5338,
								5196,
								5344,
								5176,
								5213,
								5335,
								5331,
								5235,
								5268,
								5245,
								5250,
								5258,
								5316
							]
						},
						{
							"title": "Type aliases",
							"kind": 4194304,
							"children": [
								5343,
								5311
							]
						},
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								5273,
								5193,
								5173,
								5210,
								5232,
								5255,
								5313
							]
						}
					]
				},
				{
					"id": 3041,
					"name": "FileField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Base class for File fields",
						"text": "Used by ImageField.\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 3043,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3044,
									"name": "new FileField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3045,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2906,
												"typeArguments": [
													{
														"type": "reference",
														"id": 5173,
														"qualifiedName": "File",
														"package": "typescript",
														"name": "File"
													},
													{
														"type": "reference",
														"id": 5173,
														"qualifiedName": "File",
														"package": "typescript",
														"name": "File"
													}
												],
												"name": "FieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 3041,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2977,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2976,
								"name": "default.constructor"
							}
						},
						{
							"id": 3046,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 5173,
								"qualifiedName": "File",
								"package": "typescript",
								"name": "File"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2982,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 3047,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 5173,
								"qualifiedName": "File",
								"package": "typescript",
								"name": "File"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2983,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 3064,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 5173,
										"qualifiedName": "File",
										"package": "typescript",
										"name": "File"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3065,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3066,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 5173,
																"qualifiedName": "File",
																"package": "typescript",
																"name": "File"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"id": 5173,
																				"qualifiedName": "File",
																				"package": "typescript",
																				"name": "File"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3002,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 3061,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2169,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"id": 5173,
										"qualifiedName": "File",
										"package": "typescript",
										"name": "File"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2999,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 3056,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2994,
								"name": "default.blank"
							}
						},
						{
							"id": 3057,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2995,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 3060,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 5173,
										"qualifiedName": "File",
										"package": "typescript",
										"name": "File"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2998,
								"name": "default.choices"
							}
						},
						{
							"id": 3059,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2997,
								"name": "default.helpText"
							}
						},
						{
							"id": 3058,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2996,
								"name": "default.label"
							}
						},
						{
							"id": 3062,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3000,
								"name": "default.readOnly"
							}
						},
						{
							"id": 3063,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3001,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 3042,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/FileField.ts",
									"line": 12,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'FileField'",
							"overwrites": {
								"type": "reference",
								"id": 2975,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 3094,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3095,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2074,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3032,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 3080,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3081,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2978,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3018,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 3090,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3091,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3028,
								"name": "default.isBound"
							}
						},
						{
							"id": 3048,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3049,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 3050,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3051,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2985,
								"name": "default.model"
							}
						},
						{
							"id": 3052,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3053,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 3054,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3055,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2990,
								"name": "default.name"
							}
						},
						{
							"id": 3092,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3093,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3030,
								"name": "default.value"
							}
						},
						{
							"id": 3088,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3089,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2974,
										"typeArguments": [
											{
												"type": "reference",
												"id": 5173,
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											},
											{
												"type": "reference",
												"id": 5173,
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											},
											{
												"type": "reference",
												"id": 5173,
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3027,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3026,
								"name": "default.clone"
							}
						},
						{
							"id": 3096,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3097,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 3098,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3035,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3034,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 3067,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3068,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 3069,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 5173,
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3006,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3005,
								"name": "default.format"
							}
						},
						{
							"id": 3084,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3085,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 3086,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5173,
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										},
										{
											"id": 3087,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5173,
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3023,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3022,
								"name": "default.isEqual"
							}
						},
						{
							"id": 3073,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3074,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 3075,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 5173,
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 5173,
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3012,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3011,
								"name": "default.normalize"
							}
						},
						{
							"id": 3070,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3071,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 3072,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 5173,
														"qualifiedName": "File",
														"package": "typescript",
														"name": "File"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 5173,
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3009,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3008,
								"name": "default.parse"
							}
						},
						{
							"id": 3076,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3077,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 3078,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 5173,
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3079,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3015,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3014,
								"name": "default.toJS"
							}
						},
						{
							"id": 3082,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3083,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3021,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3020,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3043
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3046,
								3047,
								3064,
								3061,
								3056,
								3057,
								3060,
								3059,
								3058,
								3062,
								3063,
								3042
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3094,
								3080,
								3090,
								3048,
								3052,
								3092
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3088,
								3096,
								3067,
								3084,
								3073,
								3070,
								3076,
								3082
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/FileField.ts",
							"line": 11,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2974,
							"typeArguments": [
								{
									"type": "reference",
									"id": 5173,
									"qualifiedName": "File",
									"package": "typescript",
									"name": "File"
								}
							],
							"name": "default"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 3281,
							"name": "ImageField"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"kind": 4,
					"children": [
						5172
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3041
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/FileField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3099,
			"name": "fields/FloatField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3100,
					"name": "FloatField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Float Field.",
						"text": "Use only if stored number is tolerant on precision error.\n\nSee also: [DecimalField](doc:DecimalField)\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 3102,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3103,
									"name": "new FloatField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3104,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3651,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"name": "NumberFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 3100,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3659,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3658,
								"name": "default.constructor"
							}
						},
						{
							"id": 3110,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3665,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 3111,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3666,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 3128,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3129,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3130,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3683,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 3125,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2169,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3680,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 3120,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3675,
								"name": "default.blank"
							}
						},
						{
							"id": 3121,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3676,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 3124,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3679,
								"name": "default.choices"
							}
						},
						{
							"id": 3123,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3678,
								"name": "default.helpText"
							}
						},
						{
							"id": 3122,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3677,
								"name": "default.label"
							}
						},
						{
							"id": 3109,
							"name": "maxValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
									"line": 25,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3664,
								"name": "default.maxValue"
							}
						},
						{
							"id": 3108,
							"name": "minValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
									"line": 24,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3663,
								"name": "default.minValue"
							}
						},
						{
							"id": 3126,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3681,
								"name": "default.readOnly"
							}
						},
						{
							"id": 3127,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3682,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 3101,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/FloatField.ts",
									"line": 14,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'FloatField'",
							"overwrites": {
								"type": "reference",
								"id": 3657,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 3155,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3156,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2074,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3713,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 3141,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3142,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2978,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3699,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 3151,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3152,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3709,
								"name": "default.isBound"
							}
						},
						{
							"id": 3112,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3113,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 3114,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3115,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3667,
								"name": "default.model"
							}
						},
						{
							"id": 3116,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3117,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 3118,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3119,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3671,
								"name": "default.name"
							}
						},
						{
							"id": 3153,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3154,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3711,
								"name": "default.value"
							}
						},
						{
							"id": 3149,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3150,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2974,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3708,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3707,
								"name": "default.clone"
							}
						},
						{
							"id": 3157,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3158,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 3159,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3716,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3715,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 3131,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3132,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 3133,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3687,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3686,
								"name": "default.format"
							}
						},
						{
							"id": 3145,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3146,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 3147,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 3148,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3704,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3703,
								"name": "default.isEqual"
							}
						},
						{
							"id": 3134,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3135,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 3136,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3693,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3692,
								"name": "default.normalize"
							}
						},
						{
							"id": 3105,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/FloatField.ts",
									"line": 15,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3106,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 3107,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 3690,
										"name": "default.parse"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3689,
								"name": "default.parse"
							}
						},
						{
							"id": 3137,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3138,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 3139,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3140,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3696,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3695,
								"name": "default.toJS"
							}
						},
						{
							"id": 3143,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3144,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3702,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3701,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3102
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3110,
								3111,
								3128,
								3125,
								3120,
								3121,
								3124,
								3123,
								3122,
								3109,
								3108,
								3126,
								3127,
								3101
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3155,
								3141,
								3151,
								3112,
								3116,
								3153
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3149,
								3157,
								3131,
								3145,
								3134,
								3105,
								3137,
								3143
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/FloatField.ts",
							"line": 13,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3656,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "number"
								}
							],
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3100
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/FloatField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3160,
			"name": "fields/FloatRangeField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3161,
					"name": "FloatRangeField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 3163,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3164,
									"name": "new FloatRangeField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3165,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5161,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"name": "RangeFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 3161,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3784,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3783,
								"name": "default.constructor"
							}
						},
						{
							"id": 3167,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3788,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 3168,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3789,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 3185,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3186,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3187,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3806,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 3182,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2169,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3803,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 3177,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3798,
								"name": "default.blank"
							}
						},
						{
							"id": 3178,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3799,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 3181,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3802,
								"name": "default.choices"
							}
						},
						{
							"id": 3180,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3801,
								"name": "default.helpText"
							}
						},
						{
							"id": 3179,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3800,
								"name": "default.label"
							}
						},
						{
							"id": 3183,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3804,
								"name": "default.readOnly"
							}
						},
						{
							"id": 3166,
							"name": "separator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
									"line": 17,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3787,
								"name": "default.separator"
							}
						},
						{
							"id": 3184,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3805,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 3162,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/FloatRangeField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'FloatRangeField'",
							"overwrites": {
								"type": "reference",
								"id": 3782,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 3215,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3216,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2074,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3836,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 3201,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3202,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2978,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3822,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 3211,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3212,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3832,
								"name": "default.isBound"
							}
						},
						{
							"id": 3169,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3170,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 3171,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3172,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3790,
								"name": "default.model"
							}
						},
						{
							"id": 3173,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3174,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 3175,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3176,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3794,
								"name": "default.name"
							}
						},
						{
							"id": 3213,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3214,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3834,
								"name": "default.value"
							}
						},
						{
							"id": 3209,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3210,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2974,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3831,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3830,
								"name": "default.clone"
							}
						},
						{
							"id": 3217,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3218,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 3219,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3839,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3838,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 3188,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3189,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 3190,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3810,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3809,
								"name": "default.format"
							}
						},
						{
							"id": 3205,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3206,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 3207,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 3208,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3827,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3826,
								"name": "default.isEqual"
							}
						},
						{
							"id": 3194,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3195,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 3196,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3816,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3815,
								"name": "default.normalize"
							}
						},
						{
							"id": 3191,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3192,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 3193,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3813,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3812,
								"name": "default.parse"
							}
						},
						{
							"id": 3197,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3198,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 3199,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3200,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3819,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3818,
								"name": "default.toJS"
							}
						},
						{
							"id": 3203,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3204,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3825,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3824,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3163
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3167,
								3168,
								3185,
								3182,
								3177,
								3178,
								3181,
								3180,
								3179,
								3183,
								3166,
								3184,
								3162
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3215,
								3201,
								3211,
								3169,
								3173,
								3213
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3209,
								3217,
								3188,
								3205,
								3194,
								3191,
								3197,
								3203
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/FloatRangeField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3781,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "number"
								}
							],
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3161
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/FloatRangeField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3220,
			"name": "fields/IPAddressField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3221,
					"name": "IPAddressField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 3223,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3224,
									"name": "new IPAddressField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3225,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5152,
												"name": "CharFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 3221,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2307,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2306,
								"name": "default.constructor"
							}
						},
						{
							"id": 3227,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2310,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 3228,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2311,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 3245,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3246,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3247,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2328,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 3242,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2169,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2325,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 3237,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2320,
								"name": "default.blank"
							}
						},
						{
							"id": 3238,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2321,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 3241,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2324,
								"name": "default.choices"
							}
						},
						{
							"id": 3240,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2323,
								"name": "default.helpText"
							}
						},
						{
							"id": 3239,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2322,
								"name": "default.label"
							}
						},
						{
							"id": 3226,
							"name": "maxLength",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 18,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2309,
								"name": "default.maxLength"
							}
						},
						{
							"id": 3243,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2326,
								"name": "default.readOnly"
							}
						},
						{
							"id": 3244,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2327,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 3222,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/IPAddressField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'IPAddressField'",
							"overwrites": {
								"type": "reference",
								"id": 2305,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 3275,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3276,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2074,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2358,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 3261,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3262,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2978,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2344,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 3271,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3272,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2354,
								"name": "default.isBound"
							}
						},
						{
							"id": 3229,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3230,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 3231,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3232,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2312,
								"name": "default.model"
							}
						},
						{
							"id": 3233,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3234,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 3235,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3236,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2316,
								"name": "default.name"
							}
						},
						{
							"id": 3273,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3274,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2356,
								"name": "default.value"
							}
						},
						{
							"id": 3269,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3270,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2974,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2353,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2352,
								"name": "default.clone"
							}
						},
						{
							"id": 3277,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3278,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 3279,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2361,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2360,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 3248,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3249,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 3250,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2332,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2331,
								"name": "default.format"
							}
						},
						{
							"id": 3265,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3266,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 3267,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3268,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2349,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2348,
								"name": "default.isEqual"
							}
						},
						{
							"id": 3254,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3255,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 3256,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2338,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2337,
								"name": "default.normalize"
							}
						},
						{
							"id": 3251,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3252,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 3253,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2335,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2334,
								"name": "default.parse"
							}
						},
						{
							"id": 3257,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3258,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 3259,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3260,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2341,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2340,
								"name": "default.toJS"
							}
						},
						{
							"id": 3263,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3264,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2347,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2346,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3223
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3227,
								3228,
								3245,
								3242,
								3237,
								3238,
								3241,
								3240,
								3239,
								3226,
								3243,
								3244,
								3222
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3275,
								3261,
								3271,
								3229,
								3233,
								3273
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3269,
								3277,
								3248,
								3265,
								3254,
								3251,
								3257,
								3263
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/IPAddressField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2304,
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3221
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/IPAddressField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3280,
			"name": "fields/ImageField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3281,
					"name": "ImageField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Image field.",
						"text": "ImageField is an exact match of FileField, however the representation (format/widget) will be different.\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 3283,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3284,
									"name": "new ImageField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3285,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2906,
												"typeArguments": [
													{
														"type": "reference",
														"id": 5173,
														"qualifiedName": "File",
														"package": "typescript",
														"name": "File"
													},
													{
														"type": "reference",
														"id": 5173,
														"qualifiedName": "File",
														"package": "typescript",
														"name": "File"
													}
												],
												"name": "FieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 3281,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3044,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3043,
								"name": "default.constructor"
							}
						},
						{
							"id": 3286,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 5173,
								"qualifiedName": "File",
								"package": "typescript",
								"name": "File"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3046,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 3287,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 5173,
								"qualifiedName": "File",
								"package": "typescript",
								"name": "File"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3047,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 3304,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 5173,
										"qualifiedName": "File",
										"package": "typescript",
										"name": "File"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3305,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3306,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 5173,
																"qualifiedName": "File",
																"package": "typescript",
																"name": "File"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"id": 5173,
																				"qualifiedName": "File",
																				"package": "typescript",
																				"name": "File"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3064,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 3301,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2169,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"id": 5173,
										"qualifiedName": "File",
										"package": "typescript",
										"name": "File"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3061,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 3296,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3056,
								"name": "default.blank"
							}
						},
						{
							"id": 3297,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3057,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 3300,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 5173,
										"qualifiedName": "File",
										"package": "typescript",
										"name": "File"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3060,
								"name": "default.choices"
							}
						},
						{
							"id": 3299,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3059,
								"name": "default.helpText"
							}
						},
						{
							"id": 3298,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3058,
								"name": "default.label"
							}
						},
						{
							"id": 3302,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3062,
								"name": "default.readOnly"
							}
						},
						{
							"id": 3303,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3063,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 3282,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/ImageField.ts",
									"line": 12,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'ImageField'",
							"overwrites": {
								"type": "reference",
								"id": 3042,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 3334,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3335,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2074,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FileField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3094,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 3320,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3321,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2978,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FileField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3080,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 3330,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3331,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FileField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3090,
								"name": "default.isBound"
							}
						},
						{
							"id": 3288,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3289,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FileField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 3290,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3291,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FileField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3048,
								"name": "default.model"
							}
						},
						{
							"id": 3292,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3293,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FileField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 3294,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3295,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FileField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3052,
								"name": "default.name"
							}
						},
						{
							"id": 3332,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3333,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FileField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3092,
								"name": "default.value"
							}
						},
						{
							"id": 3328,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3329,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2974,
										"typeArguments": [
											{
												"type": "reference",
												"id": 5173,
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											},
											{
												"type": "reference",
												"id": 5173,
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											},
											{
												"type": "reference",
												"id": 5173,
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3089,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3088,
								"name": "default.clone"
							}
						},
						{
							"id": 3336,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3337,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 3338,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3097,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3096,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 3307,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3308,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 3309,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 5173,
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3068,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3067,
								"name": "default.format"
							}
						},
						{
							"id": 3324,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3325,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 3326,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5173,
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										},
										{
											"id": 3327,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5173,
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3085,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3084,
								"name": "default.isEqual"
							}
						},
						{
							"id": 3313,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3314,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 3315,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 5173,
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 5173,
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3074,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3073,
								"name": "default.normalize"
							}
						},
						{
							"id": 3310,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3311,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 3312,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 5173,
														"qualifiedName": "File",
														"package": "typescript",
														"name": "File"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 5173,
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3071,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3070,
								"name": "default.parse"
							}
						},
						{
							"id": 3316,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3317,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 3318,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 5173,
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3319,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3077,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3076,
								"name": "default.toJS"
							}
						},
						{
							"id": 3322,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3323,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3083,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3082,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3283
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3286,
								3287,
								3304,
								3301,
								3296,
								3297,
								3300,
								3299,
								3298,
								3302,
								3303,
								3282
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3334,
								3320,
								3330,
								3288,
								3292,
								3332
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3328,
								3336,
								3307,
								3324,
								3313,
								3310,
								3316,
								3322
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/ImageField.ts",
							"line": 11,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3041,
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3281
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/ImageField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3339,
			"name": "fields/IntegerField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3340,
					"name": "IntegerField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 3342,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3343,
									"name": "new IntegerField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3344,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3651,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"name": "NumberFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 3340,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3659,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3658,
								"name": "default.constructor"
							}
						},
						{
							"id": 3350,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3665,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 3351,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3666,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 3368,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3369,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3370,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3683,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 3365,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2169,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3680,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 3360,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3675,
								"name": "default.blank"
							}
						},
						{
							"id": 3361,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3676,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 3364,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3679,
								"name": "default.choices"
							}
						},
						{
							"id": 3363,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3678,
								"name": "default.helpText"
							}
						},
						{
							"id": 3362,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3677,
								"name": "default.label"
							}
						},
						{
							"id": 3349,
							"name": "maxValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
									"line": 25,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3664,
								"name": "default.maxValue"
							}
						},
						{
							"id": 3348,
							"name": "minValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
									"line": 24,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3663,
								"name": "default.minValue"
							}
						},
						{
							"id": 3366,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3681,
								"name": "default.readOnly"
							}
						},
						{
							"id": 3367,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3682,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 3341,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/IntegerField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'IntegerField'",
							"overwrites": {
								"type": "reference",
								"id": 3657,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 3395,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3396,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2074,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3713,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 3381,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3382,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2978,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3699,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 3391,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3392,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3709,
								"name": "default.isBound"
							}
						},
						{
							"id": 3352,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3353,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 3354,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3355,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3667,
								"name": "default.model"
							}
						},
						{
							"id": 3356,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3357,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 3358,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3359,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3671,
								"name": "default.name"
							}
						},
						{
							"id": 3393,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3394,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3711,
								"name": "default.value"
							}
						},
						{
							"id": 3389,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3390,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2974,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3708,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3707,
								"name": "default.clone"
							}
						},
						{
							"id": 3397,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3398,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 3399,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3716,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3715,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 3371,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3372,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 3373,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3687,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3686,
								"name": "default.format"
							}
						},
						{
							"id": 3385,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3386,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 3387,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 3388,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3704,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3703,
								"name": "default.isEqual"
							}
						},
						{
							"id": 3374,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3375,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 3376,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3693,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3692,
								"name": "default.normalize"
							}
						},
						{
							"id": 3345,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/IntegerField.ts",
									"line": 9,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3346,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 3347,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 3690,
										"name": "default.parse"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3689,
								"name": "default.parse"
							}
						},
						{
							"id": 3377,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3378,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 3379,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3380,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3696,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3695,
								"name": "default.toJS"
							}
						},
						{
							"id": 3383,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3384,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3702,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3701,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3342
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3350,
								3351,
								3368,
								3365,
								3360,
								3361,
								3364,
								3363,
								3362,
								3349,
								3348,
								3366,
								3367,
								3341
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3395,
								3381,
								3391,
								3352,
								3356,
								3393
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3389,
								3397,
								3371,
								3385,
								3374,
								3345,
								3377,
								3383
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/IntegerField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3656,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "number"
										}
									]
								}
							],
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3340
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/IntegerField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3400,
			"name": "fields/IntegerRangeField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3401,
					"name": "IntegerRangeField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 3403,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3404,
									"name": "new IntegerRangeField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3405,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5161,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"name": "RangeFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 3401,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3784,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3783,
								"name": "default.constructor"
							}
						},
						{
							"id": 3407,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3788,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 3408,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3789,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 3425,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3426,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3427,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3806,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 3422,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2169,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3803,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 3417,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3798,
								"name": "default.blank"
							}
						},
						{
							"id": 3418,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3799,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 3421,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3802,
								"name": "default.choices"
							}
						},
						{
							"id": 3420,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3801,
								"name": "default.helpText"
							}
						},
						{
							"id": 3419,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3800,
								"name": "default.label"
							}
						},
						{
							"id": 3423,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3804,
								"name": "default.readOnly"
							}
						},
						{
							"id": 3406,
							"name": "separator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
									"line": 17,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3787,
								"name": "default.separator"
							}
						},
						{
							"id": 3424,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3805,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 3402,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/IntegerRangeField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'IntegerRangeField'",
							"overwrites": {
								"type": "reference",
								"id": 3782,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 3455,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3456,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2074,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3836,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 3441,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3442,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2978,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3822,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 3451,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3452,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3832,
								"name": "default.isBound"
							}
						},
						{
							"id": 3409,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3410,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 3411,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3412,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3790,
								"name": "default.model"
							}
						},
						{
							"id": 3413,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3414,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 3415,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3416,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3794,
								"name": "default.name"
							}
						},
						{
							"id": 3453,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3454,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3834,
								"name": "default.value"
							}
						},
						{
							"id": 3449,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3450,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2974,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3831,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3830,
								"name": "default.clone"
							}
						},
						{
							"id": 3457,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3458,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 3459,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3839,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3838,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 3428,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3429,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 3430,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3810,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3809,
								"name": "default.format"
							}
						},
						{
							"id": 3445,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3446,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 3447,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 3448,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3827,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3826,
								"name": "default.isEqual"
							}
						},
						{
							"id": 3434,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3435,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 3436,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3816,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3815,
								"name": "default.normalize"
							}
						},
						{
							"id": 3431,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3432,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 3433,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3813,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3812,
								"name": "default.parse"
							}
						},
						{
							"id": 3437,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3438,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 3439,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3440,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3819,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3818,
								"name": "default.toJS"
							}
						},
						{
							"id": 3443,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3444,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3825,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3824,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3403
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3407,
								3408,
								3425,
								3422,
								3417,
								3418,
								3421,
								3420,
								3419,
								3423,
								3406,
								3424,
								3402
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3455,
								3441,
								3451,
								3409,
								3413,
								3453
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3449,
								3457,
								3428,
								3445,
								3434,
								3431,
								3437,
								3443
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/IntegerRangeField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3781,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "number"
								}
							],
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3401
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/IntegerRangeField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3460,
			"name": "fields/JsonField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3465,
					"name": "JsonField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"originalName": "default",
					"children": [
						{
							"id": 3467,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3468,
									"name": "new JsonField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3469,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5152,
												"name": "CharFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 3465,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2307,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2306,
								"name": "default.constructor"
							}
						},
						{
							"id": 3475,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2310,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 3476,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2311,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 3493,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3494,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3495,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2328,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 3490,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2169,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2325,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 3485,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2320,
								"name": "default.blank"
							}
						},
						{
							"id": 3486,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2321,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 3489,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2324,
								"name": "default.choices"
							}
						},
						{
							"id": 3488,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2323,
								"name": "default.helpText"
							}
						},
						{
							"id": 3487,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2322,
								"name": "default.label"
							}
						},
						{
							"id": 3474,
							"name": "maxLength",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 18,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2309,
								"name": "default.maxLength"
							}
						},
						{
							"id": 3491,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2326,
								"name": "default.readOnly"
							}
						},
						{
							"id": 3492,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2327,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 3466,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/JsonField.ts",
									"line": 14,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'JsonField'",
							"overwrites": {
								"type": "reference",
								"id": 2305,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 3520,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3521,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2074,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2358,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 3506,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3507,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2978,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2344,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 3516,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3517,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2354,
								"name": "default.isBound"
							}
						},
						{
							"id": 3477,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3478,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 3479,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3480,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2312,
								"name": "default.model"
							}
						},
						{
							"id": 3481,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3482,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 3483,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3484,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2316,
								"name": "default.name"
							}
						},
						{
							"id": 3518,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3519,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2356,
								"name": "default.value"
							}
						},
						{
							"id": 3514,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3515,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2974,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2353,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2352,
								"name": "default.clone"
							}
						},
						{
							"id": 3522,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3523,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 3524,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2361,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2360,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 3496,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3497,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 3498,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2332,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2331,
								"name": "default.format"
							}
						},
						{
							"id": 3510,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3511,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 3512,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3513,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2349,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2348,
								"name": "default.isEqual"
							}
						},
						{
							"id": 3499,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3500,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 3501,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2338,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2337,
								"name": "default.normalize"
							}
						},
						{
							"id": 3470,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/JsonField.ts",
									"line": 15,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3471,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"typeParameter": [
										{
											"id": 3472,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 3473,
											"name": "json",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3461,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3472,
														"name": "T"
													}
												],
												"name": "JSON"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3472,
										"name": "T"
									},
									"overwrites": {
										"type": "reference",
										"id": 2335,
										"name": "default.parse"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 2334,
								"name": "default.parse"
							}
						},
						{
							"id": 3502,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3503,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 3504,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3505,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2341,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2340,
								"name": "default.toJS"
							}
						},
						{
							"id": 3508,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3509,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2347,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2346,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3467
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3475,
								3476,
								3493,
								3490,
								3485,
								3486,
								3489,
								3488,
								3487,
								3474,
								3491,
								3492,
								3466
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3520,
								3506,
								3516,
								3477,
								3481,
								3518
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3514,
								3522,
								3496,
								3510,
								3499,
								3470,
								3502,
								3508
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/JsonField.ts",
							"line": 13,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2304,
							"name": "default"
						}
					]
				},
				{
					"id": 3461,
					"name": "JSON",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/JsonField.ts",
							"line": 3,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 3464,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3462,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3463,
											"name": " __JSON",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/viewmodel/src/fields/JsonField.ts",
													"line": 3,
													"character": 33
												}
											],
											"type": {
												"type": "reference",
												"id": 3464,
												"name": "T"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3463
											]
										}
									],
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/fields/JsonField.ts",
											"line": 3,
											"character": 31
										}
									]
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3465
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						3461
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/JsonField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3525,
			"name": "fields/ListField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3526,
					"name": "ListField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "A container field for an array of values",
						"text": "You must pass `childField` which is the underlying field for each value in the\nlist. `ListField` will call `format`, `parse`, and `normalize` on this field for\neach value in the list.\n\nBy default `defaultValue` will be set to an empty array unless `blankAsNull` is\n`true` in which case it will be set to `null`. `normalize` and `parse` also behave\nin the same way (a falsy value passed to these will either return an empty array\nwhen `blankAsNull` is false or null when it is true).\n\n```js\nconst listOfInts = new ListField({ childField: new IntegerField() });\n```\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 3528,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/ListField.ts",
									"line": 27,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3529,
									"name": "new ListField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 3530,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										},
										{
											"id": 3531,
											"name": "ParsableType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "reference",
												"id": 3530,
												"name": "T"
											}
										}
									],
									"parameters": [
										{
											"id": 3532,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 3533,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 3534,
																	"name": "childField",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "js-packages/@prestojs/viewmodel/src/fields/ListField.ts",
																			"line": 37,
																			"character": 9
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 2974,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 3530,
																				"name": "T"
																			},
																			{
																				"type": "reference",
																				"id": 3531,
																				"name": "ParsableType"
																			},
																			{
																				"type": "reference",
																				"id": 3530,
																				"name": "T"
																			}
																		],
																		"name": "default"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		3534
																	]
																}
															]
														}
													},
													{
														"type": "reference",
														"id": 2906,
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 3530,
																	"name": "T"
																}
															},
															{
																"type": "reference",
																"id": 3530,
																"name": "T"
															}
														],
														"name": "FieldProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3526,
										"typeArguments": [
											{
												"type": "reference",
												"id": 3530,
												"name": "T"
											},
											{
												"type": "reference",
												"id": 3531,
												"name": "ParsableType"
											}
										],
										"name": "default"
									},
									"overwrites": {
										"type": "reference",
										"id": 2977,
										"name": "default.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 2976,
								"name": "default.constructor"
							}
						},
						{
							"id": 3549,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3530,
									"name": "T"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2982,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 3550,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3531,
									"name": "ParsableType"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2983,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 3567,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 3530,
											"name": "T"
										}
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3568,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3569,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 3530,
																	"name": "T"
																}
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"id": 3530,
																					"name": "T"
																				}
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3002,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 3564,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2169,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"id": 3530,
										"name": "T"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2999,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 3559,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2994,
								"name": "default.blank"
							}
						},
						{
							"id": 3560,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2995,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 3535,
							"name": "childField",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/ListField.ts",
									"line": 25,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2974,
								"typeArguments": [
									{
										"type": "reference",
										"id": 3530,
										"name": "T"
									},
									{
										"type": "reference",
										"id": 3531,
										"name": "ParsableType"
									},
									{
										"type": "reference",
										"id": 3530,
										"name": "T"
									}
								],
								"name": "default"
							}
						},
						{
							"id": 3563,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 3530,
										"name": "T"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2998,
								"name": "default.choices"
							}
						},
						{
							"id": 3562,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2997,
								"name": "default.helpText"
							}
						},
						{
							"id": 3561,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2996,
								"name": "default.label"
							}
						},
						{
							"id": 3565,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3000,
								"name": "default.readOnly"
							}
						},
						{
							"id": 3566,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3001,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 3527,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/ListField.ts",
									"line": 23,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'ListField'",
							"overwrites": {
								"type": "reference",
								"id": 2975,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 3584,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3585,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2074,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3032,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 3574,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3575,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2978,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3018,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 3580,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3581,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3028,
								"name": "default.isBound"
							}
						},
						{
							"id": 3551,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3552,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 3553,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3554,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2985,
								"name": "default.model"
							}
						},
						{
							"id": 3555,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3556,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 3557,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3558,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2990,
								"name": "default.name"
							}
						},
						{
							"id": 3582,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3583,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3030,
								"name": "default.value"
							}
						},
						{
							"id": 3578,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3579,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2974,
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 3530,
													"name": "T"
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 3530,
													"name": "T"
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 3530,
													"name": "T"
												}
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3027,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3026,
								"name": "default.clone"
							}
						},
						{
							"id": 3586,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3587,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 3588,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3035,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3034,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 3536,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/ListField.ts",
									"line": 46,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3537,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Calls `childField.format` on each entry in the passed array"
									},
									"parameters": [
										{
											"id": 3538,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 3530,
													"name": "T"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"overwrites": {
										"type": "reference",
										"id": 3006,
										"name": "default.format"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3005,
								"name": "default.format"
							}
						},
						{
							"id": 3545,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/ListField.ts",
									"line": 97,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3546,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 3547,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 3530,
													"name": "T"
												}
											}
										},
										{
											"id": 3548,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 3530,
													"name": "T"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"overwrites": {
										"type": "reference",
										"id": 3023,
										"name": "default.isEqual"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3022,
								"name": "default.isEqual"
							}
						},
						{
							"id": 3542,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/ListField.ts",
									"line": 80,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3543,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Calls `childField.parse` on each entry in the passed array",
										"text": "If `value` is falsy or an empty array and `blankAsNull` is true\nit will return `null` or if `blankAsNull` is false then it\nwill return an empty array.\n"
									},
									"parameters": [
										{
											"id": 3544,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 3530,
													"name": "T"
												}
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 3012,
										"name": "default.normalize"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3011,
								"name": "default.normalize"
							}
						},
						{
							"id": 3539,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/ListField.ts",
									"line": 60,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3540,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Calls `childField.parse` on each entry in the passed array",
										"text": "If `value` is falsy or an empty array and `blankAsNull` is true\nit will return `null` or if `blankAsNull` is false then it\nwill return an empty array.\n"
									},
									"parameters": [
										{
											"id": 3541,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 3531,
															"name": "ParsableType"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 3530,
													"name": "T"
												}
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 3009,
										"name": "default.parse"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3008,
								"name": "default.parse"
							}
						},
						{
							"id": 3570,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3571,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 3572,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 3530,
													"name": "T"
												}
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3573,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3015,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3014,
								"name": "default.toJS"
							}
						},
						{
							"id": 3576,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3577,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3021,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3020,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3528
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3549,
								3550,
								3567,
								3564,
								3559,
								3560,
								3535,
								3563,
								3562,
								3561,
								3565,
								3566,
								3527
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3584,
								3574,
								3580,
								3551,
								3555,
								3582
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3578,
								3586,
								3536,
								3545,
								3542,
								3539,
								3570,
								3576
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/ListField.ts",
							"line": 22,
							"character": 21
						}
					],
					"typeParameter": [
						{
							"id": 3589,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 3590,
							"name": "ParsableType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "reference",
								"id": 3530,
								"name": "T"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2974,
							"typeArguments": [
								{
									"type": "array",
									"elementType": {
										"type": "reference",
										"id": 3530,
										"name": "T"
									}
								},
								{
									"type": "array",
									"elementType": {
										"type": "reference",
										"id": 3531,
										"name": "ParsableType"
									}
								},
								{
									"type": "reference",
									"id": 3530,
									"name": "T"
								}
							],
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3526
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/ListField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3591,
			"name": "fields/NullableBooleanField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3592,
					"name": "NullableBooleanField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Field for Boolean type values with Null being a valid option. Count both undefined and null as null instead of False.",
						"text": "Follows standard javascript Truthy and Falsy definition except undefined and null.\n\nSee also: [BooleanField](doc:BooleanField).\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 3594,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3595,
									"name": "new NullableBooleanField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3596,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2906,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "FieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 3592,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2977,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2976,
								"name": "default.constructor"
							}
						},
						{
							"id": 3600,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2982,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 3601,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2983,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 3618,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3619,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3620,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "boolean"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3002,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 3615,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2169,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2999,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 3610,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2994,
								"name": "default.blank"
							}
						},
						{
							"id": 3611,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2995,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 3614,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2998,
								"name": "default.choices"
							}
						},
						{
							"id": 3613,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2997,
								"name": "default.helpText"
							}
						},
						{
							"id": 3612,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2996,
								"name": "default.label"
							}
						},
						{
							"id": 3616,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3000,
								"name": "default.readOnly"
							}
						},
						{
							"id": 3617,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3001,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 3593,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NullableBooleanField.ts",
									"line": 14,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'NullableBooleanField'",
							"overwrites": {
								"type": "reference",
								"id": 2975,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 3645,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3646,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2074,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3032,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 3631,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3632,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2978,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3018,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 3641,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3642,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3028,
								"name": "default.isBound"
							}
						},
						{
							"id": 3602,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3603,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 3604,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3605,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2985,
								"name": "default.model"
							}
						},
						{
							"id": 3606,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3607,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 3608,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3609,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2990,
								"name": "default.name"
							}
						},
						{
							"id": 3643,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3644,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3030,
								"name": "default.value"
							}
						},
						{
							"id": 3639,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3640,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2974,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3027,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3026,
								"name": "default.clone"
							}
						},
						{
							"id": 3647,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3648,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 3649,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3035,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3034,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 3621,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3622,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 3623,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3006,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3005,
								"name": "default.format"
							}
						},
						{
							"id": 3635,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3636,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 3637,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 3638,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3023,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3022,
								"name": "default.isEqual"
							}
						},
						{
							"id": 3624,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3625,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 3626,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3012,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3011,
								"name": "default.normalize"
							}
						},
						{
							"id": 3597,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NullableBooleanField.ts",
									"line": 15,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3598,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 3599,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 3009,
										"name": "default.parse"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3008,
								"name": "default.parse"
							}
						},
						{
							"id": 3627,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3628,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 3629,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3630,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3015,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3014,
								"name": "default.toJS"
							}
						},
						{
							"id": 3633,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3634,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3021,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3020,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3594
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3600,
								3601,
								3618,
								3615,
								3610,
								3611,
								3614,
								3613,
								3612,
								3616,
								3617,
								3593
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3645,
								3631,
								3641,
								3602,
								3606,
								3643
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3639,
								3647,
								3621,
								3635,
								3624,
								3597,
								3627,
								3633
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/NullableBooleanField.ts",
							"line": 13,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2974,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "boolean"
								}
							],
							"name": "default"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 2245,
							"name": "BooleanField"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3592
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/NullableBooleanField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3650,
			"name": "fields/NumberField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3656,
					"name": "NumberField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Base class for numeric fields",
						"text": "Other numeric fields (IntegerField, DecimalField, FloatField...) will extend this.\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 3658,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
									"line": 27,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3659,
									"name": "new NumberField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 3660,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										},
										{
											"id": 3661,
											"name": "ParsableValueT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "reference",
												"id": 3660,
												"name": "T"
											}
										}
									],
									"parameters": [
										{
											"id": 3662,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3651,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3660,
														"name": "T"
													}
												],
												"name": "NumberFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 3656,
										"typeArguments": [
											{
												"type": "reference",
												"id": 3660,
												"name": "T"
											},
											{
												"type": "reference",
												"id": 3661,
												"name": "ParsableValueT"
											}
										],
										"name": "default"
									},
									"overwrites": {
										"type": "reference",
										"id": 2977,
										"name": "default.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 2976,
								"name": "default.constructor"
							}
						},
						{
							"id": 3665,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 3660,
								"name": "T"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2982,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 3666,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 3661,
								"name": "ParsableValueT"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2983,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 3683,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 3660,
										"name": "T"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3684,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3685,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 3660,
																"name": "T"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"id": 3660,
																				"name": "T"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3002,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 3680,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2169,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"id": 3660,
										"name": "T"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2999,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 3675,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2994,
								"name": "default.blank"
							}
						},
						{
							"id": 3676,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2995,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 3679,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 3660,
										"name": "T"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2998,
								"name": "default.choices"
							}
						},
						{
							"id": 3678,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2997,
								"name": "default.helpText"
							}
						},
						{
							"id": 3677,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2996,
								"name": "default.label"
							}
						},
						{
							"id": 3664,
							"name": "maxValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
									"line": 25,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3663,
							"name": "minValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
									"line": 24,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3681,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3000,
								"name": "default.readOnly"
							}
						},
						{
							"id": 3682,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3001,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 3657,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
									"line": 23,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'NumberField'",
							"overwrites": {
								"type": "reference",
								"id": 2975,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 3713,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3714,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2074,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3032,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 3699,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3700,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2978,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3018,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 3709,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3710,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3028,
								"name": "default.isBound"
							}
						},
						{
							"id": 3667,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3668,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 3669,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3670,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2985,
								"name": "default.model"
							}
						},
						{
							"id": 3671,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3672,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 3673,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3674,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2990,
								"name": "default.name"
							}
						},
						{
							"id": 3711,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3712,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3030,
								"name": "default.value"
							}
						},
						{
							"id": 3707,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3708,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2974,
										"typeArguments": [
											{
												"type": "reference",
												"id": 3660,
												"name": "T"
											},
											{
												"type": "reference",
												"id": 3660,
												"name": "T"
											},
											{
												"type": "reference",
												"id": 3660,
												"name": "T"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3027,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3026,
								"name": "default.clone"
							}
						},
						{
							"id": 3715,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3716,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 3717,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3035,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3034,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 3686,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3687,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 3688,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 3660,
												"name": "T"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3006,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3005,
								"name": "default.format"
							}
						},
						{
							"id": 3703,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3704,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 3705,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3660,
												"name": "T"
											}
										},
										{
											"id": 3706,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3660,
												"name": "T"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3023,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3022,
								"name": "default.isEqual"
							}
						},
						{
							"id": 3692,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3693,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 3694,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 3661,
												"name": "ParsableValueT"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 3660,
												"name": "T"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3012,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3011,
								"name": "default.normalize"
							}
						},
						{
							"id": 3689,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3690,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 3691,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 3661,
														"name": "ParsableValueT"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 3660,
												"name": "T"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3009,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3008,
								"name": "default.parse"
							}
						},
						{
							"id": 3695,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3696,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 3697,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 3660,
												"name": "T"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3698,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3015,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3014,
								"name": "default.toJS"
							}
						},
						{
							"id": 3701,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3702,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3021,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3020,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3658
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3665,
								3666,
								3683,
								3680,
								3675,
								3676,
								3679,
								3678,
								3677,
								3664,
								3663,
								3681,
								3682,
								3657
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3713,
								3699,
								3709,
								3667,
								3671,
								3711
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3707,
								3715,
								3686,
								3703,
								3692,
								3689,
								3695,
								3701
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
							"line": 19,
							"character": 21
						}
					],
					"typeParameter": [
						{
							"id": 3718,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 3719,
							"name": "ParsableValueT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "reference",
								"id": 3660,
								"name": "T"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2974,
							"typeArguments": [
								{
									"type": "reference",
									"id": 3660,
									"name": "T"
								},
								{
									"type": "reference",
									"id": 3661,
									"name": "ParsableValueT"
								}
							],
							"name": "default"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 2664,
							"name": "DecimalField"
						},
						{
							"type": "reference",
							"id": 3100,
							"name": "FloatField"
						},
						{
							"type": "reference",
							"id": 3340,
							"name": "IntegerField"
						}
					]
				},
				{
					"id": 3651,
					"name": "NumberFieldProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "expand-properties",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
							"line": 6,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 3655,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"id": 2906,
								"typeArguments": [
									{
										"type": "reference",
										"id": 3655,
										"name": "T"
									}
								],
								"name": "FieldProps"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3652,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3654,
											"name": "maxValue",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
													"line": 8,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 3653,
											"name": "minValue",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
													"line": 7,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3654,
												3653
											]
										}
									],
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
											"line": 6,
											"character": 50
										}
									]
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3656
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						3651
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3720,
			"name": "fields/PasswordField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3721,
					"name": "PasswordField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 3723,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3724,
									"name": "new PasswordField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3725,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5152,
												"name": "CharFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 3721,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2307,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2306,
								"name": "default.constructor"
							}
						},
						{
							"id": 3727,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2310,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 3728,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2311,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 3745,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3746,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3747,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2328,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 3742,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2169,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2325,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 3737,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2320,
								"name": "default.blank"
							}
						},
						{
							"id": 3738,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2321,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 3741,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2324,
								"name": "default.choices"
							}
						},
						{
							"id": 3740,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2323,
								"name": "default.helpText"
							}
						},
						{
							"id": 3739,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2322,
								"name": "default.label"
							}
						},
						{
							"id": 3726,
							"name": "maxLength",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 18,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2309,
								"name": "default.maxLength"
							}
						},
						{
							"id": 3743,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2326,
								"name": "default.readOnly"
							}
						},
						{
							"id": 3744,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2327,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 3722,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/PasswordField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'PasswordField'",
							"overwrites": {
								"type": "reference",
								"id": 2305,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 3775,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3776,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2074,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2358,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 3761,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3762,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2978,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2344,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 3771,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3772,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2354,
								"name": "default.isBound"
							}
						},
						{
							"id": 3729,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3730,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 3731,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3732,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2312,
								"name": "default.model"
							}
						},
						{
							"id": 3733,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3734,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 3735,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3736,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2316,
								"name": "default.name"
							}
						},
						{
							"id": 3773,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3774,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2356,
								"name": "default.value"
							}
						},
						{
							"id": 3769,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3770,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2974,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2353,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2352,
								"name": "default.clone"
							}
						},
						{
							"id": 3777,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3778,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 3779,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2361,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2360,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 3748,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3749,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 3750,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2332,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2331,
								"name": "default.format"
							}
						},
						{
							"id": 3765,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3766,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 3767,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3768,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2349,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2348,
								"name": "default.isEqual"
							}
						},
						{
							"id": 3754,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3755,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 3756,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2338,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2337,
								"name": "default.normalize"
							}
						},
						{
							"id": 3751,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3752,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 3753,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2335,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2334,
								"name": "default.parse"
							}
						},
						{
							"id": 3757,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3758,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 3759,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3760,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2341,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2340,
								"name": "default.toJS"
							}
						},
						{
							"id": 3763,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3764,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2347,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2346,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3723
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3727,
								3728,
								3745,
								3742,
								3737,
								3738,
								3741,
								3740,
								3739,
								3726,
								3743,
								3744,
								3722
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3775,
								3761,
								3771,
								3729,
								3733,
								3773
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3769,
								3777,
								3748,
								3765,
								3754,
								3751,
								3757,
								3763
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/PasswordField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2304,
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3721
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/PasswordField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3780,
			"name": "fields/RangeField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3781,
					"name": "RangeField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Base class for range fields (see: https://www.postgresql.org/docs/9.6/rangetypes.html).",
						"text": "Other range based fields (DateTimeRangeField, IntegerRangeField, ...) will extend this.\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 3783,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
									"line": 19,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3784,
									"name": "new RangeField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 3785,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 3786,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5161,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3785,
														"name": "T"
													}
												],
												"name": "RangeFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 3781,
										"typeArguments": [
											{
												"type": "reference",
												"id": 3785,
												"name": "T"
											}
										],
										"name": "default"
									},
									"overwrites": {
										"type": "reference",
										"id": 2977,
										"name": "default.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 2976,
								"name": "default.constructor"
							}
						},
						{
							"id": 3788,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 3785,
								"name": "T"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2982,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 3789,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 3785,
								"name": "T"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2983,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 3806,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 3785,
										"name": "T"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3807,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3808,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 3785,
																"name": "T"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"id": 3785,
																				"name": "T"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3002,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 3803,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2169,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"id": 3785,
										"name": "T"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2999,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 3798,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2994,
								"name": "default.blank"
							}
						},
						{
							"id": 3799,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2995,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 3802,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 3785,
										"name": "T"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2998,
								"name": "default.choices"
							}
						},
						{
							"id": 3801,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2997,
								"name": "default.helpText"
							}
						},
						{
							"id": 3800,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2996,
								"name": "default.label"
							}
						},
						{
							"id": 3804,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3000,
								"name": "default.readOnly"
							}
						},
						{
							"id": 3787,
							"name": "separator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
									"line": 17,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3805,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3001,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 3782,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
									"line": 16,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'RangeField'",
							"overwrites": {
								"type": "reference",
								"id": 2975,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 3836,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3837,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2074,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3032,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 3822,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3823,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2978,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3018,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 3832,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3833,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3028,
								"name": "default.isBound"
							}
						},
						{
							"id": 3790,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3791,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 3792,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3793,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2985,
								"name": "default.model"
							}
						},
						{
							"id": 3794,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3795,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 3796,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3797,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2990,
								"name": "default.name"
							}
						},
						{
							"id": 3834,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3835,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3030,
								"name": "default.value"
							}
						},
						{
							"id": 3830,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3831,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2974,
										"typeArguments": [
											{
												"type": "reference",
												"id": 3785,
												"name": "T"
											},
											{
												"type": "reference",
												"id": 3785,
												"name": "T"
											},
											{
												"type": "reference",
												"id": 3785,
												"name": "T"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3027,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3026,
								"name": "default.clone"
							}
						},
						{
							"id": 3838,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3839,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 3840,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3035,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3034,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 3809,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3810,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 3811,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 3785,
												"name": "T"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3006,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3005,
								"name": "default.format"
							}
						},
						{
							"id": 3826,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3827,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 3828,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3785,
												"name": "T"
											}
										},
										{
											"id": 3829,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3785,
												"name": "T"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3023,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3022,
								"name": "default.isEqual"
							}
						},
						{
							"id": 3815,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3816,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 3817,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 3785,
												"name": "T"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 3785,
												"name": "T"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3012,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3011,
								"name": "default.normalize"
							}
						},
						{
							"id": 3812,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3813,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 3814,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 3785,
														"name": "T"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 3785,
												"name": "T"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3009,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3008,
								"name": "default.parse"
							}
						},
						{
							"id": 3818,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3819,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 3820,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 3785,
												"name": "T"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3821,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3015,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3014,
								"name": "default.toJS"
							}
						},
						{
							"id": 3824,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3825,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3021,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3020,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3783
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3788,
								3789,
								3806,
								3803,
								3798,
								3799,
								3802,
								3801,
								3800,
								3804,
								3787,
								3805,
								3782
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3836,
								3822,
								3832,
								3790,
								3794,
								3834
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3830,
								3838,
								3809,
								3826,
								3815,
								3812,
								3818,
								3824
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
							"line": 15,
							"character": 21
						}
					],
					"typeParameter": [
						{
							"id": 3841,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2974,
							"typeArguments": [
								{
									"type": "reference",
									"id": 3785,
									"name": "T"
								}
							],
							"name": "default"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 2485,
							"name": "DateRangeField"
						},
						{
							"type": "reference",
							"id": 2604,
							"name": "DateTimeRangeField"
						},
						{
							"type": "reference",
							"id": 2726,
							"name": "DecimalRangeField"
						},
						{
							"type": "reference",
							"id": 3161,
							"name": "FloatRangeField"
						},
						{
							"type": "reference",
							"id": 3401,
							"name": "IntegerRangeField"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3781
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3842,
			"name": "fields/RelatedViewModelField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 5360,
					"name": "<internal>",
					"kind": 4,
					"kindString": "Namespace",
					"flags": {},
					"children": [
						{
							"id": 5363,
							"name": "BaseRelatedViewModelValueType",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 10,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 5364,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 5361,
										"typeArguments": [
											{
												"type": "reference",
												"id": 5364,
												"name": "T"
											}
										],
										"name": "RelatedViewModelValueType"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 5361,
											"typeArguments": [
												{
													"type": "reference",
													"id": 5364,
													"name": "T"
												}
											],
											"name": "RelatedViewModelValueType"
										}
									}
								]
							}
						},
						{
							"id": 5367,
							"name": "RelatedViewModelFieldProps",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "expand-properties",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 20,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 5374,
									"name": "TargetViewModelT",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									}
								},
								{
									"id": 5375,
									"name": "FieldValueT",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 5376,
									"name": "SourceFieldNameT",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 2906,
										"typeArguments": [
											{
												"type": "reference",
												"id": 5375,
												"name": "FieldValueT"
											}
										],
										"name": "FieldProps"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 5368,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 5373,
													"name": "cache",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "The cache to use to retrieve related records from. Uses the default model cache if not specified."
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
															"line": 38,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"id": 1827,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5374,
																"name": "TargetViewModelT"
															}
														],
														"name": "ViewModelCache"
													}
												},
												{
													"id": 5369,
													"name": "sourceFieldName",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "The name of the field on the [ViewModel](doc:viewModelFactory) that stores the\nID for this relation"
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
															"line": 29,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"id": 5376,
														"name": "SourceFieldNameT"
													}
												},
												{
													"id": 5370,
													"name": "to",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Either a [ViewModel](doc:viewModelFactory), a function that returns a [ViewModel](doc:viewModelFactory)\nor a function that returns a `Promise` that resolves to a [ViewModel](doc:viewModelFactory)."
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
															"line": 34,
															"character": 4
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reflection",
																"declaration": {
																	"id": 5371,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
																			"line": 34,
																			"character": 9
																		}
																	],
																	"signatures": [
																		{
																			"id": 5372,
																			"name": "__type",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "reference",
																						"typeArguments": [
																							{
																								"type": "reference",
																								"id": 5374,
																								"name": "TargetViewModelT"
																							}
																						],
																						"qualifiedName": "Promise",
																						"package": "typescript",
																						"name": "Promise"
																					},
																					{
																						"type": "reference",
																						"id": 5374,
																						"name": "TargetViewModelT"
																					}
																				]
																			}
																		}
																	]
																}
															},
															{
																"type": "reference",
																"id": 5374,
																"name": "TargetViewModelT"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														5373,
														5369,
														5370
													]
												}
											],
											"sources": [
												{
													"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
													"line": 24,
													"character": 30
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 5365,
							"name": "RelatedViewModelParsableType",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 13,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 5366,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 2015,
										"typeArguments": [
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "literal",
													"value": "fields"
												},
												"objectType": {
													"type": "reference",
													"id": 5366,
													"name": "T"
												}
											}
										],
										"name": "FieldDataMappingRaw"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 2015,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": "fields"
													},
													"objectType": {
														"type": "reference",
														"id": 5366,
														"name": "T"
													}
												}
											],
											"name": "FieldDataMappingRaw"
										}
									}
								]
							}
						},
						{
							"id": 5361,
							"name": "RelatedViewModelValueType",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 7,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 5362,
									"name": "TargetViewModelT",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 4507,
								"typeArguments": [
									{
										"type": "reference",
										"id": 5362,
										"name": "TargetViewModelT"
									}
								],
								"qualifiedName": "InstanceType",
								"package": "typescript",
								"name": "InstanceType"
							}
						}
					],
					"groups": [
						{
							"title": "Type aliases",
							"kind": 4194304,
							"children": [
								5363,
								5367,
								5365,
								5361
							]
						}
					]
				},
				{
					"id": 3867,
					"name": "BaseRelatedViewModelField",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isAbstract": true
					},
					"comment": {
						"shortText": "We split into RelatedViewModelField (for single records) and ManyRelatedViewModelField (for multiple records)\nmainly to making typing easier.",
						"text": "Use `ManyRelatedViewModelField` if `sourceFieldName` refers to a `ListField` otherwise `RelatedViewModelField`.\n"
					},
					"children": [
						{
							"id": 3869,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 80,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3870,
									"name": "new BaseRelatedViewModelField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 3871,
											"name": "TargetViewModelT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"id": 3871,
														"name": "TargetViewModelT"
													}
												],
												"name": "ViewModelConstructor"
											}
										},
										{
											"id": 3872,
											"name": "FieldValueT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 2074,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "ViewModelInterface"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 4507,
															"typeArguments": [
																{
																	"type": "reference",
																	"id": 3871,
																	"name": "TargetViewModelT"
																}
															],
															"qualifiedName": "InstanceType",
															"package": "typescript",
															"name": "InstanceType"
														}
													}
												]
											}
										},
										{
											"id": 3873,
											"name": "ParsableValueT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5365,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3871,
														"name": "TargetViewModelT"
													}
												],
												"name": "RelatedViewModelParsableType"
											}
										},
										{
											"id": 3874,
											"name": "SourceFieldNameT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 3875,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5367,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3871,
														"name": "TargetViewModelT"
													},
													{
														"type": "reference",
														"id": 3872,
														"name": "FieldValueT"
													},
													{
														"type": "reference",
														"id": 3874,
														"name": "SourceFieldNameT"
													}
												],
												"name": "RelatedViewModelFieldProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3867,
										"typeArguments": [
											{
												"type": "reference",
												"id": 3871,
												"name": "TargetViewModelT"
											},
											{
												"type": "reference",
												"id": 3872,
												"name": "FieldValueT"
											},
											{
												"type": "reference",
												"id": 3873,
												"name": "ParsableValueT"
											},
											{
												"type": "reference",
												"id": 3874,
												"name": "SourceFieldNameT"
											}
										],
										"name": "BaseRelatedViewModelField"
									},
									"overwrites": {
										"type": "reference",
										"id": 2977,
										"name": "default.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 2976,
								"name": "default.constructor"
							}
						},
						{
							"id": 3900,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 3872,
								"name": "FieldValueT"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2982,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 3901,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 3873,
								"name": "ParsableValueT"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2983,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 3881,
							"name": "_cache",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 72,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 1827,
								"typeArguments": [
									{
										"type": "reference",
										"id": 3871,
										"name": "TargetViewModelT"
									}
								],
								"name": "default"
							}
						},
						{
							"id": 3918,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 3872,
										"name": "FieldValueT"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3919,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3920,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 3872,
																"name": "FieldValueT"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"id": 3872,
																				"name": "FieldValueT"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3002,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 3889,
							"name": "_isResolvingDeps",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 119,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3876,
							"name": "_loadTo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 69,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3877,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 3878,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 3871,
														"name": "TargetViewModelT"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 3871,
																"name": "TargetViewModelT"
															}
														],
														"qualifiedName": "Promise",
														"package": "typescript",
														"name": "Promise"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 3879,
							"name": "_resolvedTo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 70,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 3871,
								"name": "TargetViewModelT"
							}
						},
						{
							"id": 3880,
							"name": "_resolvingTo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 71,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 3871,
										"name": "TargetViewModelT"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						},
						{
							"id": 3915,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2169,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"id": 3872,
										"name": "FieldValueT"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2999,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 3910,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2994,
								"name": "default.blank"
							}
						},
						{
							"id": 3911,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2995,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 3914,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 3872,
										"name": "FieldValueT"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2998,
								"name": "default.choices"
							}
						},
						{
							"id": 3913,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2997,
								"name": "default.helpText"
							}
						},
						{
							"id": 3912,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2996,
								"name": "default.label"
							}
						},
						{
							"id": 3916,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3000,
								"name": "default.readOnly"
							}
						},
						{
							"id": 3883,
							"name": "sourceField",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 74,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2974,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "default"
							}
						},
						{
							"id": 3882,
							"name": "sourceFieldName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 73,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 3874,
								"name": "SourceFieldNameT"
							}
						},
						{
							"id": 3917,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3001,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 3868,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 129,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"defaultValue": "null",
							"inheritedFrom": {
								"type": "reference",
								"id": 2975,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 3944,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3945,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2074,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3032,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 3898,
							"name": "cache",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 192,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3899,
									"name": "cache",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1827,
										"typeArguments": [
											{
												"type": "reference",
												"id": 3871,
												"name": "TargetViewModelT"
											}
										],
										"name": "default"
									}
								}
							]
						},
						{
							"id": 3934,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3935,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2978,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3018,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 3940,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3941,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3028,
								"name": "default.isBound"
							}
						},
						{
							"id": 3884,
							"name": "many",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 76,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3885,
									"name": "many",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 3902,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3903,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 3904,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3905,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2985,
								"name": "default.model"
							}
						},
						{
							"id": 3906,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3907,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 3908,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3909,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2990,
								"name": "default.name"
							}
						},
						{
							"id": 3896,
							"name": "to",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 171,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3897,
									"name": "to",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the [ViewModel](doc:viewModelFactory) this related field is to.",
										"text": "If `to` was defined as a function returning a `Promise` then you must call `resolveViewModel`\nand wait for the returned `Promise` to resolve before accessing this otherwise an error will be thrown\n"
									},
									"type": {
										"type": "reference",
										"id": 3871,
										"name": "TargetViewModelT"
									}
								}
							]
						},
						{
							"id": 3942,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3943,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3030,
								"name": "default.value"
							}
						},
						{
							"id": 3938,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3939,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2974,
										"typeArguments": [
											{
												"type": "reference",
												"id": 3872,
												"name": "FieldValueT"
											},
											{
												"type": "reference",
												"id": 3872,
												"name": "FieldValueT"
											},
											{
												"type": "reference",
												"id": 3872,
												"name": "FieldValueT"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3027,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3026,
								"name": "default.clone"
							}
						},
						{
							"id": 3886,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 98,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3887,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isPrivate": true
									},
									"comment": {},
									"parameters": [
										{
											"id": 3888,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3871,
												"name": "TargetViewModelT"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"id": 3035,
										"name": "default.contributeToClass"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3034,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 3921,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3922,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 3923,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 3872,
												"name": "FieldValueT"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3006,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3005,
								"name": "default.format"
							}
						},
						{
							"id": 3892,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 161,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3893,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Compares to relations for equality - if the ViewModel has the same data this returns true"
									},
									"parameters": [
										{
											"id": 3894,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3872,
												"name": "FieldValueT"
											}
										},
										{
											"id": 3895,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3872,
												"name": "FieldValueT"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"overwrites": {
										"type": "reference",
										"id": 3023,
										"name": "default.isEqual"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3022,
								"name": "default.isEqual"
							}
						},
						{
							"id": 3927,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3928,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 3929,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 3873,
												"name": "ParsableValueT"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 3872,
												"name": "FieldValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3012,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3011,
								"name": "default.normalize"
							}
						},
						{
							"id": 3924,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3925,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 3926,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 3873,
														"name": "ParsableValueT"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 3872,
												"name": "FieldValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3009,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3008,
								"name": "default.parse"
							}
						},
						{
							"id": 3890,
							"name": "resolveViewModel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 127,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3891,
									"name": "resolveViewModel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Resolves the ViewModel this field links to. This is necessary as the ViewModel might be a dynamic\nimport that hasn't yet loaded.",
										"text": "This needs to be called manually before `to` can be accessed.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 3871,
												"name": "TargetViewModelT"
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 3930,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3931,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 3932,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 3872,
												"name": "FieldValueT"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3933,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3015,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3014,
								"name": "default.toJS"
							}
						},
						{
							"id": 3936,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3937,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3021,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3020,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3869
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3900,
								3901,
								3881,
								3918,
								3889,
								3876,
								3879,
								3880,
								3915,
								3910,
								3911,
								3914,
								3913,
								3912,
								3916,
								3883,
								3882,
								3917,
								3868
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3944,
								3898,
								3934,
								3940,
								3884,
								3902,
								3906,
								3896,
								3942
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3938,
								3886,
								3921,
								3892,
								3927,
								3924,
								3890,
								3930,
								3936
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
							"line": 62,
							"character": 22
						}
					],
					"typeParameter": [
						{
							"id": 3946,
							"name": "TargetViewModelT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2078,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ViewModelConstructor"
							}
						},
						{
							"id": 3947,
							"name": "FieldValueT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 5363,
								"typeArguments": [
									{
										"type": "reference",
										"id": 3871,
										"name": "TargetViewModelT"
									}
								],
								"name": "BaseRelatedViewModelValueType"
							}
						},
						{
							"id": 3948,
							"name": "ParsableValueT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 5365,
								"typeArguments": [
									{
										"type": "reference",
										"id": 3871,
										"name": "TargetViewModelT"
									}
								],
								"name": "RelatedViewModelParsableType"
							}
						},
						{
							"id": 3949,
							"name": "SourceFieldNameT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2974,
							"typeArguments": [
								{
									"type": "reference",
									"id": 3872,
									"name": "FieldValueT"
								},
								{
									"type": "reference",
									"id": 3873,
									"name": "ParsableValueT"
								}
							],
							"name": "default"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 3950,
							"name": "RelatedViewModelField"
						},
						{
							"type": "reference",
							"id": 4022,
							"name": "ManyRelatedViewModelField"
						}
					]
				},
				{
					"id": 4022,
					"name": "ManyRelatedViewModelField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Define a field that contains multiple records from another ViewModel",
						"text": "This behaves the same as [RelatedViewModelField](doc:RelatedViewModelField) but `sourceFieldName`\nmust refer to a [ListField](doc:ListField) and all values are an array instead of a single value.\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"children": [
						{
							"id": 4024,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 4025,
									"name": "new ManyRelatedViewModelField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 4026,
											"name": "TargetViewModelT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"id": 4026,
														"name": "TargetViewModelT"
													}
												],
												"name": "ViewModelConstructor"
											}
										},
										{
											"id": 4027,
											"name": "SourceFieldNameT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 4028,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5367,
												"typeArguments": [
													{
														"type": "reference",
														"id": 4026,
														"name": "TargetViewModelT"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 4507,
															"typeArguments": [
																{
																	"type": "reference",
																	"id": 4026,
																	"name": "TargetViewModelT"
																}
															],
															"qualifiedName": "InstanceType",
															"package": "typescript",
															"name": "InstanceType"
														}
													},
													{
														"type": "reference",
														"id": 4027,
														"name": "SourceFieldNameT"
													}
												],
												"name": "RelatedViewModelFieldProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 4022,
										"typeArguments": [
											{
												"type": "reference",
												"id": 4026,
												"name": "TargetViewModelT"
											},
											{
												"type": "reference",
												"id": 4027,
												"name": "SourceFieldNameT"
											}
										],
										"name": "ManyRelatedViewModelField"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3870,
										"name": "BaseRelatedViewModelField.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3869,
								"name": "BaseRelatedViewModelField.constructor"
							}
						},
						{
							"id": 4053,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 4507,
									"typeArguments": [
										{
											"type": "reference",
											"id": 4026,
											"name": "TargetViewModelT"
										}
									],
									"qualifiedName": "InstanceType",
									"package": "typescript",
									"name": "InstanceType"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3900,
								"name": "BaseRelatedViewModelField.__fieldValueType"
							}
						},
						{
							"id": 4054,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 2015,
									"typeArguments": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "fields"
											},
											"objectType": {
												"type": "reference",
												"id": 4026,
												"name": "TargetViewModelT"
											}
										}
									],
									"name": "FieldDataMappingRaw"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3901,
								"name": "BaseRelatedViewModelField.__parsableValueType"
							}
						},
						{
							"id": 4071,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 4507,
											"typeArguments": [
												{
													"type": "reference",
													"id": 4026,
													"name": "TargetViewModelT"
												}
											],
											"qualifiedName": "InstanceType",
											"package": "typescript",
											"name": "InstanceType"
										}
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 4072,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 4073,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 4507,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"id": 4026,
																			"name": "TargetViewModelT"
																		}
																	],
																	"qualifiedName": "InstanceType",
																	"package": "typescript",
																	"name": "InstanceType"
																}
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"id": 4507,
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 4026,
																							"name": "TargetViewModelT"
																						}
																					],
																					"qualifiedName": "InstanceType",
																					"package": "typescript",
																					"name": "InstanceType"
																				}
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3918,
								"name": "BaseRelatedViewModelField._defaultValue"
							}
						},
						{
							"id": 4042,
							"name": "_isResolvingDeps",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 119,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3889,
								"name": "BaseRelatedViewModelField._isResolvingDeps"
							}
						},
						{
							"id": 4068,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2169,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 4507,
											"typeArguments": [
												{
													"type": "reference",
													"id": 4026,
													"name": "TargetViewModelT"
												}
											],
											"qualifiedName": "InstanceType",
											"package": "typescript",
											"name": "InstanceType"
										}
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3915,
								"name": "BaseRelatedViewModelField.asyncChoices"
							}
						},
						{
							"id": 4063,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3910,
								"name": "BaseRelatedViewModelField.blank"
							}
						},
						{
							"id": 4064,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3911,
								"name": "BaseRelatedViewModelField.blankAsNull"
							}
						},
						{
							"id": 4067,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 4507,
											"typeArguments": [
												{
													"type": "reference",
													"id": 4026,
													"name": "TargetViewModelT"
												}
											],
											"qualifiedName": "InstanceType",
											"package": "typescript",
											"name": "InstanceType"
										}
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3914,
								"name": "BaseRelatedViewModelField.choices"
							}
						},
						{
							"id": 4066,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3913,
								"name": "BaseRelatedViewModelField.helpText"
							}
						},
						{
							"id": 4065,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3912,
								"name": "BaseRelatedViewModelField.label"
							}
						},
						{
							"id": 4069,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3916,
								"name": "BaseRelatedViewModelField.readOnly"
							}
						},
						{
							"id": 4036,
							"name": "sourceField",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 74,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2974,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3883,
								"name": "BaseRelatedViewModelField.sourceField"
							}
						},
						{
							"id": 4035,
							"name": "sourceFieldName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 73,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 4027,
								"name": "SourceFieldNameT"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3882,
								"name": "BaseRelatedViewModelField.sourceFieldName"
							}
						},
						{
							"id": 4070,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3917,
								"name": "BaseRelatedViewModelField.writeOnly"
							}
						},
						{
							"id": 4023,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 368,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'ManyRelatedViewModelField'",
							"overwrites": {
								"type": "reference",
								"id": 3868,
								"name": "BaseRelatedViewModelField.fieldClassName"
							}
						},
						{
							"id": 4090,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4091,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2074,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3944,
								"name": "BaseRelatedViewModelField.boundRecord"
							}
						},
						{
							"id": 4051,
							"name": "cache",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 192,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 4052,
									"name": "cache",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1827,
										"typeArguments": [
											{
												"type": "reference",
												"id": 3871,
												"name": "TargetViewModelT"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.cache"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3898,
								"name": "BaseRelatedViewModelField.cache"
							}
						},
						{
							"id": 4080,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 4081,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2978,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3934,
								"name": "BaseRelatedViewModelField.defaultValue"
							}
						},
						{
							"id": 4086,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4087,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3940,
								"name": "BaseRelatedViewModelField.isBound"
							}
						},
						{
							"id": 4037,
							"name": "many",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 76,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 4038,
									"name": "many",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.many"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3884,
								"name": "BaseRelatedViewModelField.many"
							}
						},
						{
							"id": 4055,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4056,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 4057,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 4058,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3902,
								"name": "BaseRelatedViewModelField.model"
							}
						},
						{
							"id": 4059,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4060,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 4061,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 4062,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3906,
								"name": "BaseRelatedViewModelField.name"
							}
						},
						{
							"id": 4049,
							"name": "to",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 171,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 4050,
									"name": "to",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the [ViewModel](doc:viewModelFactory) this related field is to.",
										"text": "If `to` was defined as a function returning a `Promise` then you must call `resolveViewModel`\nand wait for the returned `Promise` to resolve before accessing this otherwise an error will be thrown\n"
									},
									"type": {
										"type": "reference",
										"id": 3871,
										"name": "TargetViewModelT"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.to"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3896,
								"name": "BaseRelatedViewModelField.to"
							}
						},
						{
							"id": 4088,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4089,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3942,
								"name": "BaseRelatedViewModelField.value"
							}
						},
						{
							"id": 4084,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4085,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2974,
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 4507,
													"typeArguments": [
														{
															"type": "reference",
															"id": 4026,
															"name": "TargetViewModelT"
														}
													],
													"qualifiedName": "InstanceType",
													"package": "typescript",
													"name": "InstanceType"
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 4507,
													"typeArguments": [
														{
															"type": "reference",
															"id": 4026,
															"name": "TargetViewModelT"
														}
													],
													"qualifiedName": "InstanceType",
													"package": "typescript",
													"name": "InstanceType"
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 4507,
													"typeArguments": [
														{
															"type": "reference",
															"id": 4026,
															"name": "TargetViewModelT"
														}
													],
													"qualifiedName": "InstanceType",
													"package": "typescript",
													"name": "InstanceType"
												}
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3939,
										"name": "BaseRelatedViewModelField.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3938,
								"name": "BaseRelatedViewModelField.clone"
							}
						},
						{
							"id": 4039,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 98,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 4040,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isPrivate": true
									},
									"comment": {},
									"parameters": [
										{
											"id": 4041,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4026,
												"name": "TargetViewModelT"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3887,
										"name": "BaseRelatedViewModelField.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3886,
								"name": "BaseRelatedViewModelField.contributeToClass"
							}
						},
						{
							"id": 4074,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4075,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 4076,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 4507,
													"typeArguments": [
														{
															"type": "reference",
															"id": 4026,
															"name": "TargetViewModelT"
														}
													],
													"qualifiedName": "InstanceType",
													"package": "typescript",
													"name": "InstanceType"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3922,
										"name": "BaseRelatedViewModelField.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3921,
								"name": "BaseRelatedViewModelField.format"
							}
						},
						{
							"id": 4045,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 161,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 4046,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Compares to relations for equality - if the ViewModel has the same data this returns true"
									},
									"parameters": [
										{
											"id": 4047,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 4507,
													"typeArguments": [
														{
															"type": "reference",
															"id": 4026,
															"name": "TargetViewModelT"
														}
													],
													"qualifiedName": "InstanceType",
													"package": "typescript",
													"name": "InstanceType"
												}
											}
										},
										{
											"id": 4048,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 4507,
													"typeArguments": [
														{
															"type": "reference",
															"id": 4026,
															"name": "TargetViewModelT"
														}
													],
													"qualifiedName": "InstanceType",
													"package": "typescript",
													"name": "InstanceType"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3893,
										"name": "BaseRelatedViewModelField.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3892,
								"name": "BaseRelatedViewModelField.isEqual"
							}
						},
						{
							"id": 4029,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 372,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 4030,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Converts a value into the relations [ViewModel](doc:viewModelFactory) instance."
									},
									"parameters": [
										{
											"id": 4031,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 4507,
											"typeArguments": [
												{
													"type": "reference",
													"id": 4026,
													"name": "TargetViewModelT"
												}
											],
											"qualifiedName": "InstanceType",
											"package": "typescript",
											"name": "InstanceType"
										}
									},
									"overwrites": {
										"type": "reference",
										"id": 3928,
										"name": "BaseRelatedViewModelField.normalize"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3927,
								"name": "BaseRelatedViewModelField.normalize"
							}
						},
						{
							"id": 4077,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4078,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 4079,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 2015,
															"typeArguments": [
																{
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "literal",
																		"value": "fields"
																	},
																	"objectType": {
																		"type": "reference",
																		"id": 4026,
																		"name": "TargetViewModelT"
																	}
																}
															],
															"name": "FieldDataMappingRaw"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 4507,
													"typeArguments": [
														{
															"type": "reference",
															"id": 4026,
															"name": "TargetViewModelT"
														}
													],
													"qualifiedName": "InstanceType",
													"package": "typescript",
													"name": "InstanceType"
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3925,
										"name": "BaseRelatedViewModelField.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3924,
								"name": "BaseRelatedViewModelField.parse"
							}
						},
						{
							"id": 4043,
							"name": "resolveViewModel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 127,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 4044,
									"name": "resolveViewModel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Resolves the ViewModel this field links to. This is necessary as the ViewModel might be a dynamic\nimport that hasn't yet loaded.",
										"text": "This needs to be called manually before `to` can be accessed.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 4026,
												"name": "TargetViewModelT"
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3891,
										"name": "BaseRelatedViewModelField.resolveViewModel"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3890,
								"name": "BaseRelatedViewModelField.resolveViewModel"
							}
						},
						{
							"id": 4032,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 392,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 4033,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Converts the linked record to a plain javascript object"
									},
									"parameters": [
										{
											"id": 4034,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 4507,
													"typeArguments": [
														{
															"type": "reference",
															"id": 4026,
															"name": "TargetViewModelT"
														}
													],
													"qualifiedName": "InstanceType",
													"package": "typescript",
													"name": "InstanceType"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 4551,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"qualifiedName": "Record",
										"package": "typescript",
										"name": "Record"
									},
									"overwrites": {
										"type": "reference",
										"id": 3931,
										"name": "BaseRelatedViewModelField.toJS"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3930,
								"name": "BaseRelatedViewModelField.toJS"
							}
						},
						{
							"id": 4082,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 4083,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3937,
										"name": "BaseRelatedViewModelField.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3936,
								"name": "BaseRelatedViewModelField.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4024
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4053,
								4054,
								4071,
								4042,
								4068,
								4063,
								4064,
								4067,
								4066,
								4065,
								4069,
								4036,
								4035,
								4070,
								4023
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								4090,
								4051,
								4080,
								4086,
								4037,
								4055,
								4059,
								4049,
								4088
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4084,
								4039,
								4074,
								4045,
								4029,
								4077,
								4043,
								4032,
								4082
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
							"line": 359,
							"character": 13
						}
					],
					"typeParameter": [
						{
							"id": 4092,
							"name": "TargetViewModelT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2078,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ViewModelConstructor"
							}
						},
						{
							"id": 4093,
							"name": "SourceFieldNameT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3867,
							"typeArguments": [
								{
									"type": "reference",
									"id": 4026,
									"name": "TargetViewModelT"
								},
								{
									"type": "array",
									"elementType": {
										"type": "reference",
										"id": 5361,
										"typeArguments": [
											{
												"type": "reference",
												"id": 4026,
												"name": "TargetViewModelT"
											}
										],
										"name": "RelatedViewModelValueType"
									}
								},
								{
									"type": "array",
									"elementType": {
										"type": "reference",
										"id": 2015,
										"typeArguments": [
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "literal",
													"value": "fields"
												},
												"objectType": {
													"type": "reference",
													"id": 4026,
													"name": "TargetViewModelT"
												}
											}
										],
										"name": "FieldDataMappingRaw"
									}
								},
								{
									"type": "reference",
									"id": 4027,
									"name": "SourceFieldNameT"
								}
							],
							"name": "BaseRelatedViewModelField"
						}
					]
				},
				{
					"id": 3950,
					"name": "RelatedViewModelField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Define a field that references another ViewModel",
						"text": "This requires two things:\n\n1) The ViewModel to reference\n2) The field on the source ViewModel that contains the ID for the relation\n\nIn the following example `User` has a `Group` as a relation. The id for the\nconnected group is stored on the `groupId` field:\n\n```js\nclass Group extends viewModelFactory({\n  name: new CharField(),\n}) {}\nclass User extends viewModelFactory({\n  name: new CharField(),\n  groupId: new IntegerField(),\n  group: new RelatedViewModelField({\n    to: Group,\n    sourceFieldName: 'groupId',\n  }),\n}) {}\n```\n\nYou can then fetch the data - including the relations - from the cache:\n\n```js\nGroup.cache.add({ id: 1, name: 'Staff' });\nUser.cache.add({ id: 1, name: 'Bob', groupId: 1 });\nUser.cache.get(['name', 'group']);\n// { id: 1, name: 'Bob', groupId: 1, group: { id: 1, name: 'Staff' }}\n```\n\nThe `to` field can also be a function to support circular references:\n\n```js\nclass Group extends viewModelFactory({\n  name: new CharField(),\n  ownerId: new IntegerField(),\n  owner: new RelatedViewModelField({\n    to: () => User,\n    sourceFieldName: 'ownerId',\n  }),\n}) {}\nclass User extends viewModelFactory({\n  name: new CharField(),\n  groupId: new IntegerField(),\n  group: new RelatedViewModelField({\n    to: Group,\n    sourceFieldName: 'groupId',\n  }),\n}) {}\n```\n\nYou can query the circular relations as deep as you want:\n\n```js\nGroup.cache.add({ id: 1, name: 'Staff', ownerId: 1 });\nUser.cache.add({ id: 1, name: 'Bob', groupId: 1 });\nUser.cache.get(['name', 'group', ['group', 'owner'], ['group', 'owner', 'group']);\n// {\n//   id: 1,\n//   name: 'Bob',\n//   groupId: 1,\n//   group: {\n//     id: 1,\n//     name: 'Staff',\n//     ownerId: 1,\n//     owner: {\n//       id: 1,\n//       name: 'Bob',\n//       groupId: 1,\n//       group: {\n//         id: 1,\n//         name: 'Staff',\n//         ownerId: 1,\n//       }\n//     },\n//   },\n// }\n```\n\n`to` can also be a function that returns a Promise. This is useful to\nlazy load modules:\n\n```js\nclass Subscription extends viewModelFactory({\n  userId: new IntegerField(),\n  user: new RelatedViewModelField({\n      sourceFieldName: 'userId',\n      to: async () => {\n        const User = await import('./User').default;\n        return User;\n      }\n  })\n}) {}\n```\n\n**NOTE:** When you return a promise you have to call `resolveViewModel` on\nthat field before it's usable:\n\n```js\nawait Subscription.fields.user.resolveViewModel()\n```\n\nFailure to do this will result in an error being thrown the first time it's accessed.\n\nIf you have multiple values use [ManyRelatedViewModelField](doc:ManyRelatedViewModelField) instead.\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"children": [
						{
							"id": 3952,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3953,
									"name": "new RelatedViewModelField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 3954,
											"name": "TargetViewModelT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"id": 3954,
														"name": "TargetViewModelT"
													}
												],
												"name": "ViewModelConstructor"
											}
										},
										{
											"id": 3955,
											"name": "SourceFieldNameT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 3956,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5367,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3954,
														"name": "TargetViewModelT"
													},
													{
														"type": "reference",
														"id": 4507,
														"typeArguments": [
															{
																"type": "reference",
																"id": 3954,
																"name": "TargetViewModelT"
															}
														],
														"qualifiedName": "InstanceType",
														"package": "typescript",
														"name": "InstanceType"
													},
													{
														"type": "reference",
														"id": 3955,
														"name": "SourceFieldNameT"
													}
												],
												"name": "RelatedViewModelFieldProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3950,
										"typeArguments": [
											{
												"type": "reference",
												"id": 3954,
												"name": "TargetViewModelT"
											},
											{
												"type": "reference",
												"id": 3955,
												"name": "SourceFieldNameT"
											}
										],
										"name": "RelatedViewModelField"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3870,
										"name": "BaseRelatedViewModelField.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3869,
								"name": "BaseRelatedViewModelField.constructor"
							}
						},
						{
							"id": 3981,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 4507,
								"typeArguments": [
									{
										"type": "reference",
										"id": 3954,
										"name": "TargetViewModelT"
									}
								],
								"qualifiedName": "InstanceType",
								"package": "typescript",
								"name": "InstanceType"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3900,
								"name": "BaseRelatedViewModelField.__fieldValueType"
							}
						},
						{
							"id": 3982,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2015,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "fields"
										},
										"objectType": {
											"type": "reference",
											"id": 3954,
											"name": "TargetViewModelT"
										}
									}
								],
								"name": "FieldDataMappingRaw"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3901,
								"name": "BaseRelatedViewModelField.__parsableValueType"
							}
						},
						{
							"id": 3999,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 4507,
										"typeArguments": [
											{
												"type": "reference",
												"id": 3954,
												"name": "TargetViewModelT"
											}
										],
										"qualifiedName": "InstanceType",
										"package": "typescript",
										"name": "InstanceType"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 4000,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 4001,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 4507,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 3954,
																		"name": "TargetViewModelT"
																	}
																],
																"qualifiedName": "InstanceType",
																"package": "typescript",
																"name": "InstanceType"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"id": 4507,
																				"typeArguments": [
																					{
																						"type": "reference",
																						"id": 3954,
																						"name": "TargetViewModelT"
																					}
																				],
																				"qualifiedName": "InstanceType",
																				"package": "typescript",
																				"name": "InstanceType"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3918,
								"name": "BaseRelatedViewModelField._defaultValue"
							}
						},
						{
							"id": 3970,
							"name": "_isResolvingDeps",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 119,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3889,
								"name": "BaseRelatedViewModelField._isResolvingDeps"
							}
						},
						{
							"id": 3996,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2169,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"id": 4507,
										"typeArguments": [
											{
												"type": "reference",
												"id": 3954,
												"name": "TargetViewModelT"
											}
										],
										"qualifiedName": "InstanceType",
										"package": "typescript",
										"name": "InstanceType"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3915,
								"name": "BaseRelatedViewModelField.asyncChoices"
							}
						},
						{
							"id": 3991,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3910,
								"name": "BaseRelatedViewModelField.blank"
							}
						},
						{
							"id": 3992,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3911,
								"name": "BaseRelatedViewModelField.blankAsNull"
							}
						},
						{
							"id": 3995,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 4507,
										"typeArguments": [
											{
												"type": "reference",
												"id": 3954,
												"name": "TargetViewModelT"
											}
										],
										"qualifiedName": "InstanceType",
										"package": "typescript",
										"name": "InstanceType"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3914,
								"name": "BaseRelatedViewModelField.choices"
							}
						},
						{
							"id": 3994,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3913,
								"name": "BaseRelatedViewModelField.helpText"
							}
						},
						{
							"id": 3993,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3912,
								"name": "BaseRelatedViewModelField.label"
							}
						},
						{
							"id": 3997,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3916,
								"name": "BaseRelatedViewModelField.readOnly"
							}
						},
						{
							"id": 3964,
							"name": "sourceField",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 74,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2974,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3883,
								"name": "BaseRelatedViewModelField.sourceField"
							}
						},
						{
							"id": 3963,
							"name": "sourceFieldName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 73,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 3955,
								"name": "SourceFieldNameT"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3882,
								"name": "BaseRelatedViewModelField.sourceFieldName"
							}
						},
						{
							"id": 3998,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3917,
								"name": "BaseRelatedViewModelField.writeOnly"
							}
						},
						{
							"id": 3951,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 322,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'RelatedViewModelField'",
							"overwrites": {
								"type": "reference",
								"id": 3868,
								"name": "BaseRelatedViewModelField.fieldClassName"
							}
						},
						{
							"id": 4018,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4019,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2074,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3944,
								"name": "BaseRelatedViewModelField.boundRecord"
							}
						},
						{
							"id": 3979,
							"name": "cache",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 192,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3980,
									"name": "cache",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1827,
										"typeArguments": [
											{
												"type": "reference",
												"id": 3871,
												"name": "TargetViewModelT"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.cache"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3898,
								"name": "BaseRelatedViewModelField.cache"
							}
						},
						{
							"id": 4008,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 4009,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2978,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3934,
								"name": "BaseRelatedViewModelField.defaultValue"
							}
						},
						{
							"id": 4014,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4015,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3940,
								"name": "BaseRelatedViewModelField.isBound"
							}
						},
						{
							"id": 3965,
							"name": "many",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 76,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3966,
									"name": "many",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.many"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3884,
								"name": "BaseRelatedViewModelField.many"
							}
						},
						{
							"id": 3983,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3984,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 3985,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3986,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3902,
								"name": "BaseRelatedViewModelField.model"
							}
						},
						{
							"id": 3987,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3988,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 3989,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3990,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3906,
								"name": "BaseRelatedViewModelField.name"
							}
						},
						{
							"id": 3977,
							"name": "to",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 171,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3978,
									"name": "to",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the [ViewModel](doc:viewModelFactory) this related field is to.",
										"text": "If `to` was defined as a function returning a `Promise` then you must call `resolveViewModel`\nand wait for the returned `Promise` to resolve before accessing this otherwise an error will be thrown\n"
									},
									"type": {
										"type": "reference",
										"id": 3871,
										"name": "TargetViewModelT"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.to"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3896,
								"name": "BaseRelatedViewModelField.to"
							}
						},
						{
							"id": 4016,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4017,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3942,
								"name": "BaseRelatedViewModelField.value"
							}
						},
						{
							"id": 4012,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4013,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2974,
										"typeArguments": [
											{
												"type": "reference",
												"id": 4507,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3954,
														"name": "TargetViewModelT"
													}
												],
												"qualifiedName": "InstanceType",
												"package": "typescript",
												"name": "InstanceType"
											},
											{
												"type": "reference",
												"id": 4507,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3954,
														"name": "TargetViewModelT"
													}
												],
												"qualifiedName": "InstanceType",
												"package": "typescript",
												"name": "InstanceType"
											},
											{
												"type": "reference",
												"id": 4507,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3954,
														"name": "TargetViewModelT"
													}
												],
												"qualifiedName": "InstanceType",
												"package": "typescript",
												"name": "InstanceType"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3939,
										"name": "BaseRelatedViewModelField.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3938,
								"name": "BaseRelatedViewModelField.clone"
							}
						},
						{
							"id": 3967,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 98,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3968,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isPrivate": true
									},
									"comment": {},
									"parameters": [
										{
											"id": 3969,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3954,
												"name": "TargetViewModelT"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3887,
										"name": "BaseRelatedViewModelField.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3886,
								"name": "BaseRelatedViewModelField.contributeToClass"
							}
						},
						{
							"id": 4002,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4003,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 4004,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 4507,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3954,
														"name": "TargetViewModelT"
													}
												],
												"qualifiedName": "InstanceType",
												"package": "typescript",
												"name": "InstanceType"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3922,
										"name": "BaseRelatedViewModelField.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3921,
								"name": "BaseRelatedViewModelField.format"
							}
						},
						{
							"id": 3973,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 161,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3974,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Compares to relations for equality - if the ViewModel has the same data this returns true"
									},
									"parameters": [
										{
											"id": 3975,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4507,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3954,
														"name": "TargetViewModelT"
													}
												],
												"qualifiedName": "InstanceType",
												"package": "typescript",
												"name": "InstanceType"
											}
										},
										{
											"id": 3976,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4507,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3954,
														"name": "TargetViewModelT"
													}
												],
												"qualifiedName": "InstanceType",
												"package": "typescript",
												"name": "InstanceType"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3893,
										"name": "BaseRelatedViewModelField.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3892,
								"name": "BaseRelatedViewModelField.isEqual"
							}
						},
						{
							"id": 3957,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 326,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3958,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Converts a value into the relations [ViewModel](doc:viewModelFactory) instance."
									},
									"parameters": [
										{
											"id": 3959,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 4507,
										"typeArguments": [
											{
												"type": "reference",
												"id": 3954,
												"name": "TargetViewModelT"
											}
										],
										"qualifiedName": "InstanceType",
										"package": "typescript",
										"name": "InstanceType"
									},
									"overwrites": {
										"type": "reference",
										"id": 3928,
										"name": "BaseRelatedViewModelField.normalize"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3927,
								"name": "BaseRelatedViewModelField.normalize"
							}
						},
						{
							"id": 4005,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4006,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 4007,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 2015,
														"typeArguments": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "fields"
																},
																"objectType": {
																	"type": "reference",
																	"id": 3954,
																	"name": "TargetViewModelT"
																}
															}
														],
														"name": "FieldDataMappingRaw"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 4507,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3954,
														"name": "TargetViewModelT"
													}
												],
												"qualifiedName": "InstanceType",
												"package": "typescript",
												"name": "InstanceType"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3925,
										"name": "BaseRelatedViewModelField.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3924,
								"name": "BaseRelatedViewModelField.parse"
							}
						},
						{
							"id": 3971,
							"name": "resolveViewModel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 127,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3972,
									"name": "resolveViewModel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Resolves the ViewModel this field links to. This is necessary as the ViewModel might be a dynamic\nimport that hasn't yet loaded.",
										"text": "This needs to be called manually before `to` can be accessed.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 3954,
												"name": "TargetViewModelT"
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3891,
										"name": "BaseRelatedViewModelField.resolveViewModel"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3890,
								"name": "BaseRelatedViewModelField.resolveViewModel"
							}
						},
						{
							"id": 3960,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 339,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3961,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Converts the linked record to a plain javascript object"
									},
									"parameters": [
										{
											"id": 3962,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4507,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3954,
														"name": "TargetViewModelT"
													}
												],
												"qualifiedName": "InstanceType",
												"package": "typescript",
												"name": "InstanceType"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 4551,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"qualifiedName": "Record",
										"package": "typescript",
										"name": "Record"
									},
									"overwrites": {
										"type": "reference",
										"id": 3931,
										"name": "BaseRelatedViewModelField.toJS"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3930,
								"name": "BaseRelatedViewModelField.toJS"
							}
						},
						{
							"id": 4010,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 4011,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3937,
										"name": "BaseRelatedViewModelField.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3936,
								"name": "BaseRelatedViewModelField.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3952
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3981,
								3982,
								3999,
								3970,
								3996,
								3991,
								3992,
								3995,
								3994,
								3993,
								3997,
								3964,
								3963,
								3998,
								3951
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								4018,
								3979,
								4008,
								4014,
								3965,
								3983,
								3987,
								3977,
								4016
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4012,
								3967,
								4002,
								3973,
								3957,
								4005,
								3971,
								3960,
								4010
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
							"line": 313,
							"character": 13
						}
					],
					"typeParameter": [
						{
							"id": 4020,
							"name": "TargetViewModelT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2078,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ViewModelConstructor"
							}
						},
						{
							"id": 4021,
							"name": "SourceFieldNameT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3867,
							"typeArguments": [
								{
									"type": "reference",
									"id": 3954,
									"name": "TargetViewModelT"
								},
								{
									"type": "reference",
									"id": 5361,
									"typeArguments": [
										{
											"type": "reference",
											"id": 3954,
											"name": "TargetViewModelT"
										}
									],
									"name": "RelatedViewModelValueType"
								},
								{
									"type": "reference",
									"id": 2015,
									"typeArguments": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "fields"
											},
											"objectType": {
												"type": "reference",
												"id": 3954,
												"name": "TargetViewModelT"
											}
										}
									],
									"name": "FieldDataMappingRaw"
								},
								{
									"type": "reference",
									"id": 3955,
									"name": "SourceFieldNameT"
								}
							],
							"name": "BaseRelatedViewModelField"
						}
					]
				},
				{
					"id": 3843,
					"name": "UnresolvedRelatedViewModelFieldError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 3853,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 47,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3854,
									"name": "new UnresolvedRelatedViewModelFieldError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 3855,
											"name": "TargetViewModelT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"id": 3855,
														"name": "TargetViewModelT"
													}
												],
												"name": "ViewModelConstructor"
											}
										},
										{
											"id": 3856,
											"name": "FieldValueT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 2074,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "ViewModelInterface"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 4507,
															"typeArguments": [
																{
																	"type": "reference",
																	"id": 3855,
																	"name": "TargetViewModelT"
																}
															],
															"qualifiedName": "InstanceType",
															"package": "typescript",
															"name": "InstanceType"
														}
													}
												]
											}
										},
										{
											"id": 3857,
											"name": "ParsableValueT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5365,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3855,
														"name": "TargetViewModelT"
													}
												],
												"name": "RelatedViewModelParsableType"
											}
										}
									],
									"parameters": [
										{
											"id": 3858,
											"name": "field",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3867,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3855,
														"name": "TargetViewModelT"
													},
													{
														"type": "reference",
														"id": 3856,
														"name": "FieldValueT"
													},
													{
														"type": "reference",
														"id": 3857,
														"name": "ParsableValueT"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "BaseRelatedViewModelField"
											}
										},
										{
											"id": 3859,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3843,
										"typeArguments": [
											{
												"type": "reference",
												"id": 3855,
												"name": "TargetViewModelT"
											},
											{
												"type": "reference",
												"id": 3856,
												"name": "FieldValueT"
											},
											{
												"type": "reference",
												"id": 3857,
												"name": "ParsableValueT"
											}
										],
										"name": "UnresolvedRelatedViewModelFieldError"
									},
									"overwrites": {
										"type": "reference",
										"name": "Error.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Error.constructor"
							}
						},
						{
							"id": 3860,
							"name": "field",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 46,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 3867,
								"typeArguments": [
									{
										"type": "reference",
										"id": 3855,
										"name": "TargetViewModelT"
									},
									{
										"type": "reference",
										"id": 3856,
										"name": "FieldValueT"
									},
									{
										"type": "reference",
										"id": 3857,
										"name": "ParsableValueT"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "BaseRelatedViewModelField"
							}
						},
						{
							"id": 3862,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1023,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.message"
							}
						},
						{
							"id": 3861,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1022,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.name"
							}
						},
						{
							"id": 3863,
							"name": "stack",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1024,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.stack"
							}
						},
						{
							"id": 3852,
							"name": "stackTraceLimit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/globals.d.ts",
									"line": 117,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.stackTraceLimit"
							}
						},
						{
							"id": 3844,
							"name": "captureStackTrace",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 3845,
									"name": "captureStackTrace",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Create .stack property on a target object"
									},
									"parameters": [
										{
											"id": 3846,
											"name": "targetObject",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 3847,
											"name": "constructorOpt",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Function",
												"package": "typescript",
												"name": "Function"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Error.captureStackTrace"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.captureStackTrace"
							}
						},
						{
							"id": 3848,
							"name": "prepareStackTrace",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/globals.d.ts",
									"line": 115,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3849,
									"name": "prepareStackTrace",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Optional override for formatting stack traces",
										"tags": [
											{
												"tag": "see",
												"text": "https://github.com/v8/v8/wiki/Stack%20Trace%20API#customizing-stack-traces\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3850,
											"name": "err",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 4554,
												"qualifiedName": "Error",
												"package": "typescript",
												"name": "Error"
											}
										},
										{
											"id": 3851,
											"name": "stackTraces",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 4574,
													"qualifiedName": "NodeJS.CallSite",
													"package": "@types/node",
													"name": "CallSite"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Error.prepareStackTrace"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.prepareStackTrace"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3853
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3860,
								3862,
								3861,
								3863,
								3852
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3844,
								3848
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
							"line": 41,
							"character": 13
						}
					],
					"typeParameter": [
						{
							"id": 3864,
							"name": "TargetViewModelT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2078,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ViewModelConstructor"
							}
						},
						{
							"id": 3865,
							"name": "FieldValueT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 5363,
								"typeArguments": [
									{
										"type": "reference",
										"id": 3855,
										"name": "TargetViewModelT"
									}
								],
								"name": "BaseRelatedViewModelValueType"
							}
						},
						{
							"id": 3866,
							"name": "ParsableValueT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 5365,
								"typeArguments": [
									{
										"type": "reference",
										"id": 3855,
										"name": "TargetViewModelT"
									}
								],
								"name": "RelatedViewModelParsableType"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 4554,
							"qualifiedName": "Error",
							"package": "typescript",
							"name": "Error"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"kind": 4,
					"children": [
						5360
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3867,
						4022,
						3950,
						3843
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4094,
			"name": "fields/SlugField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 4095,
					"name": "SlugField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 4097,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 4098,
									"name": "new SlugField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 4099,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5152,
												"name": "CharFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 4095,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2307,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2306,
								"name": "default.constructor"
							}
						},
						{
							"id": 4101,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2310,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 4102,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2311,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 4119,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 4120,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 4121,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2328,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 4116,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2169,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2325,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 4111,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2320,
								"name": "default.blank"
							}
						},
						{
							"id": 4112,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2321,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 4115,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2324,
								"name": "default.choices"
							}
						},
						{
							"id": 4114,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2323,
								"name": "default.helpText"
							}
						},
						{
							"id": 4113,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2322,
								"name": "default.label"
							}
						},
						{
							"id": 4100,
							"name": "maxLength",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 18,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2309,
								"name": "default.maxLength"
							}
						},
						{
							"id": 4117,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2326,
								"name": "default.readOnly"
							}
						},
						{
							"id": 4118,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2327,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 4096,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/SlugField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'SlugField'",
							"overwrites": {
								"type": "reference",
								"id": 2305,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 4149,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4150,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2074,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2358,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 4135,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 4136,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2978,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2344,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 4145,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4146,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2354,
								"name": "default.isBound"
							}
						},
						{
							"id": 4103,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4104,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 4105,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 4106,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2312,
								"name": "default.model"
							}
						},
						{
							"id": 4107,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4108,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 4109,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 4110,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2316,
								"name": "default.name"
							}
						},
						{
							"id": 4147,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4148,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2356,
								"name": "default.value"
							}
						},
						{
							"id": 4143,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4144,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2974,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2353,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2352,
								"name": "default.clone"
							}
						},
						{
							"id": 4151,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4152,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 4153,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2361,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2360,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 4122,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4123,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 4124,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2332,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2331,
								"name": "default.format"
							}
						},
						{
							"id": 4139,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4140,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 4141,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4142,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2349,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2348,
								"name": "default.isEqual"
							}
						},
						{
							"id": 4128,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4129,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 4130,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2338,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2337,
								"name": "default.normalize"
							}
						},
						{
							"id": 4125,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4126,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 4127,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2335,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2334,
								"name": "default.parse"
							}
						},
						{
							"id": 4131,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 4132,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 4133,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 4134,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2341,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2340,
								"name": "default.toJS"
							}
						},
						{
							"id": 4137,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 4138,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2347,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2346,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4097
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4101,
								4102,
								4119,
								4116,
								4111,
								4112,
								4115,
								4114,
								4113,
								4100,
								4117,
								4118,
								4096
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								4149,
								4135,
								4145,
								4103,
								4107,
								4147
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4143,
								4151,
								4122,
								4139,
								4128,
								4125,
								4131,
								4137
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/SlugField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2304,
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4095
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/SlugField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4154,
			"name": "fields/TextField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 4155,
					"name": "TextField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 4157,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 4158,
									"name": "new TextField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 4159,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5152,
												"name": "CharFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 4155,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2307,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2306,
								"name": "default.constructor"
							}
						},
						{
							"id": 4161,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2310,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 4162,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2311,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 4179,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 4180,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 4181,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2328,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 4176,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2169,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2325,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 4171,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2320,
								"name": "default.blank"
							}
						},
						{
							"id": 4172,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2321,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 4175,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2324,
								"name": "default.choices"
							}
						},
						{
							"id": 4174,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2323,
								"name": "default.helpText"
							}
						},
						{
							"id": 4173,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2322,
								"name": "default.label"
							}
						},
						{
							"id": 4160,
							"name": "maxLength",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 18,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2309,
								"name": "default.maxLength"
							}
						},
						{
							"id": 4177,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2326,
								"name": "default.readOnly"
							}
						},
						{
							"id": 4178,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2327,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 4156,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/TextField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'TextField'",
							"overwrites": {
								"type": "reference",
								"id": 2305,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 4209,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4210,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2074,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2358,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 4195,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 4196,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2978,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2344,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 4205,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4206,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2354,
								"name": "default.isBound"
							}
						},
						{
							"id": 4163,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4164,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 4165,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 4166,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2312,
								"name": "default.model"
							}
						},
						{
							"id": 4167,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4168,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 4169,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 4170,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2316,
								"name": "default.name"
							}
						},
						{
							"id": 4207,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4208,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2356,
								"name": "default.value"
							}
						},
						{
							"id": 4203,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4204,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2974,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2353,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2352,
								"name": "default.clone"
							}
						},
						{
							"id": 4211,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4212,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 4213,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2361,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2360,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 4182,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4183,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 4184,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2332,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2331,
								"name": "default.format"
							}
						},
						{
							"id": 4199,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4200,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 4201,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4202,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2349,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2348,
								"name": "default.isEqual"
							}
						},
						{
							"id": 4188,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4189,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 4190,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2338,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2337,
								"name": "default.normalize"
							}
						},
						{
							"id": 4185,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4186,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 4187,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2335,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2334,
								"name": "default.parse"
							}
						},
						{
							"id": 4191,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 4192,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 4193,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 4194,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2341,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2340,
								"name": "default.toJS"
							}
						},
						{
							"id": 4197,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 4198,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2347,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2346,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4157
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4161,
								4162,
								4179,
								4176,
								4171,
								4172,
								4175,
								4174,
								4173,
								4160,
								4177,
								4178,
								4156
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								4209,
								4195,
								4205,
								4163,
								4167,
								4207
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4203,
								4211,
								4182,
								4199,
								4188,
								4185,
								4191,
								4197
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/TextField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2304,
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4155
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/TextField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4214,
			"name": "fields/TimeField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 4215,
					"name": "TimeField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Time Field.",
						"text": "String based: Native javascript Date does not have a nice way to describe a time-only object. Make sure any third party library of your choice like MomentJS handles this correctly.\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 4217,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 4218,
									"name": "new TimeField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 4219,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2906,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "FieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 4215,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2977,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2976,
								"name": "default.constructor"
							}
						},
						{
							"id": 4220,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2982,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 4221,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2983,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 4238,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 4239,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 4240,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3002,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 4235,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2169,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2999,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 4230,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2994,
								"name": "default.blank"
							}
						},
						{
							"id": 4231,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2995,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 4234,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2998,
								"name": "default.choices"
							}
						},
						{
							"id": 4233,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2997,
								"name": "default.helpText"
							}
						},
						{
							"id": 4232,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2996,
								"name": "default.label"
							}
						},
						{
							"id": 4236,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3000,
								"name": "default.readOnly"
							}
						},
						{
							"id": 4237,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3001,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 4216,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/TimeField.ts",
									"line": 12,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'TimeField'",
							"overwrites": {
								"type": "reference",
								"id": 2975,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 4268,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4269,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2074,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3032,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 4254,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 4255,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2978,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3018,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 4264,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4265,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3028,
								"name": "default.isBound"
							}
						},
						{
							"id": 4222,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4223,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 4224,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 4225,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2985,
								"name": "default.model"
							}
						},
						{
							"id": 4226,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4227,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 4228,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 4229,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2990,
								"name": "default.name"
							}
						},
						{
							"id": 4266,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4267,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3030,
								"name": "default.value"
							}
						},
						{
							"id": 4262,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4263,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2974,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3027,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3026,
								"name": "default.clone"
							}
						},
						{
							"id": 4270,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4271,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 4272,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3035,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3034,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 4241,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4242,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 4243,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3006,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3005,
								"name": "default.format"
							}
						},
						{
							"id": 4258,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4259,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 4260,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4261,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3023,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3022,
								"name": "default.isEqual"
							}
						},
						{
							"id": 4247,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4248,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 4249,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3012,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3011,
								"name": "default.normalize"
							}
						},
						{
							"id": 4244,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4245,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 4246,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3009,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3008,
								"name": "default.parse"
							}
						},
						{
							"id": 4250,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 4251,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 4252,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 4253,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3015,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3014,
								"name": "default.toJS"
							}
						},
						{
							"id": 4256,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 4257,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3021,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3020,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4217
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4220,
								4221,
								4238,
								4235,
								4230,
								4231,
								4234,
								4233,
								4232,
								4236,
								4237,
								4216
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								4268,
								4254,
								4264,
								4222,
								4226,
								4266
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4262,
								4270,
								4241,
								4258,
								4247,
								4244,
								4250,
								4256
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/TimeField.ts",
							"line": 11,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2974,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "string"
								}
							],
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4215
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/TimeField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4273,
			"name": "fields/URLField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 4274,
					"name": "URLField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 4276,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 4277,
									"name": "new URLField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 4278,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5152,
												"name": "CharFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 4274,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2307,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2306,
								"name": "default.constructor"
							}
						},
						{
							"id": 4280,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2310,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 4281,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2311,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 4298,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 4299,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 4300,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2328,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 4295,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2169,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2325,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 4290,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2320,
								"name": "default.blank"
							}
						},
						{
							"id": 4291,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2321,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 4294,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2324,
								"name": "default.choices"
							}
						},
						{
							"id": 4293,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2323,
								"name": "default.helpText"
							}
						},
						{
							"id": 4292,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2322,
								"name": "default.label"
							}
						},
						{
							"id": 4279,
							"name": "maxLength",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 18,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2309,
								"name": "default.maxLength"
							}
						},
						{
							"id": 4296,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2326,
								"name": "default.readOnly"
							}
						},
						{
							"id": 4297,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2327,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 4275,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/URLField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'URLField'",
							"overwrites": {
								"type": "reference",
								"id": 2305,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 4328,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4329,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2074,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2358,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 4314,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 4315,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2978,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2344,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 4324,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4325,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2354,
								"name": "default.isBound"
							}
						},
						{
							"id": 4282,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4283,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 4284,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 4285,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2312,
								"name": "default.model"
							}
						},
						{
							"id": 4286,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4287,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 4288,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 4289,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2316,
								"name": "default.name"
							}
						},
						{
							"id": 4326,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4327,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2356,
								"name": "default.value"
							}
						},
						{
							"id": 4322,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4323,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2974,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2353,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2352,
								"name": "default.clone"
							}
						},
						{
							"id": 4330,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4331,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 4332,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2361,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2360,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 4301,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4302,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 4303,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2332,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2331,
								"name": "default.format"
							}
						},
						{
							"id": 4318,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4319,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 4320,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4321,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2349,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2348,
								"name": "default.isEqual"
							}
						},
						{
							"id": 4307,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4308,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 4309,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2338,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2337,
								"name": "default.normalize"
							}
						},
						{
							"id": 4304,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4305,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 4306,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2335,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2334,
								"name": "default.parse"
							}
						},
						{
							"id": 4310,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 4311,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 4312,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 4313,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2341,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2340,
								"name": "default.toJS"
							}
						},
						{
							"id": 4316,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 4317,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2347,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2346,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4276
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4280,
								4281,
								4298,
								4295,
								4290,
								4291,
								4294,
								4293,
								4292,
								4279,
								4296,
								4297,
								4275
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								4328,
								4314,
								4324,
								4282,
								4286,
								4326
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4322,
								4330,
								4301,
								4318,
								4307,
								4304,
								4310,
								4316
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/URLField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2304,
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4274
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/URLField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4333,
			"name": "fields/UUIDField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 4334,
					"name": "UUIDField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 4336,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 4337,
									"name": "new UUIDField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 4338,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 5152,
												"name": "CharFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 4334,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2307,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2306,
								"name": "default.constructor"
							}
						},
						{
							"id": 4340,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2310,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 4341,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2311,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 4358,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 173,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 4359,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 4360,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2328,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 4355,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2169,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2325,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 4350,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 134,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2320,
								"name": "default.blank"
							}
						},
						{
							"id": 4351,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2321,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 4354,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 154,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2324,
								"name": "default.choices"
							}
						},
						{
							"id": 4353,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2323,
								"name": "default.helpText"
							}
						},
						{
							"id": 4352,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 144,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2322,
								"name": "default.label"
							}
						},
						{
							"id": 4339,
							"name": "maxLength",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 18,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2309,
								"name": "default.maxLength"
							}
						},
						{
							"id": 4356,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 163,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2326,
								"name": "default.readOnly"
							}
						},
						{
							"id": 4357,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2327,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 4335,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/UUIDField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'UUIDField'",
							"overwrites": {
								"type": "reference",
								"id": 2305,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 4388,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 350,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4389,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2074,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2358,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 4374,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 298,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 4375,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2978,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2344,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 4384,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 330,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4385,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2354,
								"name": "default.isBound"
							}
						},
						{
							"id": 4342,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 87,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4343,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 4344,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 4345,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2312,
								"name": "default.model"
							}
						},
						{
							"id": 4346,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 104,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4347,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 4348,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 4349,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2316,
								"name": "default.name"
							}
						},
						{
							"id": 4386,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 339,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 4387,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 2978,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2356,
								"name": "default.value"
							}
						},
						{
							"id": 4382,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 322,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4383,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 2974,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2353,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2352,
								"name": "default.clone"
							}
						},
						{
							"id": 4390,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4391,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 4392,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2078,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2361,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2360,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 4361,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 244,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4362,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 4363,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2332,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2331,
								"name": "default.format"
							}
						},
						{
							"id": 4378,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 315,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4379,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 4380,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4381,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2349,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2348,
								"name": "default.isEqual"
							}
						},
						{
							"id": 4367,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 282,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4368,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 4369,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2338,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2337,
								"name": "default.normalize"
							}
						},
						{
							"id": 4364,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 253,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 4365,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 4366,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2335,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2334,
								"name": "default.parse"
							}
						},
						{
							"id": 4370,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 291,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 4371,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 4372,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 4373,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2341,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2340,
								"name": "default.toJS"
							}
						},
						{
							"id": 4376,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 4377,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2347,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2346,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4336
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4340,
								4341,
								4358,
								4355,
								4350,
								4351,
								4354,
								4353,
								4352,
								4339,
								4356,
								4357,
								4335
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								4388,
								4374,
								4384,
								4342,
								4346,
								4386
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4382,
								4390,
								4361,
								4378,
								4367,
								4364,
								4370,
								4376
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/UUIDField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2304,
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4334
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/UUIDField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4393,
			"name": "typeUtil",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 4394,
					"name": "Class",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Utility to type a generic class type, eg.",
						"text": "NOTE: If not dealing with generics just use `typeof <class>` instead\n\n```js\nclass Base<T> {\n  value?: T;\n}\nclass Concrete<T> extends Base<T> {}\nfunction factory<T>(a: Class<Base<T>>): Base<T> {\n  return new a();\n}\nfactory(Concrete);\n```\n"
					},
					"children": [
						{
							"id": 4418,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 4419,
									"name": "new Class",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 4420,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 4417,
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Function.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.constructor"
							}
						},
						{
							"id": 4411,
							"name": "arguments",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 304,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.arguments"
							}
						},
						{
							"id": 4412,
							"name": "caller",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 305,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Function",
								"package": "typescript",
								"name": "Function"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.caller"
							}
						},
						{
							"id": 4410,
							"name": "length",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.length"
							}
						},
						{
							"id": 4413,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Returns the name of the function. Function names are read-only and can not be changed."
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
									"line": 97,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.name"
							}
						},
						{
							"id": 4409,
							"name": "prototype",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 300,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.prototype"
							}
						},
						{
							"id": 4414,
							"name": "[hasInstance]",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 4415,
									"name": "[hasInstance]",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Determines whether the given value inherits from this function if this function was used\nas a constructor function.",
										"text": "A constructor function can control which objects are recognized as its instances by\n'instanceof' by overriding this method.\n"
									},
									"parameters": [
										{
											"id": 4416,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Function.__@hasInstance@62352"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.__@hasInstance@62352"
							}
						},
						{
							"id": 4395,
							"name": "apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 4396,
									"name": "apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Calls the function, substituting the specified object for the this value of the function, and the specified array for the arguments of the function."
									},
									"parameters": [
										{
											"id": 4397,
											"name": "thisArg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The object to be used as the this object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 4398,
											"name": "argArray",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"comment": {
												"shortText": "A set of arguments to be passed to the function.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Function.apply"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.apply"
							}
						},
						{
							"id": 4403,
							"name": "bind",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 4404,
									"name": "bind",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "For a given function, creates a bound function that has the same body as the original function.\nThe this object of the bound function is associated with the specified object, and has the specified initial parameters."
									},
									"parameters": [
										{
											"id": 4405,
											"name": "thisArg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "An object to which the this keyword can refer inside the new function."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 4406,
											"name": "argArray",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isRest": true
											},
											"comment": {
												"shortText": "A list of arguments to be passed to the new function.\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Function.bind"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.bind"
							}
						},
						{
							"id": 4399,
							"name": "call",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 4400,
									"name": "call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Calls a method of an object, substituting another object for the current object."
									},
									"parameters": [
										{
											"id": 4401,
											"name": "thisArg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The object to be used as the current object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 4402,
											"name": "argArray",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isRest": true
											},
											"comment": {
												"shortText": "A list of arguments to be passed to the method.\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Function.call"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.call"
							}
						},
						{
							"id": 4407,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 4408,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of a function."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Function.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4418
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4411,
								4412,
								4410,
								4413,
								4409
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4414,
								4395,
								4403,
								4399,
								4407
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/typeUtil.ts",
							"line": 17,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 4417,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Function",
							"package": "typescript",
							"name": "Function"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						4394
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/typeUtil.ts",
					"line": 17,
					"character": 0
				}
			]
		},
		{
			"id": 4421,
			"name": "useAsyncChoices",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 5383,
					"name": "<internal>",
					"kind": 4,
					"kindString": "Namespace",
					"flags": {},
					"children": [
						{
							"id": 5525,
							"name": "ArrayBufferView",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 5526,
									"name": "buffer",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The ArrayBuffer instance referenced by the array."
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1665,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"id": 5529,
										"qualifiedName": "ArrayBufferLike",
										"package": "typescript",
										"name": "ArrayBufferLike"
									}
								},
								{
									"id": 5527,
									"name": "byteLength",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The length in bytes of the array."
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1670,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 5528,
									"name": "byteOffset",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The offset in bytes of the array."
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"line": 1675,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5526,
										5527,
										5528
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1661,
									"character": 10
								}
							]
						},
						{
							"id": 5455,
							"name": "PaginatorInterface",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"children": [
								{
									"id": 5456,
									"name": "currentState",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/build/pagination/Paginator.d.ts",
											"line": 64,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"id": 5490,
										"name": "State"
									}
								},
								{
									"id": 5457,
									"name": "internalState",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/build/pagination/Paginator.d.ts",
											"line": 65,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"id": 5492,
										"name": "InternalState"
									}
								},
								{
									"id": 5464,
									"name": "responseIsSet",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/build/pagination/Paginator.d.ts",
											"line": 68,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 5467,
									"name": "first",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 5468,
											"name": "first",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 5469,
									"name": "firstState",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 5470,
											"name": "firstState",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 5490,
														"name": "State"
													}
												]
											}
										}
									]
								},
								{
									"id": 5479,
									"name": "getRequestInit",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 5480,
											"name": "getRequestInit",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 5481,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 5497,
														"name": "PaginatorRequestOptions"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 5497,
												"name": "PaginatorRequestOptions"
											}
										}
									]
								},
								{
									"id": 5465,
									"name": "hasNextPage",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 5466,
											"name": "hasNextPage",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								},
								{
									"id": 5471,
									"name": "next",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 5472,
											"name": "next",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 5473,
									"name": "nextState",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 5474,
											"name": "nextState",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 5490,
														"name": "State"
													}
												]
											}
										}
									]
								},
								{
									"id": 5475,
									"name": "previous",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 5476,
											"name": "previous",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 5477,
									"name": "previousState",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 5478,
											"name": "previousState",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 5490,
														"name": "State"
													}
												]
											}
										}
									]
								},
								{
									"id": 5485,
									"name": "replaceStateControllers",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 5486,
											"name": "replaceStateControllers",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 5487,
													"name": "currentStatePair",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 5488,
													"name": "internalStatePair",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 5458,
									"name": "setCurrentState",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/build/pagination/Paginator.d.ts",
											"line": 66,
											"character": 4
										}
									],
									"signatures": [
										{
											"id": 5459,
											"name": "setCurrentState",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 5460,
													"name": "set",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 5490,
														"name": "State"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 5461,
									"name": "setInternalState",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/build/pagination/Paginator.d.ts",
											"line": 67,
											"character": 4
										}
									],
									"signatures": [
										{
											"id": 5462,
											"name": "setInternalState",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 5463,
													"name": "set",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 5492,
														"name": "InternalState"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 5482,
									"name": "setResponse",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 5483,
											"name": "setResponse",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 5484,
													"name": "response",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 4551,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"qualifiedName": "Record",
														"package": "typescript",
														"name": "Record"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5456,
										5457,
										5464
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										5467,
										5469,
										5479,
										5465,
										5471,
										5473,
										5475,
										5477,
										5485,
										5458,
										5461,
										5482
									]
								}
							],
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/build/pagination/Paginator.d.ts",
									"line": 63,
									"character": 17
								}
							],
							"typeParameter": [
								{
									"id": 5490,
									"name": "State",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "reflection",
										"declaration": {
											"id": 5489,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/build/pagination/Paginator.d.ts",
													"line": 63,
													"character": 44
												}
											]
										}
									}
								},
								{
									"id": 5492,
									"name": "InternalState",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "reflection",
										"declaration": {
											"id": 5491,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/build/pagination/Paginator.d.ts",
													"line": 63,
													"character": 64
												}
											]
										}
									}
								}
							]
						},
						{
							"id": 5502,
							"name": "RequestInit",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 5503,
									"name": "body",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "A BodyInit object or null to set request's body."
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1468,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 5517,
												"qualifiedName": "BodyInit",
												"package": "typescript",
												"name": "BodyInit"
											}
										]
									}
								},
								{
									"id": 5504,
									"name": "cache",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "A string indicating how the request will interact with the browser's cache to set request's cache."
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1470,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"id": 5518,
										"qualifiedName": "RequestCache",
										"package": "typescript",
										"name": "RequestCache"
									}
								},
								{
									"id": 5505,
									"name": "credentials",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "A string indicating whether credentials will be sent with the request always, never, or only when sent to a same-origin URL. Sets request's credentials."
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1472,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"id": 5519,
										"qualifiedName": "RequestCredentials",
										"package": "typescript",
										"name": "RequestCredentials"
									}
								},
								{
									"id": 5506,
									"name": "headers",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "A Headers object, an object literal, or an array of two-item arrays to set request's headers."
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1474,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"id": 5516,
										"qualifiedName": "HeadersInit",
										"package": "typescript",
										"name": "HeadersInit"
									}
								},
								{
									"id": 5507,
									"name": "integrity",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "A cryptographic hash of the resource to be fetched by request. Sets request's integrity."
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1476,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5508,
									"name": "keepalive",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "A boolean to set request's keepalive."
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1478,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 5509,
									"name": "method",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "A string to set request's method."
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1480,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5510,
									"name": "mode",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "A string to indicate whether the request will use CORS, or will be restricted to same-origin URLs. Sets request's mode."
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1482,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"id": 5520,
										"qualifiedName": "RequestMode",
										"package": "typescript",
										"name": "RequestMode"
									}
								},
								{
									"id": 5511,
									"name": "redirect",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "A string indicating whether request follows redirects, results in an error upon encountering a redirect, or returns the redirect (in an opaque fashion). Sets request's redirect."
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1484,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"id": 5521,
										"qualifiedName": "RequestRedirect",
										"package": "typescript",
										"name": "RequestRedirect"
									}
								},
								{
									"id": 5512,
									"name": "referrer",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "A string whose value is a same-origin URL, \"about:client\", or the empty string, to set request's referrer."
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1486,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5513,
									"name": "referrerPolicy",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "A referrer policy to set request's referrerPolicy."
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1488,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"id": 5522,
										"qualifiedName": "ReferrerPolicy",
										"package": "typescript",
										"name": "ReferrerPolicy"
									}
								},
								{
									"id": 5514,
									"name": "signal",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "An AbortSignal to set request's signal."
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1490,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 5273,
												"qualifiedName": "AbortSignal",
												"package": "typescript",
												"name": "AbortSignal"
											}
										]
									}
								},
								{
									"id": 5515,
									"name": "window",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "Can only be null. Used to disassociate request from any Window."
									},
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"line": 1492,
											"character": 4
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										5503,
										5504,
										5505,
										5506,
										5507,
										5508,
										5509,
										5510,
										5511,
										5512,
										5513,
										5514,
										5515
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 1466,
									"character": 10
								}
							]
						},
						{
							"id": 5529,
							"name": "ArrayBufferLike",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1652,
									"character": 5
								}
							],
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"qualifiedName": "ArrayBufferTypes",
										"package": "typescript",
										"name": "ArrayBufferTypes"
									}
								},
								"objectType": {
									"type": "reference",
									"qualifiedName": "ArrayBufferTypes",
									"package": "typescript",
									"name": "ArrayBufferTypes"
								}
							}
						},
						{
							"id": 5517,
							"name": "BodyInit",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 17590,
									"character": 5
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 5210,
										"qualifiedName": "ReadableStream",
										"package": "typescript",
										"name": "ReadableStream"
									},
									{
										"type": "reference",
										"id": 5523,
										"qualifiedName": "XMLHttpRequestBodyInit",
										"package": "typescript",
										"name": "XMLHttpRequestBodyInit"
									}
								]
							}
						},
						{
							"id": 5524,
							"name": "BufferSource",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 17591,
									"character": 5
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 5525,
										"qualifiedName": "ArrayBufferView",
										"package": "typescript",
										"name": "ArrayBufferView"
									},
									{
										"type": "reference",
										"qualifiedName": "ArrayBuffer",
										"package": "typescript",
										"name": "ArrayBuffer"
									}
								]
							}
						},
						{
							"id": 5516,
							"name": "HeadersInit",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 17622,
									"character": 5
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									},
									{
										"type": "reference",
										"id": 4551,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"qualifiedName": "Record",
										"package": "typescript",
										"name": "Record"
									},
									{
										"type": "reference",
										"qualifiedName": "Headers",
										"package": "typescript",
										"name": "Headers"
									}
								]
							}
						},
						{
							"id": 5497,
							"name": "PaginatorRequestOptions",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/build/pagination/Paginator.d.ts",
									"line": 1,
									"character": 20
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 4504,
										"typeArguments": [
											{
												"type": "reference",
												"id": 5502,
												"qualifiedName": "RequestInit",
												"package": "typescript",
												"name": "RequestInit"
											},
											{
												"type": "literal",
												"value": "headers"
											}
										],
										"qualifiedName": "Omit",
										"package": "typescript",
										"name": "Omit"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 5498,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 5499,
													"name": "headers",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Any headers to add to the request. You can unset default headers that might be specified in the default\n`Endpoint.defaultConfig.requestInit` by setting the value to `undefined`."
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/util/build/pagination/Paginator.d.ts",
															"line": 6,
															"character": 4
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"id": 5516,
																"qualifiedName": "HeadersInit",
																"package": "typescript",
																"name": "HeadersInit"
															},
															{
																"type": "reference",
																"id": 4551,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Record",
																"package": "typescript",
																"name": "Record"
															}
														]
													}
												},
												{
													"id": 5501,
													"name": "query",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Any query request parameters"
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/util/build/pagination/Paginator.d.ts",
															"line": 14,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"id": 4551,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "boolean"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																]
															}
														],
														"qualifiedName": "Record",
														"package": "typescript",
														"name": "Record"
													}
												},
												{
													"id": 5500,
													"name": "urlArgs",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Any arguments for the [URL](doc:UrlPattern)"
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/util/build/pagination/Paginator.d.ts",
															"line": 10,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"id": 4551,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"qualifiedName": "Record",
														"package": "typescript",
														"name": "Record"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														5499,
														5501,
														5500
													]
												}
											],
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/build/pagination/Paginator.d.ts",
													"line": 1,
													"character": 77
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 5522,
							"name": "ReferrerPolicy",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 17760,
									"character": 5
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": ""
									},
									{
										"type": "literal",
										"value": "no-referrer"
									},
									{
										"type": "literal",
										"value": "no-referrer-when-downgrade"
									},
									{
										"type": "literal",
										"value": "origin"
									},
									{
										"type": "literal",
										"value": "origin-when-cross-origin"
									},
									{
										"type": "literal",
										"value": "same-origin"
									},
									{
										"type": "literal",
										"value": "strict-origin"
									},
									{
										"type": "literal",
										"value": "strict-origin-when-cross-origin"
									},
									{
										"type": "literal",
										"value": "unsafe-url"
									}
								]
							}
						},
						{
							"id": 5518,
							"name": "RequestCache",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 17762,
									"character": 5
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "default"
									},
									{
										"type": "literal",
										"value": "force-cache"
									},
									{
										"type": "literal",
										"value": "no-cache"
									},
									{
										"type": "literal",
										"value": "no-store"
									},
									{
										"type": "literal",
										"value": "only-if-cached"
									},
									{
										"type": "literal",
										"value": "reload"
									}
								]
							}
						},
						{
							"id": 5519,
							"name": "RequestCredentials",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 17763,
									"character": 5
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "include"
									},
									{
										"type": "literal",
										"value": "omit"
									},
									{
										"type": "literal",
										"value": "same-origin"
									}
								]
							}
						},
						{
							"id": 5520,
							"name": "RequestMode",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 17765,
									"character": 5
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "cors"
									},
									{
										"type": "literal",
										"value": "navigate"
									},
									{
										"type": "literal",
										"value": "no-cors"
									},
									{
										"type": "literal",
										"value": "same-origin"
									}
								]
							}
						},
						{
							"id": 5521,
							"name": "RequestRedirect",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 17766,
									"character": 5
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "error"
									},
									{
										"type": "literal",
										"value": "follow"
									},
									{
										"type": "literal",
										"value": "manual"
									}
								]
							}
						},
						{
							"id": 5437,
							"name": "ReturnType",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Obtain the return type of a function type"
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1596,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 5444,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 5441,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1596,
													"character": 26
												}
											],
											"signatures": [
												{
													"id": 5442,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 5443,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"id": 5444,
									"qualifiedName": "T",
									"package": "typescript",
									"name": "T"
								},
								"extendsType": {
									"type": "reflection",
									"declaration": {
										"id": 5438,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {
											"isExternal": true
										},
										"sources": [
											{
												"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
												"line": 1596,
												"character": 61
											}
										],
										"signatures": [
											{
												"id": 5439,
												"name": "__type",
												"kind": 4096,
												"kindString": "Call signature",
												"flags": {
													"isExternal": true
												},
												"parameters": [
													{
														"id": 5440,
														"name": "args",
														"kind": 32768,
														"kindString": "Parameter",
														"flags": {
															"isExternal": true,
															"isRest": true
														},
														"type": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												],
												"type": {
													"type": "inferred",
													"name": "R"
												}
											}
										]
									}
								},
								"trueType": {
									"type": "reference",
									"qualifiedName": "R",
									"package": "typescript",
									"name": "R"
								},
								"falseType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						},
						{
							"id": 5391,
							"name": "UseAsyncChoicesProps",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "expand-properties",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/useAsyncChoices.ts",
									"line": 15,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 5403,
									"name": "ItemT",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 5404,
									"name": "ValueT",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 4518,
										"typeArguments": [
											{
												"type": "reference",
												"id": 5405,
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 5403,
															"name": "ItemT"
														}
													}
												],
												"name": "UseAsyncListingProps"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "accumulatePages"
													},
													{
														"type": "literal",
														"value": "query"
													},
													{
														"type": "literal",
														"value": "trigger"
													}
												]
											}
										],
										"qualifiedName": "Pick",
										"package": "typescript",
										"name": "Pick"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 5392,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 5393,
													"name": "asyncChoices",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "See [AsyncChoices](doc:AsyncChoices]"
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/viewmodel/src/useAsyncChoices.ts",
															"line": 22,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"id": 2169,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5403,
																"name": "ItemT"
															},
															{
																"type": "reference",
																"id": 5404,
																"name": "ValueT"
															}
														],
														"name": "AsyncChoicesInterface"
													}
												},
												{
													"id": 5401,
													"name": "listOptions",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Any extra options to pass through to [list](doc:AsyncChoicesInterface#method-list)",
														"text": "These will be available in both [useListProps](doc:AsyncChoicesInterface#method-list) and [list](doc:AsyncChoicesInterface#method-useListProps) under the `listOptions`\nkey\n"
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/viewmodel/src/useAsyncChoices.ts",
															"line": 47,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"id": 4551,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"qualifiedName": "Record",
														"package": "typescript",
														"name": "Record"
													}
												},
												{
													"id": 5402,
													"name": "retrieveOptions",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Any extra options to pass through to [retrieve](doc:AsyncChoicesInterface#method-retrieve)",
														"text": "These will be available in both [useRetrieveProps](doc:AsyncChoicesInterface#method-retrieve) and [retrieve](doc:AsyncChoicesInterface#method-useRetrieveProps) under the `retrieveOptions`\nkey\n"
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/viewmodel/src/useAsyncChoices.ts",
															"line": 54,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"id": 4551,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"qualifiedName": "Record",
														"package": "typescript",
														"name": "Record"
													}
												},
												{
													"id": 5394,
													"name": "value",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "The currently selected choice(s) - if any",
														"text": "When specified the corresponding label(s) will be resolved\nautomatically.\n"
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/viewmodel/src/useAsyncChoices.ts",
															"line": 29,
															"character": 4
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 5404,
																	"name": "ValueT"
																}
															},
															{
																"type": "reference",
																"id": 5404,
																"name": "ValueT"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												},
												{
													"id": 5398,
													"name": "onRetrieveError",
													"kind": 2048,
													"kindString": "Method",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/viewmodel/src/useAsyncChoices.ts",
															"line": 40,
															"character": 4
														}
													],
													"signatures": [
														{
															"id": 5399,
															"name": "onRetrieveError",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"comment": {
																"shortText": "If provided this function will be called whenever `asyncChoices.retrieve` errors",
																"text": "You can use this to do things like unset a value if it no longer exists.\n"
															},
															"parameters": [
																{
																	"id": 5400,
																	"name": "error",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"id": 4554,
																		"qualifiedName": "Error",
																		"package": "typescript",
																		"name": "Error"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												},
												{
													"id": 5395,
													"name": "onRetrieveSuccess",
													"kind": 2048,
													"kindString": "Method",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "js-packages/@prestojs/viewmodel/src/useAsyncChoices.ts",
															"line": 34,
															"character": 4
														}
													],
													"signatures": [
														{
															"id": 5396,
															"name": "onRetrieveSuccess",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"comment": {
																"shortText": "If provided this function will be called whenever a value is successfully\nresolved using `asyncChoices.retrieve`."
															},
															"parameters": [
																{
																	"id": 5397,
																	"name": "response",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "reference",
																				"id": 5403,
																				"name": "ItemT"
																			},
																			{
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"id": 5403,
																					"name": "ItemT"
																				}
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														5393,
														5401,
														5402,
														5394
													]
												},
												{
													"title": "Methods",
													"kind": 2048,
													"children": [
														5398,
														5395
													]
												}
											],
											"sources": [
												{
													"fileName": "js-packages/@prestojs/viewmodel/src/useAsyncChoices.ts",
													"line": 18,
													"character": 4
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 5384,
							"name": "UseAsyncChoicesReturn",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "expand-properties",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/useAsyncChoices.ts",
									"line": 60,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 5389,
									"name": "ItemT",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 5390,
									"name": "ValueT",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5385,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 5388,
											"name": "choices",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "See [getChoices](doc:AsyncChoicesInterface#method-getChoices)"
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/viewmodel/src/useAsyncChoices.ts",
													"line": 72,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 5437,
												"typeArguments": [
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "literal",
															"value": "getChoices"
														},
														"objectType": {
															"type": "reference",
															"id": 2169,
															"typeArguments": [
																{
																	"type": "reference",
																	"id": 5389,
																	"name": "ItemT"
																},
																{
																	"type": "reference",
																	"id": 5390,
																	"name": "ValueT"
																}
															],
															"name": "AsyncChoicesInterface"
														}
													}
												],
												"qualifiedName": "ReturnType",
												"package": "typescript",
												"name": "ReturnType"
											}
										},
										{
											"id": 5386,
											"name": "list",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "See [useAsyncListing](doc:useAsyncListing#return-type)"
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/viewmodel/src/useAsyncChoices.ts",
													"line": 64,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 5415,
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 5389,
															"name": "ItemT"
														}
													}
												],
												"name": "UseAsyncListingReturn"
											}
										},
										{
											"id": 5387,
											"name": "selected",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "See [useAsyncValue](doc:useAsyncValue#return-type)"
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/viewmodel/src/useAsyncChoices.ts",
													"line": 68,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 5426,
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 5389,
																	"name": "ItemT"
																}
															},
															{
																"type": "reference",
																"id": 5389,
																"name": "ItemT"
															}
														]
													}
												],
												"name": "UseAsyncValueReturn"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												5388,
												5386,
												5387
											]
										}
									],
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/useAsyncChoices.ts",
											"line": 60,
											"character": 44
										}
									]
								}
							}
						},
						{
							"id": 5493,
							"name": "UseAsyncListingExecuteProps",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "expand-properties",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
									"line": 5,
									"character": 13
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5494,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 5496,
											"name": "paginator",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The paginator instance, if any"
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
													"line": 13,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 5455,
														"name": "PaginatorInterface"
													}
												]
											}
										},
										{
											"id": 5495,
											"name": "query",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Any query parameters"
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
													"line": 9,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 4551,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "boolean"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												5496,
												5495
											]
										}
									],
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
											"line": 5,
											"character": 43
										}
									]
								}
							}
						},
						{
							"id": 5405,
							"name": "UseAsyncListingProps",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "expand-properties",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
									"line": 18,
									"character": 20
								}
							],
							"typeParameter": [
								{
									"id": 5414,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5406,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 5409,
											"name": "accumulatePages",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Whether to accumulate pages as more results are fetched. For example\nif the first page of results is returned, then the next page is fetched\nthen the combined results for the first two pages will be resolved.",
												"text": "This resets whenever `query` changes or if pagination state changes\nto anything other than the next page.\n\nIf this is true you must specify `paginator`.\n"
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
													"line": 44,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5410,
											"name": "paginator",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Optional paginator if result is paginated. This will be monitored for\nany state changes which will trigger a call to `execute`.",
												"text": "Required if `accumulatePages` is true.\n"
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
													"line": 51,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 5455,
														"name": "PaginatorInterface"
													},
													{
														"type": "literal",
														"value": null
													}
												]
											}
										},
										{
											"id": 5408,
											"name": "query",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Any query string parameters for the request"
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
													"line": 33,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 4551,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "boolean"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										},
										{
											"id": 5407,
											"name": "trigger",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "When to trigger the fetch. Defaults to `DEEP` which means whenever a deep\nequality check on `query` or `paginator` state fails it will refetch.",
												"text": "If set to `MANUAL` nothing will happen until it changes to `DEEP` or you\ncall the returned `run` function. You can use this to defer execution until\nthe value is required.\n\nDefaults to 'DEEP'.\n"
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
													"line": 29,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "MANUAL"
													},
													{
														"type": "literal",
														"value": "DEEP"
													}
												]
											}
										},
										{
											"id": 5411,
											"name": "execute",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
													"line": 60,
													"character": 4
												}
											],
											"signatures": [
												{
													"id": 5412,
													"name": "execute",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Asynchronous function that returns the result for the query. Passed an\nobject with `query` and `paginator` keys.",
														"text": "Note that when `trigger` is `DEEP` changes to this function will cause it\nto be called again so you must memoize it (eg. with `useCallback`) if it's\ndefined in your component or hook.\n"
													},
													"parameters": [
														{
															"id": 5413,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 5493,
																"name": "UseAsyncListingExecuteProps"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 5414,
																"name": "T"
															}
														],
														"qualifiedName": "Promise",
														"package": "typescript",
														"name": "Promise"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												5409,
												5410,
												5408,
												5407
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												5411
											]
										}
									],
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
											"line": 18,
											"character": 46
										}
									]
								}
							}
						},
						{
							"id": 5415,
							"name": "UseAsyncListingReturn",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
									"line": 87,
									"character": 20
								}
							],
							"typeParameter": [
								{
									"id": 5425,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"id": 5445,
												"typeArguments": [
													{
														"type": "reference",
														"id": 5425,
														"name": "T"
													}
												],
												"name": "UseAsyncListingReturnCommon"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 5416,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 5417,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"shortText": "Until first call has resolved neither error nor result will be set"
															},
															"sources": [
																{
																	"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
																	"line": 91,
																	"character": 4
																}
															],
															"type": {
																"type": "literal",
																"value": null
															}
														},
														{
															"id": 5418,
															"name": "result",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
																	"line": 92,
																	"character": 4
																}
															],
															"type": {
																"type": "literal",
																"value": null
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																5417,
																5418
															]
														}
													],
													"sources": [
														{
															"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
															"line": 87,
															"character": 81
														}
													]
												}
											}
										]
									},
									{
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"id": 5445,
												"typeArguments": [
													{
														"type": "reference",
														"id": 5425,
														"name": "T"
													}
												],
												"name": "UseAsyncListingReturnCommon"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 5419,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 5420,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"shortText": "Set to the rejected value of the promise. Only one of `error` and `result` can be set. If\n`isLoading` is true consider this stale (ie. based on _previous_ props). This can be useful\nwhen you want the UI to show the previous value until the next value is ready."
															},
															"sources": [
																{
																	"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
																	"line": 99,
																	"character": 4
																}
															],
															"type": {
																"type": "reference",
																"id": 4554,
																"qualifiedName": "Error",
																"package": "typescript",
																"name": "Error"
															}
														},
														{
															"id": 5421,
															"name": "result",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"shortText": "Result will not be set when error is set"
															},
															"sources": [
																{
																	"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
																	"line": 103,
																	"character": 4
																}
															],
															"type": {
																"type": "literal",
																"value": null
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																5420,
																5421
															]
														}
													],
													"sources": [
														{
															"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
															"line": 93,
															"character": 39
														}
													]
												}
											}
										]
									},
									{
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"id": 5445,
												"typeArguments": [
													{
														"type": "reference",
														"id": 5425,
														"name": "T"
													}
												],
												"name": "UseAsyncListingReturnCommon"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 5422,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 5423,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"shortText": "Error will not be set when result is set"
															},
															"sources": [
																{
																	"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
																	"line": 108,
																	"character": 4
																}
															],
															"type": {
																"type": "literal",
																"value": null
															}
														},
														{
															"id": 5424,
															"name": "result",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"shortText": "The value returned from execute"
															},
															"sources": [
																{
																	"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
																	"line": 112,
																	"character": 4
																}
															],
															"type": {
																"type": "reference",
																"id": 5425,
																"name": "T"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																5423,
																5424
															]
														}
													],
													"sources": [
														{
															"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
															"line": 104,
															"character": 39
														}
													]
												}
											}
										]
									}
								]
							}
						},
						{
							"id": 5445,
							"name": "UseAsyncListingReturnCommon",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
									"line": 62,
									"character": 13
								}
							],
							"typeParameter": [
								{
									"id": 5454,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5446,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 5447,
											"name": "isLoading",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "True while `execute` call is in progress."
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
													"line": 66,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5448,
											"name": "paginator",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The same `paginator` passed in to `useAsyncListing`"
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
													"line": 70,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 5455,
														"name": "PaginatorInterface"
													}
												]
											}
										},
										{
											"id": 5452,
											"name": "reset",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
													"line": 85,
													"character": 4
												}
											],
											"signatures": [
												{
													"id": 5453,
													"name": "reset",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "When called will set both result and error to null. Will not immediately trigger\na call to the action but subsequent changes to query or paginator will according\nto the value of `trigger`."
													},
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										},
										{
											"id": 5449,
											"name": "run",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
													"line": 79,
													"character": 4
												}
											],
											"signatures": [
												{
													"id": 5450,
													"name": "run",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "A function to manually trigger the action. If `options.trigger` is `MANUAL`\ncalling this function is the only way to trigger the action.",
														"text": "This function will return a promise that resolves/rejects to same value\nreturned by `execute`. If `accumulatePages` is set the value returned is\nthe accumulated value.\n"
													},
													"parameters": [
														{
															"id": 5451,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 5454,
																"name": "T"
															}
														],
														"qualifiedName": "Promise",
														"package": "typescript",
														"name": "Promise"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												5447,
												5448
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												5452,
												5449
											]
										}
									],
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/build/useAsyncListing.d.ts",
											"line": 62,
											"character": 46
										}
									]
								}
							}
						},
						{
							"id": 5426,
							"name": "UseAsyncValueReturn",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/util/build/useAsyncValue.d.ts",
									"line": 80,
									"character": 20
								}
							],
							"typeParameter": [
								{
									"id": 5436,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5427,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 5428,
											"name": "error",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Set to the rejected value of the promise. Only one of `error` and `value` can be set. If\n`isLoading` is true consider this stale (ie. based on _previous_ props). This can be useful\nwhen you want the UI to show the previous value until the next value is ready."
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/build/useAsyncValue.d.ts",
													"line": 86,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 4554,
														"qualifiedName": "Error",
														"package": "typescript",
														"name": "Error"
													}
												]
											}
										},
										{
											"id": 5429,
											"name": "isLoading",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "True while `resolve` call is in progress."
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/build/useAsyncValue.d.ts",
													"line": 90,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 5430,
											"name": "value",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The resolved value"
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/build/useAsyncValue.d.ts",
													"line": 94,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 5436,
														"name": "T"
													},
													{
														"type": "literal",
														"value": null
													}
												]
											}
										},
										{
											"id": 5434,
											"name": "reset",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/build/useAsyncValue.d.ts",
													"line": 112,
													"character": 4
												}
											],
											"signatures": [
												{
													"id": 5435,
													"name": "reset",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "When called will set both result and error to null. Will not immediately trigger\na call to the action but subsequent changes to query or paginator will according\nto the value of `trigger`.",
														"text": "If value is found in `existingValues` then it will still be returned even if\nyou call `reset` - `reset` only clears values that are returned from `resolve`.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										},
										{
											"id": 5431,
											"name": "run",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/util/build/useAsyncValue.d.ts",
													"line": 103,
													"character": 4
												}
											],
											"signatures": [
												{
													"id": 5432,
													"name": "run",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "A function to manually trigger the action. If `options.trigger` is `MANUAL`\ncalling this function is the only way to trigger the action.",
														"text": "This function will return a promise that resolves/rejects to same value\nreturned by `execute`. If `accumulatePages` is set the value returned is\nthe accumulated value.\n"
													},
													"parameters": [
														{
															"id": 5433,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"qualifiedName": "Promise",
														"package": "typescript",
														"name": "Promise"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												5428,
												5429,
												5430
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												5434,
												5431
											]
										}
									],
									"sources": [
										{
											"fileName": "js-packages/@prestojs/util/build/useAsyncValue.d.ts",
											"line": 80,
											"character": 45
										}
									]
								}
							}
						},
						{
							"id": 5523,
							"name": "XMLHttpRequestBodyInit",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.dom.d.ts",
									"line": 17648,
									"character": 5
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 5193,
										"qualifiedName": "Blob",
										"package": "typescript",
										"name": "Blob"
									},
									{
										"type": "reference",
										"id": 5524,
										"qualifiedName": "BufferSource",
										"package": "typescript",
										"name": "BufferSource"
									},
									{
										"type": "reference",
										"qualifiedName": "FormData",
										"package": "typescript",
										"name": "FormData"
									},
									{
										"type": "reference",
										"qualifiedName": "URLSearchParams",
										"package": "typescript",
										"name": "URLSearchParams"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"kind": 256,
							"children": [
								5525,
								5455,
								5502
							]
						},
						{
							"title": "Type aliases",
							"kind": 4194304,
							"children": [
								5529,
								5517,
								5524,
								5516,
								5497,
								5522,
								5518,
								5519,
								5520,
								5521,
								5437,
								5391,
								5384,
								5493,
								5405,
								5415,
								5445,
								5426,
								5523
							]
						}
					]
				},
				{
					"id": 4422,
					"name": "useAsyncChoices",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"originalName": "default",
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/useAsyncChoices.ts",
							"line": 93,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 4423,
							"name": "useAsyncChoices",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Hook that makes it easy to use an [AsyncChoices](doc:AsyncChoicesInterface) definition.",
								"text": "This hook does the following:\n\n1) Calls [useListProps](doc:AsyncChoicesInterface#method-useListProps) to get any dependencies for [list](doc:AsyncChoicesInterface#method-list)\n\n2) Calls [list](doc:AsyncChoicesInterface#method-list) and passes through the dependencies and a `query` object representing any query parameters for the async call\n\n3) Calls [useRetrieveProps](doc:AsyncChoicesInterface#method-useRetrieveProps) to get any dependencies for [retrieve](doc:AsyncChoicesInterface#method-retrieve)\n\n4) If there is a current `value` [retrieve](doc:AsyncChoicesInterface#method-retrieve) is called and is passed the dependencies returned above\n\n5) An object is returned with the available choices in `choices`, the result of 2 in `list` and result of 4 in `selected`\n",
								"tags": [
									{
										"tag": "extract-docs",
										"text": ""
									},
									{
										"tag": "menu-group",
										"text": "Async Choices\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 4424,
									"name": "ItemT",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 4425,
									"name": "ValueT",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 4426,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 5391,
										"typeArguments": [
											{
												"type": "reference",
												"id": 4424,
												"name": "ItemT"
											},
											{
												"type": "reference",
												"id": 4425,
												"name": "ValueT"
											}
										],
										"name": "UseAsyncChoicesProps"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 5384,
								"typeArguments": [
									{
										"type": "reference",
										"id": 4424,
										"name": "ItemT"
									},
									{
										"type": "reference",
										"id": 4425,
										"name": "ValueT"
									}
								],
								"name": "UseAsyncChoicesReturn"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"kind": 4,
					"children": [
						5383
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						4422
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/useAsyncChoices.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4427,
			"name": "useViewModelCache",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 5530,
					"name": "<internal>",
					"kind": 4,
					"kindString": "Namespace",
					"flags": {},
					"children": [
						{
							"id": 5531,
							"name": "Selector",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/useViewModelCache.ts",
									"line": 5,
									"character": 5
								}
							],
							"typeParameter": [
								{
									"id": 5536,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									}
								},
								{
									"id": 5537,
									"name": "ResultType",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 5538,
									"name": "U",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5532,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/useViewModelCache.ts",
											"line": 5,
											"character": 87
										}
									],
									"signatures": [
										{
											"id": 5533,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 5534,
													"name": "cache",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 1827,
														"typeArguments": [
															{
																"type": "reference",
																"id": 5536,
																"name": "T"
															}
														],
														"name": "ViewModelCache"
													}
												},
												{
													"id": 5535,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isRest": true
													},
													"type": {
														"type": "reference",
														"id": 5538,
														"name": "U"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 5537,
												"name": "ResultType"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Type aliases",
							"kind": 4194304,
							"children": [
								5531
							]
						}
					]
				},
				{
					"id": 4428,
					"name": "useViewModelCache",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"originalName": "default",
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/useViewModelCache.ts",
							"line": 108,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 4429,
							"name": "useViewModelCache",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Select some data out of the cache for use in a component. Whenever the cache data\nchanges the component will re-render with latest value.",
								"text": "See [ViewModelCache](doc:ViewModelCache) for more details on how to read data from the\ncache. The [Field notation](doc:ViewModelCache#Field_notation) documentation goes over\nthe possible formats for the fields argument.\n\nExample usage:\n\n```jsx\nfunction UserView({ id }) {\n    const record = useViewModelCache(User, cache => cache.get(id, ['firstName']));\n\n    return <div>Welcome {record.firstName}</div>;\n}\n```\n\nExtra arguments can be passed through as a third argument to the selector which makes\nit easier to create reusable selectors. We could rewrite the above like:\n\n```jsx\nconst selectUser = (cache, id, fieldNames) => cache.get(id, fieldNames);\nfunction UserView({ id }) {\n    const record = useViewModelCache(User, selectUser, [id, fieldNames]);\n\n    return <div>Welcome {record.firstName}</div>;\n}\n```\n\nSelectors can return anything:\n\n```jsx\nconst usersByGroup = cache => cache.getAll(['groupId', 'firstName', 'email']).reduce((acc, record) => {\n  acc[record.groupId] = acc[record.firstName] || [];\n  acc[record.groupId].push(record);\n  return acc;\n}, {})\nfunction GroupedUserView() {\n  const groupedUsers = useViewModelCache(User, usersByGroup);\n  return ...\n}\n```\n\nIn the preceding example the object returned from `useViewModelChange` will change each time `GroupUserView`\nrenders. This is because the selector returns a new object every time and internally `useViewModelChange`\ndoes a strict equality check to determine whether to return the new value or keep the old value. As an\noptimisation you can pass a third parameter that defines how to compare the previous and current value:\n\n```jsx\nimport isEqual from 'lodash/isEqual';\n\nfunction OptimisedGroupedUserView() {\n  // isEqual does a deep equality check so if the underlying cached values remain the same then the\n  // object returned here will be the same across multiple renders.\n  const groupedUsers = useViewModelCache(User, usersByGroup, [], isEqual);\n  return ...\n}\n```\n",
								"returns": "The data as returned by `selector`\n",
								"tags": [
									{
										"tag": "extract-docs",
										"text": ""
									},
									{
										"tag": "menu-group",
										"text": "Caching\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 4430,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "reference",
												"id": 4430,
												"name": "T"
											}
										],
										"name": "ViewModelConstructor"
									}
								},
								{
									"id": 4431,
									"name": "ResultType",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 4432,
									"name": "U",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									},
									"default": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 4433,
									"name": "viewModel",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The ViewModel to use the cache from"
									},
									"type": {
										"type": "reference",
										"id": 4430,
										"name": "T"
									}
								},
								{
									"id": 4434,
									"name": "selector",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A function that gets passed the cache and selects data from it. If your selector\nis slow consider using a library like [reselect](https://github.com/reduxjs/reselect) to create\nyour selector with. Note that `get`, `getAll` and `getList` on `ViewModelCache` will return the\nsame object across multiple calls if the underlying data has not changed."
									},
									"type": {
										"type": "reference",
										"id": 5531,
										"typeArguments": [
											{
												"type": "reference",
												"id": 4430,
												"name": "T"
											},
											{
												"type": "reference",
												"id": 4431,
												"name": "ResultType"
											},
											{
												"type": "reference",
												"id": 4432,
												"name": "U"
											}
										],
										"name": "Selector"
									}
								},
								{
									"id": 4435,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Any extra arguments to pass through to the selector. These will be compared shallowly\nand any changes will re-run the selector."
									},
									"type": {
										"type": "reference",
										"id": 4432,
										"name": "U"
									},
									"defaultValue": "..."
								},
								{
									"id": 4436,
									"name": "isEquals",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Optionally control how equality is determined for an object. By default this is\na strict equality check. This is useful as an optimisation when you want the value returned from\na selector to be the same object when the selector re-runs.\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 4437,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 4438,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 4439,
															"name": "currentValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 4431,
																"name": "ResultType"
															}
														},
														{
															"id": 4440,
															"name": "previousValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"id": 4431,
																"name": "ResultType"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									},
									"defaultValue": "defaultEquality"
								}
							],
							"type": {
								"type": "reference",
								"id": 4431,
								"name": "ResultType"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"kind": 4,
					"children": [
						5530
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						4428
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/useViewModelCache.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4441,
			"name": "util",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 4442,
					"name": "freezeObject",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/util.ts",
							"line": 10,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 4443,
							"name": "freezeObject",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 4444,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 4445,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4446,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/util.ts",
											"line": 10,
											"character": 39
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 4447,
					"name": "isDev",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/util.ts",
							"line": 5,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 4448,
							"name": "isDev",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						4442,
						4447
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/util.ts",
					"line": 2,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"kind": 2,
			"children": [
				1826,
				1980,
				2136,
				2160,
				2244,
				2303,
				2363,
				2425,
				2484,
				2544,
				2603,
				2663,
				2725,
				2785,
				2845,
				2905,
				3040,
				3099,
				3160,
				3220,
				3280,
				3339,
				3400,
				3460,
				3525,
				3591,
				3650,
				3720,
				3780,
				3842,
				4094,
				4154,
				4214,
				4273,
				4333,
				4393,
				4421,
				4427,
				4441
			]
		}
	]
}