{
	"id": 738,
	"name": "@prestojs/viewmodel",
	"kind": 1,
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 739,
			"name": "ViewModelCache",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 740,
					"name": "ViewModelCache",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Cache for ViewModel instances based on the specified field names set.",
						"text": "The key to the cache is the primary key for the record and the field names\nset on it. For example if you have a record that accepts id, name and email\nyou could have a record cached for id, for name, for email or any\ncombination of the 3 fields. This is to handle the common case of fetching\npartial data from a backend.\n\nThe cache implementation will update any cache entries that are a subset\nof a new cache entry. eg. Caching a record with all the possible fields set\nwould result in all the existing partial field cache entries being updated\nto match the data on the full record for the fields it care about.\n\nUsage:\n\n```js\n// Assume User is a ViewModel already defined\n\n// Add a record\nUser.cache.add(new User({ id: 1, name: 'John' }));\n\n// Retrieve a record\nconst record = User.cache.get(1, ['id', 'name']);\n\n// To update a record just add it again\nUser.cache.add(new User({ id: 1, name: 'Johnny' }));\n\n// Cache is per unique set of fields but a superset will update a subset\nUser.cache.add(new User({ id: 1, name: 'Johnny Smith', email: 'johnny@test.com' }));\nUser.cache.get(1, ['id', 'name']);\n// { id: 1, name: 'Johnny Smith' }\nUser.cache.get(1, ['id', 'name', 'email'])\n// { id: 1, name: 'Johnny Smith', email: 'johnny@test.com' }\n\n// Delete a specific cache for a subset of fields\nUser.cache.delete(1, ['id', 'name']);\nUser.cache.get(1, ['id', 'name']);\n// null\nUser.cache.get(1, ['id', 'name', 'email'])\n// { id: 1, name: 'Johnny Smith', email: 'johnny@test.com' }\n\n// Or all fields\nUser.cache.delete(1);\nUser.cache.get(1, ['id', 'name', 'email'])\n// null\n\n// You can add multiple values at a time\nUser.cache.addList([johnny, sam]);\n\n// You can listen to changes\nUser.cache.addListener(2, ['id', 'name'], (previous, next) => console.log(previous, 'change to', next));\nUser.cache.add(new User({ id: 2, name: 'Bob' }));\n// null changed to User({ id: 2, name: 'Bob' })\nUser.cache.add(new User({ id: 2, name: 'Bobby' }));\n// User({ id: 2, name: 'Bob' }) changed to User({ id: 2, name: 'Bobby' })\nUser.cache.delete(2)\n// User({ id: 2, name: 'Bobby' }) changed to null\n\n// You can listen to multiple changes. If you use this and addList then you only get one\n// call for each change that occurs within addList\nUser.cache.addListenerList(\n // Ids to listen for changes to\n [3, 4],\n // Only get updates for cached records with these field names\n ['id', 'name'],\n (previous, next) => console.log(previous, 'change to', next)\n);\nUser.cache.addList([new User({ id: 3, name: 'Jay' }), new User({ id: 4, name: 'Bee' })]);\n// [null, null] changed to [new User({ id: 3, name: 'Jay' }), new User({ id: 4, name: 'Bee' })]\nUser.cache.addList([new User({ id: 3, name: 'Jayz' }), new User({ id: 4, name: 'Beeb' })]);\n// [new User({ id: 3, name: 'Jay' }), new User({ id: 4, name: 'Bee' })] changed to [new User({ id: 3, name: 'Jayz' }), new User({ id: 4, name: 'Beeb' })]\nUser.cache.delete(3)\n// [new User({ id: 3, name: 'Jayz' }), new User({ id: 4, name: 'Beeb' })] changed to [null, new User({ id: 4, name: 'Beeb' })]\n```\n\n## Field notation\n\nIf a model has a [RelatedViewModelField](doc:RelatedViewModelField) the data for a related field\ncan be retrieved using array notation:\n\n```js\n// Fetch the 'name' field and the related 'group' record and its 'label' field\n['name', ['group', 'label']]\n```\n\nTo fetch all fields from a relation you can just specify its name:\n\n```js\n['name', 'group']\n// This will be expanded to include all non-relation fields on the related ViewModel\n['name', ['group', 'label'], ['group', 'ownerId']]\n```\n\n**NOTE:** Using the shorthand for a relation won't include any nested relation\n\nAccessing deeply related records is supported:\n\n```js\n['name', ['group', 'owner', 'name']]\n```\n\nYou can combine the shorthand with array notation to get all fields and the specified deep relations:\n```js\n['name', 'group', ['group', 'owner', 'name']]\n// Equivalent to:\n['name', ['group', 'label'], ['group', 'owner', 'name']]\n```\n\n**NOTE:** When accessing a relation its `sourceFieldName` is always included regardless\nof whether you explicitly request it:\n\n```js\nUser.cache.get(1, ['name', 'group']);\n// {\n//   id: 1,\n//   name: 'Bob',\n//   groupId: 1,\n//   group: {\n//      id: 1,\n//      label: 'Staff',\n//   }\n// }\n```\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Caching\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 763,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 700,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 764,
									"name": "new ViewModelCache",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {},
									"typeParameter": [
										{
											"id": 765,
											"name": "ViewModelClassType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"id": 765,
														"name": "ViewModelClassType"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"parameters": [
										{
											"id": 766,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The `ViewModel` this class is for\n"
											},
											"type": {
												"type": "reference",
												"id": 765,
												"name": "ViewModelClassType"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 740,
										"typeArguments": [
											{
												"type": "reference",
												"id": 765,
												"name": "ViewModelClassType"
											}
										],
										"name": "default"
									}
								}
							]
						},
						{
							"id": 819,
							"name": "_lastAllRecords",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 971,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1064,
										"typeArguments": [
											{
												"type": "reference",
												"id": 765,
												"name": "ViewModelClassType"
											}
										],
										"name": "ViewModelFieldPaths"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1046,
											"typeArguments": [
												{
													"type": "reference",
													"id": 765,
													"name": "ViewModelClassType"
												},
												{
													"type": "reference",
													"typeArguments": [
														{
															"type": "typeOperator",
															"operator": "keyof",
															"target": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "fields"
																},
																"objectType": {
																	"type": "reference",
																	"id": 765,
																	"name": "ViewModelClassType"
																}
															}
														},
														{
															"type": "intrinsic",
															"name": "string"
														}
													],
													"qualifiedName": "Extract",
													"package": "typescript",
													"name": "Extract"
												}
											],
											"name": "PartialViewModel"
										}
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"defaultValue": "..."
						},
						{
							"id": 852,
							"name": "allChangeListeners",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 1129,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 853,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {},
										"signatures": [
											{
												"id": 854,
												"name": "__type",
												"kind": 4096,
												"kindString": "Call signature",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "void"
												}
											}
										]
									}
								}
							},
							"defaultValue": "[]"
						},
						{
							"id": 768,
							"name": "fieldNameCache",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 694,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 765,
												"name": "ViewModelClassType"
											}
										],
										"name": "RecordFieldNameCache"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							}
						},
						{
							"id": 767,
							"name": "viewModel",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 693,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 765,
								"name": "ViewModelClassType"
							}
						},
						{
							"id": 741,
							"name": "listenerBatcher",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 695,
									"character": 11
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 742,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 743,
											"name": "isActive",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "false"
										},
										{
											"id": 744,
											"name": "pending",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "Map",
												"package": "typescript",
												"name": "Map"
											},
											"defaultValue": "..."
										},
										{
											"id": 746,
											"name": "pendingAll",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"qualifiedName": "Set",
												"package": "typescript",
												"name": "Set"
											},
											"defaultValue": "..."
										},
										{
											"id": 745,
											"name": "pendingNoBatch",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "Map",
												"package": "typescript",
												"name": "Map"
											},
											"defaultValue": "..."
										},
										{
											"id": 757,
											"name": "batch",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
													"line": 531,
													"character": 4
												}
											],
											"signatures": [
												{
													"id": 758,
													"name": "batch",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Start a batch. The passed function is called and any changes queued. Once function returns listeners\nwill be dispatched. The value returned from `run` will be returned.",
														"text": "If any error occurs in `run` then no listeners will be called.\n\nIf you nest batches then all listeners run at the end of the outer batch.\n"
													},
													"typeParameter": [
														{
															"id": 759,
															"name": "T",
															"kind": 131072,
															"kindString": "Type parameter",
															"flags": {}
														}
													],
													"parameters": [
														{
															"id": 760,
															"name": "run",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 761,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"signatures": [
																		{
																			"id": 762,
																			"name": "__type",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"id": 759,
																				"name": "T"
																			}
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"id": 759,
														"name": "T"
													}
												}
											]
										},
										{
											"id": 750,
											"name": "call",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
													"line": 505,
													"character": 4
												}
											],
											"signatures": [
												{
													"id": 751,
													"name": "call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queue a call to a record/field specific listener",
														"text": "If `shouldBatch` is false then there's no guarantees about the listener only being called\nonce.\n"
													},
													"typeParameter": [
														{
															"id": 752,
															"name": "T",
															"kind": 131072,
															"kindString": "Type parameter",
															"flags": {}
														}
													],
													"parameters": [
														{
															"id": 753,
															"name": "listener",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 752,
																		"name": "T"
																	}
																],
																"name": "ChangeListener"
															}
														},
														{
															"id": 754,
															"name": "before",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "reference",
																		"id": 752,
																		"name": "T"
																	}
																]
															}
														},
														{
															"id": 755,
															"name": "after",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "reference",
																		"id": 752,
																		"name": "T"
																	}
																]
															}
														},
														{
															"id": 756,
															"name": "shouldBatch",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															},
															"defaultValue": "true"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										},
										{
											"id": 747,
											"name": "callAll",
											"kind": 2048,
											"kindString": "Method",
											"flags": {},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
													"line": 492,
													"character": 4
												}
											],
											"signatures": [
												{
													"id": 748,
													"name": "callAll",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queue a call to a non-record/field specific listeners"
													},
													"parameters": [
														{
															"id": 749,
															"name": "listener",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "AllChangesListener"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												743,
												744,
												746,
												745
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												757,
												750,
												747
											]
										}
									]
								}
							},
							"defaultValue": "defaultListenerBatcher"
						},
						{
							"id": 769,
							"name": "cache",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 705,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 770,
									"name": "cache",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							]
						},
						{
							"id": 780,
							"name": "cacheClass",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 751,
									"character": 16
								}
							],
							"getSignature": [
								{
									"id": 781,
									"name": "cacheClass",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 777,
							"name": "acquireFieldNameCache",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 737,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 778,
									"name": "acquireFieldNameCache",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isPrivate": true
									},
									"comment": {
										"shortText": "Acquire the field name cache specific to a primary key"
									},
									"parameters": [
										{
											"id": 779,
											"name": "pk",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The primary key to get the cache for\n"
											},
											"type": {
												"type": "reference",
												"id": 1049,
												"typeArguments": [
													{
														"type": "reference",
														"id": 765,
														"name": "ViewModelClassType"
													}
												],
												"name": "ExtractPkFieldParseableValueType"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 765,
												"name": "ViewModelClassType"
											}
										],
										"name": "RecordFieldNameCache"
									}
								}
							]
						},
						{
							"id": 788,
							"name": "add",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 791,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 789,
									"name": "add",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add a record or records to the cache. Records are cached based on the fields that are\nset (ie. to retrieve the record you would call `get` with the `id` and array of field\nnames that were set on it).",
										"text": "If record A has a superset of fields of record B then when A is cached it\nwill update the cache for record B. The reverse isn't true so as to maintain consistency\nwithin a record.\n"
									},
									"typeParameter": [
										{
											"id": 790,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 765,
																		"name": "ViewModelClassType"
																	}
																],
																"qualifiedName": "InstanceType",
																"package": "typescript",
																"name": "InstanceType"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 765,
																				"name": "ViewModelClassType"
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														],
														"qualifiedName": "Omit",
														"package": "typescript",
														"name": "Omit"
													},
													{
														"type": "reference",
														"id": 962,
														"typeArguments": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "fields"
																},
																"objectType": {
																	"type": "reference",
																	"id": 765,
																	"name": "ViewModelClassType"
																}
															},
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "pkFieldName"
																},
																"objectType": {
																	"type": "reference",
																	"id": 765,
																	"name": "ViewModelClassType"
																}
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 765,
																				"name": "ViewModelClassType"
																			},
																			{
																				"type": "reference",
																				"typeArguments": [
																					{
																						"type": "typeOperator",
																						"operator": "keyof",
																						"target": {
																							"type": "indexedAccess",
																							"indexType": {
																								"type": "literal",
																								"value": "fields"
																							},
																							"objectType": {
																								"type": "reference",
																								"id": 765,
																								"name": "ViewModelClassType"
																							}
																						}
																					},
																					{
																						"type": "intrinsic",
																						"name": "string"
																					}
																				],
																				"qualifiedName": "Extract",
																				"package": "typescript",
																				"name": "Extract"
																			}
																		],
																		"name": "ExtractRootFieldNames"
																	},
																	{
																		"type": "conditional",
																		"checkType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "pkFieldName"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 765,
																				"name": "ViewModelClassType"
																			}
																		},
																		"extendsType": {
																			"type": "intrinsic",
																			"name": "string"
																		},
																		"trueType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "intrinsic",
																				"name": "any"
																			},
																			"objectType": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		},
																		"falseType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "intrinsic",
																				"name": "number"
																			},
																			"objectType": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "literal",
																					"value": "pkFieldName"
																				},
																				"objectType": {
																					"type": "reference",
																					"id": 765,
																					"name": "ViewModelClassType"
																				}
																			}
																		}
																	}
																]
															},
															{
																"type": "reference",
																"id": 790,
																"name": "T"
															}
														],
														"name": "BaseViewModel"
													},
													{
														"type": "reference",
														"id": 931,
														"typeArguments": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "literal",
																			"value": "fields"
																		},
																		"objectType": {
																			"type": "reference",
																			"id": 765,
																			"name": "ViewModelClassType"
																		}
																	},
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "reference",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"id": 765,
																						"name": "ViewModelClassType"
																					},
																					{
																						"type": "reference",
																						"typeArguments": [
																							{
																								"type": "typeOperator",
																								"operator": "keyof",
																								"target": {
																									"type": "indexedAccess",
																									"indexType": {
																										"type": "literal",
																										"value": "fields"
																									},
																									"objectType": {
																										"type": "reference",
																										"id": 765,
																										"name": "ViewModelClassType"
																									}
																								}
																							},
																							{
																								"type": "intrinsic",
																								"name": "string"
																							}
																						],
																						"qualifiedName": "Extract",
																						"package": "typescript",
																						"name": "Extract"
																					}
																				],
																				"name": "ExtractRootFieldNames"
																			},
																			{
																				"type": "conditional",
																				"checkType": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "pkFieldName"
																					},
																					"objectType": {
																						"type": "reference",
																						"id": 765,
																						"name": "ViewModelClassType"
																					}
																				},
																				"extendsType": {
																					"type": "intrinsic",
																					"name": "string"
																				},
																				"trueType": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "intrinsic",
																						"name": "any"
																					},
																					"objectType": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				},
																				"falseType": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "intrinsic",
																						"name": "number"
																					},
																					"objectType": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "literal",
																							"value": "pkFieldName"
																						},
																						"objectType": {
																							"type": "reference",
																							"id": 765,
																							"name": "ViewModelClassType"
																						}
																					}
																				}
																			}
																		]
																	}
																],
																"qualifiedName": "Pick",
																"package": "typescript",
																"name": "Pick"
															}
														],
														"name": "FieldDataMapping"
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 791,
											"name": "recordOrData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The record instance to cache. If a plain object is passed then\nan instance of the view model will be created and returned. An array is also supported\nin which case each entry in the array will be converted to the view model if required\nand returned.\n"
											},
											"type": {
												"type": "reference",
												"id": 790,
												"name": "T"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 790,
										"name": "T"
									}
								},
								{
									"id": 792,
									"name": "add",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 793,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 765,
																		"name": "ViewModelClassType"
																	}
																],
																"qualifiedName": "InstanceType",
																"package": "typescript",
																"name": "InstanceType"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 765,
																				"name": "ViewModelClassType"
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														],
														"qualifiedName": "Omit",
														"package": "typescript",
														"name": "Omit"
													},
													{
														"type": "reference",
														"id": 962,
														"typeArguments": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "fields"
																},
																"objectType": {
																	"type": "reference",
																	"id": 765,
																	"name": "ViewModelClassType"
																}
															},
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "pkFieldName"
																},
																"objectType": {
																	"type": "reference",
																	"id": 765,
																	"name": "ViewModelClassType"
																}
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 765,
																				"name": "ViewModelClassType"
																			},
																			{
																				"type": "reference",
																				"typeArguments": [
																					{
																						"type": "typeOperator",
																						"operator": "keyof",
																						"target": {
																							"type": "indexedAccess",
																							"indexType": {
																								"type": "literal",
																								"value": "fields"
																							},
																							"objectType": {
																								"type": "reference",
																								"id": 765,
																								"name": "ViewModelClassType"
																							}
																						}
																					},
																					{
																						"type": "intrinsic",
																						"name": "string"
																					}
																				],
																				"qualifiedName": "Extract",
																				"package": "typescript",
																				"name": "Extract"
																			}
																		],
																		"name": "ExtractRootFieldNames"
																	},
																	{
																		"type": "conditional",
																		"checkType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "pkFieldName"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 765,
																				"name": "ViewModelClassType"
																			}
																		},
																		"extendsType": {
																			"type": "intrinsic",
																			"name": "string"
																		},
																		"trueType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "intrinsic",
																				"name": "any"
																			},
																			"objectType": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		},
																		"falseType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "intrinsic",
																				"name": "number"
																			},
																			"objectType": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "literal",
																					"value": "pkFieldName"
																				},
																				"objectType": {
																					"type": "reference",
																					"id": 765,
																					"name": "ViewModelClassType"
																				}
																			}
																		}
																	}
																]
															},
															{
																"type": "reference",
																"id": 793,
																"name": "T"
															}
														],
														"name": "BaseViewModel"
													},
													{
														"type": "reference",
														"id": 931,
														"typeArguments": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "literal",
																			"value": "fields"
																		},
																		"objectType": {
																			"type": "reference",
																			"id": 765,
																			"name": "ViewModelClassType"
																		}
																	},
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "reference",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"id": 765,
																						"name": "ViewModelClassType"
																					},
																					{
																						"type": "reference",
																						"typeArguments": [
																							{
																								"type": "typeOperator",
																								"operator": "keyof",
																								"target": {
																									"type": "indexedAccess",
																									"indexType": {
																										"type": "literal",
																										"value": "fields"
																									},
																									"objectType": {
																										"type": "reference",
																										"id": 765,
																										"name": "ViewModelClassType"
																									}
																								}
																							},
																							{
																								"type": "intrinsic",
																								"name": "string"
																							}
																						],
																						"qualifiedName": "Extract",
																						"package": "typescript",
																						"name": "Extract"
																					}
																				],
																				"name": "ExtractRootFieldNames"
																			},
																			{
																				"type": "conditional",
																				"checkType": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "pkFieldName"
																					},
																					"objectType": {
																						"type": "reference",
																						"id": 765,
																						"name": "ViewModelClassType"
																					}
																				},
																				"extendsType": {
																					"type": "intrinsic",
																					"name": "string"
																				},
																				"trueType": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "intrinsic",
																						"name": "any"
																					},
																					"objectType": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				},
																				"falseType": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "intrinsic",
																						"name": "number"
																					},
																					"objectType": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "literal",
																							"value": "pkFieldName"
																						},
																						"objectType": {
																							"type": "reference",
																							"id": 765,
																							"name": "ViewModelClassType"
																						}
																					}
																				}
																			}
																		]
																	}
																],
																"qualifiedName": "Pick",
																"package": "typescript",
																"name": "Pick"
															}
														],
														"name": "FieldDataMapping"
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 794,
											"name": "recordOrData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 793,
													"name": "T"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 793,
											"name": "T"
										}
									}
								},
								{
									"id": 795,
									"name": "add",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 796,
											"name": "FieldNames",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 797,
											"name": "recordOrData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 933,
												"typeArguments": [
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "fields"
																},
																"objectType": {
																	"type": "reference",
																	"id": 765,
																	"name": "ViewModelClassType"
																}
															},
															{
																"type": "reference",
																"id": 796,
																"name": "FieldNames"
															}
														],
														"qualifiedName": "Pick",
														"package": "typescript",
														"name": "Pick"
													}
												],
												"name": "FieldDataMappingRaw"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1046,
										"typeArguments": [
											{
												"type": "reference",
												"id": 765,
												"name": "ViewModelClassType"
											},
											{
												"type": "reference",
												"id": 796,
												"name": "FieldNames"
											}
										],
										"name": "PartialViewModel"
									}
								},
								{
									"id": 798,
									"name": "add",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 799,
											"name": "FieldNames",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 800,
											"name": "recordOrData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 933,
													"typeArguments": [
														{
															"type": "reference",
															"typeArguments": [
																{
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "literal",
																		"value": "fields"
																	},
																	"objectType": {
																		"type": "reference",
																		"id": 765,
																		"name": "ViewModelClassType"
																	}
																},
																{
																	"type": "reference",
																	"id": 799,
																	"name": "FieldNames"
																}
															],
															"qualifiedName": "Pick",
															"package": "typescript",
															"name": "Pick"
														}
													],
													"name": "FieldDataMappingRaw"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1046,
											"typeArguments": [
												{
													"type": "reference",
													"id": 765,
													"name": "ViewModelClassType"
												},
												{
													"type": "reference",
													"id": 799,
													"name": "FieldNames"
												}
											],
											"name": "PartialViewModel"
										}
									}
								}
							]
						},
						{
							"id": 801,
							"name": "addList",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 850,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 802,
									"name": "addList",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add a list of records. Use this in place of manually calling\nadd() on each record individually so that listeners only get\nnotified once of the change to the list rather than for\neach record in the list."
									},
									"typeParameter": [
										{
											"id": 803,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 765,
																		"name": "ViewModelClassType"
																	}
																],
																"qualifiedName": "InstanceType",
																"package": "typescript",
																"name": "InstanceType"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 765,
																				"name": "ViewModelClassType"
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														],
														"qualifiedName": "Omit",
														"package": "typescript",
														"name": "Omit"
													},
													{
														"type": "reference",
														"id": 962,
														"typeArguments": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "fields"
																},
																"objectType": {
																	"type": "reference",
																	"id": 765,
																	"name": "ViewModelClassType"
																}
															},
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "pkFieldName"
																},
																"objectType": {
																	"type": "reference",
																	"id": 765,
																	"name": "ViewModelClassType"
																}
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 765,
																				"name": "ViewModelClassType"
																			},
																			{
																				"type": "reference",
																				"typeArguments": [
																					{
																						"type": "typeOperator",
																						"operator": "keyof",
																						"target": {
																							"type": "indexedAccess",
																							"indexType": {
																								"type": "literal",
																								"value": "fields"
																							},
																							"objectType": {
																								"type": "reference",
																								"id": 765,
																								"name": "ViewModelClassType"
																							}
																						}
																					},
																					{
																						"type": "intrinsic",
																						"name": "string"
																					}
																				],
																				"qualifiedName": "Extract",
																				"package": "typescript",
																				"name": "Extract"
																			}
																		],
																		"name": "ExtractRootFieldNames"
																	},
																	{
																		"type": "conditional",
																		"checkType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "pkFieldName"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 765,
																				"name": "ViewModelClassType"
																			}
																		},
																		"extendsType": {
																			"type": "intrinsic",
																			"name": "string"
																		},
																		"trueType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "intrinsic",
																				"name": "any"
																			},
																			"objectType": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		},
																		"falseType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "intrinsic",
																				"name": "number"
																			},
																			"objectType": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "literal",
																					"value": "pkFieldName"
																				},
																				"objectType": {
																					"type": "reference",
																					"id": 765,
																					"name": "ViewModelClassType"
																				}
																			}
																		}
																	}
																]
															},
															{
																"type": "reference",
																"id": 803,
																"name": "T"
															}
														],
														"name": "BaseViewModel"
													},
													{
														"type": "reference",
														"id": 931,
														"typeArguments": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "literal",
																			"value": "fields"
																		},
																		"objectType": {
																			"type": "reference",
																			"id": 765,
																			"name": "ViewModelClassType"
																		}
																	},
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "reference",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"id": 765,
																						"name": "ViewModelClassType"
																					},
																					{
																						"type": "reference",
																						"typeArguments": [
																							{
																								"type": "typeOperator",
																								"operator": "keyof",
																								"target": {
																									"type": "indexedAccess",
																									"indexType": {
																										"type": "literal",
																										"value": "fields"
																									},
																									"objectType": {
																										"type": "reference",
																										"id": 765,
																										"name": "ViewModelClassType"
																									}
																								}
																							},
																							{
																								"type": "intrinsic",
																								"name": "string"
																							}
																						],
																						"qualifiedName": "Extract",
																						"package": "typescript",
																						"name": "Extract"
																					}
																				],
																				"name": "ExtractRootFieldNames"
																			},
																			{
																				"type": "conditional",
																				"checkType": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "pkFieldName"
																					},
																					"objectType": {
																						"type": "reference",
																						"id": 765,
																						"name": "ViewModelClassType"
																					}
																				},
																				"extendsType": {
																					"type": "intrinsic",
																					"name": "string"
																				},
																				"trueType": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "intrinsic",
																						"name": "any"
																					},
																					"objectType": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				},
																				"falseType": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "intrinsic",
																						"name": "number"
																					},
																					"objectType": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "literal",
																							"value": "pkFieldName"
																						},
																						"objectType": {
																							"type": "reference",
																							"id": 765,
																							"name": "ViewModelClassType"
																						}
																					}
																				}
																			}
																		]
																	}
																],
																"qualifiedName": "Pick",
																"package": "typescript",
																"name": "Pick"
															}
														],
														"name": "FieldDataMapping"
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 804,
											"name": "recordsOrData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The records to add. Can either be an array of instances of the ViewModel\nor an array of data objects (or a mixture of both).\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 803,
													"name": "T"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 803,
											"name": "T"
										}
									}
								},
								{
									"id": 805,
									"name": "addList",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 806,
											"name": "FieldNames",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 807,
											"name": "recordsOrData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 933,
													"typeArguments": [
														{
															"type": "reference",
															"typeArguments": [
																{
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "literal",
																		"value": "fields"
																	},
																	"objectType": {
																		"type": "reference",
																		"id": 765,
																		"name": "ViewModelClassType"
																	}
																},
																{
																	"type": "reference",
																	"id": 806,
																	"name": "FieldNames"
																}
															],
															"qualifiedName": "Pick",
															"package": "typescript",
															"name": "Pick"
														}
													],
													"name": "FieldDataMappingRaw"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1046,
											"typeArguments": [
												{
													"type": "reference",
													"id": 765,
													"name": "ViewModelClassType"
												},
												{
													"type": "reference",
													"id": 806,
													"name": "FieldNames"
												}
											],
											"name": "PartialViewModel"
										}
									}
								}
							]
						},
						{
							"id": 857,
							"name": "addListener",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 1141,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 858,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add a listener to any changes at all. The detail of the changes are not available.",
										"returns": "A function that removes the listener\n"
									},
									"parameters": [
										{
											"id": 859,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "Function to that is called when any change occurs. The function is called with no parameters."
											},
											"type": {
												"type": "reference",
												"name": "AllChangesListener"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ChangeListenerUnsubscribe"
									}
								},
								{
									"id": 860,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add a listener for any changes, additions or deletions for the record(s) identified by\n`pkOrPks` for the field names `fieldNames`.",
										"returns": "A function that removes the listener\n"
									},
									"typeParameter": [
										{
											"id": 861,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "tuple",
														"elements": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "reference",
																			"typeArguments": [
																				{
																					"type": "reference",
																					"id": 765,
																					"name": "ViewModelClassType"
																				}
																			],
																			"name": "ExtractRelatedFields"
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "typeOperator",
																							"operator": "keyof",
																							"target": {
																								"type": "reference",
																								"typeArguments": [
																									{
																										"type": "reference",
																										"id": 765,
																										"name": "ViewModelClassType"
																									}
																								],
																								"name": "ExtractRelatedFields"
																							}
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"qualifiedName": "Extract",
																					"package": "typescript",
																					"name": "Extract"
																				},
																				"objectType": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 765,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														]
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 765,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "fields"
																					},
																					"objectType": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "typeOperator",
																									"operator": "keyof",
																									"target": {
																										"type": "reference",
																										"typeArguments": [
																											{
																												"type": "reference",
																												"id": 765,
																												"name": "ViewModelClassType"
																											}
																										],
																										"name": "ExtractRelatedFields"
																									}
																								},
																								{
																									"type": "intrinsic",
																									"name": "string"
																								}
																							],
																							"qualifiedName": "Extract",
																							"package": "typescript",
																							"name": "Extract"
																						},
																						"objectType": {
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "reference",
																									"id": 765,
																									"name": "ViewModelClassType"
																								}
																							],
																							"name": "ExtractRelatedFields"
																						}
																					}
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	}
																]
															},
															{
																"type": "reference",
																"id": 999,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "ViewModelConstructor"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 999,
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "ViewModelConstructor"
																	}
																],
																"name": "ExtractRelatedFields"
															}
														],
														"name": "FieldPathInner"
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 862,
											"name": "pkOrPks",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "Primary key or array of multiple primary keys that identifies the record(s)\nto listen to changes/additions/deletions to"
											},
											"type": {
												"type": "reference",
												"id": 1049,
												"typeArguments": [
													{
														"type": "reference",
														"id": 765,
														"name": "ViewModelClassType"
													}
												],
												"name": "ExtractPkFieldParseableValueType"
											}
										},
										{
											"id": 863,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "Field names to listen to changes/additions/deletions to. See [Field notation](#Field_notation) for supported format."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 861,
													"name": "T"
												}
											}
										},
										{
											"id": 864,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "Function to call with any changes"
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 1046,
														"typeArguments": [
															{
																"type": "reference",
																"id": 765,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"id": 861,
																"name": "T"
															}
														],
														"name": "PartialViewModel"
													}
												],
												"name": "ChangeListener"
											}
										},
										{
											"id": 865,
											"name": "batch",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Whether or not to batch this call with other calls (defaults to true). You shouldn't need to change the default."
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ChangeListenerUnsubscribe"
									}
								},
								{
									"id": 866,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 867,
											"name": "pkOrPks",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1049,
												"typeArguments": [
													{
														"type": "reference",
														"id": 765,
														"name": "ViewModelClassType"
													}
												],
												"name": "ExtractPkFieldParseableValueType"
											}
										},
										{
											"id": 868,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": "*"
											}
										},
										{
											"id": 869,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 1046,
														"typeArguments": [
															{
																"type": "reference",
																"id": 765,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 765,
																				"name": "ViewModelClassType"
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														],
														"name": "PartialViewModel"
													}
												],
												"name": "ChangeListener"
											}
										},
										{
											"id": 870,
											"name": "batch",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ChangeListenerUnsubscribe"
									}
								},
								{
									"id": 871,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 872,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "tuple",
														"elements": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "reference",
																			"typeArguments": [
																				{
																					"type": "reference",
																					"id": 765,
																					"name": "ViewModelClassType"
																				}
																			],
																			"name": "ExtractRelatedFields"
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "typeOperator",
																							"operator": "keyof",
																							"target": {
																								"type": "reference",
																								"typeArguments": [
																									{
																										"type": "reference",
																										"id": 765,
																										"name": "ViewModelClassType"
																									}
																								],
																								"name": "ExtractRelatedFields"
																							}
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"qualifiedName": "Extract",
																					"package": "typescript",
																					"name": "Extract"
																				},
																				"objectType": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 765,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														]
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 765,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "fields"
																					},
																					"objectType": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "typeOperator",
																									"operator": "keyof",
																									"target": {
																										"type": "reference",
																										"typeArguments": [
																											{
																												"type": "reference",
																												"id": 765,
																												"name": "ViewModelClassType"
																											}
																										],
																										"name": "ExtractRelatedFields"
																									}
																								},
																								{
																									"type": "intrinsic",
																									"name": "string"
																								}
																							],
																							"qualifiedName": "Extract",
																							"package": "typescript",
																							"name": "Extract"
																						},
																						"objectType": {
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "reference",
																									"id": 765,
																									"name": "ViewModelClassType"
																								}
																							],
																							"name": "ExtractRelatedFields"
																						}
																					}
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	}
																]
															},
															{
																"type": "reference",
																"id": 999,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "ViewModelConstructor"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 999,
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "ViewModelConstructor"
																	}
																],
																"name": "ExtractRelatedFields"
															}
														],
														"name": "FieldPathInner"
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 873,
											"name": "pkOrPks",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1049,
													"typeArguments": [
														{
															"type": "reference",
															"id": 765,
															"name": "ViewModelClassType"
														}
													],
													"name": "ExtractPkFieldParseableValueType"
												}
											}
										},
										{
											"id": 874,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 872,
													"name": "T"
												}
											}
										},
										{
											"id": 875,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 1046,
														"typeArguments": [
															{
																"type": "reference",
																"id": 765,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"id": 872,
																"name": "T"
															}
														],
														"name": "PartialViewModel"
													}
												],
												"name": "MultiChangeListener"
											}
										},
										{
											"id": 876,
											"name": "batch",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ChangeListenerUnsubscribe"
									}
								},
								{
									"id": 877,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 878,
											"name": "pkOrPksOrListener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1049,
													"typeArguments": [
														{
															"type": "reference",
															"id": 765,
															"name": "ViewModelClassType"
														}
													],
													"name": "ExtractPkFieldParseableValueType"
												}
											}
										},
										{
											"id": 879,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": "*"
											}
										},
										{
											"id": 880,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 1046,
														"typeArguments": [
															{
																"type": "reference",
																"id": 765,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 765,
																				"name": "ViewModelClassType"
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														],
														"name": "PartialViewModel"
													}
												],
												"name": "MultiChangeListener"
											}
										},
										{
											"id": 881,
											"name": "batch",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ChangeListenerUnsubscribe"
									}
								}
							]
						},
						{
							"id": 882,
							"name": "addListenerList",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 1237,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 883,
									"name": "addListenerList",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 884,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "tuple",
														"elements": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "reference",
																			"typeArguments": [
																				{
																					"type": "reference",
																					"id": 765,
																					"name": "ViewModelClassType"
																				}
																			],
																			"name": "ExtractRelatedFields"
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "typeOperator",
																							"operator": "keyof",
																							"target": {
																								"type": "reference",
																								"typeArguments": [
																									{
																										"type": "reference",
																										"id": 765,
																										"name": "ViewModelClassType"
																									}
																								],
																								"name": "ExtractRelatedFields"
																							}
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"qualifiedName": "Extract",
																					"package": "typescript",
																					"name": "Extract"
																				},
																				"objectType": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 765,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														]
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 765,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "fields"
																					},
																					"objectType": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "typeOperator",
																									"operator": "keyof",
																									"target": {
																										"type": "reference",
																										"typeArguments": [
																											{
																												"type": "reference",
																												"id": 765,
																												"name": "ViewModelClassType"
																											}
																										],
																										"name": "ExtractRelatedFields"
																									}
																								},
																								{
																									"type": "intrinsic",
																									"name": "string"
																								}
																							],
																							"qualifiedName": "Extract",
																							"package": "typescript",
																							"name": "Extract"
																						},
																						"objectType": {
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "reference",
																									"id": 765,
																									"name": "ViewModelClassType"
																								}
																							],
																							"name": "ExtractRelatedFields"
																						}
																					}
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	}
																]
															},
															{
																"type": "reference",
																"id": 999,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "ViewModelConstructor"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 999,
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "ViewModelConstructor"
																	}
																],
																"name": "ExtractRelatedFields"
															}
														],
														"name": "FieldPathInner"
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 885,
											"name": "pks",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1049,
													"typeArguments": [
														{
															"type": "reference",
															"id": 765,
															"name": "ViewModelClassType"
														}
													],
													"name": "ExtractPkFieldParseableValueType"
												}
											}
										},
										{
											"id": 886,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 884,
													"name": "T"
												}
											}
										},
										{
											"id": 887,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 1046,
														"typeArguments": [
															{
																"type": "reference",
																"id": 765,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"id": 884,
																"name": "T"
															}
														],
														"name": "PartialViewModel"
													}
												],
												"name": "MultiChangeListener"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ChangeListenerUnsubscribe"
									}
								},
								{
									"id": 888,
									"name": "addListenerList",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 889,
											"name": "pks",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1049,
													"typeArguments": [
														{
															"type": "reference",
															"id": 765,
															"name": "ViewModelClassType"
														}
													],
													"name": "ExtractPkFieldParseableValueType"
												}
											}
										},
										{
											"id": 890,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": "*"
											}
										},
										{
											"id": 891,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 1046,
														"typeArguments": [
															{
																"type": "reference",
																"id": 765,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 765,
																				"name": "ViewModelClassType"
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														],
														"name": "PartialViewModel"
													}
												],
												"name": "MultiChangeListener"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ChangeListenerUnsubscribe"
									}
								}
							]
						},
						{
							"id": 782,
							"name": "batch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 773,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 783,
									"name": "batch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Batch changes made within provided function. This guarantees that any changes made\nwill result in a single call for each relevant listener.",
										"text": "```js\nUser.cache.addListener(listenerAll);\nUser.cache.addListener(1, ['id', 'name'], listener);\nUser.cache.addListenerList([1, 2], ['id', 'name'], listenerList);\nUser.cache.batch(() => {\n  // This value won't appear in changes at all as it's replaced 2 lines down\n  User.cache.add({ id: 1, name: 'Bob', groupId: 1 });\n  User.cache.add({ id: 2, name: 'Sam', groupId: null });\n  User.cache.add({ id: 1, name: 'Bobby', groupId: 1 });\n});\n// All listeners called once\n```"
									},
									"typeParameter": [
										{
											"id": 784,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 785,
											"name": "run",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 786,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 787,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 784,
																"name": "T"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 784,
										"name": "T"
									}
								}
							]
						},
						{
							"id": 848,
							"name": "delete",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 1113,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 849,
									"name": "delete",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Delete a record from the cache, optionally only for the specified `fieldNames`",
										"text": "If `fieldNames` is omitted then the cache for the record is cleared in it's entirety.\n",
										"returns": "true if anything was removed, false otherwise\n"
									},
									"parameters": [
										{
											"id": 850,
											"name": "pk",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The primary key of the record to delete"
											},
											"type": {
												"type": "reference",
												"id": 1049,
												"typeArguments": [
													{
														"type": "reference",
														"id": 765,
														"name": "ViewModelClassType"
													}
												],
												"name": "ExtractPkFieldParseableValueType"
											}
										},
										{
											"id": 851,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Optionally only delete the entry with the specified field names. If\nthis is not set then all data for the record is removed. See [Field notation](#Field_notation) for supported format.\n"
											},
											"type": {
												"type": "reference",
												"id": 928,
												"typeArguments": [
													{
														"type": "reference",
														"id": 765,
														"name": "ViewModelClassType"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 765,
																"name": "ViewModelClassType"
															}
														],
														"name": "ExtractRelatedFields"
													}
												],
												"name": "FieldPaths"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 808,
							"name": "get",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 876,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 809,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get a record with the specified `fieldNames` set from the cache",
										"returns": "The cached record or null if none found\n"
									},
									"typeParameter": [
										{
											"id": 810,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "tuple",
														"elements": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "reference",
																			"typeArguments": [
																				{
																					"type": "reference",
																					"id": 765,
																					"name": "ViewModelClassType"
																				}
																			],
																			"name": "ExtractRelatedFields"
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "typeOperator",
																							"operator": "keyof",
																							"target": {
																								"type": "reference",
																								"typeArguments": [
																									{
																										"type": "reference",
																										"id": 765,
																										"name": "ViewModelClassType"
																									}
																								],
																								"name": "ExtractRelatedFields"
																							}
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"qualifiedName": "Extract",
																					"package": "typescript",
																					"name": "Extract"
																				},
																				"objectType": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 765,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														]
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 765,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "fields"
																					},
																					"objectType": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "typeOperator",
																									"operator": "keyof",
																									"target": {
																										"type": "reference",
																										"typeArguments": [
																											{
																												"type": "reference",
																												"id": 765,
																												"name": "ViewModelClassType"
																											}
																										],
																										"name": "ExtractRelatedFields"
																									}
																								},
																								{
																									"type": "intrinsic",
																									"name": "string"
																								}
																							],
																							"qualifiedName": "Extract",
																							"package": "typescript",
																							"name": "Extract"
																						},
																						"objectType": {
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "reference",
																									"id": 765,
																									"name": "ViewModelClassType"
																								}
																							],
																							"name": "ExtractRelatedFields"
																						}
																					}
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	}
																]
															},
															{
																"type": "reference",
																"id": 999,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "ViewModelConstructor"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 999,
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "ViewModelConstructor"
																	}
																],
																"name": "ExtractRelatedFields"
															}
														],
														"name": "FieldPathInner"
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 811,
											"name": "pk",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "the primary key of the record to get"
											},
											"type": {
												"type": "reference",
												"id": 1049,
												"typeArguments": [
													{
														"type": "reference",
														"id": 765,
														"name": "ViewModelClassType"
													}
												],
												"name": "ExtractPkFieldParseableValueType"
											}
										},
										{
											"id": 812,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "the field names to use to look up the cache entry. Use '*' to indicate all fields.\nSee [Field notation](#Field_notation) for supported format.\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 810,
													"name": "T"
												}
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1046,
												"typeArguments": [
													{
														"type": "reference",
														"id": 765,
														"name": "ViewModelClassType"
													},
													{
														"type": "reference",
														"id": 810,
														"name": "T"
													}
												],
												"name": "PartialViewModel"
											}
										]
									}
								},
								{
									"id": 813,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 814,
											"name": "pk",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1049,
												"typeArguments": [
													{
														"type": "reference",
														"id": 765,
														"name": "ViewModelClassType"
													}
												],
												"name": "ExtractPkFieldParseableValueType"
											}
										},
										{
											"id": 815,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": "*"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1046,
												"typeArguments": [
													{
														"type": "reference",
														"id": 765,
														"name": "ViewModelClassType"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "literal",
																		"value": "fields"
																	},
																	"objectType": {
																		"type": "reference",
																		"id": 765,
																		"name": "ViewModelClassType"
																	}
																}
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"qualifiedName": "Extract",
														"package": "typescript",
														"name": "Extract"
													}
												],
												"name": "PartialViewModel"
											}
										]
									}
								},
								{
									"id": 816,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the currently cached version of the specified version",
										"returns": "The cached record or null if none found\n"
									},
									"typeParameter": [
										{
											"id": 817,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "tuple",
														"elements": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "reference",
																			"typeArguments": [
																				{
																					"type": "reference",
																					"id": 765,
																					"name": "ViewModelClassType"
																				}
																			],
																			"name": "ExtractRelatedFields"
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "typeOperator",
																							"operator": "keyof",
																							"target": {
																								"type": "reference",
																								"typeArguments": [
																									{
																										"type": "reference",
																										"id": 765,
																										"name": "ViewModelClassType"
																									}
																								],
																								"name": "ExtractRelatedFields"
																							}
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"qualifiedName": "Extract",
																					"package": "typescript",
																					"name": "Extract"
																				},
																				"objectType": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 765,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														]
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 765,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "fields"
																					},
																					"objectType": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "typeOperator",
																									"operator": "keyof",
																									"target": {
																										"type": "reference",
																										"typeArguments": [
																											{
																												"type": "reference",
																												"id": 765,
																												"name": "ViewModelClassType"
																											}
																										],
																										"name": "ExtractRelatedFields"
																									}
																								},
																								{
																									"type": "intrinsic",
																									"name": "string"
																								}
																							],
																							"qualifiedName": "Extract",
																							"package": "typescript",
																							"name": "Extract"
																						},
																						"objectType": {
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "reference",
																									"id": 765,
																									"name": "ViewModelClassType"
																								}
																							],
																							"name": "ExtractRelatedFields"
																						}
																					}
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	}
																]
															},
															{
																"type": "reference",
																"id": 999,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "ViewModelConstructor"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 999,
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "ViewModelConstructor"
																	}
																],
																"name": "ExtractRelatedFields"
															}
														],
														"name": "FieldPathInner"
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 818,
											"name": "record",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "a current instance of a ViewModel to get the latest cached version of\n"
											},
											"type": {
												"type": "reference",
												"id": 1046,
												"typeArguments": [
													{
														"type": "reference",
														"id": 765,
														"name": "ViewModelClassType"
													},
													{
														"type": "reference",
														"id": 817,
														"name": "T"
													}
												],
												"name": "PartialViewModel"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1046,
												"typeArguments": [
													{
														"type": "reference",
														"id": 765,
														"name": "ViewModelClassType"
													},
													{
														"type": "reference",
														"id": 817,
														"name": "T"
													}
												],
												"name": "PartialViewModel"
											}
										]
									}
								}
							]
						},
						{
							"id": 820,
							"name": "getAll",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 985,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 821,
									"name": "getAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get all records in the cache for the specified field names. This acts like `getList` but returns\nall records not just records with specified primary keys.",
										"text": "This function guarantees to return the same array (ie. passes strict equality check) if the underlying\nrecords have not changed.\n"
									},
									"parameters": [
										{
											"id": 822,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "List of field names to return records for. See [Field notation](#Field_notation) for supported format.\n"
											},
											"type": {
												"type": "literal",
												"value": "*"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1046,
											"typeArguments": [
												{
													"type": "reference",
													"id": 765,
													"name": "ViewModelClassType"
												},
												{
													"type": "reference",
													"typeArguments": [
														{
															"type": "typeOperator",
															"operator": "keyof",
															"target": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "fields"
																},
																"objectType": {
																	"type": "reference",
																	"id": 765,
																	"name": "ViewModelClassType"
																}
															}
														},
														{
															"type": "intrinsic",
															"name": "string"
														}
													],
													"qualifiedName": "Extract",
													"package": "typescript",
													"name": "Extract"
												}
											],
											"name": "PartialViewModel"
										}
									}
								},
								{
									"id": 823,
									"name": "getAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 824,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "tuple",
														"elements": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "reference",
																			"typeArguments": [
																				{
																					"type": "reference",
																					"id": 765,
																					"name": "ViewModelClassType"
																				}
																			],
																			"name": "ExtractRelatedFields"
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "typeOperator",
																							"operator": "keyof",
																							"target": {
																								"type": "reference",
																								"typeArguments": [
																									{
																										"type": "reference",
																										"id": 765,
																										"name": "ViewModelClassType"
																									}
																								],
																								"name": "ExtractRelatedFields"
																							}
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"qualifiedName": "Extract",
																					"package": "typescript",
																					"name": "Extract"
																				},
																				"objectType": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 765,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														]
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 765,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "fields"
																					},
																					"objectType": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "typeOperator",
																									"operator": "keyof",
																									"target": {
																										"type": "reference",
																										"typeArguments": [
																											{
																												"type": "reference",
																												"id": 765,
																												"name": "ViewModelClassType"
																											}
																										],
																										"name": "ExtractRelatedFields"
																									}
																								},
																								{
																									"type": "intrinsic",
																									"name": "string"
																								}
																							],
																							"qualifiedName": "Extract",
																							"package": "typescript",
																							"name": "Extract"
																						},
																						"objectType": {
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "reference",
																									"id": 765,
																									"name": "ViewModelClassType"
																								}
																							],
																							"name": "ExtractRelatedFields"
																						}
																					}
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	}
																]
															},
															{
																"type": "reference",
																"id": 999,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "ViewModelConstructor"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 999,
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "ViewModelConstructor"
																	}
																],
																"name": "ExtractRelatedFields"
															}
														],
														"name": "FieldPathInner"
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 825,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 824,
													"name": "T"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1046,
											"typeArguments": [
												{
													"type": "reference",
													"id": 765,
													"name": "ViewModelClassType"
												},
												{
													"type": "reference",
													"id": 824,
													"name": "T"
												}
											],
											"name": "PartialViewModel"
										}
									}
								}
							]
						},
						{
							"id": 826,
							"name": "getList",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 1034,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 827,
									"name": "getList",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get a list of records with the specified `fieldNames` set from the cache",
										"text": "Any record that is not found will end up in the array as a null value. If this\nisn't desired you must filter them manually.\n",
										"returns": "an array of the cached records. Any records not found will be in the array as a null value if `removeNulls` is false otherwise they will be removed.\n"
									},
									"typeParameter": [
										{
											"id": 828,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "tuple",
														"elements": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "reference",
																			"typeArguments": [
																				{
																					"type": "reference",
																					"id": 765,
																					"name": "ViewModelClassType"
																				}
																			],
																			"name": "ExtractRelatedFields"
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "typeOperator",
																							"operator": "keyof",
																							"target": {
																								"type": "reference",
																								"typeArguments": [
																									{
																										"type": "reference",
																										"id": 765,
																										"name": "ViewModelClassType"
																									}
																								],
																								"name": "ExtractRelatedFields"
																							}
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"qualifiedName": "Extract",
																					"package": "typescript",
																					"name": "Extract"
																				},
																				"objectType": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 765,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														]
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 765,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "fields"
																					},
																					"objectType": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "typeOperator",
																									"operator": "keyof",
																									"target": {
																										"type": "reference",
																										"typeArguments": [
																											{
																												"type": "reference",
																												"id": 765,
																												"name": "ViewModelClassType"
																											}
																										],
																										"name": "ExtractRelatedFields"
																									}
																								},
																								{
																									"type": "intrinsic",
																									"name": "string"
																								}
																							],
																							"qualifiedName": "Extract",
																							"package": "typescript",
																							"name": "Extract"
																						},
																						"objectType": {
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "reference",
																									"id": 765,
																									"name": "ViewModelClassType"
																								}
																							],
																							"name": "ExtractRelatedFields"
																						}
																					}
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	}
																]
															},
															{
																"type": "reference",
																"id": 999,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "ViewModelConstructor"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 999,
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "ViewModelConstructor"
																	}
																],
																"name": "ExtractRelatedFields"
															}
														],
														"name": "FieldPathInner"
													}
												]
											}
										},
										{
											"id": 829,
											"name": "RemoveNullsT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"default": {
												"type": "literal",
												"value": true
											}
										}
									],
									"parameters": [
										{
											"id": 830,
											"name": "pks",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "An array of primary keys"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1049,
													"typeArguments": [
														{
															"type": "reference",
															"id": 765,
															"name": "ViewModelClassType"
														}
													],
													"name": "ExtractPkFieldParseableValueType"
												}
											}
										},
										{
											"id": 831,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "the field names to use to look up the cached entries. See [Field notation](#Field_notation) for supported format."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 828,
													"name": "T"
												}
											}
										},
										{
											"id": 832,
											"name": "removeNulls",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "whether to remove entries that have no record in the cache. Defaults to true."
											},
											"type": {
												"type": "reference",
												"id": 829,
												"name": "RemoveNullsT"
											}
										}
									],
									"type": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"id": 829,
											"name": "RemoveNullsT"
										},
										"extendsType": {
											"type": "literal",
											"value": true
										},
										"trueType": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"id": 1046,
												"typeArguments": [
													{
														"type": "reference",
														"id": 765,
														"name": "ViewModelClassType"
													},
													{
														"type": "reference",
														"id": 828,
														"name": "T"
													}
												],
												"name": "PartialViewModel"
											}
										},
										"falseType": {
											"type": "array",
											"elementType": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 1046,
														"typeArguments": [
															{
																"type": "reference",
																"id": 765,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"id": 828,
																"name": "T"
															}
														],
														"name": "PartialViewModel"
													}
												]
											}
										}
									}
								},
								{
									"id": 833,
									"name": "getList",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 834,
											"name": "RemoveNullsT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"default": {
												"type": "literal",
												"value": true
											}
										}
									],
									"parameters": [
										{
											"id": 835,
											"name": "pks",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1049,
													"typeArguments": [
														{
															"type": "reference",
															"id": 765,
															"name": "ViewModelClassType"
														}
													],
													"name": "ExtractPkFieldParseableValueType"
												}
											}
										},
										{
											"id": 836,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "literal",
												"value": "*"
											}
										},
										{
											"id": 837,
											"name": "removeNulls",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 834,
												"name": "RemoveNullsT"
											}
										}
									],
									"type": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"id": 834,
											"name": "RemoveNullsT"
										},
										"extendsType": {
											"type": "literal",
											"value": true
										},
										"trueType": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"id": 1046,
												"typeArguments": [
													{
														"type": "reference",
														"id": 765,
														"name": "ViewModelClassType"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "literal",
																		"value": "fields"
																	},
																	"objectType": {
																		"type": "reference",
																		"id": 765,
																		"name": "ViewModelClassType"
																	}
																}
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"qualifiedName": "Extract",
														"package": "typescript",
														"name": "Extract"
													}
												],
												"name": "PartialViewModel"
											}
										},
										"falseType": {
											"type": "array",
											"elementType": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 1046,
														"typeArguments": [
															{
																"type": "reference",
																"id": 765,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 765,
																				"name": "ViewModelClassType"
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														],
														"name": "PartialViewModel"
													}
												]
											}
										}
									}
								},
								{
									"id": 838,
									"name": "getList",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get list of cached records from an existing list of records",
										"returns": "an array of the cached records. Any records not found will be in the array as a null value if `removeNulls` is false otherwise they will be removed.\n"
									},
									"typeParameter": [
										{
											"id": 839,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"id": 962,
														"typeArguments": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "fields"
																},
																"objectType": {
																	"type": "reference",
																	"id": 765,
																	"name": "ViewModelClassType"
																}
															},
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "pkFieldName"
																},
																"objectType": {
																	"type": "reference",
																	"id": 765,
																	"name": "ViewModelClassType"
																}
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 765,
																				"name": "ViewModelClassType"
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															},
															{
																"type": "reference",
																"id": 839,
																"name": "T"
															}
														],
														"name": "BaseViewModel"
													},
													{
														"type": "reference",
														"id": 931,
														"typeArguments": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "literal",
																			"value": "fields"
																		},
																		"objectType": {
																			"type": "reference",
																			"id": 765,
																			"name": "ViewModelClassType"
																		}
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "fields"
																					},
																					"objectType": {
																						"type": "reference",
																						"id": 765,
																						"name": "ViewModelClassType"
																					}
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	}
																],
																"qualifiedName": "Pick",
																"package": "typescript",
																"name": "Pick"
															}
														],
														"name": "FieldDataMapping"
													}
												]
											}
										},
										{
											"id": 840,
											"name": "RemoveNullsT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"default": {
												"type": "literal",
												"value": true
											}
										}
									],
									"parameters": [
										{
											"id": 841,
											"name": "records",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "List of existing ViewModel records to get latest cache version for"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 839,
													"name": "T"
												}
											}
										},
										{
											"id": 842,
											"name": "removeNulls",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "whether to remove entries that have no record in the cache. Defaults to true."
											},
											"type": {
												"type": "reference",
												"id": 840,
												"name": "RemoveNullsT"
											}
										}
									],
									"type": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"id": 840,
											"name": "RemoveNullsT"
										},
										"extendsType": {
											"type": "literal",
											"value": true
										},
										"trueType": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"id": 839,
												"name": "T"
											}
										},
										"falseType": {
											"type": "array",
											"elementType": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 839,
														"name": "T"
													}
												]
											}
										}
									}
								},
								{
									"id": 843,
									"name": "getList",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 844,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "tuple",
														"elements": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "reference",
																			"typeArguments": [
																				{
																					"type": "reference",
																					"id": 765,
																					"name": "ViewModelClassType"
																				}
																			],
																			"name": "ExtractRelatedFields"
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "literal",
																				"value": "fields"
																			},
																			"objectType": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "typeOperator",
																							"operator": "keyof",
																							"target": {
																								"type": "reference",
																								"typeArguments": [
																									{
																										"type": "reference",
																										"id": 765,
																										"name": "ViewModelClassType"
																									}
																								],
																								"name": "ExtractRelatedFields"
																							}
																						},
																						{
																							"type": "intrinsic",
																							"name": "string"
																						}
																					],
																					"qualifiedName": "Extract",
																					"package": "typescript",
																					"name": "Extract"
																				},
																				"objectType": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 765,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			}
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														]
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 765,
																							"name": "ViewModelClassType"
																						}
																					],
																					"name": "ExtractRelatedFields"
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "typeOperator",
																				"operator": "keyof",
																				"target": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "literal",
																						"value": "fields"
																					},
																					"objectType": {
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "typeOperator",
																									"operator": "keyof",
																									"target": {
																										"type": "reference",
																										"typeArguments": [
																											{
																												"type": "reference",
																												"id": 765,
																												"name": "ViewModelClassType"
																											}
																										],
																										"name": "ExtractRelatedFields"
																									}
																								},
																								{
																									"type": "intrinsic",
																									"name": "string"
																								}
																							],
																							"qualifiedName": "Extract",
																							"package": "typescript",
																							"name": "Extract"
																						},
																						"objectType": {
																							"type": "reference",
																							"typeArguments": [
																								{
																									"type": "reference",
																									"id": 765,
																									"name": "ViewModelClassType"
																								}
																							],
																							"name": "ExtractRelatedFields"
																						}
																					}
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		],
																		"qualifiedName": "Extract",
																		"package": "typescript",
																		"name": "Extract"
																	}
																]
															},
															{
																"type": "reference",
																"id": 999,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "ViewModelConstructor"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 999,
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "ViewModelConstructor"
																	}
																],
																"name": "ExtractRelatedFields"
															}
														],
														"name": "FieldPathInner"
													}
												]
											}
										},
										{
											"id": 845,
											"name": "RemoveNullsT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"default": {
												"type": "literal",
												"value": true
											}
										}
									],
									"parameters": [
										{
											"id": 846,
											"name": "records",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1046,
													"typeArguments": [
														{
															"type": "reference",
															"id": 765,
															"name": "ViewModelClassType"
														},
														{
															"type": "reference",
															"id": 844,
															"name": "T"
														}
													],
													"name": "PartialViewModel"
												}
											}
										},
										{
											"id": 847,
											"name": "removeNulls",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 845,
												"name": "RemoveNullsT"
											}
										}
									],
									"type": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"id": 845,
											"name": "RemoveNullsT"
										},
										"extendsType": {
											"type": "literal",
											"value": true
										},
										"trueType": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"id": 1046,
												"typeArguments": [
													{
														"type": "reference",
														"id": 765,
														"name": "ViewModelClassType"
													},
													{
														"type": "reference",
														"id": 844,
														"name": "T"
													}
												],
												"name": "PartialViewModel"
											}
										},
										"falseType": {
											"type": "array",
											"elementType": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 1046,
														"typeArguments": [
															{
																"type": "reference",
																"id": 765,
																"name": "ViewModelClassType"
															},
															{
																"type": "reference",
																"id": 844,
																"name": "T"
															}
														],
														"name": "PartialViewModel"
													}
												]
											}
										}
									}
								}
							]
						},
						{
							"id": 774,
							"name": "getPkCacheKey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 721,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 775,
									"name": "getPkCacheKey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the cache key to use into for the primary key. Handles compound keys."
									},
									"parameters": [
										{
											"id": 776,
											"name": "pk",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1049,
												"typeArguments": [
													{
														"type": "reference",
														"id": 765,
														"name": "ViewModelClassType"
													}
												],
												"name": "ExtractPkFieldParseableValueType"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 771,
							"name": "isInstanceOfModel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 714,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 772,
									"name": "isInstanceOfModel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Checks if value `a` is an instance of the ViewModel this cache is for"
									},
									"parameters": [
										{
											"id": 773,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "a",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"id": 1046,
											"typeArguments": [
												{
													"type": "reference",
													"id": 765,
													"name": "ViewModelClassType"
												},
												{
													"type": "reference",
													"typeArguments": [
														{
															"type": "typeOperator",
															"operator": "keyof",
															"target": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "fields"
																},
																"objectType": {
																	"type": "reference",
																	"id": 765,
																	"name": "ViewModelClassType"
																}
															}
														},
														{
															"type": "intrinsic",
															"name": "string"
														}
													],
													"qualifiedName": "Extract",
													"package": "typescript",
													"name": "Extract"
												}
											],
											"name": "PartialViewModel"
										}
									}
								}
							]
						},
						{
							"id": 855,
							"name": "onAnyChange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
									"line": 1131,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 856,
									"name": "onAnyChange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								763
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								819,
								852,
								768,
								767,
								741
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								769,
								780
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								777,
								788,
								801,
								857,
								882,
								782,
								848,
								808,
								820,
								826,
								774,
								771,
								855
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
							"line": 692,
							"character": 21
						}
					],
					"typeParameter": [
						{
							"id": 892,
							"name": "ViewModelClassType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 999,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ViewModelConstructor"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						740
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelCache.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 893,
			"name": "ViewModelFactory",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 962,
					"name": "BaseViewModel",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The base class all ViewModel classes will extend.",
						"text": "If you use the [baseClass](doc:viewModelFactory##method-viewmodel) option the class passed must extend\n`BaseViewModel`.\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": "\n"
							}
						]
					},
					"children": [
						{
							"id": 963,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 510,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 964,
									"name": "new BaseViewModel",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 965,
											"name": "FieldMappingType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 919,
												"name": "FieldsMapping"
											}
										},
										{
											"id": 966,
											"name": "PkFieldType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"typeArguments": [
																{
																	"type": "typeOperator",
																	"operator": "keyof",
																	"target": {
																		"type": "reference",
																		"id": 965,
																		"name": "FieldMappingType"
																	}
																},
																{
																	"type": "intrinsic",
																	"name": "string"
																}
															],
															"qualifiedName": "Extract",
															"package": "typescript",
															"name": "Extract"
														}
													}
												]
											}
										},
										{
											"id": 967,
											"name": "AssignedFieldNames",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"id": 965,
															"name": "FieldMappingType"
														}
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"qualifiedName": "Extract",
												"package": "typescript",
												"name": "Extract"
											}
										}
									],
									"parameters": [
										{
											"id": 968,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "mapped",
												"parameter": "K",
												"parameterType": {
													"type": "intrinsic",
													"name": "string"
												},
												"templateType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": "__parsableValueType"
													},
													"objectType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"name": "K"
														},
														"objectType": {
															"type": "reference",
															"id": 965,
															"name": "FieldMappingType"
														}
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 962,
										"typeArguments": [
											{
												"type": "reference",
												"id": 965,
												"name": "FieldMappingType"
											},
											{
												"type": "reference",
												"id": 966,
												"name": "PkFieldType"
											},
											{
												"type": "reference",
												"id": 967,
												"name": "AssignedFieldNames"
											}
										],
										"name": "BaseViewModel"
									}
								}
							]
						},
						{
							"id": 980,
							"name": "__recordBoundFields",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 448,
									"character": 12
								}
							],
							"type": {
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "intrinsic",
									"name": "string"
								},
								"templateType": {
									"type": "reference",
									"id": 1842,
									"typeArguments": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "__fieldValueType"
											},
											"objectType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"name": "K"
												},
												"objectType": {
													"type": "reference",
													"id": 965,
													"name": "FieldMappingType"
												}
											}
										},
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "__parsableValueType"
											},
											"objectType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"name": "K"
												},
												"objectType": {
													"type": "reference",
													"id": 965,
													"name": "FieldMappingType"
												}
											}
										},
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "__fieldValueType"
											},
											"objectType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"name": "K"
												},
												"objectType": {
													"type": "reference",
													"id": 965,
													"name": "FieldMappingType"
												}
											}
										}
									],
									"name": "RecordBoundField"
								},
								"readonlyModifier": "+"
							}
						},
						{
							"id": 989,
							"name": "_assignedFieldPaths",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "The `ViewModelFieldPaths` instance for this record. This is a unique instance based on the actual\nassigned fields and can be compared to other instances to determine if the same fields are set."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 824,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 1064,
								"typeArguments": [
									{
										"type": "reference",
										"id": 999,
										"typeArguments": [
											{
												"type": "reference",
												"id": 965,
												"name": "FieldMappingType"
											},
											{
												"type": "reference",
												"id": 966,
												"name": "PkFieldType"
											}
										],
										"name": "ViewModelConstructor"
									}
								],
								"name": "ViewModelFieldPaths"
							}
						},
						{
							"id": 987,
							"name": "_assignedFields",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "List of field names with data available on this instance.",
								"tags": [
									{
										"tag": "type-name",
										"text": "string[]\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 808,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 988,
							"name": "_assignedFieldsDeep",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "Deep field names set on this record. If no relations are set this is the same as `_assignedFields`.",
								"text": "A deep field is a field that is a relation to another model and is represented as an array, eg.\n`['group', 'name']` would be the the `name` field on the `group` relation.\n",
								"tags": [
									{
										"tag": "type-name",
										"text": "string[]\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 818,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 925,
									"typeArguments": [
										{
											"type": "reference",
											"id": 999,
											"typeArguments": [
												{
													"type": "reference",
													"id": 965,
													"name": "FieldMappingType"
												},
												{
													"type": "reference",
													"id": 966,
													"name": "PkFieldType"
												}
											],
											"name": "ViewModelConstructor"
										},
										{
											"type": "reference",
											"typeArguments": [
												{
													"type": "reference",
													"id": 999,
													"typeArguments": [
														{
															"type": "reference",
															"id": 965,
															"name": "FieldMappingType"
														},
														{
															"type": "reference",
															"id": 966,
															"name": "PkFieldType"
														}
													],
													"name": "ViewModelConstructor"
												}
											],
											"name": "ExtractRelatedFields"
										}
									],
									"name": "FieldPath"
								}
							}
						},
						{
							"id": 986,
							"name": "_data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "The assigned data for this record. You usually don't need to access this directly; values\nfor a field can be retrieved from the record directly using the field name",
								"tags": [
									{
										"tag": "type-name",
										"text": "Object\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 799,
									"character": 13
								}
							],
							"type": {
								"type": "mapped",
								"parameter": "k",
								"parameterType": {
									"type": "intrinsic",
									"name": "string"
								},
								"templateType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "__fieldValueType"
									},
									"objectType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"name": "k"
										},
										"objectType": {
											"type": "reference",
											"id": 965,
											"name": "FieldMappingType"
										}
									}
								}
							}
						},
						{
							"id": 981,
							"name": "_f",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 473,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 982,
									"name": "_f",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get fields bound to this record instance. Each field behaves the same as accessing it via ViewModel.fields but\nhas a `value` property that contains the value for that field on this record.",
										"text": "This is useful when you need to know both the field on the ViewModel and the value on a record (eg. when formatting\na value from a record\n\n```js\nconst user = new User({ name: 'Jon Snow' });\nuser.name\n// Jon Snow\nuser._f.name\n// CharField({ name: 'name', label: 'Label' });\nuser._f.name.value\n// Jon Snow\n```\n",
										"tags": [
											{
												"tag": "type-name",
												"text": "{[fieldName: string]: Field}\n"
											}
										]
									},
									"type": {
										"type": "mapped",
										"parameter": "K",
										"parameterType": {
											"type": "intrinsic",
											"name": "string"
										},
										"templateType": {
											"type": "reference",
											"id": 1842,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": "__fieldValueType"
													},
													"objectType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"name": "K"
														},
														"objectType": {
															"type": "reference",
															"id": 965,
															"name": "FieldMappingType"
														}
													}
												},
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": "__parsableValueType"
													},
													"objectType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"name": "K"
														},
														"objectType": {
															"type": "reference",
															"id": 965,
															"name": "FieldMappingType"
														}
													}
												},
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": "__fieldValueType"
													},
													"objectType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"name": "K"
														},
														"objectType": {
															"type": "reference",
															"id": 965,
															"name": "FieldMappingType"
														}
													}
												}
											],
											"name": "RecordBoundField"
										},
										"readonlyModifier": "+"
									}
								}
							]
						},
						{
							"id": 990,
							"name": "_key",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 834,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 991,
									"name": "_key",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the primary key value(s) for this instance. This is to conform to the\n[Identifiable](doc:Identifiable) interface.",
										"tags": [
											{
												"tag": "type-name",
												"text": "PkFieldType\n"
											}
										]
									},
									"type": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"id": 966,
											"name": "PkFieldType"
										},
										"extendsType": {
											"type": "intrinsic",
											"name": "string"
										},
										"trueType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "__fieldValueType"
											},
											"objectType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"name": "PkFieldType"
												},
												"objectType": {
													"type": "reference",
													"id": 965,
													"name": "FieldMappingType"
												}
											}
										},
										"falseType": {
											"type": "mapped",
											"parameter": "K",
											"parameterType": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											},
											"templateType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "literal",
													"value": "__fieldValueType"
												},
												"objectType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"name": "K"
													},
													"objectType": {
														"type": "reference",
														"id": 965,
														"name": "FieldMappingType"
													}
												}
											},
											"nameType": {
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"name": "K"
												},
												"extendsType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "intrinsic",
														"name": "number"
													},
													"objectType": {
														"type": "reference",
														"id": 966,
														"name": "PkFieldType"
													}
												},
												"trueType": {
													"type": "reference",
													"name": "K"
												},
												"falseType": {
													"type": "intrinsic",
													"name": "never"
												}
											}
										}
									}
								}
							]
						},
						{
							"id": 969,
							"name": "_model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 295,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 970,
									"name": "_model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the actual ViewModel class for this instance"
									},
									"type": {
										"type": "reference",
										"id": 999,
										"typeArguments": [
											{
												"type": "reference",
												"id": 965,
												"name": "FieldMappingType"
											},
											{
												"type": "reference",
												"id": 966,
												"name": "PkFieldType"
											}
										],
										"name": "ViewModelConstructor"
									}
								}
							]
						},
						{
							"id": 976,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 344,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 977,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Clone this record, optionally with only a subset of the fields"
									},
									"typeParameter": [
										{
											"id": 978,
											"name": "CloneFieldNames",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 979,
											"name": "fieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 925,
															"typeArguments": [
																{
																	"type": "reference",
																	"id": 999,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"id": 965,
																			"name": "FieldMappingType"
																		},
																		{
																			"type": "reference",
																			"id": 966,
																			"name": "PkFieldType"
																		}
																	],
																	"name": "ViewModelConstructor"
																},
																{
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "reference",
																			"id": 999,
																			"typeArguments": [
																				{
																					"type": "reference",
																					"id": 965,
																					"name": "FieldMappingType"
																				},
																				{
																					"type": "reference",
																					"id": 966,
																					"name": "PkFieldType"
																				}
																			],
																			"name": "ViewModelConstructor"
																		}
																	],
																	"name": "ExtractRelatedFields"
																}
															],
															"name": "FieldPath"
														}
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 978,
															"name": "CloneFieldNames"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 995,
										"typeArguments": [
											{
												"type": "reference",
												"id": 965,
												"name": "FieldMappingType"
											},
											{
												"type": "reference",
												"id": 966,
												"name": "PkFieldType"
											},
											{
												"type": "reference",
												"id": 978,
												"name": "CloneFieldNames"
											}
										],
										"name": "ViewModelInterface"
									}
								}
							]
						},
						{
							"id": 983,
							"name": "fieldPathIntersection",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 705,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 984,
									"name": "fieldPathIntersection",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Given `records` return the paths that are common between them.",
										"text": "A naive solution is to just check `_assignedFieldsDeep`:\n\n```js\nconst paths = intersectionBy(\n  ...assignedData[key].map(record => record._assignedFieldsDeep),\n  p => flattenFieldPath(p).join('|')\n);\n```\n\nbut that would fail if some records had a null value for a relation and others didn't.\n\nThis function handles nested records such that a null relation is ignored. For example if you received:\n\n```js\n[\n  {\n    id: 1,\n    nestedRecordId: null,\n    nestedRecord: null,\n  },\n  {\n      id: 2,\n      nestedRecordId: 1,\n      nestedRecord: {\n          id: 1,\n          name: 'Nested Record 1',\n      },\n  },\n  {\n     id: 3,\n     nestedRecordId: 2,\n     nestedRecord: {\n         id: 2,\n         name: 'Nested Record 2',\n         otherField: 'Name',\n     },\n  }\n]\n```\n\nwould result in\n\n```js\n['id', 'nestedRecordId', ['nestedRecord', 'id'], ['nestedRecord', 'name']]\n```\n\nNoting that the first record has no nested fields (because they are null) and so get's ignored, and the\nlast record has 'otherField' which the second doesn't so is excluded.\n"
									},
									"parameters": [
										{
											"id": 985,
											"name": "records",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 995,
													"typeArguments": [
														{
															"type": "reference",
															"id": 965,
															"name": "FieldMappingType"
														},
														{
															"type": "reference",
															"id": 966,
															"name": "PkFieldType"
														},
														{
															"type": "reference",
															"typeArguments": [
																{
																	"type": "typeOperator",
																	"operator": "keyof",
																	"target": {
																		"type": "reference",
																		"id": 965,
																		"name": "FieldMappingType"
																	}
																},
																{
																	"type": "intrinsic",
																	"name": "string"
																}
															],
															"qualifiedName": "Extract",
															"package": "typescript",
															"name": "Extract"
														}
													],
													"name": "ViewModelInterface"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 925,
											"typeArguments": [
												{
													"type": "reference",
													"id": 999,
													"typeArguments": [
														{
															"type": "reference",
															"id": 965,
															"name": "FieldMappingType"
														},
														{
															"type": "reference",
															"id": 966,
															"name": "PkFieldType"
														}
													],
													"name": "ViewModelConstructor"
												},
												{
													"type": "reference",
													"typeArguments": [
														{
															"type": "reference",
															"id": 999,
															"typeArguments": [
																{
																	"type": "reference",
																	"id": 965,
																	"name": "FieldMappingType"
																},
																{
																	"type": "reference",
																	"id": 966,
																	"name": "PkFieldType"
																}
															],
															"name": "ViewModelConstructor"
														}
													],
													"name": "ExtractRelatedFields"
												}
											],
											"name": "FieldPath"
										}
									}
								}
							]
						},
						{
							"id": 973,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 322,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 974,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Compares two records to see if they are equivalent.",
										"text": "- If the ViewModel is different then the records are always considered different\n- If the records were initialised with a different set of fields then they are\n  considered different even if the common fields are the same and other fields are\n  all null\n"
									},
									"parameters": [
										{
											"id": 975,
											"name": "record",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 995,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"name": "ViewModelInterface"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 971,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 302,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 972,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the data for this record as a plain object"
									},
									"type": {
										"type": "mapped",
										"parameter": "K",
										"parameterType": {
											"type": "intrinsic",
											"name": "string"
										},
										"templateType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "__fieldValueType"
											},
											"objectType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"name": "K"
												},
												"objectType": {
													"type": "reference",
													"id": 965,
													"name": "FieldMappingType"
												}
											}
										},
										"readonlyModifier": "+"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								963
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								980,
								989,
								987,
								988,
								986
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								981,
								990,
								969
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								976,
								983,
								973,
								971
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 287,
							"character": 13
						}
					],
					"typeParameter": [
						{
							"id": 992,
							"name": "FieldMappingType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 919,
								"name": "FieldsMapping"
							}
						},
						{
							"id": 993,
							"name": "PkFieldType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 965,
										"name": "FieldMappingType"
									}
								],
								"name": "ExtractPkFieldTypes"
							}
						},
						{
							"id": 994,
							"name": "AssignedFieldNames",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 935,
								"typeArguments": [
									{
										"type": "reference",
										"id": 965,
										"name": "FieldMappingType"
									}
								],
								"name": "ExtractFieldNames"
							},
							"default": {
								"type": "reference",
								"id": 935,
								"typeArguments": [
									{
										"type": "reference",
										"id": 965,
										"name": "FieldMappingType"
									}
								],
								"name": "ExtractFieldNames"
							}
						}
					]
				},
				{
					"id": 1026,
					"name": "InvalidFieldError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Thrown when attempting to access a field that does not exist on a ViewModel"
					},
					"children": [
						{
							"id": 1036,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1037,
									"name": "new InvalidFieldError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1038,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1026,
										"name": "InvalidFieldError"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Error.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.constructor"
							}
						},
						{
							"id": 1040,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1023,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.message"
							}
						},
						{
							"id": 1039,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1022,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.name"
							}
						},
						{
							"id": 1041,
							"name": "stack",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1024,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.stack"
							}
						},
						{
							"id": 1035,
							"name": "stackTraceLimit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/node_modules/@types/node/globals.d.ts",
									"line": 117,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.stackTraceLimit"
							}
						},
						{
							"id": 1027,
							"name": "captureStackTrace",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 1028,
									"name": "captureStackTrace",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Create .stack property on a target object"
									},
									"parameters": [
										{
											"id": 1029,
											"name": "targetObject",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 1030,
											"name": "constructorOpt",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Function",
												"package": "typescript",
												"name": "Function"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Error.captureStackTrace"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.captureStackTrace"
							}
						},
						{
							"id": 1031,
							"name": "prepareStackTrace",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/node_modules/@types/node/globals.d.ts",
									"line": 115,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1032,
									"name": "prepareStackTrace",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Optional override for formatting stack traces",
										"tags": [
											{
												"tag": "see",
												"text": "https://github.com/v8/v8/wiki/Stack%20Trace%20API#customizing-stack-traces\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1033,
											"name": "err",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Error",
												"package": "typescript",
												"name": "Error"
											}
										},
										{
											"id": 1034,
											"name": "stackTraces",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"qualifiedName": "NodeJS.CallSite",
													"package": "@types/node",
													"name": "CallSite"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Error.prepareStackTrace"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.prepareStackTrace"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1036
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1040,
								1039,
								1041,
								1035
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1027,
								1031
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 1220,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Error",
							"package": "typescript",
							"name": "Error"
						}
					]
				},
				{
					"id": 939,
					"name": "MissingFieldsError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Thrown when cloning a record and requested fields cannot be found",
						"text": "Gives details on missing fields and will indicate if related records are missing entirely vs\njust some fields\n"
					},
					"children": [
						{
							"id": 949,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 249,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 950,
									"name": "new MissingFieldsError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 951,
											"name": "record",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 995,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										},
										{
											"id": 952,
											"name": "assignedFields",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 953,
											"name": "requestedFieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 925,
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "any"
														},
														{
															"type": "intrinsic",
															"name": "any"
														}
													],
													"name": "FieldPath"
												}
											}
										},
										{
											"id": 954,
											"name": "missingFieldNames",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 955,
											"name": "missingRelations",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "tuple",
													"elements": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 939,
										"name": "MissingFieldsError"
									},
									"overwrites": {
										"type": "reference",
										"name": "Error.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Error.constructor"
							}
						},
						{
							"id": 958,
							"name": "assignedFields",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 248,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 960,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1023,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.message"
							}
						},
						{
							"id": 956,
							"name": "missingFieldNames",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 246,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 957,
							"name": "missingRelations",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 247,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "tuple",
									"elements": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							}
						},
						{
							"id": 959,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1022,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.name"
							}
						},
						{
							"id": 961,
							"name": "stack",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1024,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.stack"
							}
						},
						{
							"id": 948,
							"name": "stackTraceLimit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/node_modules/@types/node/globals.d.ts",
									"line": 117,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.stackTraceLimit"
							}
						},
						{
							"id": 940,
							"name": "captureStackTrace",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 941,
									"name": "captureStackTrace",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Create .stack property on a target object"
									},
									"parameters": [
										{
											"id": 942,
											"name": "targetObject",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 943,
											"name": "constructorOpt",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Function",
												"package": "typescript",
												"name": "Function"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Error.captureStackTrace"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.captureStackTrace"
							}
						},
						{
							"id": 944,
							"name": "prepareStackTrace",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/node_modules/@types/node/globals.d.ts",
									"line": 115,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 945,
									"name": "prepareStackTrace",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Optional override for formatting stack traces",
										"tags": [
											{
												"tag": "see",
												"text": "https://github.com/v8/v8/wiki/Stack%20Trace%20API#customizing-stack-traces\n"
											}
										]
									},
									"parameters": [
										{
											"id": 946,
											"name": "err",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Error",
												"package": "typescript",
												"name": "Error"
											}
										},
										{
											"id": 947,
											"name": "stackTraces",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"qualifiedName": "NodeJS.CallSite",
													"package": "@types/node",
													"name": "CallSite"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Error.prepareStackTrace"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.prepareStackTrace"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								949
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								958,
								960,
								956,
								957,
								959,
								961,
								948
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								940,
								944
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 245,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Error",
							"package": "typescript",
							"name": "Error"
						}
					]
				},
				{
					"id": 999,
					"name": "ViewModelConstructor",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "type-name",
								"text": "ViewModel Class\n"
							}
						]
					},
					"children": [
						{
							"id": 1020,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1021,
									"name": "new ViewModelConstructor",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1022,
											"name": "D",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 1018,
														"name": "FieldMappingType"
													},
													{
														"type": "reference",
														"id": 1019,
														"name": "PkFieldType"
													}
												],
												"name": "ViewModelInterfaceInputData"
											}
										}
									],
									"parameters": [
										{
											"id": 1023,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1022,
												"name": "D"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 995,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1018,
												"name": "FieldMappingType"
											},
											{
												"type": "reference",
												"id": 1019,
												"name": "PkFieldType"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"id": 1022,
															"name": "D"
														}
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"qualifiedName": "Extract",
												"package": "typescript",
												"name": "Extract"
											}
										],
										"name": "ViewModelInterface"
									}
								},
								{
									"id": 1024,
									"name": "new ViewModelConstructor",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1025,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 1018,
														"name": "FieldMappingType"
													},
													{
														"type": "reference",
														"id": 1019,
														"name": "PkFieldType"
													}
												],
												"name": "ViewModelInterfaceInputData"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 995,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1018,
												"name": "FieldMappingType"
											},
											{
												"type": "reference",
												"id": 1019,
												"name": "PkFieldType"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "reference",
																			"id": 1018,
																			"name": "FieldMappingType"
																		},
																		{
																			"type": "reference",
																			"id": 1019,
																			"name": "PkFieldType"
																		}
																	],
																	"name": "ExtractPkFields"
																}
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "reference",
																			"id": 1018,
																			"name": "FieldMappingType"
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														],
														"qualifiedName": "Extract",
														"package": "typescript",
														"name": "Extract"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "reference",
																	"id": 1018,
																	"name": "FieldMappingType"
																}
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "reference",
																			"id": 1018,
																			"name": "FieldMappingType"
																		}
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"qualifiedName": "Extract",
																"package": "typescript",
																"name": "Extract"
															}
														],
														"qualifiedName": "Extract",
														"package": "typescript",
														"name": "Extract"
													}
												]
											}
										],
										"name": "ViewModelInterface"
									}
								}
							]
						},
						{
							"id": 1006,
							"name": "allFieldNames",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "Shortcut to get all field names including primary keys"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 986,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"id": 1018,
												"name": "FieldMappingType"
											}
										},
										{
											"type": "intrinsic",
											"name": "string"
										}
									],
									"qualifiedName": "Extract",
									"package": "typescript",
									"name": "Extract"
								}
							}
						},
						{
							"id": 1011,
							"name": "cache",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The cache instance for this ViewModel. A default instance of [ViewModelCache](doc:ViewModelCache)\nis created when first accessed or you can explicitly assign a cache:",
								"text": "```js\nclass User extends viewModelFactory(fields) {\n    static cache = new MyCustomCache(User);\n}\n```\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 1027,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 740,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "default"
							}
						},
						{
							"id": 1005,
							"name": "fieldNames",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "Shortcut to get the names of all fields excluding primary keys.",
								"text": "If you want all fields including primary key use `allFieldNames`\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 981,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"id": 1018,
												"name": "FieldMappingType"
											}
										},
										{
											"type": "intrinsic",
											"name": "string"
										}
									],
									"qualifiedName": "Extract",
									"package": "typescript",
									"name": "Extract"
								}
							}
						},
						{
							"id": 1000,
							"name": "fields",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "The bound fields for this ViewModel. These will match the `fields` passed in to `ViewModel` with the\nfollowing differences:\n- If a primary key is created for you this will exist here\n- All fields are bound to the created class. This means you can access the `ViewModel` class from the field on\n  the `model` property, eg. `User.fields.email.model === User` will be true.\n- All fields have the `name` property set to match the key in `fields`\n- All fields have `label` filled out if not explicitly set (eg. if name was `emailAddress` label will be created\n  as `Email Address`)",
								"text": "See also [getField](doc:viewModelFactory#method-getField) for getting a nested field using array notation.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 935,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 1018,
								"name": "FieldMappingType"
							}
						},
						{
							"id": 1001,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "The singular label for this ViewModel. This should be set by extending the created class.",
								"text": "```js\nclass User extends viewModelFactory(fields) {\n    static label = 'User';\n}\n```\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 946,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1002,
							"name": "labelPlural",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "The label used to describe an indeterminate number of this ViewModel. This should be set by extending the created class.",
								"text": "```js\nclass User extends viewModelFactory(fields) {\n    static labelPlural = 'Users';\n}\n```\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 957,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1003,
							"name": "pkFieldName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "Name of the primary key field for this ViewModel (or fields for compound keys)",
								"text": "If `options.pkFieldName` is not specified a field will be created from `options.getImplicitPk`\nif provided otherwise a default field with name 'id' will be created.\n",
								"tags": [
									{
										"tag": "type-name",
										"text": "string\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 967,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 1019,
								"name": "PkFieldType"
							}
						},
						{
							"id": 1004,
							"name": "pkFieldNames",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "Shortcut to get pkFieldName as an array always, even for non-compound keys",
								"tags": [
									{
										"tag": "type-name",
										"text": "string[]\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 974,
									"character": 13
								}
							],
							"type": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"id": 1019,
									"name": "PkFieldType"
								},
								"extendsType": {
									"type": "intrinsic",
									"name": "string"
								},
								"trueType": {
									"type": "tuple",
									"elements": [
										{
											"type": "reference",
											"name": "PkFieldType"
										}
									]
								},
								"falseType": {
									"type": "reference",
									"id": 1019,
									"name": "PkFieldType"
								}
							}
						},
						{
							"id": 1007,
							"name": "relationFieldNames",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "Shortcut to get the names of all relation fields",
								"tags": [
									{
										"tag": "type-name",
										"text": "string[]\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 993,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 999,
														"typeArguments": [
															{
																"type": "reference",
																"id": 1018,
																"name": "FieldMappingType"
															},
															{
																"type": "reference",
																"id": 1019,
																"name": "PkFieldType"
															}
														],
														"name": "ViewModelConstructor"
													}
												],
												"name": "ExtractRelatedFields"
											}
										},
										{
											"type": "intrinsic",
											"name": "string"
										}
									],
									"qualifiedName": "Extract",
									"package": "typescript",
									"name": "Extract"
								}
							}
						},
						{
							"id": 1012,
							"name": "augment",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 1013,
									"name": "augment",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create a new class that extends this class with the additional specified fields. To remove a\nfield that exists on the base class set it's value to null.",
										"text": "```js\nclass Base extends viewModelFactory({\n  id: new NumberField({\n    label: 'Id',\n  }),\n  firstName: new CharField({\n    label: 'First Name',\n  }),\n  lastName: new CharField({\n    label: 'Last Name',\n  }),\n  email: new EmailField({\n    label: 'Email',\n  }),\n}) {\n  static label = 'User';\n  static labelPlural = 'Users';\n}\n\nclass User extends BaseUser.augment({\n  region: new IntegerField({\n    label: 'region',\n    required: true,\n    helpText: 'Region Coding of the user',\n    choices: [\n      [1, 'Oceania'],\n      [2, 'Asia'],\n      [3, 'Africa'],\n      [4, 'America'],\n      [5, 'Europe'],\n      [6, 'Antarctica'],\n      [7, 'Atlantis'],\n    ],\n  }),\n  photo: new ImageField({\n    helpText: 'Will be cropped to 400x400',\n  }),\n}) {\n}\n\n// true\nUser instanceof BaseUser\n// true\nUser.label === 'User'\n\n// ['firstName, 'lastName', 'email', 'region', 'photo]\nUser.fieldNames\n```\n",
										"returns": "A new ViewModel class with fields modified according to `newFields`.\n"
									},
									"typeParameter": [
										{
											"id": 1014,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 923,
												"typeArguments": [
													{
														"type": "reference",
														"id": 1018,
														"name": "FieldMappingType"
													}
												],
												"name": "FieldsMappingOrNull"
											}
										},
										{
											"id": 1015,
											"name": "AugmentPkFieldType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "union",
															"types": [
																{
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "reference",
																			"typeArguments": [
																				{
																					"type": "typeOperator",
																					"operator": "keyof",
																					"target": {
																						"type": "reference",
																						"id": 1018,
																						"name": "FieldMappingType"
																					}
																				},
																				{
																					"type": "typeOperator",
																					"operator": "keyof",
																					"target": {
																						"type": "reference",
																						"id": 1014,
																						"name": "T"
																					}
																				}
																			],
																			"qualifiedName": "Exclude",
																			"package": "typescript",
																			"name": "Exclude"
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		}
																	],
																	"qualifiedName": "Extract",
																	"package": "typescript",
																	"name": "Extract"
																},
																{
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "reference",
																			"typeArguments": [
																				{
																					"type": "typeOperator",
																					"operator": "keyof",
																					"target": {
																						"type": "reference",
																						"id": 1014,
																						"name": "T"
																					}
																				},
																				{
																					"type": "typeOperator",
																					"operator": "keyof",
																					"target": {
																						"type": "mapped",
																						"parameter": "P",
																						"parameterType": {
																							"type": "union",
																							"types": [
																								{
																									"type": "intrinsic",
																									"name": "string"
																								},
																								{
																									"type": "intrinsic",
																									"name": "number"
																								},
																								{
																									"type": "intrinsic",
																									"name": "symbol"
																								}
																							]
																						},
																						"templateType": {
																							"type": "indexedAccess",
																							"indexType": {
																								"type": "reference",
																								"name": "P"
																							},
																							"objectType": {
																								"type": "reference",
																								"id": 1014,
																								"name": "T"
																							}
																						},
																						"nameType": {
																							"type": "conditional",
																							"checkType": {
																								"type": "indexedAccess",
																								"indexType": {
																									"type": "reference",
																									"name": "P"
																								},
																								"objectType": {
																									"type": "reference",
																									"id": 1014,
																									"name": "T"
																								}
																							},
																							"extendsType": {
																								"type": "union",
																								"types": [
																									{
																										"type": "intrinsic",
																										"name": "undefined"
																									},
																									{
																										"type": "literal",
																										"value": null
																									}
																								]
																							},
																							"trueType": {
																								"type": "reference",
																								"name": "P"
																							},
																							"falseType": {
																								"type": "intrinsic",
																								"name": "never"
																							}
																						}
																					}
																				}
																			],
																			"qualifiedName": "Exclude",
																			"package": "typescript",
																			"name": "Exclude"
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		}
																	],
																	"qualifiedName": "Extract",
																	"package": "typescript",
																	"name": "Extract"
																}
															]
														}
													}
												]
											},
											"default": {
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"id": 1019,
													"name": "PkFieldType"
												},
												"extendsType": {
													"type": "intrinsic",
													"name": "string"
												},
												"trueType": {
													"type": "conditional",
													"checkType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"name": "PkFieldType"
														},
														"objectType": {
															"type": "reference",
															"id": 1014,
															"name": "T"
														}
													},
													"extendsType": {
														"type": "reference",
														"id": 1896,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "default"
													},
													"trueType": {
														"type": "reference",
														"name": "PkFieldType"
													},
													"falseType": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												"falseType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 1016,
											"name": "newFields",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "Map of field name to a `Field` instance (to add the field) or `null` (to remove the field)"
											},
											"type": {
												"type": "reference",
												"id": 1014,
												"name": "T"
											}
										},
										{
											"id": 1017,
											"name": "newOptions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Provide optional overrides for the options that the original class was created with"
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 894,
														"typeArguments": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 1018,
																		"name": "FieldMappingType"
																	},
																	{
																		"type": "reference",
																		"id": 1014,
																		"name": "T"
																	}
																],
																"name": "AugmentFields"
															},
															{
																"type": "reference",
																"id": 1015,
																"name": "AugmentPkFieldType"
															}
														],
														"name": "ViewModelOptions"
													}
												],
												"qualifiedName": "Partial",
												"package": "typescript",
												"name": "Partial"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 999,
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 1018,
														"name": "FieldMappingType"
													},
													{
														"type": "reference",
														"id": 1014,
														"name": "T"
													}
												],
												"name": "AugmentFields"
											},
											{
												"type": "reference",
												"id": 1015,
												"name": "AugmentPkFieldType"
											}
										],
										"name": "ViewModelConstructor"
									}
								}
							]
						},
						{
							"id": 1008,
							"name": "getField",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 1009,
									"name": "getField",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get a field from this model or a related model",
										"text": "Accepts either a string for a field on this record or array notation for traversing [RelatedViewModelField](doc:RelatedViewModelField)\nfields:\n\n```jsx\nSubscription.getField(['user', 'group', 'owner'])\n```"
									},
									"parameters": [
										{
											"id": 1010,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "Either a string or an array of strings where the last element is the final field name to return\nand each other element is a [RelatedViewModelField](doc:RelatedViewModelField) on a ViewModel.\n"
											},
											"type": {
												"type": "reference",
												"id": 925,
												"typeArguments": [
													{
														"type": "reference",
														"id": 999,
														"typeArguments": [
															{
																"type": "reference",
																"id": 1018,
																"name": "FieldMappingType"
															},
															{
																"type": "reference",
																"id": 1019,
																"name": "PkFieldType"
															}
														],
														"name": "ViewModelConstructor"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 999,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 1018,
																		"name": "FieldMappingType"
																	},
																	{
																		"type": "reference",
																		"id": 1019,
																		"name": "PkFieldType"
																	}
																],
																"name": "ViewModelConstructor"
															}
														],
														"name": "ExtractRelatedFields"
													}
												],
												"name": "FieldPath"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1896,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "default"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1020
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1006,
								1011,
								1005,
								1000,
								1001,
								1002,
								1003,
								1004,
								1007
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1012,
								1008
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 880,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 1018,
							"name": "FieldMappingType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 919,
								"name": "FieldsMapping"
							}
						},
						{
							"id": 1019,
							"name": "PkFieldType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1018,
										"name": "FieldMappingType"
									}
								],
								"name": "ViewModelPkFieldType"
							}
						}
					]
				},
				{
					"id": 914,
					"name": "CompoundPrimaryKey",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 10,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 915,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 10,
									"character": 33
								}
							],
							"indexSignature": {
								"id": 916,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 917,
										"name": "fieldName",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"id": 913,
									"name": "SinglePrimaryKey"
								}
							}
						}
					}
				},
				{
					"id": 935,
					"name": "ExtractFieldNames",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "type-name",
								"text": "string\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 118,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 936,
							"name": "FieldMappingType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 919,
								"name": "FieldsMapping"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"id": 936,
									"name": "FieldMappingType"
								}
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"qualifiedName": "Extract",
						"package": "typescript",
						"name": "Extract"
					}
				},
				{
					"id": 1049,
					"name": "ExtractPkFieldParseableValueType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Extracts the parseable type for primary key on a ViewModel"
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 1566,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 1050,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 999,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ViewModelConstructor"
							}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "literal",
								"value": "pkFieldName"
							},
							"objectType": {
								"type": "reference",
								"id": 1050,
								"name": "T"
							}
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "string"
						},
						"trueType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "literal",
								"value": "__parsableValueType"
							},
							"objectType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "pkFieldName"
									},
									"objectType": {
										"type": "reference",
										"id": 1050,
										"name": "T"
									}
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "fields"
									},
									"objectType": {
										"type": "reference",
										"id": 1050,
										"name": "T"
									}
								}
							}
						},
						"falseType": {
							"type": "mapped",
							"parameter": "K",
							"parameterType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "pkFieldNames"
								},
								"objectType": {
									"type": "reference",
									"id": 1050,
									"name": "T"
								}
							},
							"templateType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "__parsableValueType"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"name": "K"
									},
									"objectType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "fields"
										},
										"objectType": {
											"type": "reference",
											"id": 1050,
											"name": "T"
										}
									}
								}
							}
						}
					}
				},
				{
					"id": 937,
					"name": "ExtractStarFieldNames",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Extract fields when specified using '*'. Currently this is all fields but could change to be\nnon-relation fields only"
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 127,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 938,
							"name": "FieldMappingType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 919,
								"name": "FieldsMapping"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 935,
						"typeArguments": [
							{
								"type": "reference",
								"id": 938,
								"name": "FieldMappingType"
							}
						],
						"name": "ExtractFieldNames"
					}
				},
				{
					"id": 931,
					"name": "FieldDataMapping",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 107,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 932,
							"name": "FieldMappingType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 919,
								"name": "FieldsMapping"
							}
						}
					],
					"type": {
						"type": "mapped",
						"parameter": "K",
						"parameterType": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"id": 932,
								"name": "FieldMappingType"
							}
						},
						"templateType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "literal",
								"value": "__fieldValueType"
							},
							"objectType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"name": "K"
								},
								"objectType": {
									"type": "reference",
									"id": 932,
									"name": "FieldMappingType"
								}
							}
						},
						"readonlyModifier": "+"
					}
				},
				{
					"id": 933,
					"name": "FieldDataMappingRaw",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 111,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 934,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 919,
								"name": "FieldsMapping"
							}
						}
					],
					"type": {
						"type": "mapped",
						"parameter": "K",
						"parameterType": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"id": 934,
								"name": "T"
							}
						},
						"templateType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "literal",
								"value": "__parsableValueType"
							},
							"objectType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"name": "K"
								},
								"objectType": {
									"type": "reference",
									"id": 934,
									"name": "T"
								}
							}
						},
						"optionalModifier": "+"
					}
				},
				{
					"id": 925,
					"name": "FieldPath",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 48,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 926,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 999,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ViewModelConstructor"
							}
						},
						{
							"id": 927,
							"name": "R",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 926,
										"name": "T"
									}
								],
								"name": "ExtractRelatedFields"
							},
							"default": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 926,
										"name": "T"
									}
								],
								"name": "ExtractRelatedFields"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "fields"
											},
											"objectType": {
												"type": "reference",
												"id": 926,
												"name": "T"
											}
										}
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Extract",
								"package": "typescript",
								"name": "Extract"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "mapped",
										"parameter": "K",
										"parameterType": {
											"type": "reference",
											"typeArguments": [
												{
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "reference",
														"id": 927,
														"name": "R"
													}
												},
												{
													"type": "intrinsic",
													"name": "string"
												}
											],
											"qualifiedName": "Extract",
											"package": "typescript",
											"name": "Extract"
										},
										"templateType": {
											"type": "reference",
											"typeArguments": [
												{
													"type": "mapped",
													"parameter": "J",
													"parameterType": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "literal",
																		"value": "fields"
																	},
																	"objectType": {
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "reference",
																			"name": "K"
																		},
																		"objectType": {
																			"type": "reference",
																			"id": 927,
																			"name": "R"
																		}
																	}
																}
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"qualifiedName": "Extract",
														"package": "typescript",
														"name": "Extract"
													},
													"templateType": {
														"type": "union",
														"types": [
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "reference",
																		"name": "K"
																	},
																	{
																		"type": "reference",
																		"name": "J"
																	}
																]
															},
															{
																"type": "conditional",
																"checkType": {
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "reference",
																		"name": "J"
																	},
																	"objectType": {
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "literal",
																			"value": "fields"
																		},
																		"objectType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "reference",
																				"name": "K"
																			},
																			"objectType": {
																				"type": "reference",
																				"id": 927,
																				"name": "R"
																			}
																		}
																	}
																},
																"extendsType": {
																	"type": "reference",
																	"id": 2789,
																	"typeArguments": [
																		{
																			"type": "inferred",
																			"name": "X"
																		},
																		{
																			"type": "intrinsic",
																			"name": "any"
																		},
																		{
																			"type": "intrinsic",
																			"name": "any"
																		}
																	],
																	"name": "BaseRelatedViewModelField"
																},
																"trueType": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "tuple",
																			"elements": [
																				{
																					"type": "reference",
																					"name": "K"
																				},
																				{
																					"type": "reference",
																					"name": "J"
																				}
																			]
																		},
																		{
																			"type": "reference",
																			"name": "X"
																		}
																	],
																	"name": "FieldPathInner"
																},
																"falseType": {
																	"type": "intrinsic",
																	"name": "never"
																}
															}
														]
													}
												}
											],
											"name": "ValueOf"
										}
									}
								],
								"name": "ValueOf"
							}
						]
					}
				},
				{
					"id": 928,
					"name": "FieldPaths",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "type-name",
								"text": "'*'|[string|string[]][]\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 67,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 929,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 999,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ViewModelConstructor"
							}
						},
						{
							"id": 930,
							"name": "R",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 929,
										"name": "T"
									}
								],
								"name": "ExtractRelatedFields"
							},
							"default": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 929,
										"name": "T"
									}
								],
								"name": "ExtractRelatedFields"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "*"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 925,
									"typeArguments": [
										{
											"type": "reference",
											"id": 929,
											"name": "T"
										},
										{
											"type": "reference",
											"id": 930,
											"name": "R"
										}
									],
									"name": "FieldPath"
								}
							}
						]
					}
				},
				{
					"id": 919,
					"name": "FieldsMapping",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 13,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 920,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
									"line": 13,
									"character": 28
								}
							],
							"indexSignature": {
								"id": 921,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 922,
										"name": "fieldName",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"id": 1896,
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "any"
										}
									],
									"name": "Field"
								}
							}
						}
					}
				},
				{
					"id": 923,
					"name": "FieldsMappingOrNull",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 15,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 924,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 919,
								"name": "FieldsMapping"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 1896,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Field"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							},
							{
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"id": 924,
										"name": "T"
									}
								},
								"templateType": {
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": null
										},
										{
											"type": "reference",
											"id": 1896,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "any"
												}
											],
											"name": "Field"
										}
									]
								},
								"optionalModifier": "+"
							}
						]
					}
				},
				{
					"id": 1046,
					"name": "PartialViewModel",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Type to describe a ViewModel instance with only some fields set",
						"text": "Usage:\n\n```ts\nconst Person = viewModelFactory({\n  name: new Field<string>(),\n  age: new Field<number>(),\n});\ntype AgeOnly = PartialViewModel<typeof Person, 'age'>;\n```\n"
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 1552,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 1047,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 999,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ViewModelConstructor"
							}
						},
						{
							"id": 1048,
							"name": "FieldNames",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 925,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1047,
										"name": "T"
									}
								],
								"name": "FieldPath"
							},
							"default": {
								"type": "reference",
								"id": 935,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "fields"
										},
										"objectType": {
											"type": "reference",
											"id": 1047,
											"name": "T"
										}
									}
								],
								"name": "ExtractFieldNames"
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1047,
												"name": "T"
											}
										],
										"qualifiedName": "InstanceType",
										"package": "typescript",
										"name": "InstanceType"
									},
									{
										"type": "reference",
										"id": 935,
										"typeArguments": [
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "literal",
													"value": "fields"
												},
												"objectType": {
													"type": "reference",
													"id": 1047,
													"name": "T"
												}
											}
										],
										"name": "ExtractFieldNames"
									}
								],
								"qualifiedName": "Omit",
								"package": "typescript",
								"name": "Omit"
							},
							{
								"type": "reference",
								"id": 995,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "fields"
										},
										"objectType": {
											"type": "reference",
											"id": 1047,
											"name": "T"
										}
									},
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "pkFieldName"
										},
										"objectType": {
											"type": "reference",
											"id": 1047,
											"name": "T"
										}
									},
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 1047,
														"name": "T"
													},
													{
														"type": "reference",
														"id": 1048,
														"name": "FieldNames"
													}
												],
												"name": "ExtractRootFieldNames"
											},
											{
												"type": "conditional",
												"checkType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": "pkFieldName"
													},
													"objectType": {
														"type": "reference",
														"id": 1047,
														"name": "T"
													}
												},
												"extendsType": {
													"type": "intrinsic",
													"name": "string"
												},
												"trueType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": "pkFieldName"
													},
													"objectType": {
														"type": "reference",
														"id": 1047,
														"name": "T"
													}
												},
												"falseType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "intrinsic",
														"name": "number"
													},
													"objectType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "literal",
															"value": "pkFieldName"
														},
														"objectType": {
															"type": "reference",
															"id": 1047,
															"name": "T"
														}
													}
												}
											}
										]
									}
								],
								"name": "ViewModelInterface"
							}
						]
					}
				},
				{
					"id": 918,
					"name": "PrimaryKey",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 11,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 913,
								"name": "SinglePrimaryKey"
							},
							{
								"type": "reference",
								"id": 914,
								"name": "CompoundPrimaryKey"
							}
						]
					}
				},
				{
					"id": 913,
					"name": "SinglePrimaryKey",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 9,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 995,
					"name": "ViewModelInterface",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 854,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 996,
							"name": "FieldMappingType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 919,
								"name": "FieldsMapping"
							}
						},
						{
							"id": 997,
							"name": "PkFieldType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 996,
										"name": "FieldMappingType"
									}
								],
								"name": "ExtractPkFieldTypes"
							}
						},
						{
							"id": 998,
							"name": "AssignedFieldNames",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 935,
								"typeArguments": [
									{
										"type": "reference",
										"id": 996,
										"name": "FieldMappingType"
									}
								],
								"name": "ExtractFieldNames"
							},
							"default": {
								"type": "reference",
								"id": 935,
								"typeArguments": [
									{
										"type": "reference",
										"id": 996,
										"name": "FieldMappingType"
									}
								],
								"name": "ExtractFieldNames"
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"id": 962,
								"typeArguments": [
									{
										"type": "reference",
										"id": 996,
										"name": "FieldMappingType"
									},
									{
										"type": "reference",
										"id": 997,
										"name": "PkFieldType"
									},
									{
										"type": "reference",
										"id": 998,
										"name": "AssignedFieldNames"
									}
								],
								"name": "BaseViewModel"
							},
							{
								"type": "reference",
								"id": 931,
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 996,
												"name": "FieldMappingType"
											},
											{
												"type": "reference",
												"id": 998,
												"name": "AssignedFieldNames"
											}
										],
										"qualifiedName": "Pick",
										"package": "typescript",
										"name": "Pick"
									}
								],
								"name": "FieldDataMapping"
							}
						]
					}
				},
				{
					"id": 1042,
					"name": "ViewModelValues",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Type to describe values of an instance of ViewModel",
						"text": "Usage:\n\n```ts\nconst Person = viewModelFactory({\n  name: new Field<string>(),\n  age: new Field<number>(),\n});\ntype PersonValues = ViewModelValues<typeof Person>;\n```\n"
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 1529,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 1043,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 999,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ViewModelConstructor"
							}
						},
						{
							"id": 1044,
							"name": "FieldNames",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "fields"
									},
									"objectType": {
										"type": "reference",
										"id": 1043,
										"name": "T"
									}
								}
							},
							"default": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "fields"
									},
									"objectType": {
										"type": "reference",
										"id": 1043,
										"name": "T"
									}
								}
							}
						},
						{
							"id": 1045,
							"name": "OptionalFieldNames",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "fields"
									},
									"objectType": {
										"type": "reference",
										"id": 1043,
										"name": "T"
									}
								}
							},
							"default": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "fields"
									},
									"objectType": {
										"type": "reference",
										"id": 1043,
										"name": "T"
									}
								}
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "indexedAccess",
												"indexType": {
													"type": "literal",
													"value": "fields"
												},
												"objectType": {
													"type": "reference",
													"id": 1043,
													"name": "T"
												}
											}
										},
										{
											"type": "reference",
											"id": 1044,
											"name": "FieldNames"
										}
									],
									"qualifiedName": "Extract",
									"package": "typescript",
									"name": "Extract"
								},
								"templateType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "__fieldValueType"
									},
									"objectType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"name": "K"
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "fields"
											},
											"objectType": {
												"type": "reference",
												"id": 1043,
												"name": "T"
											}
										}
									}
								}
							},
							{
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "indexedAccess",
												"indexType": {
													"type": "literal",
													"value": "fields"
												},
												"objectType": {
													"type": "reference",
													"id": 1043,
													"name": "T"
												}
											}
										},
										{
											"type": "reference",
											"id": 1045,
											"name": "OptionalFieldNames"
										}
									],
									"qualifiedName": "Extract",
									"package": "typescript",
									"name": "Extract"
								},
								"templateType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "__fieldValueType"
									},
									"objectType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"name": "K"
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "fields"
											},
											"objectType": {
												"type": "reference",
												"id": 1043,
												"name": "T"
											}
										}
									}
								},
								"optionalModifier": "+"
							}
						]
					}
				},
				{
					"id": 899,
					"name": "flattenFieldPath",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 164,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 900,
							"name": "flattenFieldPath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Flatten a nested path to a single level with dot notation",
								"text": "eg.\n```\nflattenFieldPath([\n  'id',\n  ['user', ['group', 'id']],\n  ['user', 'groupId'],\n  ['user', 'id'],\n  'userId'\n])\n// ['id', 'user.group.id', 'user.groupId', 'user.id', 'userId']\n```\n"
							},
							"typeParameter": [
								{
									"id": 901,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 999,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "reference",
												"id": 901,
												"name": "T"
											}
										],
										"name": "ViewModelConstructor"
									}
								},
								{
									"id": 902,
									"name": "R",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 901,
												"name": "T"
											}
										],
										"name": "ExtractRelatedFields"
									},
									"default": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 901,
												"name": "T"
											}
										],
										"name": "ExtractRelatedFields"
									}
								}
							],
							"parameters": [
								{
									"id": 903,
									"name": "fieldPath",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 925,
												"typeArguments": [
													{
														"type": "reference",
														"id": 901,
														"name": "T"
													},
													{
														"type": "reference",
														"id": 902,
														"name": "R"
													}
												],
												"name": "FieldPath"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 925,
													"typeArguments": [
														{
															"type": "reference",
															"id": 901,
															"name": "T"
														},
														{
															"type": "reference",
															"id": 902,
															"name": "R"
														}
													],
													"name": "FieldPath"
												}
											}
										]
									}
								},
								{
									"id": 904,
									"name": "separator",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "'.'"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					]
				},
				{
					"id": 909,
					"name": "isViewModelClass",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 873,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 910,
							"name": "isViewModelClass",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if a class is a ViewModel"
							},
							"typeParameter": [
								{
									"id": 911,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 999,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "reference",
												"id": 911,
												"name": "T"
											}
										],
										"name": "ViewModelConstructor"
									}
								}
							],
							"parameters": [
								{
									"id": 912,
									"name": "view",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "view",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 911,
									"name": "T"
								}
							}
						}
					]
				},
				{
					"id": 905,
					"name": "isViewModelInstance",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 864,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 906,
							"name": "isViewModelInstance",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if an object is ViewModel"
							},
							"typeParameter": [
								{
									"id": 907,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"id": 962,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"id": 907,
														"name": "T"
													}
												],
												"name": "BaseViewModel"
											},
											{
												"type": "reference",
												"id": 931,
												"typeArguments": [
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"qualifiedName": "Pick",
														"package": "typescript",
														"name": "Pick"
													}
												],
												"name": "FieldDataMapping"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 908,
									"name": "view",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "view",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 907,
									"name": "T"
								}
							}
						}
					]
				},
				{
					"id": 1051,
					"name": "viewModelFactory",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"originalName": "default",
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 1266,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 1052,
							"name": "viewModelFactory",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a ViewModel class with the specified fields.",
								"text": "```js\nconst fields = {\n    userId: new IntegerField({ label: 'User ID' })\n    firstName: new CharField({ label: 'First Name' }),\n    // label is optional; will be generated as 'Last name'\n    lastName: new CharField(),\n};\n// Options are all optional and can be omitted entirely\nconst options = {\n    // Only one of pkFieldName or getImplicitPkField can be defined.\n    // If neither are provided a default field called 'id' will be created.\n    pkFieldName: 'userId',\n    // Multiple names can be specified for compound keys\n    pkFieldName: ['organisationId', 'departmentId']\n    // You can also specify a function to create the primary key\n    getImplicitPkField(model, fields) {\n         if ('EntityId' in fields) {\n             return ['EntityId', fields.EntityId];\n         }\n         // Generate a name base on model, eg. `userId`\n         const name = model.name[0].toLowerCase() + model.name.slice(1);\n         return [`${name}Id`, new NumberField()];\n     },\n     // Optionally can specify a baseClass for this model. When using `augment`\n     // this is automatically set to the class being augmented.\n     baseClass: BaseViewModel,\n};\nclass User extends viewModelFactory(fields, options) {\n    // Optional; default cache is usually sufficient\n    static cache = new MyCustomCache();\n\n    // Used to describe a single user\n    static label = 'User';\n    // User to describe an indeterminate number of users\n    static labelPlural = 'Users';\n}\n```\n",
								"tags": [
									{
										"tag": "extract-docs",
										"text": "\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 1053,
									"name": "FieldMappingType",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 919,
										"name": "FieldsMapping"
									}
								},
								{
									"id": 1054,
									"name": "PkFieldNameT",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"typeArguments": [
														{
															"type": "typeOperator",
															"operator": "keyof",
															"target": {
																"type": "reference",
																"id": 1053,
																"name": "FieldMappingType"
															}
														},
														{
															"type": "intrinsic",
															"name": "string"
														}
													],
													"qualifiedName": "Extract",
													"package": "typescript",
													"name": "Extract"
												}
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 1055,
									"name": "fields",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A map of field name to an instance of `Field`"
									},
									"type": {
										"type": "reference",
										"id": 1053,
										"name": "FieldMappingType"
									}
								},
								{
									"id": 1056,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 894,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1053,
												"name": "FieldMappingType"
											},
											{
												"type": "reference",
												"id": 1054,
												"name": "PkFieldNameT"
											}
										],
										"name": "ViewModelOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 999,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1053,
										"name": "FieldMappingType"
									},
									{
										"type": "reference",
										"id": 1054,
										"name": "PkFieldNameT"
									}
								],
								"name": "ViewModelConstructor"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						962,
						1026,
						939
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						999
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						914,
						935,
						1049,
						937,
						931,
						933,
						925,
						928,
						919,
						923,
						1046,
						918,
						913,
						995,
						1042
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						899,
						909,
						905,
						1051
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1057,
			"name": "fieldUtils",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 1064,
					"name": "ViewModelFieldPaths",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Stores the field paths for a model in a standardised form for use in caching.",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Utils\n"
							}
						]
					},
					"children": [
						{
							"id": 1065,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fieldUtils.ts",
									"line": 74,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1066,
									"name": "new ViewModelFieldPaths",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1067,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"id": 1067,
														"name": "T"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"parameters": [
										{
											"id": 1068,
											"name": "modelClass",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1067,
												"name": "T"
											}
										},
										{
											"id": 1069,
											"name": "flattenedPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1064,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1067,
												"name": "T"
											}
										],
										"name": "ViewModelFieldPaths"
									}
								}
							]
						},
						{
							"id": 1072,
							"name": "fieldPaths",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The expanded paths - any nested fields are represented as an array"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fieldUtils.ts",
									"line": 60,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 925,
									"typeArguments": [
										{
											"type": "reference",
											"id": 1067,
											"name": "T"
										},
										{
											"type": "reference",
											"typeArguments": [
												{
													"type": "reference",
													"id": 1067,
													"name": "T"
												}
											],
											"name": "ExtractRelatedFields"
										}
									],
									"name": "FieldPath"
								}
							}
						},
						{
							"id": 1071,
							"name": "flattenedPath",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The flattened path - any nested fields are joined with '.'"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fieldUtils.ts",
									"line": 56,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1075,
							"name": "key",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "A key representation of this field path that can be used as a cache key"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fieldUtils.ts",
									"line": 72,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1070,
							"name": "modelClass",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fieldUtils.ts",
									"line": 52,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 1067,
								"name": "T"
							}
						},
						{
							"id": 1073,
							"name": "nonRelationFieldNames",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Names of fields that aren't relations"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fieldUtils.ts",
									"line": 64,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1074,
							"name": "relations",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Map of relation field name to the paths for that relation"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fieldUtils.ts",
									"line": 68,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 925,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "any"
												},
												{
													"type": "reference",
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "any"
														}
													],
													"name": "ExtractRelatedFields"
												}
											],
											"name": "FieldPath"
										}
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 1076,
							"name": "isSubset",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fieldUtils.ts",
									"line": 105,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1077,
									"name": "isSubset",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Is the specified `paths` a subset of this?"
									},
									"parameters": [
										{
											"id": 1078,
											"name": "paths",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1064,
												"typeArguments": [
													{
														"type": "reference",
														"id": 1067,
														"name": "T"
													}
												],
												"name": "ViewModelFieldPaths"
											}
										},
										{
											"id": 1079,
											"name": "ignoreNested",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "false"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1065
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1072,
								1071,
								1075,
								1070,
								1073,
								1074
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1076
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fieldUtils.ts",
							"line": 51,
							"character": 13
						}
					],
					"typeParameter": [
						{
							"id": 1080,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 999,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ViewModelConstructor"
							}
						}
					]
				},
				{
					"id": 1063,
					"name": "CACHE_KEY_FIELD_SEPARATOR",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fieldUtils.ts",
							"line": 43,
							"character": 13
						}
					],
					"type": {
						"type": "literal",
						"value": "⁞"
					},
					"defaultValue": "'⁞'"
				},
				{
					"id": 1058,
					"name": "normalizeFields",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fieldUtils.ts",
							"line": 246,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1059,
							"name": "normalizeFields",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Takes an array of field paths for a model class and returns a normalized version in the form of `ViewModelFieldPaths`.",
								"text": "Note that `ViewModelFieldPaths` can be compared with normal equality operators - they are cached internally so a single\ninstance exists for each unique `fieldNames`\n\nNormalization means:\n* Id fields are always included\n* Expands a related field to include all it's subfields\n* If a related field is referenced ensures the related field sourceFieldName is included\n* Sorts field names consistently\n",
								"tags": [
									{
										"tag": "extract-docs",
										"text": ""
									},
									{
										"tag": "menu-group",
										"text": "Utils\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 1060,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 999,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "reference",
												"id": 1060,
												"name": "T"
											}
										],
										"name": "ViewModelConstructor"
									}
								}
							],
							"parameters": [
								{
									"id": 1061,
									"name": "modelClass",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The ViewModel class the fields are from"
									},
									"type": {
										"type": "reference",
										"id": 1060,
										"name": "T"
									}
								},
								{
									"id": 1062,
									"name": "fieldNames",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The array of field paths to normalize\n"
									},
									"type": {
										"type": "reference",
										"id": 928,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1060,
												"name": "T"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 1060,
														"name": "T"
													}
												],
												"name": "ExtractRelatedFields"
											}
										],
										"name": "FieldPaths"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1064,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1060,
										"name": "T"
									}
								],
								"name": "ViewModelFieldPaths"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1064
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1063
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1058
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fieldUtils.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1081,
			"name": "fields/AsyncChoices",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 1165,
					"name": "default",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1082
				},
				{
					"id": 1129,
					"name": "AsyncChoicesInterface",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Interface for asynchronous choices.",
						"text": "A choice is a `value` that identifies the item (eg. an id) and a `label` that\ndescribes the item and is shown to users (eg. the name).\n\nWhen `multiple` is true multiple values can be selected.\n\nTo define async choices two things are required:\n\n1) A function to resolve existing value(s). This is used when viewing existing\n   value(s) and need label(s) to show (eg. when displaying a choice on a detail\n   view or rendering the value selected on a select widget).\n2) A function to list & filter the available  choices. This is used when selecting\n   a value (eg. the options shown in a select widget).\n\nBoth of these functions may need to store state (eg. pagination for a listing)\nor access things from context (eg. read values from a cache). This can be done\nvia two hooks - `useListProps` and `useRetrieveProps`. This functions should be\ncalled from a component or hook that deals with async choices when calling\n`list` and `retrieve` respectively. The return value from the hook is passed to\nthe corresponding function.\n\nFor a default implementation see [AsyncChoices](doc:AsyncChoices)\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Async Choices\n"
							}
						]
					},
					"children": [
						{
							"id": 1130,
							"name": "multiple",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "If true then multiple values can be selected. When this is true\nretrieve() will be passed and return an array rather than a single value."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
									"line": 49,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1144,
							"name": "getChoices",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 1145,
									"name": "getChoices",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Generate the list of choices. This can return an array of single choices or grouped choices.",
										"text": "A grouped choice is a 2 element Array with a label and a list of choices.\n",
										"returns": "Either an array of single choices or grouped choices.\n"
									},
									"parameters": [
										{
											"id": 1146,
											"name": "items",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1160,
													"name": "ItemType"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"id": 1121,
													"typeArguments": [
														{
															"type": "reference",
															"id": 1161,
															"name": "ValueType"
														}
													],
													"name": "Choice"
												},
												{
													"type": "reference",
													"id": 1127,
													"typeArguments": [
														{
															"type": "reference",
															"id": 1161,
															"name": "ValueType"
														}
													],
													"name": "ChoicesGrouped"
												}
											]
										}
									}
								}
							]
						},
						{
							"id": 1147,
							"name": "getLabel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 1148,
									"name": "getLabel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get a label for an item"
									},
									"parameters": [
										{
											"id": 1149,
											"name": "item",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1160,
												"name": "ItemType"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "React.ReactNode",
										"package": "@types/react",
										"name": "ReactNode"
									}
								}
							]
						},
						{
							"id": 1150,
							"name": "getMissingLabel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 1151,
									"name": "getMissingLabel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return label to use when an item can't be found. This can be used by widgets to control\nwhat is rendered when an item for a value cannot be found (eg. when it's deleted or\nwhen it's loading). The exact details of how this is used depend on the widget."
									},
									"parameters": [
										{
											"id": 1152,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1161,
												"name": "ValueType"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "React.ReactNode",
										"package": "@types/react",
										"name": "ReactNode"
									}
								}
							]
						},
						{
							"id": 1153,
							"name": "getValue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 1154,
									"name": "getValue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the value to use for an item. The value should be unique and is what's used when a\nchoice is selected (eg. it's the value that would be saved to a database)."
									},
									"parameters": [
										{
											"id": 1155,
											"name": "item",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1160,
												"name": "ItemType"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1161,
										"name": "ValueType"
									}
								}
							]
						},
						{
							"id": 1134,
							"name": "list",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 1135,
									"name": "list",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Function to resolve a list of choices based on the provided params.",
										"text": "What this function is passed depends on the implementation but when used with\n[useAsyncChoices](doc:useAsyncChoices) it will be passed `query` (the query object eg. to\nfilter results with), `paginator` (the current paginator if any) and `listOptions` (any\nadditional options passed on the `listOptions` prop to `useAsyncChoices`).\nOfficial presto widgets all use `useAsyncChoices` and so will use these parameters.\n"
									},
									"parameters": [
										{
											"id": 1136,
											"name": "params",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1160,
													"name": "ItemType"
												}
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1140,
							"name": "retrieve",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 1141,
									"name": "retrieve",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Function to resolve specific values. This is used to know how to render the label for a value(s).",
										"text": "The first parameter is the value to retrieve (will be an array when `multiple` is true).\n\n`deps` is the value returned by `useRetrieveProps`.\n"
									},
									"parameters": [
										{
											"id": 1142,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 1161,
														"name": "ValueType"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 1161,
															"name": "ValueType"
														}
													}
												]
											}
										},
										{
											"id": 1143,
											"name": "deps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "conditional",
												"checkType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"id": 1161,
															"name": "ValueType"
														},
														{
															"type": "array",
															"elementType": {
																"type": "reference",
																"id": 1161,
																"name": "ValueType"
															}
														}
													]
												},
												"extendsType": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"id": 1161,
														"name": "ValueType"
													}
												},
												"trueType": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"id": 1160,
														"name": "ItemType"
													}
												},
												"falseType": {
													"type": "reference",
													"id": 1160,
													"name": "ItemType"
												}
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1131,
							"name": "useListProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 1132,
									"name": "useListProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Hook that returns any extra props to pass through to `list` in components/hooks that\nconsume this (eg. [useAsyncChoices](doc:useAsyncChoices)). This is useful to\nstore state for things like pagination.",
										"text": "What this function is passed depends on the implementation but when used with\n[useAsyncChoices](doc:useAsyncChoices) it will be `query` (the query object eg. to\nfilter results with) and `listOptions` (any additional options passed on the `listOptions`\nprop to `useAsyncChoices`).\nOfficial presto widgets all use `useAsyncChoices` and so will use these parameters.\n"
									},
									"parameters": [
										{
											"id": 1133,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 1156,
							"name": "useResolveItems",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 1157,
									"name": "useResolveItems",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Resolve the specific instance of an item to use. By default this should just return `item`\nbut can be used to resolve a specific instance of a class from a cache for example."
									},
									"typeParameter": [
										{
											"id": 1158,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 1159,
											"name": "item",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1158,
												"name": "T"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1158,
										"name": "T"
									}
								}
							]
						},
						{
							"id": 1137,
							"name": "useRetrieveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 1138,
									"name": "useRetrieveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Hook that returns props to pass through to `retrieve` in components/hooks that consume this (eg. [useAsyncChoices](doc:useAsyncChoices).\nThis is useful for things like hooking into an existing cache (eg. [useViewModelCache](doc:useViewModelCache)).\nThe value returned here is passed as the second parameter to `retrieve`. In addition the `existingValues` key is\npassed through to `useAsyncValue` as the list of items it can resolve existing values from.",
										"text": "What this function is passed depends on the implementation but when used with\n[useAsyncChoices](doc:useAsyncChoices) it will be passed `id` if there's a current value\nand it's not an array, `ids` if there's a current value and it is an array, `existingValues` which is\nthe values returned by `list` (may be null if `list` not yet called) and `retrieveOptions`\n(any additional options passed on the `retrieveOptions` prop to `useAsyncChoices`).\nOfficial presto widgets all use `useAsyncChoices` and so will use these parameters.\n"
									},
									"parameters": [
										{
											"id": 1139,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1130
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1144,
								1147,
								1150,
								1153,
								1134,
								1140,
								1131,
								1156,
								1137
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
							"line": 44,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 1160,
							"name": "ItemType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1161,
							"name": "ValueType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"id": 1082,
							"name": "AsyncChoices"
						}
					]
				},
				{
					"id": 1121,
					"name": "Choice",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "A single choice"
					},
					"children": [
						{
							"id": 1123,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
									"line": 8,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "React.ReactNode",
								"package": "@types/react",
								"name": "ReactNode"
							}
						},
						{
							"id": 1122,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
									"line": 7,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 1124,
								"name": "T"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1123,
								1122
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
							"line": 6,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 1124,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"indexSignature": {
						"id": 1125,
						"name": "__index",
						"kind": 8192,
						"kindString": "Index signature",
						"flags": {},
						"parameters": [
							{
								"id": 1126,
								"name": "x",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "any"
						}
					}
				},
				{
					"id": 1162,
					"name": "AsyncChoicesOptions",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "expand-properties",
								"text": ""
							},
							{
								"tag": "export-in-docs",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
							"line": 138,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 1163,
							"name": "ItemType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1164,
							"name": "ValueType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1129,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1163,
												"name": "ItemType"
											},
											{
												"type": "reference",
												"id": 1164,
												"name": "ValueType"
											}
										],
										"name": "AsyncChoicesInterface"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "getChoices"
											},
											{
												"type": "literal",
												"value": "useListProps"
											},
											{
												"type": "literal",
												"value": "useRetrieveProps"
											},
											{
												"type": "literal",
												"value": "getMissingLabel"
											},
											{
												"type": "literal",
												"value": "getLabel"
											},
											{
												"type": "literal",
												"value": "getValue"
											},
											{
												"type": "literal",
												"value": "useResolveItems"
											},
											{
												"type": "literal",
												"value": "multiple"
											}
										]
									}
								],
								"qualifiedName": "Omit",
								"package": "typescript",
								"name": "Omit"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1129,
												"typeArguments": [
													{
														"type": "reference",
														"id": 1163,
														"name": "ItemType"
													},
													{
														"type": "reference",
														"id": 1164,
														"name": "ValueType"
													}
												],
												"name": "AsyncChoicesInterface"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "getChoices"
													},
													{
														"type": "literal",
														"value": "useListProps"
													},
													{
														"type": "literal",
														"value": "useRetrieveProps"
													},
													{
														"type": "literal",
														"value": "getMissingLabel"
													},
													{
														"type": "literal",
														"value": "getLabel"
													},
													{
														"type": "literal",
														"value": "getValue"
													},
													{
														"type": "literal",
														"value": "useResolveItems"
													},
													{
														"type": "literal",
														"value": "multiple"
													}
												]
											}
										],
										"qualifiedName": "Pick",
										"package": "typescript",
										"name": "Pick"
									}
								],
								"qualifiedName": "Partial",
								"package": "typescript",
								"name": "Partial"
							}
						]
					}
				},
				{
					"id": 1127,
					"name": "ChoicesGrouped",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Grouped choices - a label for the grouping and an array of choices for that label"
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
							"line": 14,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 1128,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1121,
									"typeArguments": [
										{
											"type": "reference",
											"id": 1128,
											"name": "T"
										}
									],
									"name": "Choice"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						1165
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1129,
						1121
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						1162,
						1127
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1166,
			"name": "fields/BooleanField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 1167,
					"name": "BooleanField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Field for Boolean type values. Null count as False for this field.",
						"text": "Follows standard javascript Truthy and Falsy definition.\n\nSee also: [NullableBooleanField](doc:NullableBooleanField).\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 1169,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1170,
									"name": "new BooleanField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1171,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1828,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "FieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 1167,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2517,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2516,
								"name": "default.constructor"
							}
						},
						{
							"id": 1175,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 162,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2522,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 1176,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 166,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2523,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 1193,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 255,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1194,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1195,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "boolean"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2540,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 1190,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 240,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1129,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2537,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 1185,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 216,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2532,
								"name": "default.blank"
							}
						},
						{
							"id": 1186,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 220,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2533,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 1189,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 236,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2536,
								"name": "default.choices"
							}
						},
						{
							"id": 1188,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 230,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2535,
								"name": "default.helpText"
							}
						},
						{
							"id": 1187,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 226,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2534,
								"name": "default.label"
							}
						},
						{
							"id": 1191,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 245,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2538,
								"name": "default.readOnly"
							}
						},
						{
							"id": 1192,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 250,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2539,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 1168,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/BooleanField.ts",
									"line": 14,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'BooleanField'",
							"overwrites": {
								"type": "reference",
								"id": 2515,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 1220,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 432,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1221,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 995,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NullableBooleanField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2567,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 1206,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 380,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 1207,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1900,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NullableBooleanField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2553,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 1216,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 412,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1217,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NullableBooleanField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2563,
								"name": "default.isBound"
							}
						},
						{
							"id": 1177,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 169,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1178,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 999,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NullableBooleanField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 1179,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1180,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NullableBooleanField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2524,
								"name": "default.model"
							}
						},
						{
							"id": 1181,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 186,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1182,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NullableBooleanField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 1183,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1184,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NullableBooleanField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2528,
								"name": "default.name"
							}
						},
						{
							"id": 1218,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 421,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1219,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NullableBooleanField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2565,
								"name": "default.value"
							}
						},
						{
							"id": 1214,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 404,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1215,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1896,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2562,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2561,
								"name": "default.clone"
							}
						},
						{
							"id": 1222,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 448,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1223,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 1224,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2570,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2569,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 1196,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 326,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1197,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 1198,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2544,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2543,
								"name": "default.format"
							}
						},
						{
							"id": 1210,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 397,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1211,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 1212,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1213,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2558,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2557,
								"name": "default.isEqual"
							}
						},
						{
							"id": 1199,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 364,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1200,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 1201,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2547,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2546,
								"name": "default.normalize"
							}
						},
						{
							"id": 1172,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/BooleanField.ts",
									"line": 15,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1173,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 1174,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"overwrites": {
										"type": "reference",
										"id": 2520,
										"name": "default.parse"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 2519,
								"name": "default.parse"
							}
						},
						{
							"id": 1202,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 373,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1203,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 1204,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1205,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2550,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2549,
								"name": "default.toJS"
							}
						},
						{
							"id": 1208,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 387,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1209,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2556,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2555,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1169
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1175,
								1176,
								1193,
								1190,
								1185,
								1186,
								1189,
								1188,
								1187,
								1191,
								1192,
								1168
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								1220,
								1206,
								1216,
								1177,
								1181,
								1218
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1214,
								1222,
								1196,
								1210,
								1199,
								1172,
								1202,
								1208
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/BooleanField.ts",
							"line": 13,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2514,
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1167
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/BooleanField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1225,
			"name": "fields/CharField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 1226,
					"name": "CharField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Base class for string fields",
						"text": "Other char fields (EmailField, URLField...) will extend this.\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 1228,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 20,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1229,
									"name": "new CharField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1230,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CharFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 1226,
										"name": "default"
									},
									"overwrites": {
										"type": "reference",
										"id": 1899,
										"name": "default.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1898,
								"name": "default.constructor"
							}
						},
						{
							"id": 1232,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 162,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1904,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 1233,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 166,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1905,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 1250,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 255,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1251,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1252,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1924,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 1247,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 240,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1129,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1921,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 1242,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 216,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1916,
								"name": "default.blank"
							}
						},
						{
							"id": 1243,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 220,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1917,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 1246,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 236,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1920,
								"name": "default.choices"
							}
						},
						{
							"id": 1245,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 230,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1919,
								"name": "default.helpText"
							}
						},
						{
							"id": 1244,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 226,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1918,
								"name": "default.label"
							}
						},
						{
							"id": 1231,
							"name": "maxLength",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 18,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1248,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 245,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1922,
								"name": "default.readOnly"
							}
						},
						{
							"id": 1249,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 250,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1923,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 1227,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 17,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'CharField'",
							"overwrites": {
								"type": "reference",
								"id": 1897,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 1280,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 432,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1281,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 995,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1954,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 1266,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 380,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 1267,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1900,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1940,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 1276,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 412,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1277,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1950,
								"name": "default.isBound"
							}
						},
						{
							"id": 1234,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 169,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1235,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 999,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 1236,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1237,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1907,
								"name": "default.model"
							}
						},
						{
							"id": 1238,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 186,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1239,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 1240,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1241,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1912,
								"name": "default.name"
							}
						},
						{
							"id": 1278,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 421,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1279,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1952,
								"name": "default.value"
							}
						},
						{
							"id": 1274,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 404,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1275,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1896,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1949,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1948,
								"name": "default.clone"
							}
						},
						{
							"id": 1282,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 448,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1283,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 1284,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1957,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1956,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 1253,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 326,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1254,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 1255,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1928,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1927,
								"name": "default.format"
							}
						},
						{
							"id": 1270,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 397,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1271,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 1272,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1273,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1945,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1944,
								"name": "default.isEqual"
							}
						},
						{
							"id": 1259,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 364,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1260,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 1261,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1934,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1933,
								"name": "default.normalize"
							}
						},
						{
							"id": 1256,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 335,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1257,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 1258,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1931,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1930,
								"name": "default.parse"
							}
						},
						{
							"id": 1262,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 373,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1263,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 1264,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1265,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1937,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1936,
								"name": "default.toJS"
							}
						},
						{
							"id": 1268,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 387,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1269,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1943,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1942,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1228
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1232,
								1233,
								1250,
								1247,
								1242,
								1243,
								1246,
								1245,
								1244,
								1231,
								1248,
								1249,
								1227
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								1280,
								1266,
								1276,
								1234,
								1238,
								1278
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1274,
								1282,
								1253,
								1270,
								1259,
								1256,
								1262,
								1268
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
							"line": 16,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1896,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "string"
								}
							],
							"name": "default"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 1708,
							"name": "DurationField"
						},
						{
							"type": "reference",
							"id": 1768,
							"name": "EmailField"
						},
						{
							"type": "reference",
							"id": 2143,
							"name": "IPAddressField"
						},
						{
							"type": "reference",
							"id": 2387,
							"name": "JsonField"
						},
						{
							"type": "reference",
							"id": 2643,
							"name": "PasswordField"
						},
						{
							"type": "reference",
							"id": 3017,
							"name": "SlugField"
						},
						{
							"type": "reference",
							"id": 3077,
							"name": "TextField"
						},
						{
							"type": "reference",
							"id": 3196,
							"name": "URLField"
						},
						{
							"type": "reference",
							"id": 3256,
							"name": "UUIDField"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1226
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1285,
			"name": "fields/CurrencyField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 1286,
					"name": "CurrencyField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Currency Field to store currency values.",
						"text": "Extends DecimalField for precision, TODO - should store additional info on currency types (eg, USD, JPY).\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 1288,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1289,
									"name": "new CurrencyField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1290,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DecimalFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 1286,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1589,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1588,
								"name": "default.constructor"
							}
						},
						{
							"id": 1297,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 162,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1597,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 1298,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 166,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1598,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 1315,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 255,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1316,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1317,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1615,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 1312,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 240,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1129,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1612,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 1307,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 216,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1607,
								"name": "default.blank"
							}
						},
						{
							"id": 1308,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 220,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1608,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 1311,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 236,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1611,
								"name": "default.choices"
							}
						},
						{
							"id": 1291,
							"name": "decimalPlaces",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalField.ts",
									"line": 24,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1591,
								"name": "default.decimalPlaces"
							}
						},
						{
							"id": 1310,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 230,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1610,
								"name": "default.helpText"
							}
						},
						{
							"id": 1309,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 226,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1609,
								"name": "default.label"
							}
						},
						{
							"id": 1296,
							"name": "maxValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
									"line": 25,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1596,
								"name": "default.maxValue"
							}
						},
						{
							"id": 1295,
							"name": "minValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
									"line": 24,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1595,
								"name": "default.minValue"
							}
						},
						{
							"id": 1313,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 245,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1613,
								"name": "default.readOnly"
							}
						},
						{
							"id": 1314,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 250,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1614,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 1287,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CurrencyField.ts",
									"line": 12,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'CurrencyField'",
							"overwrites": {
								"type": "reference",
								"id": 1587,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 1342,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 432,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1343,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 995,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DecimalField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1642,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 1328,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 380,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 1329,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1900,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DecimalField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1628,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 1338,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 412,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1339,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DecimalField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1638,
								"name": "default.isBound"
							}
						},
						{
							"id": 1299,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 169,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1300,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 999,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DecimalField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 1301,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1302,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DecimalField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1599,
								"name": "default.model"
							}
						},
						{
							"id": 1303,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 186,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1304,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DecimalField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 1305,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1306,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DecimalField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1603,
								"name": "default.name"
							}
						},
						{
							"id": 1340,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 421,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1341,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DecimalField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1640,
								"name": "default.value"
							}
						},
						{
							"id": 1336,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 404,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1337,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1896,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1637,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1636,
								"name": "default.clone"
							}
						},
						{
							"id": 1344,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 448,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1345,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 1346,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1645,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1644,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 1318,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 326,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1319,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 1320,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1619,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1618,
								"name": "default.format"
							}
						},
						{
							"id": 1332,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 397,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1333,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 1334,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1335,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1633,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1632,
								"name": "default.isEqual"
							}
						},
						{
							"id": 1321,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 364,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1322,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 1323,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1622,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1621,
								"name": "default.normalize"
							}
						},
						{
							"id": 1292,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalField.ts",
									"line": 41,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1293,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 1294,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1593,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1592,
								"name": "default.parse"
							}
						},
						{
							"id": 1324,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 373,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1325,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 1326,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1327,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1625,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1624,
								"name": "default.toJS"
							}
						},
						{
							"id": 1330,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 387,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1331,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1631,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1630,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1288
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1297,
								1298,
								1315,
								1312,
								1307,
								1308,
								1311,
								1291,
								1310,
								1309,
								1296,
								1295,
								1313,
								1314,
								1287
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								1342,
								1328,
								1338,
								1299,
								1303,
								1340
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1336,
								1344,
								1318,
								1332,
								1321,
								1292,
								1324,
								1330
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/CurrencyField.ts",
							"line": 11,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1586,
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1286
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/CurrencyField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1347,
			"name": "fields/DateField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 1348,
					"name": "DateField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"originalName": "default",
					"children": [
						{
							"id": 1350,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1351,
									"name": "new DateField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1352,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1828,
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "Date",
														"package": "typescript",
														"name": "Date"
													},
													{
														"type": "reference",
														"qualifiedName": "Date",
														"package": "typescript",
														"name": "Date"
													}
												],
												"name": "FieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 1348,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1899,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1898,
								"name": "default.constructor"
							}
						},
						{
							"id": 1359,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 162,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Date",
								"package": "typescript",
								"name": "Date"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1904,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 1360,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 166,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1905,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 1377,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 255,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1378,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1379,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"qualifiedName": "Date",
																"package": "typescript",
																"name": "Date"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"qualifiedName": "Date",
																				"package": "typescript",
																				"name": "Date"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1924,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 1374,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 240,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1129,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1921,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 1369,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 216,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1916,
								"name": "default.blank"
							}
						},
						{
							"id": 1370,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 220,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1917,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 1373,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 236,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1920,
								"name": "default.choices"
							}
						},
						{
							"id": 1372,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 230,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1919,
								"name": "default.helpText"
							}
						},
						{
							"id": 1371,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 226,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1918,
								"name": "default.label"
							}
						},
						{
							"id": 1375,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 245,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1922,
								"name": "default.readOnly"
							}
						},
						{
							"id": 1376,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 250,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1923,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 1349,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateField.ts",
									"line": 17,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DateField'",
							"overwrites": {
								"type": "reference",
								"id": 1897,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 1401,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 432,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1402,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 995,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1954,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 1387,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 380,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 1388,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1900,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1940,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 1397,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 412,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1398,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1950,
								"name": "default.isBound"
							}
						},
						{
							"id": 1361,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 169,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1362,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 999,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 1363,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1364,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1907,
								"name": "default.model"
							}
						},
						{
							"id": 1365,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 186,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1366,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 1367,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1368,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1912,
								"name": "default.name"
							}
						},
						{
							"id": 1399,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 421,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1400,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1952,
								"name": "default.value"
							}
						},
						{
							"id": 1395,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 404,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1396,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1896,
										"typeArguments": [
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1949,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1948,
								"name": "default.clone"
							}
						},
						{
							"id": 1403,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 448,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1404,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 1405,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1957,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1956,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 1380,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 326,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1381,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 1382,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1928,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1927,
								"name": "default.format"
							}
						},
						{
							"id": 1391,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 397,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1392,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 1393,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										},
										{
											"id": 1394,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1945,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1944,
								"name": "default.isEqual"
							}
						},
						{
							"id": 1356,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateField.ts",
									"line": 25,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1357,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 1358,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"qualifiedName": "Date",
														"package": "typescript",
														"name": "Date"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 1934,
										"name": "default.normalize"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1933,
								"name": "default.normalize"
							}
						},
						{
							"id": 1353,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateField.ts",
									"line": 18,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1354,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 1355,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 1931,
										"name": "default.parse"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1930,
								"name": "default.parse"
							}
						},
						{
							"id": 1383,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 373,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1384,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 1385,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1386,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1937,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1936,
								"name": "default.toJS"
							}
						},
						{
							"id": 1389,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 387,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1390,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1943,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1942,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1350
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1359,
								1360,
								1377,
								1374,
								1369,
								1370,
								1373,
								1372,
								1371,
								1375,
								1376,
								1349
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								1401,
								1387,
								1397,
								1361,
								1365,
								1399
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1395,
								1403,
								1380,
								1391,
								1356,
								1353,
								1383,
								1389
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateField.ts",
							"line": 16,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1896,
							"typeArguments": [
								{
									"type": "reference",
									"qualifiedName": "Date",
									"package": "typescript",
									"name": "Date"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "reference",
											"qualifiedName": "Date",
											"package": "typescript",
											"name": "Date"
										}
									]
								}
							],
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1348
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1406,
			"name": "fields/DateRangeField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 1407,
					"name": "DateRangeField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 1409,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1410,
									"name": "new DateRangeField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1411,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "Date",
														"package": "typescript",
														"name": "Date"
													}
												],
												"name": "RangeFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 1407,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2706,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2705,
								"name": "default.constructor"
							}
						},
						{
							"id": 1413,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 162,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Date",
								"package": "typescript",
								"name": "Date"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2710,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 1414,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 166,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Date",
								"package": "typescript",
								"name": "Date"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2711,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 1431,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 255,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1432,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1433,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"qualifiedName": "Date",
																"package": "typescript",
																"name": "Date"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"qualifiedName": "Date",
																				"package": "typescript",
																				"name": "Date"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2728,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 1428,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 240,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1129,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2725,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 1423,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 216,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2720,
								"name": "default.blank"
							}
						},
						{
							"id": 1424,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 220,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2721,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 1427,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 236,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2724,
								"name": "default.choices"
							}
						},
						{
							"id": 1426,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 230,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2723,
								"name": "default.helpText"
							}
						},
						{
							"id": 1425,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 226,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2722,
								"name": "default.label"
							}
						},
						{
							"id": 1429,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 245,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2726,
								"name": "default.readOnly"
							}
						},
						{
							"id": 1412,
							"name": "separator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
									"line": 17,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2709,
								"name": "default.separator"
							}
						},
						{
							"id": 1430,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 250,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2727,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 1408,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateRangeField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DateRangeField'",
							"overwrites": {
								"type": "reference",
								"id": 2704,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 1461,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 432,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1462,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 995,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2758,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 1447,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 380,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 1448,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1900,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2744,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 1457,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 412,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1458,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2754,
								"name": "default.isBound"
							}
						},
						{
							"id": 1415,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 169,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1416,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 999,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 1417,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1418,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2712,
								"name": "default.model"
							}
						},
						{
							"id": 1419,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 186,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1420,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 1421,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1422,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2716,
								"name": "default.name"
							}
						},
						{
							"id": 1459,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 421,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1460,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2756,
								"name": "default.value"
							}
						},
						{
							"id": 1455,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 404,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1456,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1896,
										"typeArguments": [
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2753,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2752,
								"name": "default.clone"
							}
						},
						{
							"id": 1463,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 448,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1464,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 1465,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2761,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2760,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 1434,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 326,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1435,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 1436,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2732,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2731,
								"name": "default.format"
							}
						},
						{
							"id": 1451,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 397,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1452,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 1453,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										},
										{
											"id": 1454,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2749,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2748,
								"name": "default.isEqual"
							}
						},
						{
							"id": 1440,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 364,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1441,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 1442,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2738,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2737,
								"name": "default.normalize"
							}
						},
						{
							"id": 1437,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 335,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1438,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 1439,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"qualifiedName": "Date",
														"package": "typescript",
														"name": "Date"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2735,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2734,
								"name": "default.parse"
							}
						},
						{
							"id": 1443,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 373,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1444,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 1445,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1446,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2741,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2740,
								"name": "default.toJS"
							}
						},
						{
							"id": 1449,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 387,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1450,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2747,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2746,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1409
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1413,
								1414,
								1431,
								1428,
								1423,
								1424,
								1427,
								1426,
								1425,
								1429,
								1412,
								1430,
								1408
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								1461,
								1447,
								1457,
								1415,
								1419,
								1459
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1455,
								1463,
								1434,
								1451,
								1440,
								1437,
								1443,
								1449
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateRangeField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2703,
							"typeArguments": [
								{
									"type": "reference",
									"qualifiedName": "Date",
									"package": "typescript",
									"name": "Date"
								}
							],
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1407
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateRangeField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1466,
			"name": "fields/DateTimeField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 1467,
					"name": "DateTimeField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"originalName": "default",
					"children": [
						{
							"id": 1469,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1470,
									"name": "new DateTimeField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1471,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1828,
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "Date",
														"package": "typescript",
														"name": "Date"
													},
													{
														"type": "reference",
														"qualifiedName": "Date",
														"package": "typescript",
														"name": "Date"
													}
												],
												"name": "FieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 1467,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1899,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1898,
								"name": "default.constructor"
							}
						},
						{
							"id": 1478,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 162,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Date",
								"package": "typescript",
								"name": "Date"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1904,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 1479,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 166,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1905,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 1496,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 255,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1497,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1498,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"qualifiedName": "Date",
																"package": "typescript",
																"name": "Date"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"qualifiedName": "Date",
																				"package": "typescript",
																				"name": "Date"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1924,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 1493,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 240,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1129,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1921,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 1488,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 216,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1916,
								"name": "default.blank"
							}
						},
						{
							"id": 1489,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 220,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1917,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 1492,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 236,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1920,
								"name": "default.choices"
							}
						},
						{
							"id": 1491,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 230,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1919,
								"name": "default.helpText"
							}
						},
						{
							"id": 1490,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 226,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1918,
								"name": "default.label"
							}
						},
						{
							"id": 1494,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 245,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1922,
								"name": "default.readOnly"
							}
						},
						{
							"id": 1495,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 250,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1923,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 1468,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateTimeField.ts",
									"line": 15,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DateTimeField'",
							"overwrites": {
								"type": "reference",
								"id": 1897,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 1520,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 432,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1521,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 995,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1954,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 1506,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 380,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 1507,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1900,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1940,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 1516,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 412,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1517,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1950,
								"name": "default.isBound"
							}
						},
						{
							"id": 1480,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 169,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1481,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 999,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 1482,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1483,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1907,
								"name": "default.model"
							}
						},
						{
							"id": 1484,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 186,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1485,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 1486,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1487,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1912,
								"name": "default.name"
							}
						},
						{
							"id": 1518,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 421,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1519,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1952,
								"name": "default.value"
							}
						},
						{
							"id": 1514,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 404,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1515,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1896,
										"typeArguments": [
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1949,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1948,
								"name": "default.clone"
							}
						},
						{
							"id": 1522,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 448,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1523,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 1524,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1957,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1956,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 1499,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 326,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1500,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 1501,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1928,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1927,
								"name": "default.format"
							}
						},
						{
							"id": 1510,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 397,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1511,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 1512,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										},
										{
											"id": 1513,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1945,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1944,
								"name": "default.isEqual"
							}
						},
						{
							"id": 1475,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateTimeField.ts",
									"line": 22,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1476,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 1477,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"qualifiedName": "Date",
														"package": "typescript",
														"name": "Date"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 1934,
										"name": "default.normalize"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1933,
								"name": "default.normalize"
							}
						},
						{
							"id": 1472,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateTimeField.ts",
									"line": 16,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1473,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 1474,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 1931,
										"name": "default.parse"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1930,
								"name": "default.parse"
							}
						},
						{
							"id": 1502,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 373,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1503,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 1504,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1505,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1937,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1936,
								"name": "default.toJS"
							}
						},
						{
							"id": 1508,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 387,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1509,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1943,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1942,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1469
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1478,
								1479,
								1496,
								1493,
								1488,
								1489,
								1492,
								1491,
								1490,
								1494,
								1495,
								1468
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								1520,
								1506,
								1516,
								1480,
								1484,
								1518
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1514,
								1522,
								1499,
								1510,
								1475,
								1472,
								1502,
								1508
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateTimeField.ts",
							"line": 14,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1896,
							"typeArguments": [
								{
									"type": "reference",
									"qualifiedName": "Date",
									"package": "typescript",
									"name": "Date"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "reference",
											"qualifiedName": "Date",
											"package": "typescript",
											"name": "Date"
										}
									]
								}
							],
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1467
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateTimeField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1525,
			"name": "fields/DateTimeRangeField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 1526,
					"name": "DateTimeRangeField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 1528,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1529,
									"name": "new DateTimeRangeField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1530,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "Date",
														"package": "typescript",
														"name": "Date"
													}
												],
												"name": "RangeFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 1526,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2706,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2705,
								"name": "default.constructor"
							}
						},
						{
							"id": 1532,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 162,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Date",
								"package": "typescript",
								"name": "Date"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2710,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 1533,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 166,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Date",
								"package": "typescript",
								"name": "Date"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2711,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 1550,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 255,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1551,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1552,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"qualifiedName": "Date",
																"package": "typescript",
																"name": "Date"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"qualifiedName": "Date",
																				"package": "typescript",
																				"name": "Date"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2728,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 1547,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 240,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1129,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2725,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 1542,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 216,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2720,
								"name": "default.blank"
							}
						},
						{
							"id": 1543,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 220,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2721,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 1546,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 236,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2724,
								"name": "default.choices"
							}
						},
						{
							"id": 1545,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 230,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2723,
								"name": "default.helpText"
							}
						},
						{
							"id": 1544,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 226,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2722,
								"name": "default.label"
							}
						},
						{
							"id": 1548,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 245,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2726,
								"name": "default.readOnly"
							}
						},
						{
							"id": 1531,
							"name": "separator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
									"line": 17,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2709,
								"name": "default.separator"
							}
						},
						{
							"id": 1549,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 250,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2727,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 1527,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateTimeRangeField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DateTimeRangeField'",
							"overwrites": {
								"type": "reference",
								"id": 2704,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 1580,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 432,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1581,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 995,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2758,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 1566,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 380,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 1567,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1900,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2744,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 1576,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 412,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1577,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2754,
								"name": "default.isBound"
							}
						},
						{
							"id": 1534,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 169,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1535,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 999,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 1536,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1537,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2712,
								"name": "default.model"
							}
						},
						{
							"id": 1538,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 186,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1539,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 1540,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1541,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2716,
								"name": "default.name"
							}
						},
						{
							"id": 1578,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 421,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1579,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2756,
								"name": "default.value"
							}
						},
						{
							"id": 1574,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 404,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1575,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1896,
										"typeArguments": [
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2753,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2752,
								"name": "default.clone"
							}
						},
						{
							"id": 1582,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 448,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1583,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 1584,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2761,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2760,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 1553,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 326,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1554,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 1555,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2732,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2731,
								"name": "default.format"
							}
						},
						{
							"id": 1570,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 397,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1571,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 1572,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										},
										{
											"id": 1573,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2749,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2748,
								"name": "default.isEqual"
							}
						},
						{
							"id": 1559,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 364,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1560,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 1561,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2738,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2737,
								"name": "default.normalize"
							}
						},
						{
							"id": 1556,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 335,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1557,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 1558,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"qualifiedName": "Date",
														"package": "typescript",
														"name": "Date"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2735,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2734,
								"name": "default.parse"
							}
						},
						{
							"id": 1562,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 373,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1563,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 1564,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Date",
												"package": "typescript",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1565,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2741,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2740,
								"name": "default.toJS"
							}
						},
						{
							"id": 1568,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 387,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1569,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2747,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2746,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1528
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1532,
								1533,
								1550,
								1547,
								1542,
								1543,
								1546,
								1545,
								1544,
								1548,
								1531,
								1549,
								1527
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								1580,
								1566,
								1576,
								1534,
								1538,
								1578
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1574,
								1582,
								1553,
								1570,
								1559,
								1556,
								1562,
								1568
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateTimeRangeField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2703,
							"typeArguments": [
								{
									"type": "reference",
									"qualifiedName": "Date",
									"package": "typescript",
									"name": "Date"
								}
							],
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1526
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/DateTimeRangeField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1585,
			"name": "fields/DecimalField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 1586,
					"name": "DecimalField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Decimal Field. Stores decimal value as a string.",
						"text": "To support decimal operations consider a custom implementation that uses a decimal library eg. decimal.js\n\nAlso used by CurrencyField.\n\nSee also: [FloatField](doc:FloatField)\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 1588,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalField.ts",
									"line": 26,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1589,
									"name": "new DecimalField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1590,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DecimalFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 1586,
										"name": "default"
									},
									"overwrites": {
										"type": "reference",
										"id": 2581,
										"name": "default.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 2580,
								"name": "default.constructor"
							}
						},
						{
							"id": 1597,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 162,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2587,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 1598,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 166,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2588,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 1615,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 255,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1616,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1617,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2605,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 1612,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 240,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1129,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2602,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 1607,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 216,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2597,
								"name": "default.blank"
							}
						},
						{
							"id": 1608,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 220,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2598,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 1611,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 236,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2601,
								"name": "default.choices"
							}
						},
						{
							"id": 1591,
							"name": "decimalPlaces",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalField.ts",
									"line": 24,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1610,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 230,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2600,
								"name": "default.helpText"
							}
						},
						{
							"id": 1609,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 226,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2599,
								"name": "default.label"
							}
						},
						{
							"id": 1596,
							"name": "maxValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
									"line": 25,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2586,
								"name": "default.maxValue"
							}
						},
						{
							"id": 1595,
							"name": "minValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
									"line": 24,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2585,
								"name": "default.minValue"
							}
						},
						{
							"id": 1613,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 245,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2603,
								"name": "default.readOnly"
							}
						},
						{
							"id": 1614,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 250,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2604,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 1587,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalField.ts",
									"line": 23,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DecimalField'",
							"overwrites": {
								"type": "reference",
								"id": 2579,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 1642,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 432,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1643,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 995,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2635,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 1628,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 380,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 1629,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1900,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2621,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 1638,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 412,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1639,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2631,
								"name": "default.isBound"
							}
						},
						{
							"id": 1599,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 169,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1600,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 999,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 1601,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1602,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2589,
								"name": "default.model"
							}
						},
						{
							"id": 1603,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 186,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1604,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 1605,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1606,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2593,
								"name": "default.name"
							}
						},
						{
							"id": 1640,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 421,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1641,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2633,
								"name": "default.value"
							}
						},
						{
							"id": 1636,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 404,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1637,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1896,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2630,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2629,
								"name": "default.clone"
							}
						},
						{
							"id": 1644,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 448,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1645,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 1646,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2638,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2637,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 1618,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 326,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1619,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 1620,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2609,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2608,
								"name": "default.format"
							}
						},
						{
							"id": 1632,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 397,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1633,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 1634,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1635,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2626,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2625,
								"name": "default.isEqual"
							}
						},
						{
							"id": 1621,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 364,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1622,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 1623,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2615,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2614,
								"name": "default.normalize"
							}
						},
						{
							"id": 1592,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalField.ts",
									"line": 41,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1593,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 1594,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 2612,
										"name": "default.parse"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 2611,
								"name": "default.parse"
							}
						},
						{
							"id": 1624,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 373,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1625,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 1626,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1627,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2618,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2617,
								"name": "default.toJS"
							}
						},
						{
							"id": 1630,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 387,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1631,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2624,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2623,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1588
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1597,
								1598,
								1615,
								1612,
								1607,
								1608,
								1611,
								1591,
								1610,
								1609,
								1596,
								1595,
								1613,
								1614,
								1587
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								1642,
								1628,
								1638,
								1599,
								1603,
								1640
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1636,
								1644,
								1618,
								1632,
								1621,
								1592,
								1624,
								1630
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalField.ts",
							"line": 22,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2578,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "string"
								}
							],
							"name": "default"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 1286,
							"name": "CurrencyField"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1586
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1647,
			"name": "fields/DecimalRangeField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 1648,
					"name": "DecimalRangeField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 1650,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1651,
									"name": "new DecimalRangeField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1652,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "RangeFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 1648,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2706,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2705,
								"name": "default.constructor"
							}
						},
						{
							"id": 1654,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 162,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2710,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 1655,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 166,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2711,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 1672,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 255,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1673,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1674,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2728,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 1669,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 240,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1129,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2725,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 1664,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 216,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2720,
								"name": "default.blank"
							}
						},
						{
							"id": 1665,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 220,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2721,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 1668,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 236,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2724,
								"name": "default.choices"
							}
						},
						{
							"id": 1667,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 230,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2723,
								"name": "default.helpText"
							}
						},
						{
							"id": 1666,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 226,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2722,
								"name": "default.label"
							}
						},
						{
							"id": 1670,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 245,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2726,
								"name": "default.readOnly"
							}
						},
						{
							"id": 1653,
							"name": "separator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
									"line": 17,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2709,
								"name": "default.separator"
							}
						},
						{
							"id": 1671,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 250,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2727,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 1649,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalRangeField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DecimalRangeField'",
							"overwrites": {
								"type": "reference",
								"id": 2704,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 1702,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 432,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1703,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 995,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2758,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 1688,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 380,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 1689,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1900,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2744,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 1698,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 412,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1699,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2754,
								"name": "default.isBound"
							}
						},
						{
							"id": 1656,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 169,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1657,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 999,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 1658,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1659,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2712,
								"name": "default.model"
							}
						},
						{
							"id": 1660,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 186,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1661,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 1662,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1663,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2716,
								"name": "default.name"
							}
						},
						{
							"id": 1700,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 421,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1701,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2756,
								"name": "default.value"
							}
						},
						{
							"id": 1696,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 404,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1697,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1896,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2753,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2752,
								"name": "default.clone"
							}
						},
						{
							"id": 1704,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 448,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1705,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 1706,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2761,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2760,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 1675,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 326,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1676,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 1677,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2732,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2731,
								"name": "default.format"
							}
						},
						{
							"id": 1692,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 397,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1693,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 1694,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1695,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2749,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2748,
								"name": "default.isEqual"
							}
						},
						{
							"id": 1681,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 364,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1682,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 1683,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2738,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2737,
								"name": "default.normalize"
							}
						},
						{
							"id": 1678,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 335,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1679,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 1680,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2735,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2734,
								"name": "default.parse"
							}
						},
						{
							"id": 1684,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 373,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1685,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 1686,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1687,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2741,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2740,
								"name": "default.toJS"
							}
						},
						{
							"id": 1690,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 387,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1691,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2747,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2746,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1650
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1654,
								1655,
								1672,
								1669,
								1664,
								1665,
								1668,
								1667,
								1666,
								1670,
								1653,
								1671,
								1649
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								1702,
								1688,
								1698,
								1656,
								1660,
								1700
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1696,
								1704,
								1675,
								1692,
								1681,
								1678,
								1684,
								1690
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalRangeField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2703,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "string"
								}
							],
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1648
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/DecimalRangeField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1707,
			"name": "fields/DurationField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 1708,
					"name": "DurationField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Duration Field - represents a duration with two components: hour, minute such as 10h5m.",
						"text": "Duration longer than 23h59m is not currently supported.\n\nBackend of choice need to be capable of storing a duration in a similar manner.\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 1710,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1711,
									"name": "new DurationField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1712,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CharFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 1708,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1229,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1228,
								"name": "default.constructor"
							}
						},
						{
							"id": 1714,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 162,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1232,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 1715,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 166,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1233,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 1732,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 255,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1733,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1734,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1250,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 1729,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 240,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1129,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1247,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 1724,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 216,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1242,
								"name": "default.blank"
							}
						},
						{
							"id": 1725,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 220,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1243,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 1728,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 236,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1246,
								"name": "default.choices"
							}
						},
						{
							"id": 1727,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 230,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1245,
								"name": "default.helpText"
							}
						},
						{
							"id": 1726,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 226,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1244,
								"name": "default.label"
							}
						},
						{
							"id": 1713,
							"name": "maxLength",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 18,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1231,
								"name": "default.maxLength"
							}
						},
						{
							"id": 1730,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 245,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1248,
								"name": "default.readOnly"
							}
						},
						{
							"id": 1731,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 250,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1249,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 1709,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/DurationField.ts",
									"line": 14,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DurationField'",
							"overwrites": {
								"type": "reference",
								"id": 1227,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 1762,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 432,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1763,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 995,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1280,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 1748,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 380,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 1749,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1900,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1266,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 1758,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 412,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1759,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1276,
								"name": "default.isBound"
							}
						},
						{
							"id": 1716,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 169,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1717,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 999,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 1718,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1719,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1234,
								"name": "default.model"
							}
						},
						{
							"id": 1720,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 186,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1721,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 1722,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1723,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1238,
								"name": "default.name"
							}
						},
						{
							"id": 1760,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 421,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1761,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1278,
								"name": "default.value"
							}
						},
						{
							"id": 1756,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 404,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1757,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1896,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1275,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1274,
								"name": "default.clone"
							}
						},
						{
							"id": 1764,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 448,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1765,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 1766,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1283,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1282,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 1735,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 326,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1736,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 1737,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1254,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1253,
								"name": "default.format"
							}
						},
						{
							"id": 1752,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 397,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1753,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 1754,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1755,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1271,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1270,
								"name": "default.isEqual"
							}
						},
						{
							"id": 1741,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 364,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1742,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 1743,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1260,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1259,
								"name": "default.normalize"
							}
						},
						{
							"id": 1738,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 335,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1739,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 1740,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1257,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1256,
								"name": "default.parse"
							}
						},
						{
							"id": 1744,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 373,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1745,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 1746,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1747,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1263,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1262,
								"name": "default.toJS"
							}
						},
						{
							"id": 1750,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 387,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1751,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1269,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1268,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1710
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1714,
								1715,
								1732,
								1729,
								1724,
								1725,
								1728,
								1727,
								1726,
								1713,
								1730,
								1731,
								1709
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								1762,
								1748,
								1758,
								1716,
								1720,
								1760
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1756,
								1764,
								1735,
								1752,
								1741,
								1738,
								1744,
								1750
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/DurationField.ts",
							"line": 13,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1226,
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1708
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/DurationField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1767,
			"name": "fields/EmailField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 1768,
					"name": "EmailField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 1770,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1771,
									"name": "new EmailField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1772,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CharFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 1768,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1229,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1228,
								"name": "default.constructor"
							}
						},
						{
							"id": 1774,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 162,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1232,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 1775,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 166,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1233,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 1792,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 255,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1793,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1794,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1250,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 1789,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 240,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1129,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1247,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 1784,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 216,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1242,
								"name": "default.blank"
							}
						},
						{
							"id": 1785,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 220,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1243,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 1788,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 236,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1246,
								"name": "default.choices"
							}
						},
						{
							"id": 1787,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 230,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1245,
								"name": "default.helpText"
							}
						},
						{
							"id": 1786,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 226,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1244,
								"name": "default.label"
							}
						},
						{
							"id": 1773,
							"name": "maxLength",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 18,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1231,
								"name": "default.maxLength"
							}
						},
						{
							"id": 1790,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 245,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1248,
								"name": "default.readOnly"
							}
						},
						{
							"id": 1791,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 250,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1249,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 1769,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/EmailField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'EmailField'",
							"overwrites": {
								"type": "reference",
								"id": 1227,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 1822,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 432,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1823,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 995,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1280,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 1808,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 380,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 1809,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1900,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1266,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 1818,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 412,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1819,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1276,
								"name": "default.isBound"
							}
						},
						{
							"id": 1776,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 169,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1777,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 999,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 1778,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1779,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1234,
								"name": "default.model"
							}
						},
						{
							"id": 1780,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 186,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1781,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 1782,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1783,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1238,
								"name": "default.name"
							}
						},
						{
							"id": 1820,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 421,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1821,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1278,
								"name": "default.value"
							}
						},
						{
							"id": 1816,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 404,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1817,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1896,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1275,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1274,
								"name": "default.clone"
							}
						},
						{
							"id": 1824,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 448,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1825,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 1826,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1283,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1282,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 1795,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 326,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1796,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 1797,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1254,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1253,
								"name": "default.format"
							}
						},
						{
							"id": 1812,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 397,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1813,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 1814,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1815,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1271,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1270,
								"name": "default.isEqual"
							}
						},
						{
							"id": 1801,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 364,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1802,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 1803,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1260,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1259,
								"name": "default.normalize"
							}
						},
						{
							"id": 1798,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 335,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1799,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 1800,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1257,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1256,
								"name": "default.parse"
							}
						},
						{
							"id": 1804,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 373,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1805,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 1806,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1807,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1263,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1262,
								"name": "default.toJS"
							}
						},
						{
							"id": 1810,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 387,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1811,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1269,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1268,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1770
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1774,
								1775,
								1792,
								1789,
								1784,
								1785,
								1788,
								1787,
								1786,
								1773,
								1790,
								1791,
								1769
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								1822,
								1808,
								1818,
								1776,
								1780,
								1820
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1816,
								1824,
								1795,
								1812,
								1801,
								1798,
								1804,
								1810
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/EmailField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1226,
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1768
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/EmailField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1827,
			"name": "fields/Field",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 1896,
					"name": "Field",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Base class for all fields extend from.",
						"text": "A [ViewModel](doc:viewModelFactory) comprises 1 or more fields.\n\nA `Field` serves two primary purposes:\n\na) It handles parsing a value as it comes in (eg. converting from a string to a `Date`).\n\nb) Stores some properties that can be used elsewhere to generate UI. For example based on the field type\n   [FieldFormatter](doc:FieldFormatter) can choose the appropriate formatter class to render the value. Or a\n   generic view for a [ViewModel](doc:viewModelFactory) instance can show the `label` or `helpText` relevant to\n   each field.\n\nYou can create an instance of a field in isolation and access some of its attributes:\n\n```js\nconst email = new EmailField({ label: 'Email Address' });\nemail.label === 'Email Address';\n// This will throw an error as it's not 'bound' to a view model yet and the name can't be inferred.\nemail.name\n```\n\nbut mostly you use fields in the context of a `ViewModel`. You do this by passing an object keyed by the field name\nwith values being the corresponding field instances to [viewModelFactory](doc:viewModelFactory):\n\n```js\nconst fields = {\n    id: new Field(),\n    email: new EmailField(),\n}\nclass User extends viewModelFactory(fields, { pkFieldName: 'id' }) {\n}\nUser.fields.email.name === 'email';\nUser.fields.email.label === 'Email';\nUser.fields.email.model === User;\n```\n\nSome attributes of a field will be inferred from their usage. `name` will be set to match the key name on the\nfields object passed to `viewModelFactory`. `label` will be generated from the name (eg. `emailAddress` => `\"Email Address\"`)\nif not explicitly provided. Once a field has been attached to a ViewModel you can access the ViewModel via the\n`model` attribute.\n\n## Types\n\nIf you are instantiating `Field` directly you can specify the types it can take:\n\n```js\nconst age = new Field<number>()\n```\n\nThis indicates the value of `age` when used on a `ViewModel` will be of type `number`. `value` here means the type\nwhen you access the field value via the record:\n\n```js\nclass Person extends viewModelFactory({\n    id: new Field(),\n    age: new IntegerField(),\n} {}\nconst jo = new Person({ id: 1, age: \"33\" });\njo.age\n// 33 (as a number - not a string)\n```\n\nYou can specify the parsable type for a field - that is the types of values the field will happily convert\ninto the value type for a field. For example [IntegerField](doc:IntegerField) is defined as something like:\n\n```js\nclass IntegerField extends NumberField<number, string | number> {\n    parse(value: any): number | null {\n        if (value === '' || value == null) {\n            return null;\n        }\n        if (Number.isNaN(Number(value))) {\n            return value;\n        }\n        return parseInt(value, 10);\n    }\n}\n```\n\nThe parseable type here is either a `string` or a `number` but the value is always a `number`.\n\n## Creating custom fields\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields"
							},
							{
								"tag": "typeparam",
								"text": "The type of the value this field will take when used on a `ViewModel`.",
								"param": "ValueType"
							},
							{
								"tag": "typeparam",
								"text": "This the type the field knows how to parse into `ValueType` when constructing a `ViewModel`.",
								"param": "ParsableType"
							},
							{
								"tag": "typeparam",
								"text": "The type of a single value for this field. This is only different from `ValueType` if `ValueType` represents multiple values (eg. an array as in [ListField](doc:ListField)).\n",
								"param": "SingleType"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 1898,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 257,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1899,
									"name": "new Field",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1900,
											"name": "ValueT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										},
										{
											"id": 1901,
											"name": "ParsableValueT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											},
											"default": {
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											}
										},
										{
											"id": 1902,
											"name": "SingleValueT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											}
										}
									],
									"parameters": [
										{
											"id": 1903,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1828,
												"typeArguments": [
													{
														"type": "reference",
														"id": 1900,
														"name": "ValueT"
													},
													{
														"type": "reference",
														"id": 1902,
														"name": "SingleValueT"
													}
												],
												"name": "FieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 1896,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"id": 1901,
												"name": "ParsableValueT"
											},
											{
												"type": "reference",
												"id": 1902,
												"name": "SingleValueT"
											}
										],
										"name": "default"
									}
								}
							]
						},
						{
							"id": 1904,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 162,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 1900,
								"name": "ValueT"
							}
						},
						{
							"id": 1905,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 166,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 1901,
								"name": "ParsableValueT"
							}
						},
						{
							"id": 1924,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 255,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 1900,
										"name": "ValueT"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1925,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1926,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1900,
																"name": "ValueT"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"id": 1900,
																				"name": "ValueT"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 1906,
							"name": "_model",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 168,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 999,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ViewModelConstructor"
							}
						},
						{
							"id": 1911,
							"name": "_name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 185,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1921,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 240,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1129,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"id": 1902,
										"name": "SingleValueT"
									}
								],
								"name": "AsyncChoicesInterface"
							}
						},
						{
							"id": 1916,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 216,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1917,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 220,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1920,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 236,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1902,
										"name": "SingleValueT"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							}
						},
						{
							"id": 1919,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 230,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1918,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 226,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1922,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 245,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1923,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 250,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1897,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 211,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"defaultValue": "null"
						},
						{
							"id": 1954,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 432,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1955,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 995,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									}
								}
							]
						},
						{
							"id": 1940,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 380,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 1941,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1900,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									}
								}
							]
						},
						{
							"id": 1950,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 412,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1951,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 1907,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 169,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1908,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 999,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									}
								}
							],
							"setSignature": [
								{
									"id": 1909,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1910,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 1912,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 186,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1913,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"setSignature": [
								{
									"id": 1914,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1915,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 1952,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 421,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1953,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											}
										]
									}
								}
							]
						},
						{
							"id": 1948,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 404,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1949,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1896,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											}
										],
										"name": "default"
									}
								}
							]
						},
						{
							"id": 1956,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 448,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1957,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 1958,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 1927,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 326,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1928,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 1929,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 1944,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 397,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1945,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 1946,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											}
										},
										{
											"id": 1947,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 1933,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 364,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1934,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 1935,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 1901,
												"name": "ParsableValueT"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											}
										]
									}
								}
							]
						},
						{
							"id": 1930,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 335,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1931,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 1932,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 1901,
														"name": "ParsableValueT"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											}
										]
									}
								}
							]
						},
						{
							"id": 1936,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 373,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1937,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 1938,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1939,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 1942,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 387,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1943,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1898
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1904,
								1905,
								1924,
								1906,
								1911,
								1921,
								1916,
								1917,
								1920,
								1919,
								1918,
								1922,
								1923,
								1897
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								1954,
								1940,
								1950,
								1907,
								1912,
								1952
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1948,
								1956,
								1927,
								1944,
								1933,
								1930,
								1936,
								1942
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
							"line": 157,
							"character": 21
						}
					],
					"typeParameter": [
						{
							"id": 1959,
							"name": "ValueT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1960,
							"name": "ParsableValueT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"default": {
								"type": "reference",
								"id": 1900,
								"name": "ValueT"
							}
						},
						{
							"id": 1961,
							"name": "SingleValueT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "reference",
								"id": 1900,
								"name": "ValueT"
							}
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 1226,
							"name": "CharField"
						},
						{
							"type": "reference",
							"id": 1348,
							"name": "DateField"
						},
						{
							"type": "reference",
							"id": 1467,
							"name": "DateTimeField"
						},
						{
							"type": "reference",
							"id": 1842,
							"name": "RecordBoundField"
						},
						{
							"type": "reference",
							"id": 1963,
							"name": "FileField"
						},
						{
							"type": "reference",
							"id": 2448,
							"name": "ListField"
						},
						{
							"type": "reference",
							"id": 2514,
							"name": "NullableBooleanField"
						},
						{
							"type": "reference",
							"id": 2578,
							"name": "NumberField"
						},
						{
							"type": "reference",
							"id": 2703,
							"name": "RangeField"
						},
						{
							"type": "reference",
							"id": 2789,
							"name": "BaseRelatedViewModelField"
						},
						{
							"type": "reference",
							"id": 3137,
							"name": "TimeField"
						}
					]
				},
				{
					"id": 1828,
					"name": "FieldProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "expand-properties",
								"text": "\n"
							}
						]
					},
					"children": [
						{
							"id": 1837,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Asynchronous choices for this field.",
								"text": "Only one of `asyncChoices` and `choices` should be passed.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 48,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 1129,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"id": 1841,
										"name": "SingleValueT"
									}
								],
								"name": "AsyncChoicesInterface"
							}
						},
						{
							"id": 1829,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Is this field allowed to be assigned a blank (null, undefined, \"\") value?",
								"text": "Defaults to false\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 13,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1830,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Frontend values are often stored as strings even if they are not stored like that\nin a backend (eg. database). Depending on your backend implementation it may expect\nempty values to be represented as `null` rather than an empty string. Setting\n`blankAsNull` to `true` indicates that empty strings should be converted to `null`\nwhen being sent to the backend."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 21,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1836,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Choices for this field. Should be a mapping of value to the label for the choice."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 42,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1841,
												"name": "SingleValueT"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"qualifiedName": "Map",
										"package": "typescript",
										"name": "Map"
									},
									{
										"type": "array",
										"elementType": {
											"type": "tuple",
											"elements": [
												{
													"type": "reference",
													"id": 1841,
													"name": "SingleValueT"
												},
												{
													"type": "intrinsic",
													"name": "string"
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 1833,
							"name": "defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Default value for this field. This can either be a function that returns a value or the value directly."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 33,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 1840,
										"name": "ValueT"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1834,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1835,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1840,
																"name": "ValueT"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"id": 1840,
																				"name": "ValueT"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 1832,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Optional help text for this field that might be shown on a form"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 29,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1831,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Label for this field. If not specified will be generated from the name."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 25,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1838,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "True if field should be considered read only (eg. excluded from forms)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 52,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1839,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "True if field should be considered write only (eg. excluded from detail views)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 56,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1837,
								1829,
								1830,
								1836,
								1833,
								1832,
								1831,
								1838,
								1839
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
							"line": 7,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 1840,
							"name": "ValueT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1841,
							"name": "SingleValueT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "reference",
								"id": 1840,
								"name": "ValueT"
							}
						}
					]
				},
				{
					"id": 1842,
					"name": "RecordBoundField",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1846,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 162,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 1893,
								"name": "ValueT"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1904,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 1847,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 166,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 1894,
								"name": "ParsableType"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1905,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 1864,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 255,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 1893,
										"name": "ValueT"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1865,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1866,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1893,
																"name": "ValueT"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"id": 1893,
																				"name": "ValueT"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1924,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 1861,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 240,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1129,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"id": 1895,
										"name": "SingleValueT"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1921,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 1856,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 216,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1916,
								"name": "default.blank"
							}
						},
						{
							"id": 1857,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 220,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1917,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 1845,
							"name": "boundRecord",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 457,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 995,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "ViewModelInterface"
							},
							"overwrites": {
								"type": "reference",
								"id": 1954,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 1860,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 236,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1895,
										"name": "SingleValueT"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1920,
								"name": "default.choices"
							}
						},
						{
							"id": 1859,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 230,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1919,
								"name": "default.helpText"
							}
						},
						{
							"id": 1844,
							"name": "isBound",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 456,
									"character": 13
								}
							],
							"type": {
								"type": "literal",
								"value": true
							},
							"overwrites": {
								"type": "reference",
								"id": 1950,
								"name": "default.isBound"
							}
						},
						{
							"id": 1858,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 226,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1918,
								"name": "default.label"
							}
						},
						{
							"id": 1862,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 245,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1922,
								"name": "default.readOnly"
							}
						},
						{
							"id": 1843,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 455,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 1893,
								"name": "ValueT"
							},
							"overwrites": {
								"type": "reference",
								"id": 1952,
								"name": "default.value"
							}
						},
						{
							"id": 1863,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 250,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1923,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 1880,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 380,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 1881,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1900,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1940,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 1848,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 169,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1849,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 999,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 1850,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1851,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1907,
								"name": "default.model"
							}
						},
						{
							"id": 1852,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 186,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1853,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 1854,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1855,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1912,
								"name": "default.name"
							}
						},
						{
							"id": 1888,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 404,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1889,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1896,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1893,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"id": 1893,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"id": 1893,
												"name": "ValueT"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1949,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1948,
								"name": "default.clone"
							}
						},
						{
							"id": 1890,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 448,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1891,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 1892,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1957,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1956,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 1867,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 326,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1868,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 1869,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 1893,
												"name": "ValueT"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1928,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1927,
								"name": "default.format"
							}
						},
						{
							"id": 1884,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 397,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1885,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 1886,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1893,
												"name": "ValueT"
											}
										},
										{
											"id": 1887,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1893,
												"name": "ValueT"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1945,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1944,
								"name": "default.isEqual"
							}
						},
						{
							"id": 1873,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 364,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1874,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 1875,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 1894,
												"name": "ParsableType"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1893,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1934,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1933,
								"name": "default.normalize"
							}
						},
						{
							"id": 1870,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 335,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1871,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 1872,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 1894,
														"name": "ParsableType"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1893,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1931,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1930,
								"name": "default.parse"
							}
						},
						{
							"id": 1876,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 373,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1877,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 1878,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 1893,
												"name": "ValueT"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1879,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1937,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1936,
								"name": "default.toJS"
							}
						},
						{
							"id": 1882,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 387,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1883,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1943,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1942,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1846,
								1847,
								1864,
								1861,
								1856,
								1857,
								1845,
								1860,
								1859,
								1844,
								1858,
								1862,
								1843,
								1863
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								1880,
								1848,
								1852
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1888,
								1890,
								1867,
								1884,
								1873,
								1870,
								1876,
								1882
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
							"line": 453,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 1893,
							"name": "ValueT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1894,
							"name": "ParsableType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"default": {
								"type": "reference",
								"id": 1893,
								"name": "ValueT"
							}
						},
						{
							"id": 1895,
							"name": "SingleValueT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "reference",
								"id": 1893,
								"name": "ValueT"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1896,
							"typeArguments": [
								{
									"type": "reference",
									"id": 1893,
									"name": "ValueT"
								},
								{
									"type": "reference",
									"id": 1894,
									"name": "ParsableType"
								},
								{
									"type": "reference",
									"id": 1895,
									"name": "SingleValueT"
								}
							],
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1896
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1828,
						1842
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1962,
			"name": "fields/FileField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 1963,
					"name": "FileField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Base class for File fields",
						"text": "Used by ImageField.\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 1965,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1966,
									"name": "new FileField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1967,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1828,
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "File",
														"package": "typescript",
														"name": "File"
													},
													{
														"type": "reference",
														"qualifiedName": "File",
														"package": "typescript",
														"name": "File"
													}
												],
												"name": "FieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 1963,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1899,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1898,
								"name": "default.constructor"
							}
						},
						{
							"id": 1968,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 162,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "File",
								"package": "typescript",
								"name": "File"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1904,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 1969,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 166,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "File",
								"package": "typescript",
								"name": "File"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1905,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 1986,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 255,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"qualifiedName": "File",
										"package": "typescript",
										"name": "File"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1987,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1988,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"qualifiedName": "File",
																"package": "typescript",
																"name": "File"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"qualifiedName": "File",
																				"package": "typescript",
																				"name": "File"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1924,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 1983,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 240,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1129,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"qualifiedName": "File",
										"package": "typescript",
										"name": "File"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1921,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 1978,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 216,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1916,
								"name": "default.blank"
							}
						},
						{
							"id": 1979,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 220,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1917,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 1982,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 236,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"qualifiedName": "File",
										"package": "typescript",
										"name": "File"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1920,
								"name": "default.choices"
							}
						},
						{
							"id": 1981,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 230,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1919,
								"name": "default.helpText"
							}
						},
						{
							"id": 1980,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 226,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1918,
								"name": "default.label"
							}
						},
						{
							"id": 1984,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 245,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1922,
								"name": "default.readOnly"
							}
						},
						{
							"id": 1985,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 250,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1923,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 1964,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/FileField.ts",
									"line": 12,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'FileField'",
							"overwrites": {
								"type": "reference",
								"id": 1897,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2016,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 432,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2017,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 995,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1954,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2002,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 380,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2003,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1900,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1940,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2012,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 412,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2013,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1950,
								"name": "default.isBound"
							}
						},
						{
							"id": 1970,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 169,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1971,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 999,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 1972,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1973,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1907,
								"name": "default.model"
							}
						},
						{
							"id": 1974,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 186,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 1975,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 1976,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 1977,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1912,
								"name": "default.name"
							}
						},
						{
							"id": 2014,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 421,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2015,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1952,
								"name": "default.value"
							}
						},
						{
							"id": 2010,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 404,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2011,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1896,
										"typeArguments": [
											{
												"type": "reference",
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											},
											{
												"type": "reference",
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											},
											{
												"type": "reference",
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1949,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1948,
								"name": "default.clone"
							}
						},
						{
							"id": 2018,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 448,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2019,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2020,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1957,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1956,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 1989,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 326,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1990,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 1991,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1928,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1927,
								"name": "default.format"
							}
						},
						{
							"id": 2006,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 397,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2007,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2008,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										},
										{
											"id": 2009,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1945,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1944,
								"name": "default.isEqual"
							}
						},
						{
							"id": 1995,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 364,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1996,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 1997,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1934,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1933,
								"name": "default.normalize"
							}
						},
						{
							"id": 1992,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 335,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1993,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 1994,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"qualifiedName": "File",
														"package": "typescript",
														"name": "File"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1931,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1930,
								"name": "default.parse"
							}
						},
						{
							"id": 1998,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 373,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1999,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2000,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2001,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1937,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1936,
								"name": "default.toJS"
							}
						},
						{
							"id": 2004,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 387,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2005,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1943,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1942,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1965
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1968,
								1969,
								1986,
								1983,
								1978,
								1979,
								1982,
								1981,
								1980,
								1984,
								1985,
								1964
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2016,
								2002,
								2012,
								1970,
								1974,
								2014
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2010,
								2018,
								1989,
								2006,
								1995,
								1992,
								1998,
								2004
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/FileField.ts",
							"line": 11,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1896,
							"typeArguments": [
								{
									"type": "reference",
									"qualifiedName": "File",
									"package": "typescript",
									"name": "File"
								}
							],
							"name": "default"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 2203,
							"name": "ImageField"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1963
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/FileField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2021,
			"name": "fields/FloatField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2022,
					"name": "FloatField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Float Field.",
						"text": "Use only if stored number is tolerant on precision error.\n\nSee also: [DecimalField](doc:DecimalField)\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 2024,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2025,
									"name": "new FloatField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2026,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2573,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"name": "NumberFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2022,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2581,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2580,
								"name": "default.constructor"
							}
						},
						{
							"id": 2032,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 162,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2587,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2033,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 166,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2588,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2050,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 255,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2051,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2052,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2605,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2047,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 240,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1129,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2602,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2042,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 216,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2597,
								"name": "default.blank"
							}
						},
						{
							"id": 2043,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 220,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2598,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2046,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 236,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2601,
								"name": "default.choices"
							}
						},
						{
							"id": 2045,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 230,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2600,
								"name": "default.helpText"
							}
						},
						{
							"id": 2044,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 226,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2599,
								"name": "default.label"
							}
						},
						{
							"id": 2031,
							"name": "maxValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
									"line": 25,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2586,
								"name": "default.maxValue"
							}
						},
						{
							"id": 2030,
							"name": "minValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
									"line": 24,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2585,
								"name": "default.minValue"
							}
						},
						{
							"id": 2048,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 245,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2603,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2049,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 250,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2604,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2023,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/FloatField.ts",
									"line": 14,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'FloatField'",
							"overwrites": {
								"type": "reference",
								"id": 2579,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2077,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 432,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2078,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 995,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2635,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2063,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 380,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2064,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1900,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2621,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2073,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 412,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2074,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2631,
								"name": "default.isBound"
							}
						},
						{
							"id": 2034,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 169,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2035,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 999,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2036,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2037,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2589,
								"name": "default.model"
							}
						},
						{
							"id": 2038,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 186,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2039,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2040,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2041,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2593,
								"name": "default.name"
							}
						},
						{
							"id": 2075,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 421,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2076,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2633,
								"name": "default.value"
							}
						},
						{
							"id": 2071,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 404,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2072,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1896,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2630,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2629,
								"name": "default.clone"
							}
						},
						{
							"id": 2079,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 448,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2080,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2081,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2638,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2637,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2053,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 326,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2054,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2055,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2609,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2608,
								"name": "default.format"
							}
						},
						{
							"id": 2067,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 397,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2068,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2069,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2070,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2626,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2625,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2056,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 364,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2057,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2058,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2615,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2614,
								"name": "default.normalize"
							}
						},
						{
							"id": 2027,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/FloatField.ts",
									"line": 15,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2028,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2029,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 2612,
										"name": "default.parse"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 2611,
								"name": "default.parse"
							}
						},
						{
							"id": 2059,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 373,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2060,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2061,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2062,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2618,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2617,
								"name": "default.toJS"
							}
						},
						{
							"id": 2065,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 387,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2066,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2624,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2623,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2024
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2032,
								2033,
								2050,
								2047,
								2042,
								2043,
								2046,
								2045,
								2044,
								2031,
								2030,
								2048,
								2049,
								2023
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2077,
								2063,
								2073,
								2034,
								2038,
								2075
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2071,
								2079,
								2053,
								2067,
								2056,
								2027,
								2059,
								2065
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/FloatField.ts",
							"line": 13,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2578,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "number"
								}
							],
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2022
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/FloatField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2082,
			"name": "fields/FloatRangeField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2083,
					"name": "FloatRangeField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 2085,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2086,
									"name": "new FloatRangeField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2087,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"name": "RangeFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2083,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2706,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2705,
								"name": "default.constructor"
							}
						},
						{
							"id": 2089,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 162,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2710,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2090,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 166,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2711,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2107,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 255,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2108,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2109,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2728,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2104,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 240,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1129,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2725,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2099,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 216,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2720,
								"name": "default.blank"
							}
						},
						{
							"id": 2100,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 220,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2721,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2103,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 236,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2724,
								"name": "default.choices"
							}
						},
						{
							"id": 2102,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 230,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2723,
								"name": "default.helpText"
							}
						},
						{
							"id": 2101,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 226,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2722,
								"name": "default.label"
							}
						},
						{
							"id": 2105,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 245,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2726,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2088,
							"name": "separator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
									"line": 17,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2709,
								"name": "default.separator"
							}
						},
						{
							"id": 2106,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 250,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2727,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2084,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/FloatRangeField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'FloatRangeField'",
							"overwrites": {
								"type": "reference",
								"id": 2704,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2137,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 432,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2138,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 995,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2758,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2123,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 380,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2124,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1900,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2744,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2133,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 412,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2134,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2754,
								"name": "default.isBound"
							}
						},
						{
							"id": 2091,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 169,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2092,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 999,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2093,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2094,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2712,
								"name": "default.model"
							}
						},
						{
							"id": 2095,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 186,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2096,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2097,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2098,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2716,
								"name": "default.name"
							}
						},
						{
							"id": 2135,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 421,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2136,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2756,
								"name": "default.value"
							}
						},
						{
							"id": 2131,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 404,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2132,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1896,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2753,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2752,
								"name": "default.clone"
							}
						},
						{
							"id": 2139,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 448,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2140,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2141,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2761,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2760,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2110,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 326,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2111,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2112,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2732,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2731,
								"name": "default.format"
							}
						},
						{
							"id": 2127,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 397,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2128,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2129,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2130,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2749,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2748,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2116,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 364,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2117,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2118,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2738,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2737,
								"name": "default.normalize"
							}
						},
						{
							"id": 2113,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 335,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2114,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2115,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2735,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2734,
								"name": "default.parse"
							}
						},
						{
							"id": 2119,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 373,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2120,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2121,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2122,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2741,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2740,
								"name": "default.toJS"
							}
						},
						{
							"id": 2125,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 387,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2126,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2747,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2746,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2085
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2089,
								2090,
								2107,
								2104,
								2099,
								2100,
								2103,
								2102,
								2101,
								2105,
								2088,
								2106,
								2084
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2137,
								2123,
								2133,
								2091,
								2095,
								2135
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2131,
								2139,
								2110,
								2127,
								2116,
								2113,
								2119,
								2125
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/FloatRangeField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2703,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "number"
								}
							],
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2083
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/FloatRangeField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2142,
			"name": "fields/IPAddressField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2143,
					"name": "IPAddressField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 2145,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2146,
									"name": "new IPAddressField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2147,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CharFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2143,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1229,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1228,
								"name": "default.constructor"
							}
						},
						{
							"id": 2149,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 162,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1232,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2150,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 166,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1233,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2167,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 255,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2168,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2169,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1250,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2164,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 240,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1129,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1247,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2159,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 216,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1242,
								"name": "default.blank"
							}
						},
						{
							"id": 2160,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 220,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1243,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2163,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 236,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1246,
								"name": "default.choices"
							}
						},
						{
							"id": 2162,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 230,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1245,
								"name": "default.helpText"
							}
						},
						{
							"id": 2161,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 226,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1244,
								"name": "default.label"
							}
						},
						{
							"id": 2148,
							"name": "maxLength",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 18,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1231,
								"name": "default.maxLength"
							}
						},
						{
							"id": 2165,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 245,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1248,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2166,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 250,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1249,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2144,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/IPAddressField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'IPAddressField'",
							"overwrites": {
								"type": "reference",
								"id": 1227,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2197,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 432,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2198,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 995,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1280,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2183,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 380,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2184,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1900,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1266,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2193,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 412,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2194,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1276,
								"name": "default.isBound"
							}
						},
						{
							"id": 2151,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 169,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2152,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 999,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2153,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2154,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1234,
								"name": "default.model"
							}
						},
						{
							"id": 2155,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 186,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2156,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2157,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2158,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1238,
								"name": "default.name"
							}
						},
						{
							"id": 2195,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 421,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2196,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1278,
								"name": "default.value"
							}
						},
						{
							"id": 2191,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 404,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2192,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1896,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1275,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1274,
								"name": "default.clone"
							}
						},
						{
							"id": 2199,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 448,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2200,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2201,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1283,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1282,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2170,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 326,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2171,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2172,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1254,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1253,
								"name": "default.format"
							}
						},
						{
							"id": 2187,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 397,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2188,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2189,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2190,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1271,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1270,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2176,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 364,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2177,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2178,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1260,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1259,
								"name": "default.normalize"
							}
						},
						{
							"id": 2173,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 335,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2174,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2175,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1257,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1256,
								"name": "default.parse"
							}
						},
						{
							"id": 2179,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 373,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2180,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2181,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2182,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1263,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1262,
								"name": "default.toJS"
							}
						},
						{
							"id": 2185,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 387,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2186,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1269,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1268,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2145
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2149,
								2150,
								2167,
								2164,
								2159,
								2160,
								2163,
								2162,
								2161,
								2148,
								2165,
								2166,
								2144
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2197,
								2183,
								2193,
								2151,
								2155,
								2195
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2191,
								2199,
								2170,
								2187,
								2176,
								2173,
								2179,
								2185
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/IPAddressField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1226,
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2143
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/IPAddressField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2202,
			"name": "fields/ImageField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2203,
					"name": "ImageField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Image field.",
						"text": "ImageField is an exact match of FileField, however the representation (format/widget) will be different.\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 2205,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2206,
									"name": "new ImageField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2207,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1828,
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "File",
														"package": "typescript",
														"name": "File"
													},
													{
														"type": "reference",
														"qualifiedName": "File",
														"package": "typescript",
														"name": "File"
													}
												],
												"name": "FieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2203,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1966,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1965,
								"name": "default.constructor"
							}
						},
						{
							"id": 2208,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 162,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "File",
								"package": "typescript",
								"name": "File"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1968,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2209,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 166,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "File",
								"package": "typescript",
								"name": "File"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1969,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2226,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 255,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"qualifiedName": "File",
										"package": "typescript",
										"name": "File"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2227,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2228,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"qualifiedName": "File",
																"package": "typescript",
																"name": "File"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"qualifiedName": "File",
																				"package": "typescript",
																				"name": "File"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1986,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2223,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 240,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1129,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"qualifiedName": "File",
										"package": "typescript",
										"name": "File"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1983,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2218,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 216,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1978,
								"name": "default.blank"
							}
						},
						{
							"id": 2219,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 220,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1979,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2222,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 236,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"qualifiedName": "File",
										"package": "typescript",
										"name": "File"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1982,
								"name": "default.choices"
							}
						},
						{
							"id": 2221,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 230,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1981,
								"name": "default.helpText"
							}
						},
						{
							"id": 2220,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 226,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1980,
								"name": "default.label"
							}
						},
						{
							"id": 2224,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 245,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1984,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2225,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 250,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1985,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2204,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/ImageField.ts",
									"line": 12,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'ImageField'",
							"overwrites": {
								"type": "reference",
								"id": 1964,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2256,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 432,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2257,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 995,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FileField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2016,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2242,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 380,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2243,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1900,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FileField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2002,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2252,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 412,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2253,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FileField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2012,
								"name": "default.isBound"
							}
						},
						{
							"id": 2210,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 169,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2211,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 999,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FileField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2212,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2213,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FileField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1970,
								"name": "default.model"
							}
						},
						{
							"id": 2214,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 186,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2215,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FileField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2216,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2217,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FileField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1974,
								"name": "default.name"
							}
						},
						{
							"id": 2254,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 421,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2255,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FileField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2014,
								"name": "default.value"
							}
						},
						{
							"id": 2250,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 404,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2251,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1896,
										"typeArguments": [
											{
												"type": "reference",
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											},
											{
												"type": "reference",
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											},
											{
												"type": "reference",
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2011,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2010,
								"name": "default.clone"
							}
						},
						{
							"id": 2258,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 448,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2259,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2260,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2019,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2018,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2229,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 326,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2230,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2231,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1990,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1989,
								"name": "default.format"
							}
						},
						{
							"id": 2246,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 397,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2247,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2248,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										},
										{
											"id": 2249,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2007,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2006,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2235,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 364,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2236,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2237,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1996,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1995,
								"name": "default.normalize"
							}
						},
						{
							"id": 2232,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 335,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2233,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2234,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"qualifiedName": "File",
														"package": "typescript",
														"name": "File"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1993,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1992,
								"name": "default.parse"
							}
						},
						{
							"id": 2238,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 373,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2239,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2240,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "File",
												"package": "typescript",
												"name": "File"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2241,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1999,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1998,
								"name": "default.toJS"
							}
						},
						{
							"id": 2244,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 387,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2245,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2005,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2004,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2205
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2208,
								2209,
								2226,
								2223,
								2218,
								2219,
								2222,
								2221,
								2220,
								2224,
								2225,
								2204
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2256,
								2242,
								2252,
								2210,
								2214,
								2254
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2250,
								2258,
								2229,
								2246,
								2235,
								2232,
								2238,
								2244
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/ImageField.ts",
							"line": 11,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1963,
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2203
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/ImageField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2261,
			"name": "fields/IntegerField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2262,
					"name": "IntegerField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 2264,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2265,
									"name": "new IntegerField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2266,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2573,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"name": "NumberFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2262,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2581,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2580,
								"name": "default.constructor"
							}
						},
						{
							"id": 2272,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 162,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2587,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2273,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 166,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2588,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2290,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 255,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2291,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2292,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2605,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2287,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 240,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1129,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2602,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2282,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 216,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2597,
								"name": "default.blank"
							}
						},
						{
							"id": 2283,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 220,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2598,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2286,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 236,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2601,
								"name": "default.choices"
							}
						},
						{
							"id": 2285,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 230,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2600,
								"name": "default.helpText"
							}
						},
						{
							"id": 2284,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 226,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2599,
								"name": "default.label"
							}
						},
						{
							"id": 2271,
							"name": "maxValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
									"line": 25,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2586,
								"name": "default.maxValue"
							}
						},
						{
							"id": 2270,
							"name": "minValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
									"line": 24,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2585,
								"name": "default.minValue"
							}
						},
						{
							"id": 2288,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 245,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2603,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2289,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 250,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2604,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2263,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/IntegerField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'IntegerField'",
							"overwrites": {
								"type": "reference",
								"id": 2579,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2317,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 432,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2318,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 995,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2635,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2303,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 380,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2304,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1900,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2621,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2313,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 412,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2314,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2631,
								"name": "default.isBound"
							}
						},
						{
							"id": 2274,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 169,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2275,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 999,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2276,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2277,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2589,
								"name": "default.model"
							}
						},
						{
							"id": 2278,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 186,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2279,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2280,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2281,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2593,
								"name": "default.name"
							}
						},
						{
							"id": 2315,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 421,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2316,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumberField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2633,
								"name": "default.value"
							}
						},
						{
							"id": 2311,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 404,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2312,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1896,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2630,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2629,
								"name": "default.clone"
							}
						},
						{
							"id": 2319,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 448,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2320,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2321,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2638,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2637,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2293,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 326,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2294,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2295,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2609,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2608,
								"name": "default.format"
							}
						},
						{
							"id": 2307,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 397,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2308,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2309,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2310,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2626,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2625,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2296,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 364,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2297,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2298,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2615,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2614,
								"name": "default.normalize"
							}
						},
						{
							"id": 2267,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/IntegerField.ts",
									"line": 9,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2268,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2269,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 2612,
										"name": "default.parse"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 2611,
								"name": "default.parse"
							}
						},
						{
							"id": 2299,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 373,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2300,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2301,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2302,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2618,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2617,
								"name": "default.toJS"
							}
						},
						{
							"id": 2305,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 387,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2306,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2624,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2623,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2264
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2272,
								2273,
								2290,
								2287,
								2282,
								2283,
								2286,
								2285,
								2284,
								2271,
								2270,
								2288,
								2289,
								2263
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2317,
								2303,
								2313,
								2274,
								2278,
								2315
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2311,
								2319,
								2293,
								2307,
								2296,
								2267,
								2299,
								2305
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/IntegerField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2578,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "number"
										}
									]
								}
							],
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2262
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/IntegerField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2322,
			"name": "fields/IntegerRangeField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2323,
					"name": "IntegerRangeField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 2325,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2326,
									"name": "new IntegerRangeField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2327,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"name": "RangeFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2323,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2706,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2705,
								"name": "default.constructor"
							}
						},
						{
							"id": 2329,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 162,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2710,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2330,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 166,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2711,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2347,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 255,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2348,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2349,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2728,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2344,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 240,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1129,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2725,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2339,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 216,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2720,
								"name": "default.blank"
							}
						},
						{
							"id": 2340,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 220,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2721,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2343,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 236,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2724,
								"name": "default.choices"
							}
						},
						{
							"id": 2342,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 230,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2723,
								"name": "default.helpText"
							}
						},
						{
							"id": 2341,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 226,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2722,
								"name": "default.label"
							}
						},
						{
							"id": 2345,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 245,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2726,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2328,
							"name": "separator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
									"line": 17,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2709,
								"name": "default.separator"
							}
						},
						{
							"id": 2346,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 250,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2727,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2324,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/IntegerRangeField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'IntegerRangeField'",
							"overwrites": {
								"type": "reference",
								"id": 2704,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2377,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
								"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 432,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2378,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 995,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2758,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2363,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Get the default value for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 380,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2364,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1900,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2744,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2373,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 412,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2374,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2754,
								"name": "default.isBound"
							}
						},
						{
							"id": 2331,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 169,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2332,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 999,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2333,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2334,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2712,
								"name": "default.model"
							}
						},
						{
							"id": 2335,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 186,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2336,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2337,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2338,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2716,
								"name": "default.name"
							}
						},
						{
							"id": 2375,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 421,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2376,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "RangeField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2756,
								"name": "default.value"
							}
						},
						{
							"id": 2371,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 404,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2372,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1896,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2753,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2752,
								"name": "default.clone"
							}
						},
						{
							"id": 2379,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 448,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2380,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2381,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2761,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2760,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2350,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 326,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2351,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2352,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2732,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2731,
								"name": "default.format"
							}
						},
						{
							"id": 2367,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 397,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2368,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2369,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2370,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2749,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2748,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2356,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 364,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2357,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2358,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2738,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2737,
								"name": "default.normalize"
							}
						},
						{
							"id": 2353,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 335,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2354,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2355,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2735,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2734,
								"name": "default.parse"
							}
						},
						{
							"id": 2359,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 373,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2360,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2361,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2362,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2741,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2740,
								"name": "default.toJS"
							}
						},
						{
							"id": 2365,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 387,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2366,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2747,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2746,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2325
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2329,
								2330,
								2347,
								2344,
								2339,
								2340,
								2343,
								2342,
								2341,
								2345,
								2328,
								2346,
								2324
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2377,
								2363,
								2373,
								2331,
								2335,
								2375
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2371,
								2379,
								2350,
								2367,
								2356,
								2353,
								2359,
								2365
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/IntegerRangeField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2703,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "number"
								}
							],
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2323
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/IntegerRangeField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2382,
			"name": "fields/JsonField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2387,
					"name": "JsonField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"originalName": "default",
					"children": [
						{
							"id": 2389,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2390,
									"name": "new JsonField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2391,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CharFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2387,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1229,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1228,
								"name": "default.constructor"
							}
						},
						{
							"id": 2397,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 162,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1232,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2398,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 166,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1233,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2415,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 255,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2416,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2417,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1250,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2412,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 240,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1129,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1247,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2407,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 216,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1242,
								"name": "default.blank"
							}
						},
						{
							"id": 2408,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 220,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1243,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2411,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 236,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1246,
								"name": "default.choices"
							}
						},
						{
							"id": 2410,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 230,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1245,
								"name": "default.helpText"
							}
						},
						{
							"id": 2409,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 226,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1244,
								"name": "default.label"
							}
						},
						{
							"id": 2396,
							"name": "maxLength",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 18,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1231,
								"name": "default.maxLength"
							}
						},
						{
							"id": 2413,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 245,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1248,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2414,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 250,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1249,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2388,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/JsonField.ts",
									"line": 14,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'JsonField'",
							"overwrites": {
								"type": "reference",
								"id": 1227,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2442,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 432,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2443,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 995,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1280,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2428,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 380,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2429,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1900,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1266,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2438,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 412,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2439,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1276,
								"name": "default.isBound"
							}
						},
						{
							"id": 2399,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 169,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2400,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 999,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2401,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2402,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1234,
								"name": "default.model"
							}
						},
						{
							"id": 2403,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 186,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2404,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2405,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2406,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1238,
								"name": "default.name"
							}
						},
						{
							"id": 2440,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 421,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2441,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1278,
								"name": "default.value"
							}
						},
						{
							"id": 2436,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 404,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2437,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1896,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1275,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1274,
								"name": "default.clone"
							}
						},
						{
							"id": 2444,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 448,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2445,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2446,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1283,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1282,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2418,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 326,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2419,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2420,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1254,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1253,
								"name": "default.format"
							}
						},
						{
							"id": 2432,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 397,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2433,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2434,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2435,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1271,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1270,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2421,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 364,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2422,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2423,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1260,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1259,
								"name": "default.normalize"
							}
						},
						{
							"id": 2392,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/JsonField.ts",
									"line": 15,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2393,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"typeParameter": [
										{
											"id": 2394,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 2395,
											"name": "json",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2383,
												"typeArguments": [
													{
														"type": "reference",
														"id": 2394,
														"name": "T"
													}
												],
												"name": "JSON"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2394,
										"name": "T"
									},
									"overwrites": {
										"type": "reference",
										"id": 1257,
										"name": "default.parse"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1256,
								"name": "default.parse"
							}
						},
						{
							"id": 2424,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 373,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2425,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2426,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2427,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1263,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1262,
								"name": "default.toJS"
							}
						},
						{
							"id": 2430,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 387,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2431,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1269,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1268,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2389
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2397,
								2398,
								2415,
								2412,
								2407,
								2408,
								2411,
								2410,
								2409,
								2396,
								2413,
								2414,
								2388
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2442,
								2428,
								2438,
								2399,
								2403,
								2440
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2436,
								2444,
								2418,
								2432,
								2421,
								2392,
								2424,
								2430
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/JsonField.ts",
							"line": 13,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1226,
							"name": "default"
						}
					]
				},
				{
					"id": 2383,
					"name": "JSON",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/JsonField.ts",
							"line": 3,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 2386,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2384,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 2385,
											"name": " __JSON",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/viewmodel/src/fields/JsonField.ts",
													"line": 3,
													"character": 33
												}
											],
											"type": {
												"type": "reference",
												"id": 2386,
												"name": "T"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												2385
											]
										}
									],
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/fields/JsonField.ts",
											"line": 3,
											"character": 31
										}
									]
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2387
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						2383
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/JsonField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2447,
			"name": "fields/ListField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2448,
					"name": "ListField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "A container field for an array of values",
						"text": "You must pass `childField` which is the underlying field for each value in the\nlist. `ListField` will call `format`, `parse`, and `normalize` on this field for\neach value in the list.\n\nBy default `defaultValue` will be set to an empty array unless `blankAsNull` is\n`true` in which case it will be set to `null`. `normalize` and `parse` also behave\nin the same way (a falsy value passed to these will either return an empty array\nwhen `blankAsNull` is false or null when it is true).\n\n```js\nconst listOfInts = new ListField({ childField: new IntegerField() });\n```\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 2450,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/ListField.ts",
									"line": 27,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2451,
									"name": "new ListField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2452,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										},
										{
											"id": 2453,
											"name": "ParsableType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "reference",
												"id": 2452,
												"name": "T"
											}
										}
									],
									"parameters": [
										{
											"id": 2454,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2455,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 2456,
																	"name": "childField",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "js-packages/@prestojs/viewmodel/src/fields/ListField.ts",
																			"line": 37,
																			"character": 9
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 1896,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 2452,
																				"name": "T"
																			},
																			{
																				"type": "reference",
																				"id": 2453,
																				"name": "ParsableType"
																			},
																			{
																				"type": "reference",
																				"id": 2452,
																				"name": "T"
																			}
																		],
																		"name": "default"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		2456
																	]
																}
															]
														}
													},
													{
														"type": "reference",
														"id": 1828,
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 2452,
																	"name": "T"
																}
															},
															{
																"type": "reference",
																"id": 2452,
																"name": "T"
															}
														],
														"name": "FieldProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2448,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2452,
												"name": "T"
											},
											{
												"type": "reference",
												"id": 2453,
												"name": "ParsableType"
											}
										],
										"name": "default"
									},
									"overwrites": {
										"type": "reference",
										"id": 1899,
										"name": "default.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1898,
								"name": "default.constructor"
							}
						},
						{
							"id": 2471,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 162,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 2452,
									"name": "T"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1904,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2472,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 166,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 2453,
									"name": "ParsableType"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1905,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2489,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 255,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 2452,
											"name": "T"
										}
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2490,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2491,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 2452,
																	"name": "T"
																}
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"id": 2452,
																					"name": "T"
																				}
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1924,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2486,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 240,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1129,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"id": 2452,
										"name": "T"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1921,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2481,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 216,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1916,
								"name": "default.blank"
							}
						},
						{
							"id": 2482,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 220,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1917,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2457,
							"name": "childField",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/ListField.ts",
									"line": 25,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1896,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2452,
										"name": "T"
									},
									{
										"type": "reference",
										"id": 2453,
										"name": "ParsableType"
									},
									{
										"type": "reference",
										"id": 2452,
										"name": "T"
									}
								],
								"name": "default"
							}
						},
						{
							"id": 2485,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 236,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2452,
										"name": "T"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1920,
								"name": "default.choices"
							}
						},
						{
							"id": 2484,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 230,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1919,
								"name": "default.helpText"
							}
						},
						{
							"id": 2483,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 226,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1918,
								"name": "default.label"
							}
						},
						{
							"id": 2487,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 245,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1922,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2488,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 250,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1923,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2449,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/ListField.ts",
									"line": 23,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'ListField'",
							"overwrites": {
								"type": "reference",
								"id": 1897,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2506,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 432,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2507,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 995,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1954,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2496,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 380,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2497,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1900,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1940,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2502,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 412,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2503,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1950,
								"name": "default.isBound"
							}
						},
						{
							"id": 2473,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 169,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2474,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 999,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2475,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2476,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1907,
								"name": "default.model"
							}
						},
						{
							"id": 2477,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 186,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2478,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2479,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2480,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1912,
								"name": "default.name"
							}
						},
						{
							"id": 2504,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 421,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2505,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1952,
								"name": "default.value"
							}
						},
						{
							"id": 2500,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 404,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2501,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1896,
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2452,
													"name": "T"
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2452,
													"name": "T"
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2452,
													"name": "T"
												}
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1949,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1948,
								"name": "default.clone"
							}
						},
						{
							"id": 2508,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 448,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2509,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2510,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1957,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1956,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2458,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/ListField.ts",
									"line": 46,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2459,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Calls `childField.format` on each entry in the passed array"
									},
									"parameters": [
										{
											"id": 2460,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2452,
													"name": "T"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"overwrites": {
										"type": "reference",
										"id": 1928,
										"name": "default.format"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1927,
								"name": "default.format"
							}
						},
						{
							"id": 2467,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/ListField.ts",
									"line": 97,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2468,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2469,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2452,
													"name": "T"
												}
											}
										},
										{
											"id": 2470,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2452,
													"name": "T"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"overwrites": {
										"type": "reference",
										"id": 1945,
										"name": "default.isEqual"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1944,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2464,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/ListField.ts",
									"line": 80,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2465,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Calls `childField.parse` on each entry in the passed array",
										"text": "If `value` is falsy or an empty array and `blankAsNull` is true\nit will return `null` or if `blankAsNull` is false then it\nwill return an empty array.\n"
									},
									"parameters": [
										{
											"id": 2466,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2452,
													"name": "T"
												}
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 1934,
										"name": "default.normalize"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1933,
								"name": "default.normalize"
							}
						},
						{
							"id": 2461,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/ListField.ts",
									"line": 60,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2462,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Calls `childField.parse` on each entry in the passed array",
										"text": "If `value` is falsy or an empty array and `blankAsNull` is true\nit will return `null` or if `blankAsNull` is false then it\nwill return an empty array.\n"
									},
									"parameters": [
										{
											"id": 2463,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 2453,
															"name": "ParsableType"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2452,
													"name": "T"
												}
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 1931,
										"name": "default.parse"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1930,
								"name": "default.parse"
							}
						},
						{
							"id": 2492,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 373,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2493,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2494,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2452,
													"name": "T"
												}
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2495,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1937,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1936,
								"name": "default.toJS"
							}
						},
						{
							"id": 2498,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 387,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2499,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1943,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1942,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2450
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2471,
								2472,
								2489,
								2486,
								2481,
								2482,
								2457,
								2485,
								2484,
								2483,
								2487,
								2488,
								2449
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2506,
								2496,
								2502,
								2473,
								2477,
								2504
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2500,
								2508,
								2458,
								2467,
								2464,
								2461,
								2492,
								2498
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/ListField.ts",
							"line": 22,
							"character": 21
						}
					],
					"typeParameter": [
						{
							"id": 2511,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 2512,
							"name": "ParsableType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "reference",
								"id": 2452,
								"name": "T"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1896,
							"typeArguments": [
								{
									"type": "array",
									"elementType": {
										"type": "reference",
										"id": 2452,
										"name": "T"
									}
								},
								{
									"type": "array",
									"elementType": {
										"type": "reference",
										"id": 2453,
										"name": "ParsableType"
									}
								},
								{
									"type": "reference",
									"id": 2452,
									"name": "T"
								}
							],
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2448
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/ListField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2513,
			"name": "fields/NullableBooleanField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2514,
					"name": "NullableBooleanField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Field for Boolean type values with Null being a valid option. Count both undefined and null as null instead of False.",
						"text": "Follows standard javascript Truthy and Falsy definition except undefined and null.\n\nSee also: [BooleanField](doc:BooleanField).\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 2516,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2517,
									"name": "new NullableBooleanField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2518,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1828,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "FieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2514,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1899,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1898,
								"name": "default.constructor"
							}
						},
						{
							"id": 2522,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 162,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1904,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2523,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 166,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1905,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2540,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 255,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2541,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2542,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "boolean"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1924,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2537,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 240,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1129,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1921,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2532,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 216,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1916,
								"name": "default.blank"
							}
						},
						{
							"id": 2533,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 220,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1917,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2536,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 236,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1920,
								"name": "default.choices"
							}
						},
						{
							"id": 2535,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 230,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1919,
								"name": "default.helpText"
							}
						},
						{
							"id": 2534,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 226,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1918,
								"name": "default.label"
							}
						},
						{
							"id": 2538,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 245,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1922,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2539,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 250,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1923,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2515,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NullableBooleanField.ts",
									"line": 14,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'NullableBooleanField'",
							"overwrites": {
								"type": "reference",
								"id": 1897,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2567,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 432,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2568,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 995,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1954,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2553,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 380,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2554,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1900,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1940,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2563,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 412,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2564,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1950,
								"name": "default.isBound"
							}
						},
						{
							"id": 2524,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 169,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2525,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 999,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2526,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2527,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1907,
								"name": "default.model"
							}
						},
						{
							"id": 2528,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 186,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2529,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2530,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2531,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1912,
								"name": "default.name"
							}
						},
						{
							"id": 2565,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 421,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2566,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1952,
								"name": "default.value"
							}
						},
						{
							"id": 2561,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 404,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2562,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1896,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1949,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1948,
								"name": "default.clone"
							}
						},
						{
							"id": 2569,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 448,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2570,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2571,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1957,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1956,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2543,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 326,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2544,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2545,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1928,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1927,
								"name": "default.format"
							}
						},
						{
							"id": 2557,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 397,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2558,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2559,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 2560,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1945,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1944,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2546,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 364,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2547,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2548,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1934,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1933,
								"name": "default.normalize"
							}
						},
						{
							"id": 2519,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NullableBooleanField.ts",
									"line": 15,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2520,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2521,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 1931,
										"name": "default.parse"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1930,
								"name": "default.parse"
							}
						},
						{
							"id": 2549,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 373,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2550,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2551,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2552,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1937,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1936,
								"name": "default.toJS"
							}
						},
						{
							"id": 2555,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 387,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2556,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1943,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1942,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2516
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2522,
								2523,
								2540,
								2537,
								2532,
								2533,
								2536,
								2535,
								2534,
								2538,
								2539,
								2515
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2567,
								2553,
								2563,
								2524,
								2528,
								2565
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2561,
								2569,
								2543,
								2557,
								2546,
								2519,
								2549,
								2555
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/NullableBooleanField.ts",
							"line": 13,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1896,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "boolean"
								}
							],
							"name": "default"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 1167,
							"name": "BooleanField"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2514
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/NullableBooleanField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2572,
			"name": "fields/NumberField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2578,
					"name": "NumberField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Base class for numeric fields",
						"text": "Other numeric fields (IntegerField, DecimalField, FloatField...) will extend this.\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 2580,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
									"line": 27,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2581,
									"name": "new NumberField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2582,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										},
										{
											"id": 2583,
											"name": "ParsableValueT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "reference",
												"id": 2582,
												"name": "T"
											}
										}
									],
									"parameters": [
										{
											"id": 2584,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2573,
												"typeArguments": [
													{
														"type": "reference",
														"id": 2582,
														"name": "T"
													}
												],
												"name": "NumberFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2578,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2582,
												"name": "T"
											},
											{
												"type": "reference",
												"id": 2583,
												"name": "ParsableValueT"
											}
										],
										"name": "default"
									},
									"overwrites": {
										"type": "reference",
										"id": 1899,
										"name": "default.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1898,
								"name": "default.constructor"
							}
						},
						{
							"id": 2587,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 162,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2582,
								"name": "T"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1904,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2588,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 166,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2583,
								"name": "ParsableValueT"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1905,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2605,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 255,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 2582,
										"name": "T"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2606,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2607,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2582,
																"name": "T"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"id": 2582,
																				"name": "T"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1924,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2602,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 240,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1129,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"id": 2582,
										"name": "T"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1921,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2597,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 216,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1916,
								"name": "default.blank"
							}
						},
						{
							"id": 2598,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 220,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1917,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2601,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 236,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2582,
										"name": "T"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1920,
								"name": "default.choices"
							}
						},
						{
							"id": 2600,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 230,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1919,
								"name": "default.helpText"
							}
						},
						{
							"id": 2599,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 226,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1918,
								"name": "default.label"
							}
						},
						{
							"id": 2586,
							"name": "maxValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
									"line": 25,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2585,
							"name": "minValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
									"line": 24,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2603,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 245,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1922,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2604,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 250,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1923,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2579,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
									"line": 23,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'NumberField'",
							"overwrites": {
								"type": "reference",
								"id": 1897,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2635,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 432,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2636,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 995,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1954,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2621,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 380,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2622,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1900,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1940,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2631,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 412,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2632,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1950,
								"name": "default.isBound"
							}
						},
						{
							"id": 2589,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 169,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2590,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 999,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2591,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2592,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1907,
								"name": "default.model"
							}
						},
						{
							"id": 2593,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 186,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2594,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2595,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2596,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1912,
								"name": "default.name"
							}
						},
						{
							"id": 2633,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 421,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2634,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1952,
								"name": "default.value"
							}
						},
						{
							"id": 2629,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 404,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2630,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1896,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2582,
												"name": "T"
											},
											{
												"type": "reference",
												"id": 2582,
												"name": "T"
											},
											{
												"type": "reference",
												"id": 2582,
												"name": "T"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1949,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1948,
								"name": "default.clone"
							}
						},
						{
							"id": 2637,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 448,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2638,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2639,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1957,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1956,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2608,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 326,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2609,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2610,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 2582,
												"name": "T"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1928,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1927,
								"name": "default.format"
							}
						},
						{
							"id": 2625,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 397,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2626,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2627,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2582,
												"name": "T"
											}
										},
										{
											"id": 2628,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2582,
												"name": "T"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1945,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1944,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2614,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 364,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2615,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2616,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 2583,
												"name": "ParsableValueT"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2582,
												"name": "T"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1934,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1933,
								"name": "default.normalize"
							}
						},
						{
							"id": 2611,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 335,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2612,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2613,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 2583,
														"name": "ParsableValueT"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2582,
												"name": "T"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1931,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1930,
								"name": "default.parse"
							}
						},
						{
							"id": 2617,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 373,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2618,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2619,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 2582,
												"name": "T"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2620,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1937,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1936,
								"name": "default.toJS"
							}
						},
						{
							"id": 2623,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 387,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2624,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1943,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1942,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2580
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2587,
								2588,
								2605,
								2602,
								2597,
								2598,
								2601,
								2600,
								2599,
								2586,
								2585,
								2603,
								2604,
								2579
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2635,
								2621,
								2631,
								2589,
								2593,
								2633
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2629,
								2637,
								2608,
								2625,
								2614,
								2611,
								2617,
								2623
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
							"line": 19,
							"character": 21
						}
					],
					"typeParameter": [
						{
							"id": 2640,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 2641,
							"name": "ParsableValueT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "reference",
								"id": 2582,
								"name": "T"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1896,
							"typeArguments": [
								{
									"type": "reference",
									"id": 2582,
									"name": "T"
								},
								{
									"type": "reference",
									"id": 2583,
									"name": "ParsableValueT"
								}
							],
							"name": "default"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 1586,
							"name": "DecimalField"
						},
						{
							"type": "reference",
							"id": 2022,
							"name": "FloatField"
						},
						{
							"type": "reference",
							"id": 2262,
							"name": "IntegerField"
						}
					]
				},
				{
					"id": 2573,
					"name": "NumberFieldProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "expand-properties",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
							"line": 6,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 2577,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"id": 1828,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2577,
										"name": "T"
									}
								],
								"name": "FieldProps"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2574,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 2576,
											"name": "maxValue",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
													"line": 8,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2575,
											"name": "minValue",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
													"line": 7,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												2576,
												2575
											]
										}
									],
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
											"line": 6,
											"character": 50
										}
									]
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2578
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						2573
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/NumberField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2642,
			"name": "fields/PasswordField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2643,
					"name": "PasswordField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 2645,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2646,
									"name": "new PasswordField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2647,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CharFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2643,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1229,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1228,
								"name": "default.constructor"
							}
						},
						{
							"id": 2649,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 162,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1232,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2650,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 166,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1233,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2667,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 255,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2668,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2669,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1250,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2664,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 240,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1129,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1247,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2659,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 216,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1242,
								"name": "default.blank"
							}
						},
						{
							"id": 2660,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 220,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1243,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2663,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 236,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1246,
								"name": "default.choices"
							}
						},
						{
							"id": 2662,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 230,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1245,
								"name": "default.helpText"
							}
						},
						{
							"id": 2661,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 226,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1244,
								"name": "default.label"
							}
						},
						{
							"id": 2648,
							"name": "maxLength",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 18,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1231,
								"name": "default.maxLength"
							}
						},
						{
							"id": 2665,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 245,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1248,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2666,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 250,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1249,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2644,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/PasswordField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'PasswordField'",
							"overwrites": {
								"type": "reference",
								"id": 1227,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2697,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 432,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2698,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 995,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1280,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2683,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 380,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2684,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1900,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1266,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2693,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 412,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2694,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1276,
								"name": "default.isBound"
							}
						},
						{
							"id": 2651,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 169,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2652,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 999,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2653,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2654,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1234,
								"name": "default.model"
							}
						},
						{
							"id": 2655,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 186,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2656,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2657,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2658,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1238,
								"name": "default.name"
							}
						},
						{
							"id": 2695,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 421,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2696,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1278,
								"name": "default.value"
							}
						},
						{
							"id": 2691,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 404,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2692,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1896,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1275,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1274,
								"name": "default.clone"
							}
						},
						{
							"id": 2699,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 448,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2700,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2701,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1283,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1282,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2670,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 326,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2671,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2672,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1254,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1253,
								"name": "default.format"
							}
						},
						{
							"id": 2687,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 397,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2688,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2689,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2690,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1271,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1270,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2676,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 364,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2677,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2678,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1260,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1259,
								"name": "default.normalize"
							}
						},
						{
							"id": 2673,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 335,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2674,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2675,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1257,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1256,
								"name": "default.parse"
							}
						},
						{
							"id": 2679,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 373,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2680,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2681,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2682,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1263,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1262,
								"name": "default.toJS"
							}
						},
						{
							"id": 2685,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 387,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2686,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1269,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1268,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2645
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2649,
								2650,
								2667,
								2664,
								2659,
								2660,
								2663,
								2662,
								2661,
								2648,
								2665,
								2666,
								2644
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2697,
								2683,
								2693,
								2651,
								2655,
								2695
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2691,
								2699,
								2670,
								2687,
								2676,
								2673,
								2679,
								2685
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/PasswordField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1226,
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2643
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/PasswordField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2702,
			"name": "fields/RangeField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2703,
					"name": "RangeField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Base class for range fields (see: https://www.postgresql.org/docs/9.6/rangetypes.html).",
						"text": "Other range based fields (DateTimeRangeField, IntegerRangeField, ...) will extend this.\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 2705,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
									"line": 19,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2706,
									"name": "new RangeField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2707,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 2708,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 2707,
														"name": "T"
													}
												],
												"name": "RangeFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 2703,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2707,
												"name": "T"
											}
										],
										"name": "default"
									},
									"overwrites": {
										"type": "reference",
										"id": 1899,
										"name": "default.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1898,
								"name": "default.constructor"
							}
						},
						{
							"id": 2710,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 162,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2707,
								"name": "T"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1904,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2711,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 166,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2707,
								"name": "T"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1905,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2728,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 255,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 2707,
										"name": "T"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2729,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2730,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2707,
																"name": "T"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"id": 2707,
																				"name": "T"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1924,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2725,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 240,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1129,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"id": 2707,
										"name": "T"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1921,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2720,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 216,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1916,
								"name": "default.blank"
							}
						},
						{
							"id": 2721,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 220,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1917,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2724,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 236,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2707,
										"name": "T"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1920,
								"name": "default.choices"
							}
						},
						{
							"id": 2723,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 230,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1919,
								"name": "default.helpText"
							}
						},
						{
							"id": 2722,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 226,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1918,
								"name": "default.label"
							}
						},
						{
							"id": 2726,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 245,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1922,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2709,
							"name": "separator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
									"line": 17,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2727,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 250,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1923,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2704,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
									"line": 16,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'RangeField'",
							"overwrites": {
								"type": "reference",
								"id": 1897,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2758,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 432,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2759,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 995,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1954,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2744,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 380,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2745,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1900,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1940,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2754,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 412,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2755,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1950,
								"name": "default.isBound"
							}
						},
						{
							"id": 2712,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 169,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2713,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 999,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2714,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2715,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1907,
								"name": "default.model"
							}
						},
						{
							"id": 2716,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 186,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2717,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2718,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2719,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1912,
								"name": "default.name"
							}
						},
						{
							"id": 2756,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 421,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2757,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1952,
								"name": "default.value"
							}
						},
						{
							"id": 2752,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 404,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2753,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1896,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2707,
												"name": "T"
											},
											{
												"type": "reference",
												"id": 2707,
												"name": "T"
											},
											{
												"type": "reference",
												"id": 2707,
												"name": "T"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1949,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1948,
								"name": "default.clone"
							}
						},
						{
							"id": 2760,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 448,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2761,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 2762,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1957,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1956,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2731,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 326,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2732,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2733,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 2707,
												"name": "T"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1928,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1927,
								"name": "default.format"
							}
						},
						{
							"id": 2748,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 397,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2749,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 2750,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2707,
												"name": "T"
											}
										},
										{
											"id": 2751,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2707,
												"name": "T"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1945,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1944,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2737,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 364,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2738,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2739,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 2707,
												"name": "T"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2707,
												"name": "T"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1934,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1933,
								"name": "default.normalize"
							}
						},
						{
							"id": 2734,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 335,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2735,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2736,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 2707,
														"name": "T"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2707,
												"name": "T"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1931,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1930,
								"name": "default.parse"
							}
						},
						{
							"id": 2740,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 373,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2741,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2742,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 2707,
												"name": "T"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2743,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1937,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1936,
								"name": "default.toJS"
							}
						},
						{
							"id": 2746,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 387,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2747,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1943,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1942,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2705
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2710,
								2711,
								2728,
								2725,
								2720,
								2721,
								2724,
								2723,
								2722,
								2726,
								2709,
								2727,
								2704
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2758,
								2744,
								2754,
								2712,
								2716,
								2756
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2752,
								2760,
								2731,
								2748,
								2737,
								2734,
								2740,
								2746
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
							"line": 15,
							"character": 21
						}
					],
					"typeParameter": [
						{
							"id": 2763,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1896,
							"typeArguments": [
								{
									"type": "reference",
									"id": 2707,
									"name": "T"
								}
							],
							"name": "default"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 1407,
							"name": "DateRangeField"
						},
						{
							"type": "reference",
							"id": 1526,
							"name": "DateTimeRangeField"
						},
						{
							"type": "reference",
							"id": 1648,
							"name": "DecimalRangeField"
						},
						{
							"type": "reference",
							"id": 2083,
							"name": "FloatRangeField"
						},
						{
							"type": "reference",
							"id": 2323,
							"name": "IntegerRangeField"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2703
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/RangeField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2764,
			"name": "fields/RelatedViewModelField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2789,
					"name": "BaseRelatedViewModelField",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isAbstract": true
					},
					"comment": {
						"shortText": "We split into RelatedViewModelField (for single records) and ManyRelatedViewModelField (for multiple records)\nmainly to making typing easier.",
						"text": "Use `ManyRelatedViewModelField` if `sourceFieldName` refers to a `ListField` otherwise `RelatedViewModelField`.\n"
					},
					"children": [
						{
							"id": 2791,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 80,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2792,
									"name": "new BaseRelatedViewModelField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2793,
											"name": "TargetViewModelT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"id": 2793,
														"name": "TargetViewModelT"
													}
												],
												"name": "ViewModelConstructor"
											}
										},
										{
											"id": 2794,
											"name": "FieldValueT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 995,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "ViewModelInterface"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"typeArguments": [
																{
																	"type": "reference",
																	"id": 2793,
																	"name": "TargetViewModelT"
																}
															],
															"qualifiedName": "InstanceType",
															"package": "typescript",
															"name": "InstanceType"
														}
													}
												]
											}
										},
										{
											"id": 2795,
											"name": "ParsableValueT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 2793,
														"name": "TargetViewModelT"
													}
												],
												"name": "RelatedViewModelParsableType"
											}
										},
										{
											"id": 2796,
											"name": "SourceFieldNameT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 2797,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 2793,
														"name": "TargetViewModelT"
													},
													{
														"type": "reference",
														"id": 2794,
														"name": "FieldValueT"
													},
													{
														"type": "reference",
														"id": 2796,
														"name": "SourceFieldNameT"
													}
												],
												"name": "RelatedViewModelFieldProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2789,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2793,
												"name": "TargetViewModelT"
											},
											{
												"type": "reference",
												"id": 2794,
												"name": "FieldValueT"
											},
											{
												"type": "reference",
												"id": 2795,
												"name": "ParsableValueT"
											},
											{
												"type": "reference",
												"id": 2796,
												"name": "SourceFieldNameT"
											}
										],
										"name": "BaseRelatedViewModelField"
									},
									"overwrites": {
										"type": "reference",
										"id": 1899,
										"name": "default.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1898,
								"name": "default.constructor"
							}
						},
						{
							"id": 2822,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 162,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2794,
								"name": "FieldValueT"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1904,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 2823,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 166,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2795,
								"name": "ParsableValueT"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1905,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 2803,
							"name": "_cache",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 72,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 740,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2793,
										"name": "TargetViewModelT"
									}
								],
								"name": "default"
							}
						},
						{
							"id": 2840,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 255,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 2794,
										"name": "FieldValueT"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2841,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2842,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 2794,
																"name": "FieldValueT"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"id": 2794,
																				"name": "FieldValueT"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1924,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 2811,
							"name": "_isResolvingDeps",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 119,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2798,
							"name": "_loadTo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 69,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2799,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2800,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 2793,
														"name": "TargetViewModelT"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 2793,
																"name": "TargetViewModelT"
															}
														],
														"qualifiedName": "Promise",
														"package": "typescript",
														"name": "Promise"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 2801,
							"name": "_resolvedTo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 70,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 2793,
								"name": "TargetViewModelT"
							}
						},
						{
							"id": 2802,
							"name": "_resolvingTo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 71,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2793,
										"name": "TargetViewModelT"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						},
						{
							"id": 2837,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 240,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1129,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"id": 2794,
										"name": "FieldValueT"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1921,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 2832,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 216,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1916,
								"name": "default.blank"
							}
						},
						{
							"id": 2833,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 220,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1917,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 2836,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 236,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2794,
										"name": "FieldValueT"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1920,
								"name": "default.choices"
							}
						},
						{
							"id": 2835,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 230,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1919,
								"name": "default.helpText"
							}
						},
						{
							"id": 2834,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 226,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1918,
								"name": "default.label"
							}
						},
						{
							"id": 2838,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 245,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1922,
								"name": "default.readOnly"
							}
						},
						{
							"id": 2805,
							"name": "sourceField",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 74,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 1896,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "default"
							}
						},
						{
							"id": 2804,
							"name": "sourceFieldName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 73,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2796,
								"name": "SourceFieldNameT"
							}
						},
						{
							"id": 2839,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 250,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1923,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 2790,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 211,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"defaultValue": "null",
							"inheritedFrom": {
								"type": "reference",
								"id": 1897,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 2866,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 432,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2867,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 995,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1954,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 2820,
							"name": "cache",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 192,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2821,
									"name": "cache",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 740,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2793,
												"name": "TargetViewModelT"
											}
										],
										"name": "default"
									}
								}
							]
						},
						{
							"id": 2856,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 380,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2857,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1900,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1940,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 2862,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 412,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2863,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1950,
								"name": "default.isBound"
							}
						},
						{
							"id": 2806,
							"name": "many",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 76,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2807,
									"name": "many",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 2824,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 169,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2825,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 999,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2826,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2827,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1907,
								"name": "default.model"
							}
						},
						{
							"id": 2828,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 186,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2829,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2830,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2831,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1912,
								"name": "default.name"
							}
						},
						{
							"id": 2818,
							"name": "to",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 171,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2819,
									"name": "to",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the [ViewModel](doc:viewModelFactory) this related field is to.",
										"text": "If `to` was defined as a function returning a `Promise` then you must call `resolveViewModel`\nand wait for the returned `Promise` to resolve before accessing this otherwise an error will be thrown\n"
									},
									"type": {
										"type": "reference",
										"id": 2793,
										"name": "TargetViewModelT"
									}
								}
							]
						},
						{
							"id": 2864,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 421,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2865,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1952,
								"name": "default.value"
							}
						},
						{
							"id": 2860,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 404,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2861,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1896,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2794,
												"name": "FieldValueT"
											},
											{
												"type": "reference",
												"id": 2794,
												"name": "FieldValueT"
											},
											{
												"type": "reference",
												"id": 2794,
												"name": "FieldValueT"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1949,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1948,
								"name": "default.clone"
							}
						},
						{
							"id": 2808,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 98,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2809,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isPrivate": true
									},
									"comment": {},
									"parameters": [
										{
											"id": 2810,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2793,
												"name": "TargetViewModelT"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"id": 1957,
										"name": "default.contributeToClass"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1956,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 2843,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 326,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2844,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2845,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 2794,
												"name": "FieldValueT"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1928,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1927,
								"name": "default.format"
							}
						},
						{
							"id": 2814,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 161,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2815,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Compares to relations for equality - if the ViewModel has the same data this returns true"
									},
									"parameters": [
										{
											"id": 2816,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2794,
												"name": "FieldValueT"
											}
										},
										{
											"id": 2817,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2794,
												"name": "FieldValueT"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"overwrites": {
										"type": "reference",
										"id": 1945,
										"name": "default.isEqual"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 1944,
								"name": "default.isEqual"
							}
						},
						{
							"id": 2849,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 364,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2850,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 2851,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 2795,
												"name": "ParsableValueT"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2794,
												"name": "FieldValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1934,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1933,
								"name": "default.normalize"
							}
						},
						{
							"id": 2846,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 335,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2847,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2848,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 2795,
														"name": "ParsableValueT"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 2794,
												"name": "FieldValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1931,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1930,
								"name": "default.parse"
							}
						},
						{
							"id": 2812,
							"name": "resolveViewModel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 127,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2813,
									"name": "resolveViewModel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Resolves the ViewModel this field links to. This is necessary as the ViewModel might be a dynamic\nimport that hasn't yet loaded.",
										"text": "This needs to be called manually before `to` can be accessed.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2793,
												"name": "TargetViewModelT"
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2852,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 373,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2853,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 2854,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 2794,
												"name": "FieldValueT"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2855,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1937,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1936,
								"name": "default.toJS"
							}
						},
						{
							"id": 2858,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 387,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2859,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1943,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1942,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2791
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2822,
								2823,
								2803,
								2840,
								2811,
								2798,
								2801,
								2802,
								2837,
								2832,
								2833,
								2836,
								2835,
								2834,
								2838,
								2805,
								2804,
								2839,
								2790
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2866,
								2820,
								2856,
								2862,
								2806,
								2824,
								2828,
								2818,
								2864
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2860,
								2808,
								2843,
								2814,
								2849,
								2846,
								2812,
								2852,
								2858
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
							"line": 62,
							"character": 22
						}
					],
					"typeParameter": [
						{
							"id": 2868,
							"name": "TargetViewModelT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 999,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ViewModelConstructor"
							}
						},
						{
							"id": 2869,
							"name": "FieldValueT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2793,
										"name": "TargetViewModelT"
									}
								],
								"name": "BaseRelatedViewModelValueType"
							}
						},
						{
							"id": 2870,
							"name": "ParsableValueT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2793,
										"name": "TargetViewModelT"
									}
								],
								"name": "RelatedViewModelParsableType"
							}
						},
						{
							"id": 2871,
							"name": "SourceFieldNameT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1896,
							"typeArguments": [
								{
									"type": "reference",
									"id": 2794,
									"name": "FieldValueT"
								},
								{
									"type": "reference",
									"id": 2795,
									"name": "ParsableValueT"
								}
							],
							"name": "default"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 2872,
							"name": "RelatedViewModelField"
						},
						{
							"type": "reference",
							"id": 2944,
							"name": "ManyRelatedViewModelField"
						}
					]
				},
				{
					"id": 2944,
					"name": "ManyRelatedViewModelField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Define a field that contains multiple records from another ViewModel",
						"text": "This behaves the same as [RelatedViewModelField](doc:RelatedViewModelField) but `sourceFieldName`\nmust refer to a [ListField](doc:ListField) and all values are an array instead of a single value.\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"children": [
						{
							"id": 2946,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2947,
									"name": "new ManyRelatedViewModelField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2948,
											"name": "TargetViewModelT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"id": 2948,
														"name": "TargetViewModelT"
													}
												],
												"name": "ViewModelConstructor"
											}
										},
										{
											"id": 2949,
											"name": "SourceFieldNameT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 2950,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 2948,
														"name": "TargetViewModelT"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"typeArguments": [
																{
																	"type": "reference",
																	"id": 2948,
																	"name": "TargetViewModelT"
																}
															],
															"qualifiedName": "InstanceType",
															"package": "typescript",
															"name": "InstanceType"
														}
													},
													{
														"type": "reference",
														"id": 2949,
														"name": "SourceFieldNameT"
													}
												],
												"name": "RelatedViewModelFieldProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2944,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2948,
												"name": "TargetViewModelT"
											},
											{
												"type": "reference",
												"id": 2949,
												"name": "SourceFieldNameT"
											}
										],
										"name": "ManyRelatedViewModelField"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2792,
										"name": "BaseRelatedViewModelField.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2791,
								"name": "BaseRelatedViewModelField.constructor"
							}
						},
						{
							"id": 2975,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 162,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "reference",
											"id": 2948,
											"name": "TargetViewModelT"
										}
									],
									"qualifiedName": "InstanceType",
									"package": "typescript",
									"name": "InstanceType"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2822,
								"name": "BaseRelatedViewModelField.__fieldValueType"
							}
						},
						{
							"id": 2976,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 166,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 933,
									"typeArguments": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "fields"
											},
											"objectType": {
												"type": "reference",
												"id": 2948,
												"name": "TargetViewModelT"
											}
										}
									],
									"name": "FieldDataMappingRaw"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2823,
								"name": "BaseRelatedViewModelField.__parsableValueType"
							}
						},
						{
							"id": 2993,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 255,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"typeArguments": [
												{
													"type": "reference",
													"id": 2948,
													"name": "TargetViewModelT"
												}
											],
											"qualifiedName": "InstanceType",
											"package": "typescript",
											"name": "InstanceType"
										}
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2994,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2995,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "reference",
																			"id": 2948,
																			"name": "TargetViewModelT"
																		}
																	],
																	"qualifiedName": "InstanceType",
																	"package": "typescript",
																	"name": "InstanceType"
																}
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "reference",
																							"id": 2948,
																							"name": "TargetViewModelT"
																						}
																					],
																					"qualifiedName": "InstanceType",
																					"package": "typescript",
																					"name": "InstanceType"
																				}
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2840,
								"name": "BaseRelatedViewModelField._defaultValue"
							}
						},
						{
							"id": 2964,
							"name": "_isResolvingDeps",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 119,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2811,
								"name": "BaseRelatedViewModelField._isResolvingDeps"
							}
						},
						{
							"id": 2990,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 240,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1129,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"typeArguments": [
												{
													"type": "reference",
													"id": 2948,
													"name": "TargetViewModelT"
												}
											],
											"qualifiedName": "InstanceType",
											"package": "typescript",
											"name": "InstanceType"
										}
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2837,
								"name": "BaseRelatedViewModelField.asyncChoices"
							}
						},
						{
							"id": 2985,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 216,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2832,
								"name": "BaseRelatedViewModelField.blank"
							}
						},
						{
							"id": 2986,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 220,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2833,
								"name": "BaseRelatedViewModelField.blankAsNull"
							}
						},
						{
							"id": 2989,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 236,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"typeArguments": [
												{
													"type": "reference",
													"id": 2948,
													"name": "TargetViewModelT"
												}
											],
											"qualifiedName": "InstanceType",
											"package": "typescript",
											"name": "InstanceType"
										}
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2836,
								"name": "BaseRelatedViewModelField.choices"
							}
						},
						{
							"id": 2988,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 230,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2835,
								"name": "BaseRelatedViewModelField.helpText"
							}
						},
						{
							"id": 2987,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 226,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2834,
								"name": "BaseRelatedViewModelField.label"
							}
						},
						{
							"id": 2991,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 245,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2838,
								"name": "BaseRelatedViewModelField.readOnly"
							}
						},
						{
							"id": 2958,
							"name": "sourceField",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 74,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 1896,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2805,
								"name": "BaseRelatedViewModelField.sourceField"
							}
						},
						{
							"id": 2957,
							"name": "sourceFieldName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 73,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2949,
								"name": "SourceFieldNameT"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2804,
								"name": "BaseRelatedViewModelField.sourceFieldName"
							}
						},
						{
							"id": 2992,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 250,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2839,
								"name": "BaseRelatedViewModelField.writeOnly"
							}
						},
						{
							"id": 2945,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 368,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'ManyRelatedViewModelField'",
							"overwrites": {
								"type": "reference",
								"id": 2790,
								"name": "BaseRelatedViewModelField.fieldClassName"
							}
						},
						{
							"id": 3012,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 432,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3013,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 995,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2866,
								"name": "BaseRelatedViewModelField.boundRecord"
							}
						},
						{
							"id": 2973,
							"name": "cache",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 192,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2974,
									"name": "cache",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 740,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2793,
												"name": "TargetViewModelT"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.cache"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2820,
								"name": "BaseRelatedViewModelField.cache"
							}
						},
						{
							"id": 3002,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 380,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3003,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1900,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2856,
								"name": "BaseRelatedViewModelField.defaultValue"
							}
						},
						{
							"id": 3008,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 412,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3009,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2862,
								"name": "BaseRelatedViewModelField.isBound"
							}
						},
						{
							"id": 2959,
							"name": "many",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 76,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2960,
									"name": "many",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.many"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2806,
								"name": "BaseRelatedViewModelField.many"
							}
						},
						{
							"id": 2977,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 169,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2978,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 999,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2979,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2980,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2824,
								"name": "BaseRelatedViewModelField.model"
							}
						},
						{
							"id": 2981,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 186,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2982,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2983,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2984,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2828,
								"name": "BaseRelatedViewModelField.name"
							}
						},
						{
							"id": 2971,
							"name": "to",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 171,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2972,
									"name": "to",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the [ViewModel](doc:viewModelFactory) this related field is to.",
										"text": "If `to` was defined as a function returning a `Promise` then you must call `resolveViewModel`\nand wait for the returned `Promise` to resolve before accessing this otherwise an error will be thrown\n"
									},
									"type": {
										"type": "reference",
										"id": 2793,
										"name": "TargetViewModelT"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.to"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2818,
								"name": "BaseRelatedViewModelField.to"
							}
						},
						{
							"id": 3010,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 421,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3011,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2864,
								"name": "BaseRelatedViewModelField.value"
							}
						},
						{
							"id": 3006,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 404,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3007,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1896,
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"typeArguments": [
														{
															"type": "reference",
															"id": 2948,
															"name": "TargetViewModelT"
														}
													],
													"qualifiedName": "InstanceType",
													"package": "typescript",
													"name": "InstanceType"
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"typeArguments": [
														{
															"type": "reference",
															"id": 2948,
															"name": "TargetViewModelT"
														}
													],
													"qualifiedName": "InstanceType",
													"package": "typescript",
													"name": "InstanceType"
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"typeArguments": [
														{
															"type": "reference",
															"id": 2948,
															"name": "TargetViewModelT"
														}
													],
													"qualifiedName": "InstanceType",
													"package": "typescript",
													"name": "InstanceType"
												}
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2861,
										"name": "BaseRelatedViewModelField.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2860,
								"name": "BaseRelatedViewModelField.clone"
							}
						},
						{
							"id": 2961,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 98,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2962,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isPrivate": true
									},
									"comment": {},
									"parameters": [
										{
											"id": 2963,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2948,
												"name": "TargetViewModelT"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2809,
										"name": "BaseRelatedViewModelField.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2808,
								"name": "BaseRelatedViewModelField.contributeToClass"
							}
						},
						{
							"id": 2996,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 326,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2997,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2998,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"typeArguments": [
														{
															"type": "reference",
															"id": 2948,
															"name": "TargetViewModelT"
														}
													],
													"qualifiedName": "InstanceType",
													"package": "typescript",
													"name": "InstanceType"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2844,
										"name": "BaseRelatedViewModelField.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2843,
								"name": "BaseRelatedViewModelField.format"
							}
						},
						{
							"id": 2967,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 161,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2968,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Compares to relations for equality - if the ViewModel has the same data this returns true"
									},
									"parameters": [
										{
											"id": 2969,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"typeArguments": [
														{
															"type": "reference",
															"id": 2948,
															"name": "TargetViewModelT"
														}
													],
													"qualifiedName": "InstanceType",
													"package": "typescript",
													"name": "InstanceType"
												}
											}
										},
										{
											"id": 2970,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"typeArguments": [
														{
															"type": "reference",
															"id": 2948,
															"name": "TargetViewModelT"
														}
													],
													"qualifiedName": "InstanceType",
													"package": "typescript",
													"name": "InstanceType"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2815,
										"name": "BaseRelatedViewModelField.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2814,
								"name": "BaseRelatedViewModelField.isEqual"
							}
						},
						{
							"id": 2951,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 372,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2952,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Converts a value into the relations [ViewModel](doc:viewModelFactory) instance."
									},
									"parameters": [
										{
											"id": 2953,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"typeArguments": [
												{
													"type": "reference",
													"id": 2948,
													"name": "TargetViewModelT"
												}
											],
											"qualifiedName": "InstanceType",
											"package": "typescript",
											"name": "InstanceType"
										}
									},
									"overwrites": {
										"type": "reference",
										"id": 2850,
										"name": "BaseRelatedViewModelField.normalize"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 2849,
								"name": "BaseRelatedViewModelField.normalize"
							}
						},
						{
							"id": 2999,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 335,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3000,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 3001,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 933,
															"typeArguments": [
																{
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "literal",
																		"value": "fields"
																	},
																	"objectType": {
																		"type": "reference",
																		"id": 2948,
																		"name": "TargetViewModelT"
																	}
																}
															],
															"name": "FieldDataMappingRaw"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"typeArguments": [
														{
															"type": "reference",
															"id": 2948,
															"name": "TargetViewModelT"
														}
													],
													"qualifiedName": "InstanceType",
													"package": "typescript",
													"name": "InstanceType"
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2847,
										"name": "BaseRelatedViewModelField.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2846,
								"name": "BaseRelatedViewModelField.parse"
							}
						},
						{
							"id": 2965,
							"name": "resolveViewModel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 127,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2966,
									"name": "resolveViewModel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Resolves the ViewModel this field links to. This is necessary as the ViewModel might be a dynamic\nimport that hasn't yet loaded.",
										"text": "This needs to be called manually before `to` can be accessed.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2948,
												"name": "TargetViewModelT"
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2813,
										"name": "BaseRelatedViewModelField.resolveViewModel"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2812,
								"name": "BaseRelatedViewModelField.resolveViewModel"
							}
						},
						{
							"id": 2954,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 392,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2955,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Converts the linked record to a plain javascript object"
									},
									"parameters": [
										{
											"id": 2956,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"typeArguments": [
														{
															"type": "reference",
															"id": 2948,
															"name": "TargetViewModelT"
														}
													],
													"qualifiedName": "InstanceType",
													"package": "typescript",
													"name": "InstanceType"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"qualifiedName": "Record",
										"package": "typescript",
										"name": "Record"
									},
									"overwrites": {
										"type": "reference",
										"id": 2853,
										"name": "BaseRelatedViewModelField.toJS"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 2852,
								"name": "BaseRelatedViewModelField.toJS"
							}
						},
						{
							"id": 3004,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 387,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3005,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2859,
										"name": "BaseRelatedViewModelField.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2858,
								"name": "BaseRelatedViewModelField.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2946
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2975,
								2976,
								2993,
								2964,
								2990,
								2985,
								2986,
								2989,
								2988,
								2987,
								2991,
								2958,
								2957,
								2992,
								2945
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3012,
								2973,
								3002,
								3008,
								2959,
								2977,
								2981,
								2971,
								3010
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3006,
								2961,
								2996,
								2967,
								2951,
								2999,
								2965,
								2954,
								3004
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
							"line": 359,
							"character": 13
						}
					],
					"typeParameter": [
						{
							"id": 3014,
							"name": "TargetViewModelT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 999,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ViewModelConstructor"
							}
						},
						{
							"id": 3015,
							"name": "SourceFieldNameT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2789,
							"typeArguments": [
								{
									"type": "reference",
									"id": 2948,
									"name": "TargetViewModelT"
								},
								{
									"type": "array",
									"elementType": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2948,
												"name": "TargetViewModelT"
											}
										],
										"name": "RelatedViewModelValueType"
									}
								},
								{
									"type": "array",
									"elementType": {
										"type": "reference",
										"id": 933,
										"typeArguments": [
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "literal",
													"value": "fields"
												},
												"objectType": {
													"type": "reference",
													"id": 2948,
													"name": "TargetViewModelT"
												}
											}
										],
										"name": "FieldDataMappingRaw"
									}
								},
								{
									"type": "reference",
									"id": 2949,
									"name": "SourceFieldNameT"
								}
							],
							"name": "BaseRelatedViewModelField"
						}
					]
				},
				{
					"id": 2872,
					"name": "RelatedViewModelField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Define a field that references another ViewModel",
						"text": "This requires two things:\n\n1) The ViewModel to reference\n2) The field on the source ViewModel that contains the ID for the relation\n\nIn the following example `User` has a `Group` as a relation. The id for the\nconnected group is stored on the `groupId` field:\n\n```js\nclass Group extends viewModelFactory({\n  name: new CharField(),\n}) {}\nclass User extends viewModelFactory({\n  name: new CharField(),\n  groupId: new IntegerField(),\n  group: new RelatedViewModelField({\n    to: Group,\n    sourceFieldName: 'groupId',\n  }),\n}) {}\n```\n\nYou can then fetch the data - including the relations - from the cache:\n\n```js\nGroup.cache.add({ id: 1, name: 'Staff' });\nUser.cache.add({ id: 1, name: 'Bob', groupId: 1 });\nUser.cache.get(['name', 'group']);\n// { id: 1, name: 'Bob', groupId: 1, group: { id: 1, name: 'Staff' }}\n```\n\nThe `to` field can also be a function to support circular references:\n\n```js\nclass Group extends viewModelFactory({\n  name: new CharField(),\n  ownerId: new IntegerField(),\n  owner: new RelatedViewModelField({\n    to: () => User,\n    sourceFieldName: 'ownerId',\n  }),\n}) {}\nclass User extends viewModelFactory({\n  name: new CharField(),\n  groupId: new IntegerField(),\n  group: new RelatedViewModelField({\n    to: Group,\n    sourceFieldName: 'groupId',\n  }),\n}) {}\n```\n\nYou can query the circular relations as deep as you want:\n\n```js\nGroup.cache.add({ id: 1, name: 'Staff', ownerId: 1 });\nUser.cache.add({ id: 1, name: 'Bob', groupId: 1 });\nUser.cache.get(['name', 'group', ['group', 'owner'], ['group', 'owner', 'group']);\n// {\n//   id: 1,\n//   name: 'Bob',\n//   groupId: 1,\n//   group: {\n//     id: 1,\n//     name: 'Staff',\n//     ownerId: 1,\n//     owner: {\n//       id: 1,\n//       name: 'Bob',\n//       groupId: 1,\n//       group: {\n//         id: 1,\n//         name: 'Staff',\n//         ownerId: 1,\n//       }\n//     },\n//   },\n// }\n```\n\n`to` can also be a function that returns a Promise. This is useful to\nlazy load modules:\n\n```js\nclass Subscription extends viewModelFactory({\n  userId: new IntegerField(),\n  user: new RelatedViewModelField({\n      sourceFieldName: 'userId',\n      to: async () => {\n        const User = await import('./User').default;\n        return User;\n      }\n  })\n}) {}\n```\n\n**NOTE:** When you return a promise you have to call `resolveViewModel` on\nthat field before it's usable:\n\n```js\nawait Subscription.fields.user.resolveViewModel()\n```\n\nFailure to do this will result in an error being thrown the first time it's accessed.\n\nIf you have multiple values use [ManyRelatedViewModelField](doc:ManyRelatedViewModelField) instead.\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"children": [
						{
							"id": 2874,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2875,
									"name": "new RelatedViewModelField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2876,
											"name": "TargetViewModelT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"id": 2876,
														"name": "TargetViewModelT"
													}
												],
												"name": "ViewModelConstructor"
											}
										},
										{
											"id": 2877,
											"name": "SourceFieldNameT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 2878,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 2876,
														"name": "TargetViewModelT"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 2876,
																"name": "TargetViewModelT"
															}
														],
														"qualifiedName": "InstanceType",
														"package": "typescript",
														"name": "InstanceType"
													},
													{
														"type": "reference",
														"id": 2877,
														"name": "SourceFieldNameT"
													}
												],
												"name": "RelatedViewModelFieldProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2872,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2876,
												"name": "TargetViewModelT"
											},
											{
												"type": "reference",
												"id": 2877,
												"name": "SourceFieldNameT"
											}
										],
										"name": "RelatedViewModelField"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2792,
										"name": "BaseRelatedViewModelField.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2791,
								"name": "BaseRelatedViewModelField.constructor"
							}
						},
						{
							"id": 2903,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 162,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2876,
										"name": "TargetViewModelT"
									}
								],
								"qualifiedName": "InstanceType",
								"package": "typescript",
								"name": "InstanceType"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2822,
								"name": "BaseRelatedViewModelField.__fieldValueType"
							}
						},
						{
							"id": 2904,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 166,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 933,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "fields"
										},
										"objectType": {
											"type": "reference",
											"id": 2876,
											"name": "TargetViewModelT"
										}
									}
								],
								"name": "FieldDataMappingRaw"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2823,
								"name": "BaseRelatedViewModelField.__parsableValueType"
							}
						},
						{
							"id": 2921,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 255,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2876,
												"name": "TargetViewModelT"
											}
										],
										"qualifiedName": "InstanceType",
										"package": "typescript",
										"name": "InstanceType"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2922,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2923,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 2876,
																		"name": "TargetViewModelT"
																	}
																],
																"qualifiedName": "InstanceType",
																"package": "typescript",
																"name": "InstanceType"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"id": 2876,
																						"name": "TargetViewModelT"
																					}
																				],
																				"qualifiedName": "InstanceType",
																				"package": "typescript",
																				"name": "InstanceType"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2840,
								"name": "BaseRelatedViewModelField._defaultValue"
							}
						},
						{
							"id": 2892,
							"name": "_isResolvingDeps",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 119,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2811,
								"name": "BaseRelatedViewModelField._isResolvingDeps"
							}
						},
						{
							"id": 2918,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 240,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1129,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2876,
												"name": "TargetViewModelT"
											}
										],
										"qualifiedName": "InstanceType",
										"package": "typescript",
										"name": "InstanceType"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2837,
								"name": "BaseRelatedViewModelField.asyncChoices"
							}
						},
						{
							"id": 2913,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 216,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2832,
								"name": "BaseRelatedViewModelField.blank"
							}
						},
						{
							"id": 2914,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 220,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2833,
								"name": "BaseRelatedViewModelField.blankAsNull"
							}
						},
						{
							"id": 2917,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 236,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2876,
												"name": "TargetViewModelT"
											}
										],
										"qualifiedName": "InstanceType",
										"package": "typescript",
										"name": "InstanceType"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2836,
								"name": "BaseRelatedViewModelField.choices"
							}
						},
						{
							"id": 2916,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 230,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2835,
								"name": "BaseRelatedViewModelField.helpText"
							}
						},
						{
							"id": 2915,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 226,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2834,
								"name": "BaseRelatedViewModelField.label"
							}
						},
						{
							"id": 2919,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 245,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2838,
								"name": "BaseRelatedViewModelField.readOnly"
							}
						},
						{
							"id": 2886,
							"name": "sourceField",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 74,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 1896,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2805,
								"name": "BaseRelatedViewModelField.sourceField"
							}
						},
						{
							"id": 2885,
							"name": "sourceFieldName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 73,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2877,
								"name": "SourceFieldNameT"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2804,
								"name": "BaseRelatedViewModelField.sourceFieldName"
							}
						},
						{
							"id": 2920,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 250,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2839,
								"name": "BaseRelatedViewModelField.writeOnly"
							}
						},
						{
							"id": 2873,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 322,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'RelatedViewModelField'",
							"overwrites": {
								"type": "reference",
								"id": 2790,
								"name": "BaseRelatedViewModelField.fieldClassName"
							}
						},
						{
							"id": 2940,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 432,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2941,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 995,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2866,
								"name": "BaseRelatedViewModelField.boundRecord"
							}
						},
						{
							"id": 2901,
							"name": "cache",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 192,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2902,
									"name": "cache",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 740,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2793,
												"name": "TargetViewModelT"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.cache"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2820,
								"name": "BaseRelatedViewModelField.cache"
							}
						},
						{
							"id": 2930,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 380,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2931,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1900,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2856,
								"name": "BaseRelatedViewModelField.defaultValue"
							}
						},
						{
							"id": 2936,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 412,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2937,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2862,
								"name": "BaseRelatedViewModelField.isBound"
							}
						},
						{
							"id": 2887,
							"name": "many",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 76,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2888,
									"name": "many",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.many"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2806,
								"name": "BaseRelatedViewModelField.many"
							}
						},
						{
							"id": 2905,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 169,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2906,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 999,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 2907,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2908,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2824,
								"name": "BaseRelatedViewModelField.model"
							}
						},
						{
							"id": 2909,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 186,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2910,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 2911,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2912,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2828,
								"name": "BaseRelatedViewModelField.name"
							}
						},
						{
							"id": 2899,
							"name": "to",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 171,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 2900,
									"name": "to",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the [ViewModel](doc:viewModelFactory) this related field is to.",
										"text": "If `to` was defined as a function returning a `Promise` then you must call `resolveViewModel`\nand wait for the returned `Promise` to resolve before accessing this otherwise an error will be thrown\n"
									},
									"type": {
										"type": "reference",
										"id": 2793,
										"name": "TargetViewModelT"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.to"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2818,
								"name": "BaseRelatedViewModelField.to"
							}
						},
						{
							"id": 2938,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 421,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 2939,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseRelatedViewModelField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2864,
								"name": "BaseRelatedViewModelField.value"
							}
						},
						{
							"id": 2934,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 404,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2935,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1896,
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 2876,
														"name": "TargetViewModelT"
													}
												],
												"qualifiedName": "InstanceType",
												"package": "typescript",
												"name": "InstanceType"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 2876,
														"name": "TargetViewModelT"
													}
												],
												"qualifiedName": "InstanceType",
												"package": "typescript",
												"name": "InstanceType"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 2876,
														"name": "TargetViewModelT"
													}
												],
												"qualifiedName": "InstanceType",
												"package": "typescript",
												"name": "InstanceType"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2861,
										"name": "BaseRelatedViewModelField.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2860,
								"name": "BaseRelatedViewModelField.clone"
							}
						},
						{
							"id": 2889,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 98,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2890,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isPrivate": true
									},
									"comment": {},
									"parameters": [
										{
											"id": 2891,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2876,
												"name": "TargetViewModelT"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2809,
										"name": "BaseRelatedViewModelField.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2808,
								"name": "BaseRelatedViewModelField.contributeToClass"
							}
						},
						{
							"id": 2924,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 326,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2925,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 2926,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 2876,
														"name": "TargetViewModelT"
													}
												],
												"qualifiedName": "InstanceType",
												"package": "typescript",
												"name": "InstanceType"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2844,
										"name": "BaseRelatedViewModelField.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2843,
								"name": "BaseRelatedViewModelField.format"
							}
						},
						{
							"id": 2895,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 161,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2896,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Compares to relations for equality - if the ViewModel has the same data this returns true"
									},
									"parameters": [
										{
											"id": 2897,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 2876,
														"name": "TargetViewModelT"
													}
												],
												"qualifiedName": "InstanceType",
												"package": "typescript",
												"name": "InstanceType"
											}
										},
										{
											"id": 2898,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 2876,
														"name": "TargetViewModelT"
													}
												],
												"qualifiedName": "InstanceType",
												"package": "typescript",
												"name": "InstanceType"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2815,
										"name": "BaseRelatedViewModelField.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2814,
								"name": "BaseRelatedViewModelField.isEqual"
							}
						},
						{
							"id": 2879,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 326,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2880,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Converts a value into the relations [ViewModel](doc:viewModelFactory) instance."
									},
									"parameters": [
										{
											"id": 2881,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2876,
												"name": "TargetViewModelT"
											}
										],
										"qualifiedName": "InstanceType",
										"package": "typescript",
										"name": "InstanceType"
									},
									"overwrites": {
										"type": "reference",
										"id": 2850,
										"name": "BaseRelatedViewModelField.normalize"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 2849,
								"name": "BaseRelatedViewModelField.normalize"
							}
						},
						{
							"id": 2927,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 335,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2928,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 2929,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 933,
														"typeArguments": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "fields"
																},
																"objectType": {
																	"type": "reference",
																	"id": 2876,
																	"name": "TargetViewModelT"
																}
															}
														],
														"name": "FieldDataMappingRaw"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 2876,
														"name": "TargetViewModelT"
													}
												],
												"qualifiedName": "InstanceType",
												"package": "typescript",
												"name": "InstanceType"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2847,
										"name": "BaseRelatedViewModelField.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2846,
								"name": "BaseRelatedViewModelField.parse"
							}
						},
						{
							"id": 2893,
							"name": "resolveViewModel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 127,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2894,
									"name": "resolveViewModel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Resolves the ViewModel this field links to. This is necessary as the ViewModel might be a dynamic\nimport that hasn't yet loaded.",
										"text": "This needs to be called manually before `to` can be accessed.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2876,
												"name": "TargetViewModelT"
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2813,
										"name": "BaseRelatedViewModelField.resolveViewModel"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2812,
								"name": "BaseRelatedViewModelField.resolveViewModel"
							}
						},
						{
							"id": 2882,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 339,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2883,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Converts the linked record to a plain javascript object"
									},
									"parameters": [
										{
											"id": 2884,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 2876,
														"name": "TargetViewModelT"
													}
												],
												"qualifiedName": "InstanceType",
												"package": "typescript",
												"name": "InstanceType"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"qualifiedName": "Record",
										"package": "typescript",
										"name": "Record"
									},
									"overwrites": {
										"type": "reference",
										"id": 2853,
										"name": "BaseRelatedViewModelField.toJS"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 2852,
								"name": "BaseRelatedViewModelField.toJS"
							}
						},
						{
							"id": 2932,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 387,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2933,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2859,
										"name": "BaseRelatedViewModelField.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2858,
								"name": "BaseRelatedViewModelField.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2874
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2903,
								2904,
								2921,
								2892,
								2918,
								2913,
								2914,
								2917,
								2916,
								2915,
								2919,
								2886,
								2885,
								2920,
								2873
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2940,
								2901,
								2930,
								2936,
								2887,
								2905,
								2909,
								2899,
								2938
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2934,
								2889,
								2924,
								2895,
								2879,
								2927,
								2893,
								2882,
								2932
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
							"line": 313,
							"character": 13
						}
					],
					"typeParameter": [
						{
							"id": 2942,
							"name": "TargetViewModelT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 999,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ViewModelConstructor"
							}
						},
						{
							"id": 2943,
							"name": "SourceFieldNameT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2789,
							"typeArguments": [
								{
									"type": "reference",
									"id": 2876,
									"name": "TargetViewModelT"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "reference",
											"id": 2876,
											"name": "TargetViewModelT"
										}
									],
									"name": "RelatedViewModelValueType"
								},
								{
									"type": "reference",
									"id": 933,
									"typeArguments": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "fields"
											},
											"objectType": {
												"type": "reference",
												"id": 2876,
												"name": "TargetViewModelT"
											}
										}
									],
									"name": "FieldDataMappingRaw"
								},
								{
									"type": "reference",
									"id": 2877,
									"name": "SourceFieldNameT"
								}
							],
							"name": "BaseRelatedViewModelField"
						}
					]
				},
				{
					"id": 2765,
					"name": "UnresolvedRelatedViewModelFieldError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 2775,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 47,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2776,
									"name": "new UnresolvedRelatedViewModelFieldError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2777,
											"name": "TargetViewModelT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"id": 2777,
														"name": "TargetViewModelT"
													}
												],
												"name": "ViewModelConstructor"
											}
										},
										{
											"id": 2778,
											"name": "FieldValueT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 995,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "ViewModelInterface"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"typeArguments": [
																{
																	"type": "reference",
																	"id": 2777,
																	"name": "TargetViewModelT"
																}
															],
															"qualifiedName": "InstanceType",
															"package": "typescript",
															"name": "InstanceType"
														}
													}
												]
											}
										},
										{
											"id": 2779,
											"name": "ParsableValueT",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 2777,
														"name": "TargetViewModelT"
													}
												],
												"name": "RelatedViewModelParsableType"
											}
										}
									],
									"parameters": [
										{
											"id": 2780,
											"name": "field",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2789,
												"typeArguments": [
													{
														"type": "reference",
														"id": 2777,
														"name": "TargetViewModelT"
													},
													{
														"type": "reference",
														"id": 2778,
														"name": "FieldValueT"
													},
													{
														"type": "reference",
														"id": 2779,
														"name": "ParsableValueT"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "BaseRelatedViewModelField"
											}
										},
										{
											"id": 2781,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2765,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2777,
												"name": "TargetViewModelT"
											},
											{
												"type": "reference",
												"id": 2778,
												"name": "FieldValueT"
											},
											{
												"type": "reference",
												"id": 2779,
												"name": "ParsableValueT"
											}
										],
										"name": "UnresolvedRelatedViewModelFieldError"
									},
									"overwrites": {
										"type": "reference",
										"name": "Error.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Error.constructor"
							}
						},
						{
							"id": 2782,
							"name": "field",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
									"line": 46,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2789,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2777,
										"name": "TargetViewModelT"
									},
									{
										"type": "reference",
										"id": 2778,
										"name": "FieldValueT"
									},
									{
										"type": "reference",
										"id": 2779,
										"name": "ParsableValueT"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "BaseRelatedViewModelField"
							}
						},
						{
							"id": 2784,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1023,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.message"
							}
						},
						{
							"id": 2783,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1022,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.name"
							}
						},
						{
							"id": 2785,
							"name": "stack",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1024,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.stack"
							}
						},
						{
							"id": 2774,
							"name": "stackTraceLimit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/node_modules/@types/node/globals.d.ts",
									"line": 117,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.stackTraceLimit"
							}
						},
						{
							"id": 2766,
							"name": "captureStackTrace",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 2767,
									"name": "captureStackTrace",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Create .stack property on a target object"
									},
									"parameters": [
										{
											"id": 2768,
											"name": "targetObject",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 2769,
											"name": "constructorOpt",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Function",
												"package": "typescript",
												"name": "Function"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Error.captureStackTrace"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.captureStackTrace"
							}
						},
						{
							"id": 2770,
							"name": "prepareStackTrace",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/node_modules/@types/node/globals.d.ts",
									"line": 115,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 2771,
									"name": "prepareStackTrace",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Optional override for formatting stack traces",
										"tags": [
											{
												"tag": "see",
												"text": "https://github.com/v8/v8/wiki/Stack%20Trace%20API#customizing-stack-traces\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2772,
											"name": "err",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Error",
												"package": "typescript",
												"name": "Error"
											}
										},
										{
											"id": 2773,
											"name": "stackTraces",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"qualifiedName": "NodeJS.CallSite",
													"package": "@types/node",
													"name": "CallSite"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Error.prepareStackTrace"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.prepareStackTrace"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2775
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2782,
								2784,
								2783,
								2785,
								2774
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2766,
								2770
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
							"line": 41,
							"character": 13
						}
					],
					"typeParameter": [
						{
							"id": 2786,
							"name": "TargetViewModelT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 999,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ViewModelConstructor"
							}
						},
						{
							"id": 2787,
							"name": "FieldValueT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2777,
										"name": "TargetViewModelT"
									}
								],
								"name": "BaseRelatedViewModelValueType"
							}
						},
						{
							"id": 2788,
							"name": "ParsableValueT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2777,
										"name": "TargetViewModelT"
									}
								],
								"name": "RelatedViewModelParsableType"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Error",
							"package": "typescript",
							"name": "Error"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2789,
						2944,
						2872,
						2765
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/RelatedViewModelField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3016,
			"name": "fields/SlugField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3017,
					"name": "SlugField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 3019,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3020,
									"name": "new SlugField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3021,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CharFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 3017,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1229,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1228,
								"name": "default.constructor"
							}
						},
						{
							"id": 3023,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 162,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1232,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 3024,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 166,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1233,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 3041,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 255,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3042,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3043,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1250,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 3038,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 240,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1129,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1247,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 3033,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 216,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1242,
								"name": "default.blank"
							}
						},
						{
							"id": 3034,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 220,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1243,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 3037,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 236,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1246,
								"name": "default.choices"
							}
						},
						{
							"id": 3036,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 230,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1245,
								"name": "default.helpText"
							}
						},
						{
							"id": 3035,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 226,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1244,
								"name": "default.label"
							}
						},
						{
							"id": 3022,
							"name": "maxLength",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 18,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1231,
								"name": "default.maxLength"
							}
						},
						{
							"id": 3039,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 245,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1248,
								"name": "default.readOnly"
							}
						},
						{
							"id": 3040,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 250,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1249,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 3018,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/SlugField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'SlugField'",
							"overwrites": {
								"type": "reference",
								"id": 1227,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 3071,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 432,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3072,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 995,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1280,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 3057,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 380,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3058,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1900,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1266,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 3067,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 412,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3068,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1276,
								"name": "default.isBound"
							}
						},
						{
							"id": 3025,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 169,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3026,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 999,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 3027,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3028,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1234,
								"name": "default.model"
							}
						},
						{
							"id": 3029,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 186,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3030,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 3031,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3032,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1238,
								"name": "default.name"
							}
						},
						{
							"id": 3069,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 421,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3070,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1278,
								"name": "default.value"
							}
						},
						{
							"id": 3065,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 404,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3066,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1896,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1275,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1274,
								"name": "default.clone"
							}
						},
						{
							"id": 3073,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 448,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3074,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 3075,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1283,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1282,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 3044,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 326,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3045,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 3046,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1254,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1253,
								"name": "default.format"
							}
						},
						{
							"id": 3061,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 397,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3062,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 3063,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3064,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1271,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1270,
								"name": "default.isEqual"
							}
						},
						{
							"id": 3050,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 364,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3051,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 3052,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1260,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1259,
								"name": "default.normalize"
							}
						},
						{
							"id": 3047,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 335,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3048,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 3049,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1257,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1256,
								"name": "default.parse"
							}
						},
						{
							"id": 3053,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 373,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3054,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 3055,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3056,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1263,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1262,
								"name": "default.toJS"
							}
						},
						{
							"id": 3059,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 387,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3060,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1269,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1268,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3019
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3023,
								3024,
								3041,
								3038,
								3033,
								3034,
								3037,
								3036,
								3035,
								3022,
								3039,
								3040,
								3018
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3071,
								3057,
								3067,
								3025,
								3029,
								3069
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3065,
								3073,
								3044,
								3061,
								3050,
								3047,
								3053,
								3059
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/SlugField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1226,
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3017
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/SlugField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3076,
			"name": "fields/TextField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3077,
					"name": "TextField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 3079,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3080,
									"name": "new TextField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3081,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CharFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 3077,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1229,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1228,
								"name": "default.constructor"
							}
						},
						{
							"id": 3083,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 162,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1232,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 3084,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 166,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1233,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 3101,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 255,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3102,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3103,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1250,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 3098,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 240,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1129,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1247,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 3093,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 216,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1242,
								"name": "default.blank"
							}
						},
						{
							"id": 3094,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 220,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1243,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 3097,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 236,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1246,
								"name": "default.choices"
							}
						},
						{
							"id": 3096,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 230,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1245,
								"name": "default.helpText"
							}
						},
						{
							"id": 3095,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 226,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1244,
								"name": "default.label"
							}
						},
						{
							"id": 3082,
							"name": "maxLength",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 18,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1231,
								"name": "default.maxLength"
							}
						},
						{
							"id": 3099,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 245,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1248,
								"name": "default.readOnly"
							}
						},
						{
							"id": 3100,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 250,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1249,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 3078,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/TextField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'TextField'",
							"overwrites": {
								"type": "reference",
								"id": 1227,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 3131,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 432,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3132,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 995,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1280,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 3117,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 380,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3118,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1900,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1266,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 3127,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 412,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3128,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1276,
								"name": "default.isBound"
							}
						},
						{
							"id": 3085,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 169,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3086,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 999,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 3087,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3088,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1234,
								"name": "default.model"
							}
						},
						{
							"id": 3089,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 186,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3090,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 3091,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3092,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1238,
								"name": "default.name"
							}
						},
						{
							"id": 3129,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 421,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3130,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1278,
								"name": "default.value"
							}
						},
						{
							"id": 3125,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 404,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3126,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1896,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1275,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1274,
								"name": "default.clone"
							}
						},
						{
							"id": 3133,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 448,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3134,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 3135,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1283,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1282,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 3104,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 326,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3105,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 3106,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1254,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1253,
								"name": "default.format"
							}
						},
						{
							"id": 3121,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 397,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3122,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 3123,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3124,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1271,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1270,
								"name": "default.isEqual"
							}
						},
						{
							"id": 3110,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 364,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3111,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 3112,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1260,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1259,
								"name": "default.normalize"
							}
						},
						{
							"id": 3107,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 335,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3108,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 3109,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1257,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1256,
								"name": "default.parse"
							}
						},
						{
							"id": 3113,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 373,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3114,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 3115,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3116,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1263,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1262,
								"name": "default.toJS"
							}
						},
						{
							"id": 3119,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 387,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3120,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1269,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1268,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3079
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3083,
								3084,
								3101,
								3098,
								3093,
								3094,
								3097,
								3096,
								3095,
								3082,
								3099,
								3100,
								3078
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3131,
								3117,
								3127,
								3085,
								3089,
								3129
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3125,
								3133,
								3104,
								3121,
								3110,
								3107,
								3113,
								3119
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/TextField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1226,
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3077
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/TextField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3136,
			"name": "fields/TimeField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3137,
					"name": "TimeField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Time Field.",
						"text": "String based: Native javascript Date does not have a nice way to describe a time-only object. Make sure any third party library of your choice like MomentJS handles this correctly.\n",
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 3139,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3140,
									"name": "new TimeField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3141,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1828,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "FieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 3137,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1899,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1898,
								"name": "default.constructor"
							}
						},
						{
							"id": 3142,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 162,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1904,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 3143,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 166,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1905,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 3160,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 255,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3161,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3162,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1924,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 3157,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 240,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1129,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1921,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 3152,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 216,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1916,
								"name": "default.blank"
							}
						},
						{
							"id": 3153,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 220,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1917,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 3156,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 236,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1920,
								"name": "default.choices"
							}
						},
						{
							"id": 3155,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 230,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1919,
								"name": "default.helpText"
							}
						},
						{
							"id": 3154,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 226,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1918,
								"name": "default.label"
							}
						},
						{
							"id": 3158,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 245,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1922,
								"name": "default.readOnly"
							}
						},
						{
							"id": 3159,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 250,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1923,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 3138,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/TimeField.ts",
									"line": 12,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'TimeField'",
							"overwrites": {
								"type": "reference",
								"id": 1897,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 3190,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 432,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3191,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 995,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1954,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 3176,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 380,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3177,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1900,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1940,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 3186,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 412,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3187,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1950,
								"name": "default.isBound"
							}
						},
						{
							"id": 3144,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 169,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3145,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 999,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 3146,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3147,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1907,
								"name": "default.model"
							}
						},
						{
							"id": 3148,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 186,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3149,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 3150,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3151,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1912,
								"name": "default.name"
							}
						},
						{
							"id": 3188,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 421,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3189,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Field.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1952,
								"name": "default.value"
							}
						},
						{
							"id": 3184,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 404,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3185,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1896,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1949,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1948,
								"name": "default.clone"
							}
						},
						{
							"id": 3192,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 448,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3193,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 3194,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1957,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1956,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 3163,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 326,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3164,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 3165,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1928,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1927,
								"name": "default.format"
							}
						},
						{
							"id": 3180,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 397,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3181,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 3182,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3183,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1945,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1944,
								"name": "default.isEqual"
							}
						},
						{
							"id": 3169,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 364,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3170,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 3171,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1934,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1933,
								"name": "default.normalize"
							}
						},
						{
							"id": 3166,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 335,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3167,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 3168,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1931,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1930,
								"name": "default.parse"
							}
						},
						{
							"id": 3172,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 373,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3173,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 3174,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3175,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1937,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1936,
								"name": "default.toJS"
							}
						},
						{
							"id": 3178,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 387,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3179,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1943,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1942,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3139
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3142,
								3143,
								3160,
								3157,
								3152,
								3153,
								3156,
								3155,
								3154,
								3158,
								3159,
								3138
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3190,
								3176,
								3186,
								3144,
								3148,
								3188
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3184,
								3192,
								3163,
								3180,
								3169,
								3166,
								3172,
								3178
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/TimeField.ts",
							"line": 11,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1896,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "string"
								}
							],
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3137
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/TimeField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3195,
			"name": "fields/URLField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3196,
					"name": "URLField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 3198,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3199,
									"name": "new URLField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3200,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CharFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 3196,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1229,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1228,
								"name": "default.constructor"
							}
						},
						{
							"id": 3202,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 162,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1232,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 3203,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 166,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1233,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 3220,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 255,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3221,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3222,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1250,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 3217,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 240,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1129,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1247,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 3212,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 216,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1242,
								"name": "default.blank"
							}
						},
						{
							"id": 3213,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 220,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1243,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 3216,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 236,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1246,
								"name": "default.choices"
							}
						},
						{
							"id": 3215,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 230,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1245,
								"name": "default.helpText"
							}
						},
						{
							"id": 3214,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 226,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1244,
								"name": "default.label"
							}
						},
						{
							"id": 3201,
							"name": "maxLength",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 18,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1231,
								"name": "default.maxLength"
							}
						},
						{
							"id": 3218,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 245,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1248,
								"name": "default.readOnly"
							}
						},
						{
							"id": 3219,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 250,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1249,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 3197,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/URLField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'URLField'",
							"overwrites": {
								"type": "reference",
								"id": 1227,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 3250,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 432,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3251,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 995,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1280,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 3236,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 380,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3237,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1900,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1266,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 3246,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 412,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3247,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1276,
								"name": "default.isBound"
							}
						},
						{
							"id": 3204,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 169,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3205,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 999,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 3206,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3207,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1234,
								"name": "default.model"
							}
						},
						{
							"id": 3208,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 186,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3209,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 3210,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3211,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1238,
								"name": "default.name"
							}
						},
						{
							"id": 3248,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 421,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3249,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1278,
								"name": "default.value"
							}
						},
						{
							"id": 3244,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 404,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3245,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1896,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1275,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1274,
								"name": "default.clone"
							}
						},
						{
							"id": 3252,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 448,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3253,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 3254,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1283,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1282,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 3223,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 326,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3224,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 3225,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1254,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1253,
								"name": "default.format"
							}
						},
						{
							"id": 3240,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 397,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3241,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 3242,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3243,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1271,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1270,
								"name": "default.isEqual"
							}
						},
						{
							"id": 3229,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 364,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3230,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 3231,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1260,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1259,
								"name": "default.normalize"
							}
						},
						{
							"id": 3226,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 335,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3227,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 3228,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1257,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1256,
								"name": "default.parse"
							}
						},
						{
							"id": 3232,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 373,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3233,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 3234,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3235,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1263,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1262,
								"name": "default.toJS"
							}
						},
						{
							"id": 3238,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 387,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3239,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1269,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1268,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3198
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3202,
								3203,
								3220,
								3217,
								3212,
								3213,
								3216,
								3215,
								3214,
								3201,
								3218,
								3219,
								3197
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3250,
								3236,
								3246,
								3204,
								3208,
								3248
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3244,
								3252,
								3223,
								3240,
								3229,
								3226,
								3232,
								3238
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/URLField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1226,
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3196
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/URLField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3255,
			"name": "fields/UUIDField",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3256,
					"name": "UUIDField",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "extract-docs",
								"text": ""
							},
							{
								"tag": "menu-group",
								"text": "Fields\n"
							}
						]
					},
					"originalName": "default",
					"children": [
						{
							"id": 3258,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3259,
									"name": "new UUIDField",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3260,
											"name": "values",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CharFieldProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 3256,
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1229,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1228,
								"name": "default.constructor"
							}
						},
						{
							"id": 3262,
							"name": "__fieldValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 162,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1232,
								"name": "default.__fieldValueType"
							}
						},
						{
							"id": 3263,
							"name": "__parsableValueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 166,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1233,
								"name": "default.__parsableValueType"
							}
						},
						{
							"id": 3280,
							"name": "_defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 255,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3281,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3282,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1250,
								"name": "default._defaultValue"
							}
						},
						{
							"id": 3277,
							"name": "asyncChoices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Async choices for this field."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 240,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1129,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "AsyncChoicesInterface"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1247,
								"name": "default.asyncChoices"
							}
						},
						{
							"id": 3272,
							"name": "blank",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Is this field required when saving a record?"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 216,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1242,
								"name": "default.blank"
							}
						},
						{
							"id": 3273,
							"name": "blankAsNull",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "If true an empty string value should be converted to a null value"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 220,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1243,
								"name": "default.blankAsNull"
							}
						},
						{
							"id": 3276,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 236,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Map",
								"package": "typescript",
								"name": "Map"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1246,
								"name": "default.choices"
							}
						},
						{
							"id": 3275,
							"name": "helpText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Help text that can be displayed with the form widget"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 230,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1245,
								"name": "default.helpText"
							}
						},
						{
							"id": 3274,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Label that can be displayed as the form label for a widget",
								"text": "If not specified will be generated from `name`.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 226,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1244,
								"name": "default.label"
							}
						},
						{
							"id": 3261,
							"name": "maxLength",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/CharField.ts",
									"line": 18,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1231,
								"name": "default.maxLength"
							}
						},
						{
							"id": 3278,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be read, not written. Not enforced but can be used by components to adjust their\noutput accordingly (eg. exclude it from a form or show it on a form with a read only input)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 245,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1248,
								"name": "default.readOnly"
							}
						},
						{
							"id": 3279,
							"name": "writeOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Indicates this field should only be written only and is not intended to be read directly. This is not enforced\nbut can be used by components to adjust their output accordingly (eg. exclude it from a detail view on a record)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 250,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1249,
								"name": "default.writeOnly"
							}
						},
						{
							"id": 3257,
							"name": "fieldClassName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true
							},
							"comment": {
								"shortText": "Field class name",
								"text": "This exists so things like [getWidgetForField](doc:getWidgetForField) can select a widget for\na field without needing to import all fields up front.\n\nFor custom fields this isn't required unless your implementation of `getWidgetForField` wants\nto do avoid importing the field up front.\n"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/UUIDField.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'UUIDField'",
							"overwrites": {
								"type": "reference",
								"id": 1227,
								"name": "default.fieldClassName"
							}
						},
						{
							"id": 3310,
							"name": "boundRecord",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 432,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3311,
									"name": "boundRecord",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When accessed on a [bound field](doc:viewModelFactory#var-_f) will return the current instance of the ViewModel\nthe field is bound to.",
										"text": "If called on an unbound field then this will always be undefined and a warning will be raised.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 995,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ViewModelInterface"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.boundRecord"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1280,
								"name": "default.boundRecord"
							}
						},
						{
							"id": 3296,
							"name": "defaultValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 380,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 3297,
									"name": "defaultValue",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get the default value for this field."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 1900,
																"name": "ValueT"
															}
														]
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.defaultValue"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1266,
								"name": "default.defaultValue"
							}
						},
						{
							"id": 3306,
							"name": "isBound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 412,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3307,
									"name": "isBound",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if field is bound to a ViewModel instance. When a field is bound to a instance\nthe value for that field is accessible on the 'value' property."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.isBound"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1276,
								"name": "default.isBound"
							}
						},
						{
							"id": 3264,
							"name": "model",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 169,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3265,
									"name": "model",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The [ViewModel](doc:viewModelFactory) class this field is attached to.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "reference",
										"id": 999,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ViewModelConstructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"setSignature": [
								{
									"id": 3266,
									"name": "model",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3267,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.model"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1234,
								"name": "default.model"
							}
						},
						{
							"id": 3268,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 186,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3269,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of this field.",
										"text": "This will throw an error if the field is not attached to a model.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"setSignature": [
								{
									"id": 3270,
									"name": "name",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3271,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.name"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1238,
								"name": "default.name"
							}
						},
						{
							"id": 3308,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 421,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 3309,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "When `isBound` is true this will return the current value of this field on the bound ViewModel.\nOtherwise will always be undefined."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 1900,
												"name": "ValueT"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CharField.value"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1278,
								"name": "default.value"
							}
						},
						{
							"id": 3304,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 404,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3305,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a clone of the field that should be functionally equivalent"
									},
									"type": {
										"type": "reference",
										"id": 1896,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1275,
										"name": "default.clone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1274,
								"name": "default.clone"
							}
						},
						{
							"id": 3312,
							"name": "contributeToClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 448,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3313,
									"name": "contributeToClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called once after fields are attached to a ViewModel. This occurs the first time `.fields` is\naccessed on the ViewModel.",
										"text": "By default this does nothing but can be used by fields to attach extra properties or validate\nagainst the final view model (for example checking that another field does / does not exist).\n\nNOTE: This is called for every distinct ViewModel class; so if class A is extended by class B\nthen it will be called on both A and B.\n"
									},
									"parameters": [
										{
											"id": 3314,
											"name": "viewModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 999,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ViewModelConstructor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1283,
										"name": "default.contributeToClass"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1282,
								"name": "default.contributeToClass"
							}
						},
						{
							"id": 3283,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 326,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3284,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format the value for displaying in a form widget. eg. This could convert a `Date` into\na localized date string"
									},
									"parameters": [
										{
											"id": 3285,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1254,
										"name": "default.format"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1253,
								"name": "default.format"
							}
						},
						{
							"id": 3300,
							"name": "isEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 397,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3301,
									"name": "isEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Should two values be considered equal?",
										"text": "This is used when determining if two records are equal (see ViewModel.isEqual)\n"
									},
									"parameters": [
										{
											"id": 3302,
											"name": "value1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3303,
											"name": "value2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1271,
										"name": "default.isEqual"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1270,
								"name": "default.isEqual"
							}
						},
						{
							"id": 3289,
							"name": "normalize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 364,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3290,
									"name": "normalize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Normalize a value passed into a ViewModel constructor. This could do things like extract the id of a nested\nrelation and only store that, eg.",
										"text": "TODO: Do we need to handle things like normalizing to multiple fields? eg. In the example below setting the\nid to addressId and relation to address\n\n```js\n// This might become\n{\n    name: 'Sam',\n    address: {\n        id: 5,\n        formatted: '3 Somewhere Road, Some Place',\n    },\n}\n// ...this\n{\n    name: 'Same',\n    address: 5,\n}\n```\n"
									},
									"parameters": [
										{
											"id": 3291,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1260,
										"name": "default.normalize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1259,
								"name": "default.normalize"
							}
						},
						{
							"id": 3286,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 335,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3287,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse a value received from a form widget `onChange` call. eg. This could convert a localized date string\ninto a `Date`."
									},
									"parameters": [
										{
											"id": 3288,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1257,
										"name": "default.parse"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1256,
								"name": "default.parse"
							}
						},
						{
							"id": 3292,
							"name": "toJS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 373,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3293,
									"name": "toJS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert value to plain JS representation useful for things like passing to a form or posting to\na backend API"
									},
									"parameters": [
										{
											"id": 3294,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3295,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1263,
										"name": "default.toJS"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1262,
								"name": "default.toJS"
							}
						},
						{
							"id": 3298,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/fields/Field.ts",
									"line": 387,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3299,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 1269,
										"name": "default.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 1268,
								"name": "default.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3258
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3262,
								3263,
								3280,
								3277,
								3272,
								3273,
								3276,
								3275,
								3274,
								3261,
								3278,
								3279,
								3257
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3310,
								3296,
								3306,
								3264,
								3268,
								3308
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3304,
								3312,
								3283,
								3300,
								3289,
								3286,
								3292,
								3298
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/UUIDField.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1226,
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3256
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/UUIDField.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3315,
			"name": "typeUtil",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3316,
					"name": "Class",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Utility to type a generic class type, eg.",
						"text": "NOTE: If not dealing with generics just use `typeof <class>` instead\n\n```js\nclass Base<T> {\n  value?: T;\n}\nclass Concrete<T> extends Base<T> {}\nfunction factory<T>(a: Class<Base<T>>): Base<T> {\n  return new a();\n}\nfactory(Concrete);\n```\n"
					},
					"children": [
						{
							"id": 3340,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3341,
									"name": "new Class",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3342,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3339,
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Function.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.constructor"
							}
						},
						{
							"id": 3333,
							"name": "arguments",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 304,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.arguments"
							}
						},
						{
							"id": 3334,
							"name": "caller",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 305,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Function",
								"package": "typescript",
								"name": "Function"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.caller"
							}
						},
						{
							"id": 3332,
							"name": "length",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.length"
							}
						},
						{
							"id": 3335,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Returns the name of the function. Function names are read-only and can not be changed."
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/node_modules/typescript/lib/lib.es2015.core.d.ts",
									"line": 97,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.name"
							}
						},
						{
							"id": 3331,
							"name": "prototype",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 300,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.prototype"
							}
						},
						{
							"id": 3336,
							"name": "[hasInstance]",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 3337,
									"name": "[hasInstance]",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Determines whether the given value inherits from this function if this function was used\nas a constructor function.",
										"text": "A constructor function can control which objects are recognized as its instances by\n'instanceof' by overriding this method.\n"
									},
									"parameters": [
										{
											"id": 3338,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Function.__@hasInstance@62295"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.__@hasInstance@62295"
							}
						},
						{
							"id": 3317,
							"name": "apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 3318,
									"name": "apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Calls the function, substituting the specified object for the this value of the function, and the specified array for the arguments of the function."
									},
									"parameters": [
										{
											"id": 3319,
											"name": "thisArg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The object to be used as the this object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3320,
											"name": "argArray",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"comment": {
												"shortText": "A set of arguments to be passed to the function.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Function.apply"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.apply"
							}
						},
						{
							"id": 3325,
							"name": "bind",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 3326,
									"name": "bind",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "For a given function, creates a bound function that has the same body as the original function.\nThe this object of the bound function is associated with the specified object, and has the specified initial parameters."
									},
									"parameters": [
										{
											"id": 3327,
											"name": "thisArg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "An object to which the this keyword can refer inside the new function."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3328,
											"name": "argArray",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isRest": true
											},
											"comment": {
												"shortText": "A list of arguments to be passed to the new function.\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Function.bind"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.bind"
							}
						},
						{
							"id": 3321,
							"name": "call",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 3322,
									"name": "call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Calls a method of an object, substituting another object for the current object."
									},
									"parameters": [
										{
											"id": 3323,
											"name": "thisArg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The object to be used as the current object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3324,
											"name": "argArray",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isRest": true
											},
											"comment": {
												"shortText": "A list of arguments to be passed to the method.\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Function.call"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.call"
							}
						},
						{
							"id": 3329,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 3330,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of a function."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Function.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.toString"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3340
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3333,
								3334,
								3332,
								3335,
								3331
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3336,
								3317,
								3325,
								3321,
								3329
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/typeUtil.ts",
							"line": 17,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 3339,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Function",
							"package": "typescript",
							"name": "Function"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						3316
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/typeUtil.ts",
					"line": 17,
					"character": 0
				}
			]
		},
		{
			"id": 3343,
			"name": "useAsyncChoices",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3365,
					"name": "useAsyncChoices",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"originalName": "default",
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/useAsyncChoices.ts",
							"line": 95,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 3366,
							"name": "useAsyncChoices",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Hook that makes it easy to use an [AsyncChoices](doc:AsyncChoicesInterface) definition.",
								"text": "This hook does the following:\n\n1) Calls [useListProps](doc:AsyncChoicesInterface#method-useListProps) to get any dependencies for [list](doc:AsyncChoicesInterface#method-list)\n\n2) Calls [list](doc:AsyncChoicesInterface#method-list) and passes through the dependencies and a `query` object representing any query parameters for the async call\n\n3) Calls [useRetrieveProps](doc:AsyncChoicesInterface#method-useRetrieveProps) to get any dependencies for [retrieve](doc:AsyncChoicesInterface#method-retrieve)\n\n4) If there is a current `value` [retrieve](doc:AsyncChoicesInterface#method-retrieve) is called and is passed the dependencies returned above\n\n5) An object is returned with the available choices in `choices`, the result of 2 in `list` and result of 4 in `selected`\n",
								"tags": [
									{
										"tag": "extract-docs",
										"text": ""
									},
									{
										"tag": "menu-group",
										"text": "Async Choices\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 3367,
									"name": "ItemT",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 3368,
									"name": "ValueT",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 3369,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3344,
										"typeArguments": [
											{
												"type": "reference",
												"id": 3367,
												"name": "ItemT"
											},
											{
												"type": "reference",
												"id": 3368,
												"name": "ValueT"
											}
										],
										"name": "UseAsyncChoicesProps"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3358,
								"typeArguments": [
									{
										"type": "reference",
										"id": 3367,
										"name": "ItemT"
									},
									{
										"type": "reference",
										"id": 3368,
										"name": "ValueT"
									}
								],
								"name": "UseAsyncChoicesReturn"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						3365
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/useAsyncChoices.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3370,
			"name": "useViewModelCache",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3371,
					"name": "useViewModelCache",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"originalName": "default",
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/useViewModelCache.ts",
							"line": 108,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 3372,
							"name": "useViewModelCache",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Select some data out of the cache for use in a component. Whenever the cache data\nchanges the component will re-render with latest value.",
								"text": "See [ViewModelCache](doc:ViewModelCache) for more details on how to read data from the\ncache. The [Field notation](doc:ViewModelCache#Field_notation) documentation goes over\nthe possible formats for the fields argument.\n\nExample usage:\n\n```jsx\nfunction UserView({ id }) {\n    const record = useViewModelCache(User, cache => cache.get(id, ['firstName']));\n\n    return <div>Welcome {record.firstName}</div>;\n}\n```\n\nExtra arguments can be passed through as a third argument to the selector which makes\nit easier to create reusable selectors. We could rewrite the above like:\n\n```jsx\nconst selectUser = (cache, id, fieldNames) => cache.get(id, fieldNames);\nfunction UserView({ id }) {\n    const record = useViewModelCache(User, selectUser, [id, fieldNames]);\n\n    return <div>Welcome {record.firstName}</div>;\n}\n```\n\nSelectors can return anything:\n\n```jsx\nconst usersByGroup = cache => cache.getAll(['groupId', 'firstName', 'email']).reduce((acc, record) => {\n  acc[record.groupId] = acc[record.firstName] || [];\n  acc[record.groupId].push(record);\n  return acc;\n}, {})\nfunction GroupedUserView() {\n  const groupedUsers = useViewModelCache(User, usersByGroup);\n  return ...\n}\n```\n\nIn the preceding example the object returned from `useViewModelChange` will change each time `GroupUserView`\nrenders. This is because the selector returns a new object every time and internally `useViewModelChange`\ndoes a strict equality check to determine whether to return the new value or keep the old value. As an\noptimisation you can pass a third parameter that defines how to compare the previous and current value:\n\n```jsx\nimport isEqual from 'lodash/isEqual';\n\nfunction OptimisedGroupedUserView() {\n  // isEqual does a deep equality check so if the underlying cached values remain the same then the\n  // object returned here will be the same across multiple renders.\n  const groupedUsers = useViewModelCache(User, usersByGroup, [], isEqual);\n  return ...\n}\n```\n",
								"returns": "The data as returned by `selector`\n",
								"tags": [
									{
										"tag": "extract-docs",
										"text": ""
									},
									{
										"tag": "menu-group",
										"text": "Caching\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 3373,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 999,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "reference",
												"id": 3373,
												"name": "T"
											}
										],
										"name": "ViewModelConstructor"
									}
								},
								{
									"id": 3374,
									"name": "ResultType",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 3375,
									"name": "U",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									},
									"default": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 3376,
									"name": "viewModel",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The ViewModel to use the cache from"
									},
									"type": {
										"type": "reference",
										"id": 3373,
										"name": "T"
									}
								},
								{
									"id": 3377,
									"name": "selector",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A function that gets passed the cache and selects data from it. If your selector\nis slow consider using a library like [reselect](https://github.com/reduxjs/reselect) to create\nyour selector with. Note that `get`, `getAll` and `getList` on `ViewModelCache` will return the\nsame object across multiple calls if the underlying data has not changed."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 3373,
												"name": "T"
											},
											{
												"type": "reference",
												"id": 3374,
												"name": "ResultType"
											},
											{
												"type": "reference",
												"id": 3375,
												"name": "U"
											}
										],
										"name": "Selector"
									}
								},
								{
									"id": 3378,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Any extra arguments to pass through to the selector. These will be compared shallowly\nand any changes will re-run the selector."
									},
									"type": {
										"type": "reference",
										"id": 3375,
										"name": "U"
									},
									"defaultValue": "..."
								},
								{
									"id": 3379,
									"name": "isEquals",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Optionally control how equality is determined for an object. By default this is\na strict equality check. This is useful as an optimisation when you want the value returned from\na selector to be the same object when the selector re-runs.\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3380,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3381,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 3382,
															"name": "currentValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 3374,
																"name": "ResultType"
															}
														},
														{
															"id": 3383,
															"name": "previousValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"id": 3374,
																"name": "ResultType"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									},
									"defaultValue": "defaultEquality"
								}
							],
							"type": {
								"type": "reference",
								"id": 3374,
								"name": "ResultType"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						3371
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/useViewModelCache.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3384,
			"name": "util",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3385,
					"name": "freezeObject",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/util.ts",
							"line": 10,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 3386,
							"name": "freezeObject",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3387,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3388,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3389,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/util.ts",
											"line": 10,
											"character": 39
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 3390,
					"name": "isDev",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/util.ts",
							"line": 5,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 3391,
							"name": "isDev",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						3385,
						3390
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/util.ts",
					"line": 2,
					"character": 0
				}
			]
		},
		{
			"id": 1082,
			"name": "AsyncChoices",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "Default implementation for [AsyncChoicesInterface](doc:AsyncChoicesInterface)",
				"text": "All options can be customised via `options`.\n\nYou must provide `list` and `retrieve` - everything else can be optional with the following restrictions:\n\n* `getLabel` - this is optional if items returned by `list` and `retrieve` implement [NodeLabeled](doc:NodeLabeled) otherwise it must be provided\n* `getValue` - this is optional if items returned by `list` and `retrieve` implement [Identifiable](doc:Identifiable) otherwise it must be provided\n",
				"tags": [
					{
						"tag": "extract-docs",
						"text": ""
					},
					{
						"tag": "menu-group",
						"text": "Async Choices\n"
					}
				]
			},
			"children": [
				{
					"id": 1083,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
							"line": 180,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1084,
							"name": "new AsyncChoices",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 1085,
									"name": "ItemType",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 1086,
									"name": "ValueType",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 1087,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1162,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1085,
												"name": "ItemType"
											},
											{
												"type": "reference",
												"id": 1086,
												"name": "ValueType"
											}
										],
										"name": "AsyncChoicesOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1082,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1085,
										"name": "ItemType"
									},
									{
										"type": "reference",
										"id": 1086,
										"name": "ValueType"
									}
								],
								"name": "AsyncChoices"
							}
						}
					]
				},
				{
					"id": 1089,
					"name": "multiple",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "If true then multiple values can be selected. When this is true\nretrieve() will be passed and return an array rather than a single value."
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
							"line": 178,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1130,
						"name": "AsyncChoicesInterface.multiple"
					}
				},
				{
					"id": 1088,
					"name": "options",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
							"line": 177,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 1162,
						"typeArguments": [
							{
								"type": "reference",
								"id": 1085,
								"name": "ItemType"
							},
							{
								"type": "reference",
								"id": 1086,
								"name": "ValueType"
							}
						],
						"name": "AsyncChoicesOptions"
					}
				},
				{
					"id": 1103,
					"name": "getChoices",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
							"line": 199,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1104,
							"name": "getChoices",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generate the list of choices. This can return an array of single choices or grouped choices.",
								"text": "A grouped choice is a 2 element Array with a label and a list of choices.\n"
							},
							"parameters": [
								{
									"id": 1105,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1085,
											"name": "ItemType"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"id": 1121,
											"typeArguments": [
												{
													"type": "reference",
													"id": 1086,
													"name": "ValueType"
												}
											],
											"name": "Choice"
										},
										{
											"type": "reference",
											"id": 1127,
											"typeArguments": [
												{
													"type": "reference",
													"id": 1086,
													"name": "ValueType"
												}
											],
											"name": "ChoicesGrouped"
										}
									]
								}
							},
							"implementationOf": {
								"type": "reference",
								"id": 1145,
								"name": "AsyncChoicesInterface.getChoices"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 1144,
						"name": "AsyncChoicesInterface.getChoices"
					}
				},
				{
					"id": 1106,
					"name": "getLabel",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
							"line": 208,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1107,
							"name": "getLabel",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get a label for an item"
							},
							"parameters": [
								{
									"id": 1108,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1085,
										"name": "ItemType"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "React.ReactNode",
								"package": "@types/react",
								"name": "ReactNode"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1148,
								"name": "AsyncChoicesInterface.getLabel"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 1147,
						"name": "AsyncChoicesInterface.getLabel"
					}
				},
				{
					"id": 1109,
					"name": "getMissingLabel",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
							"line": 219,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1110,
							"name": "getMissingLabel",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return label to use when an item can't be found. This can be used by widgets to control\nwhat is rendered when an item for a value cannot be found (eg. when it's deleted or\nwhen it's loading). The exact details of how this is used depend on the widget."
							},
							"parameters": [
								{
									"id": 1111,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1086,
										"name": "ValueType"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "React.ReactNode",
								"package": "@types/react",
								"name": "ReactNode"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1151,
								"name": "AsyncChoicesInterface.getMissingLabel"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 1150,
						"name": "AsyncChoicesInterface.getMissingLabel"
					}
				},
				{
					"id": 1112,
					"name": "getValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
							"line": 225,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1113,
							"name": "getValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get the value to use for an item. The value should be unique and is what's used when a\nchoice is selected (eg. it's the value that would be saved to a database)."
							},
							"parameters": [
								{
									"id": 1114,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1085,
										"name": "ItemType"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1086,
								"name": "ValueType"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1154,
								"name": "AsyncChoicesInterface.getValue"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 1153,
						"name": "AsyncChoicesInterface.getValue"
					}
				},
				{
					"id": 1093,
					"name": "list",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
							"line": 187,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1094,
							"name": "list",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Function to resolve a list of choices based on the provided params.",
								"text": "What this function is passed depends on the implementation but when used with\n[useAsyncChoices](doc:useAsyncChoices) it will be passed `query` (the query object eg. to\nfilter results with), `paginator` (the current paginator if any) and `listOptions` (any\nadditional options passed on the `listOptions` prop to `useAsyncChoices`).\nOfficial presto widgets all use `useAsyncChoices` and so will use these parameters.\n"
							},
							"parameters": [
								{
									"id": 1095,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"qualifiedName": "Record",
										"package": "typescript",
										"name": "Record"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1085,
											"name": "ItemType"
										}
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1135,
								"name": "AsyncChoicesInterface.list"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 1134,
						"name": "AsyncChoicesInterface.list"
					}
				},
				{
					"id": 1099,
					"name": "retrieve",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
							"line": 193,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1100,
							"name": "retrieve",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Function to resolve specific values. This is used to know how to render the label for a value(s).",
								"text": "The first parameter is the value to retrieve (will be an array when `multiple` is true).\n\n`deps` is the value returned by `useRetrieveProps`.\n"
							},
							"parameters": [
								{
									"id": 1101,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 1086,
												"name": "ValueType"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1086,
													"name": "ValueType"
												}
											}
										]
									}
								},
								{
									"id": 1102,
									"name": "deps",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "conditional",
										"checkType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"id": 1086,
													"name": "ValueType"
												},
												{
													"type": "array",
													"elementType": {
														"type": "reference",
														"id": 1086,
														"name": "ValueType"
													}
												}
											]
										},
										"extendsType": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"id": 1086,
												"name": "ValueType"
											}
										},
										"trueType": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"id": 1085,
												"name": "ItemType"
											}
										},
										"falseType": {
											"type": "reference",
											"id": 1085,
											"name": "ItemType"
										}
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1141,
								"name": "AsyncChoicesInterface.retrieve"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 1140,
						"name": "AsyncChoicesInterface.retrieve"
					}
				},
				{
					"id": 1090,
					"name": "useListProps",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
							"line": 184,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1091,
							"name": "useListProps",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Hook that returns any extra props to pass through to `list` in components/hooks that\nconsume this (eg. [useAsyncChoices](doc:useAsyncChoices)). This is useful to\nstore state for things like pagination.",
								"text": "What this function is passed depends on the implementation but when used with\n[useAsyncChoices](doc:useAsyncChoices) it will be `query` (the query object eg. to\nfilter results with) and `listOptions` (any additional options passed on the `listOptions`\nprop to `useAsyncChoices`).\nOfficial presto widgets all use `useAsyncChoices` and so will use these parameters.\n"
							},
							"parameters": [
								{
									"id": 1092,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1132,
								"name": "AsyncChoicesInterface.useListProps"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 1131,
						"name": "AsyncChoicesInterface.useListProps"
					}
				},
				{
					"id": 1115,
					"name": "useResolveItems",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
							"line": 236,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1116,
							"name": "useResolveItems",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Resolve the specific instance of an item to use. By default this should just return `item`\nbut can be used to resolve a specific instance of a class from a cache for example."
							},
							"typeParameter": [
								{
									"id": 1117,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 1118,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1117,
										"name": "T"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1117,
								"name": "T"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1157,
								"name": "AsyncChoicesInterface.useResolveItems"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 1156,
						"name": "AsyncChoicesInterface.useResolveItems"
					}
				},
				{
					"id": 1096,
					"name": "useRetrieveProps",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
							"line": 190,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1097,
							"name": "useRetrieveProps",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Hook that returns props to pass through to `retrieve` in components/hooks that consume this (eg. [useAsyncChoices](doc:useAsyncChoices).\nThis is useful for things like hooking into an existing cache (eg. [useViewModelCache](doc:useViewModelCache)).\nThe value returned here is passed as the second parameter to `retrieve`. In addition the `existingValues` key is\npassed through to `useAsyncValue` as the list of items it can resolve existing values from.",
								"text": "What this function is passed depends on the implementation but when used with\n[useAsyncChoices](doc:useAsyncChoices) it will be passed `id` if there's a current value\nand it's not an array, `ids` if there's a current value and it is an array, `existingValues` which is\nthe values returned by `list` (may be null if `list` not yet called) and `retrieveOptions`\n(any additional options passed on the `retrieveOptions` prop to `useAsyncChoices`).\nOfficial presto widgets all use `useAsyncChoices` and so will use these parameters.\n"
							},
							"parameters": [
								{
									"id": 1098,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1138,
								"name": "AsyncChoicesInterface.useRetrieveProps"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 1137,
						"name": "AsyncChoicesInterface.useRetrieveProps"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1083
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1089,
						1088
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1103,
						1106,
						1109,
						1112,
						1093,
						1099,
						1090,
						1115,
						1096
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/fields/AsyncChoices.ts",
					"line": 176,
					"character": 6
				}
			],
			"typeParameter": [
				{
					"id": 1119,
					"name": "ItemType",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				},
				{
					"id": 1120,
					"name": "ValueType",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"id": 1129,
					"typeArguments": [
						{
							"type": "reference",
							"id": 1085,
							"name": "ItemType"
						},
						{
							"type": "reference",
							"id": 1086,
							"name": "ValueType"
						}
					],
					"name": "AsyncChoicesInterface"
				}
			]
		},
		{
			"id": 894,
			"name": "ViewModelOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"tags": [
					{
						"tag": "expand-properties",
						"text": ""
					},
					{
						"tag": "export-in-docs",
						"text": "\n"
					}
				]
			},
			"children": [
				{
					"id": 895,
					"name": "baseClass",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Optional base class to extend. This must extend [BaseViewModel](doc:BaseViewModel).",
						"text": "When calling `augment` this is set the augmented class.\n",
						"tags": [
							{
								"tag": "type-name",
								"text": "Class\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 197,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 999,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "ViewModelConstructor"
					}
				},
				{
					"id": 896,
					"name": "pkFieldName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Primary key name(s) to use. There should be field(s) with the corresponding name in the\nprovided `fields`.",
						"text": "Only `pkFieldName` or `getImplicitPkField` should be provided. If neither are provided then\na field called `id` will be used and created if not provided in `fields`.\n",
						"tags": [
							{
								"tag": "type-name",
								"text": "string|string[]\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
							"line": 207,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 898,
						"name": "PkFieldNameT"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						895,
						896
					]
				}
			],
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/ViewModelFactory.ts",
					"line": 186,
					"character": 10
				}
			],
			"typeParameter": [
				{
					"id": 897,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 919,
						"name": "FieldsMapping"
					}
				},
				{
					"id": 898,
					"name": "PkFieldNameT",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 935,
								"typeArguments": [
									{
										"type": "reference",
										"id": 897,
										"name": "T"
									}
								],
								"name": "ExtractFieldNames"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 935,
									"typeArguments": [
										{
											"type": "reference",
											"id": 897,
											"name": "T"
										}
									],
									"name": "ExtractFieldNames"
								}
							}
						]
					}
				}
			]
		},
		{
			"id": 3344,
			"name": "UseAsyncChoicesProps",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"tags": [
					{
						"tag": "expand-properties",
						"text": ""
					},
					{
						"tag": "export-in-docs",
						"text": "\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/useAsyncChoices.ts",
					"line": 16,
					"character": 5
				}
			],
			"typeParameter": [
				{
					"id": 3356,
					"name": "ItemT",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				},
				{
					"id": 3357,
					"name": "ValueT",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 3356,
											"name": "ItemT"
										}
									}
								],
								"name": "UseAsyncListingProps"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "accumulatePages"
									},
									{
										"type": "literal",
										"value": "query"
									},
									{
										"type": "literal",
										"value": "trigger"
									}
								]
							}
						],
						"qualifiedName": "Pick",
						"package": "typescript",
						"name": "Pick"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 3345,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 3346,
									"name": "asyncChoices",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "See [AsyncChoices](doc:AsyncChoices]"
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/useAsyncChoices.ts",
											"line": 23,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"id": 1129,
										"typeArguments": [
											{
												"type": "reference",
												"id": 3356,
												"name": "ItemT"
											},
											{
												"type": "reference",
												"id": 3357,
												"name": "ValueT"
											}
										],
										"name": "AsyncChoicesInterface"
									}
								},
								{
									"id": 3354,
									"name": "listOptions",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Any extra options to pass through to [list](doc:AsyncChoicesInterface#method-list)",
										"text": "These will be available in both [useListProps](doc:AsyncChoicesInterface#method-list) and [list](doc:AsyncChoicesInterface#method-useListProps) under the `listOptions`\nkey\n"
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/useAsyncChoices.ts",
											"line": 48,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"qualifiedName": "Record",
										"package": "typescript",
										"name": "Record"
									}
								},
								{
									"id": 3355,
									"name": "retrieveOptions",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Any extra options to pass through to [retrieve](doc:AsyncChoicesInterface#method-retrieve)",
										"text": "These will be available in both [useRetrieveProps](doc:AsyncChoicesInterface#method-retrieve) and [retrieve](doc:AsyncChoicesInterface#method-useRetrieveProps) under the `retrieveOptions`\nkey\n"
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/useAsyncChoices.ts",
											"line": 55,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"qualifiedName": "Record",
										"package": "typescript",
										"name": "Record"
									}
								},
								{
									"id": 3347,
									"name": "value",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The currently selected choice(s) - if any",
										"text": "When specified the corresponding label(s) will be resolved\nautomatically.\n"
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/useAsyncChoices.ts",
											"line": 30,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 3357,
													"name": "ValueT"
												}
											},
											{
												"type": "reference",
												"id": 3357,
												"name": "ValueT"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 3351,
									"name": "onRetrieveError",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/useAsyncChoices.ts",
											"line": 41,
											"character": 4
										}
									],
									"signatures": [
										{
											"id": 3352,
											"name": "onRetrieveError",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "If provided this function will be called whenever `asyncChoices.retrieve` errors",
												"text": "You can use this to do things like unset a value if it no longer exists.\n"
											},
											"parameters": [
												{
													"id": 3353,
													"name": "error",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"qualifiedName": "Error",
														"package": "typescript",
														"name": "Error"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 3348,
									"name": "onRetrieveSuccess",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "js-packages/@prestojs/viewmodel/src/useAsyncChoices.ts",
											"line": 35,
											"character": 4
										}
									],
									"signatures": [
										{
											"id": 3349,
											"name": "onRetrieveSuccess",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "If provided this function will be called whenever a value is successfully\nresolved using `asyncChoices.retrieve`."
											},
											"parameters": [
												{
													"id": 3350,
													"name": "response",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"id": 3356,
																"name": "ItemT"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 3356,
																	"name": "ItemT"
																}
															}
														]
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										3346,
										3354,
										3355,
										3347
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										3351,
										3348
									]
								}
							],
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/useAsyncChoices.ts",
									"line": 19,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 3358,
			"name": "UseAsyncChoicesReturn",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"tags": [
					{
						"tag": "expand-properties",
						"text": ""
					},
					{
						"tag": "export-in-docs",
						"text": "\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "js-packages/@prestojs/viewmodel/src/useAsyncChoices.ts",
					"line": 62,
					"character": 5
				}
			],
			"typeParameter": [
				{
					"id": 3363,
					"name": "ItemT",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				},
				{
					"id": 3364,
					"name": "ValueT",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 3359,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 3362,
							"name": "choices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "See [getChoices](doc:AsyncChoicesInterface#method-getChoices)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/useAsyncChoices.ts",
									"line": 74,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "getChoices"
										},
										"objectType": {
											"type": "reference",
											"id": 1129,
											"typeArguments": [
												{
													"type": "reference",
													"id": 3363,
													"name": "ItemT"
												},
												{
													"type": "reference",
													"id": 3364,
													"name": "ValueT"
												}
											],
											"name": "AsyncChoicesInterface"
										}
									}
								],
								"qualifiedName": "ReturnType",
								"package": "typescript",
								"name": "ReturnType"
							}
						},
						{
							"id": 3360,
							"name": "list",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "See [useAsyncListing](doc:useAsyncListing#return-type)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/useAsyncChoices.ts",
									"line": 66,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 3363,
											"name": "ItemT"
										}
									}
								],
								"name": "UseAsyncListingReturn"
							}
						},
						{
							"id": 3361,
							"name": "selected",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "See [useAsyncValue](doc:useAsyncValue#return-type)"
							},
							"sources": [
								{
									"fileName": "js-packages/@prestojs/viewmodel/src/useAsyncChoices.ts",
									"line": 70,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 3363,
													"name": "ItemT"
												}
											},
											{
												"type": "reference",
												"id": 3363,
												"name": "ItemT"
											}
										]
									}
								],
								"name": "UseAsyncValueReturn"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3362,
								3360,
								3361
							]
						}
					],
					"sources": [
						{
							"fileName": "js-packages/@prestojs/viewmodel/src/useAsyncChoices.ts",
							"line": 62,
							"character": 44
						}
					]
				}
			}
		}
	],
	"groups": [
		{
			"title": "Modules",
			"kind": 2,
			"children": [
				739,
				893,
				1057,
				1081,
				1166,
				1225,
				1285,
				1347,
				1406,
				1466,
				1525,
				1585,
				1647,
				1707,
				1767,
				1827,
				1962,
				2021,
				2082,
				2142,
				2202,
				2261,
				2322,
				2382,
				2447,
				2513,
				2572,
				2642,
				2702,
				2764,
				3016,
				3076,
				3136,
				3195,
				3255,
				3315,
				3343,
				3370,
				3384
			]
		},
		{
			"title": "Classes",
			"kind": 128,
			"children": [
				1082
			]
		},
		{
			"title": "Interfaces",
			"kind": 256,
			"children": [
				894
			]
		},
		{
			"title": "Type aliases",
			"kind": 4194304,
			"children": [
				3344,
				3358
			]
		}
	]
}